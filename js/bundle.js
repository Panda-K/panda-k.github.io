(function () {
    'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
                t[p[i]] = s[p[i]];
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    var SERVER_TYPE;
    (function (SERVER_TYPE) {
        SERVER_TYPE[SERVER_TYPE["TEST"] = 0] = "TEST";
        SERVER_TYPE[SERVER_TYPE["TEST_IN"] = 1] = "TEST_IN";
        SERVER_TYPE[SERVER_TYPE["PRE_RELEASE"] = 2] = "PRE_RELEASE";
        SERVER_TYPE[SERVER_TYPE["RELEASE"] = 3] = "RELEASE";
    })(SERVER_TYPE || (SERVER_TYPE = {}));
    var CHANNELID;
    (function (CHANNELID) {
        CHANNELID[CHANNELID["H5"] = 1001000] = "H5";
        CHANNELID[CHANNELID["iOS"] = 1001001] = "iOS";
        CHANNELID[CHANNELID["android"] = 1001002] = "android";
        CHANNELID[CHANNELID["robot"] = 1001003] = "robot";
        CHANNELID[CHANNELID["HW"] = 1001004] = "HW";
        CHANNELID[CHANNELID["WNKey"] = 1001005] = "WNKey";
        CHANNELID[CHANNELID["W360"] = 1001006] = "W360";
    })(CHANNELID || (CHANNELID = {}));
    var ACTIVITY_TYPE;
    (function (ACTIVITY_TYPE) {
        ACTIVITY_TYPE[ACTIVITY_TYPE["ALL"] = 0] = "ALL";
        ACTIVITY_TYPE[ACTIVITY_TYPE["DAILY"] = 2] = "DAILY";
        ACTIVITY_TYPE[ACTIVITY_TYPE["AUTHEN"] = 4] = "AUTHEN";
        ACTIVITY_TYPE[ACTIVITY_TYPE["SHARE"] = 6] = "SHARE";
    })(ACTIVITY_TYPE || (ACTIVITY_TYPE = {}));
    var LANG_T;
    (function (LANG_T) {
        LANG_T[LANG_T["VN"] = 0] = "VN";
        LANG_T[LANG_T["EN"] = 1] = "EN";
        LANG_T[LANG_T["RU"] = 2] = "RU";
        LANG_T[LANG_T["IND"] = 3] = "IND";
    })(LANG_T || (LANG_T = {}));
    class GlobalVariables {
        static calcFixSize() {
            let ratioX = Laya.stage.width / Laya.stage.designWidth;
            let ratioY = Laya.stage.height / Laya.stage.designHeight;
            if (ratioX >= ratioY) {
                GlobalVariables.FIX_WIDTH = (Laya.stage.width - Laya.stage.designWidth) * 0.5;
            }
            else {
                GlobalVariables.FIX_HEIGHT = (Laya.stage.height - Laya.stage.designHeight) * 0.5;
            }
        }
        static getSourceID() {
            let mainSearch = Laya.Browser.window.location.search;
            let reg = new RegExp("(^|&)sourceID=([^&]*)(&|$)", "i");
            let reg1 = new RegExp("(^|&)pixelID=([^&]*)(&|$)", "i");
            let sourceParams = mainSearch.substring(1).match(reg);
            if (sourceParams) {
                GlobalVariables.SOURCE_ID_ANDROID = parseInt(sourceParams[2]);
                GlobalVariables.SOURCE_ID_H5 = parseInt(sourceParams[2]);
            }
            else {
                let url = Laya.Browser.window.location.href;
                let sourceID = 1100201;
                if (url == "https://www.winfun.love/four/h5/") {
                    sourceID = 1100204;
                }
                else if (url == "https://www.winfun.love/five/h5/") {
                    sourceID = 1100205;
                }
                else if (url == "https://www.winfun.love/six/h5/") {
                    sourceID = 1100206;
                }
                else if (url == "https://www.winfun.love/game/apps/") {
                    sourceID = 1102002;
                }
                GlobalVariables.SOURCE_ID_ANDROID = sourceID;
                GlobalVariables.SOURCE_ID_H5 = sourceID;
            }
            switch (GlobalVariables.SOURCE_ID_ANDROID) {
                case 1100201:
                case 1100204:
                    GlobalVariables.INVITE_LINK = "https://www.winfun.love/pixel/01";
                    break;
                case 1100202:
                case 1100205:
                    GlobalVariables.INVITE_LINK = "https://www.winfun.love/pixel/02";
                    break;
                case 1100203:
                case 1100206:
                    GlobalVariables.INVITE_LINK = "https://www.winfun.love/pixel/03";
                    break;
                case 1102001:
                case 1102002:
                    GlobalVariables.INVITE_LINK = "https://www.winfun.love/";
                    break;
                default:
                    GlobalVariables.INVITE_LINK = "https://www.winfun.love/";
                    break;
            }
        }
        static checkH5() {
            if (GlobalVariables.SOURCE_ID_ANDROID == 1100204 ||
                GlobalVariables.SOURCE_ID_ANDROID == 1100205 ||
                GlobalVariables.SOURCE_ID_ANDROID == 1100206) {
                return true;
            }
            return false;
        }
        static getRandomAvatar() {
            return this.AVATAR_LIST[Math.floor(Math.random() * this.AVATAR_LIST.length)];
        }
    }
    GlobalVariables.IS_VERIFY = false;
    GlobalVariables.DEF_LANG = LANG_T.VN;
    GlobalVariables.REAL_AREA = "VN";
    GlobalVariables.APP_ID = '1100';
    GlobalVariables.SOURCE_ID_IOS = 1100001;
    GlobalVariables.SOURCE_ID_ANDROID = 1100201;
    GlobalVariables.SOURCE_ID_H5 = 1100201;
    GlobalVariables.AGG_ID = 4002;
    GlobalVariables.FB_CODE = "67099011";
    GlobalVariables.ZALO_CODE = "18616388842";
    GlobalVariables.ZALO_GROUP = "https://zalo.me/g/uilyjz805";
    GlobalVariables.INVITE_LINK = "https://www.winfun.love/pixel/01";
    GlobalVariables.IVITE_CODE = null;
    GlobalVariables.NEW_PWD = null;
    GlobalVariables.ALERT_GLOBAL_ERROR = false;
    GlobalVariables.SERVICE_TYPE = SERVER_TYPE.RELEASE;
    GlobalVariables.SERVER_URL = 'https://envoyservice-cdn.slots777.love';
    GlobalVariables.IP_SOURCE_URL = "https://httpservice-cdn.slots777.love/v1/Http/Login";
    GlobalVariables.IOS_VERSION_URL = 'http://outyn.tienlen777.com/layaVietnam/update/ios/version.json';
    GlobalVariables.IOS_VERSION_URL_TEST = 'http://outyn.tienlen777.com/layaVietnam/update/ios/version_test.json';
    GlobalVariables.IOS_VERSION_TIP = 'http://outyn.tienlen777.com/layaVietnam/update/ios/update_record.txt';
    GlobalVariables.ANDROID_VERSION_URL = 'http://outyn.tienlen777.com/layaVietnam/update/android/version.json';
    GlobalVariables.ANDROID_VERSION_URL_TEST = 'http://outyn.tienlen777.com/layaVietnam/update/android/version_test.json';
    GlobalVariables.ANDROID_VERSION_TIP = 'http://outyn.tienlen777.com/layaVietnam/update/android/update_record.txt';
    GlobalVariables.LOG_APP_ID = 10001;
    GlobalVariables.LOG_KEY = "wZzMAr8IGmE3qkob3B1gNoIgCKJOJYlP";
    GlobalVariables.GAME_ID_MJ_XLMJ = 300;
    GlobalVariables.GAME_SERVICE_XLMJ = 'HongZhongXueLiu';
    GlobalVariables.GAME_ID_MINI_BET = 311;
    GlobalVariables.GAME_ID_MINI_YXX = 312;
    GlobalVariables.SER_TYPE_LOBBY = 1;
    GlobalVariables.SER_TYPE_LOGIN = 2;
    GlobalVariables.SER_TYPE_GAME = 3;
    GlobalVariables.G_IS_GAME_RUNNING = false;
    GlobalVariables.START_UNFINISH_GAME = false;
    GlobalVariables.CUR_GAME_TYPE_ENTER = -1;
    GlobalVariables.GAME_TYPE_CLUB = 101;
    GlobalVariables.CUR_GAME_ID = -1;
    GlobalVariables.GAME_TYPE_MJ_SIRENFANG = 4;
    GlobalVariables.G_MY_IP = "0.0.0.0";
    GlobalVariables.G_PrivateMJPlayMode = 0;
    GlobalVariables.G_PrivateMJType = 0;
    GlobalVariables.G_IS_CHANGE_TABLE = false;
    GlobalVariables.GAME_MODULE_LOADED = false;
    GlobalVariables.FIX_WIDTH = 0;
    GlobalVariables.FIX_HEIGHT = 0;
    GlobalVariables.TASK_3001 = 3001;
    GlobalVariables.TASK_3002 = 3002;
    GlobalVariables.TASK_3003 = 3003;
    GlobalVariables.TASK_3004 = 3004;
    GlobalVariables.TASK_3005 = 3005;
    GlobalVariables.TASK_1001 = 1001;
    GlobalVariables.TASK_10001 = 10001;
    GlobalVariables.TASK_2002 = 2002;
    GlobalVariables.TASK_2004 = 2004;
    GlobalVariables.TASK_4001 = 4001;
    GlobalVariables.TASK_4003 = 4003;
    GlobalVariables.TASK_4004 = 4004;
    GlobalVariables.TASK_7002 = 7002;
    GlobalVariables.TASK_7003 = 7003;
    GlobalVariables.TASK_7004 = 7004;
    GlobalVariables.NEW_SERVICE_URL = 'https://customerservice-cdn.slots777.love/chatIndex?kefu_id=kefu2';
    GlobalVariables.SHOP_IMAGE_URL = 'http://outyn.tienlen777.com/shop/';
    GlobalVariables.WEB_TEST_URL = 'https://www.esportsfi.com/islandpet/';
    GlobalVariables.TELEGRAM_SHARE = 'https://t.me/TienlenCleverBot';
    GlobalVariables.ACT_AWARD_URL = 'http://admin.tienlen777.com/#/login?lang=vi';
    GlobalVariables.OPEN_SEA = "https://opensea.io/collection/slot-key-4367555828";
    GlobalVariables.AVATAR_LIST = [
        "2d/icon/head/touxiang01%403x.png",
        "2d/icon/head/touxiang02%403x.png",
        "2d/icon/head/touxiang03%403x.png",
        "2d/icon/head/touxiang04%403x.png",
        "2d/icon/head/touxiang05%403x.png",
        "2d/icon/head/touxiang06%403x.png",
        "2d/icon/head/touxiang07%403x.png",
        "2d/icon/head/touxiang08%403x.png",
        "2d/icon/head/touxiang09%403x.png",
        "2d/icon/head/touxiang10%403x.png",
        "2d/icon/head/touxiang11%403x.png",
        "2d/icon/head/touxiang12%403x.png",
    ];

    class Singleton {
        static getInstance() {
            if (!this.instance) {
                this.instance = new this();
            }
            return this.instance;
        }
        static recycle() {
            this.instance = null;
        }
    }

    class EventItem {
        constructor() {
            this.name = null;
            this.obj = null;
            this.callback = null;
        }
    }
    class EventManager extends Singleton {
        constructor() {
            super();
            this.eventList = new Map();
        }
        on(eventName, obj, func) {
            let array = this.eventList.get(eventName);
            if (!array) {
                array = new Array();
            }
            else {
                for (let i = 0; i < array.length; i++) {
                    const item = array[i];
                    if (item.obj === obj && item.callback === func) {
                        return;
                    }
                }
            }
            const data = new EventItem();
            data.name = eventName;
            data.obj = obj;
            data.callback = func;
            array.push(data);
            this.eventList.set(eventName, array);
        }
        off(eventName, obj, func) {
            let array = this.eventList.get(eventName);
            if (array) {
                for (let i = array.length - 1; i >= 0; i--) {
                    const item = array[i];
                    if (item.obj === obj && item.callback === func) {
                        array.splice(i, 1);
                    }
                }
            }
        }
        emit(eventName, argArray) {
            let array = this.eventList.get(eventName);
            if (array) {
                for (let i = array.length - 1; i >= 0; i--) {
                    const item = array[i];
                    if (item.obj && item.callback) {
                        item.callback.apply(item.obj, argArray);
                    }
                }
            }
        }
        offAll(obj) {
            this.eventList.forEach((value, key, map) => {
                for (let i = 0; i < value.length; i++) {
                    const item = value[i];
                    if (item.obj == obj) {
                        this.off(key, obj, item.callback);
                    }
                }
            });
        }
    }

    var LOG_LEVEL;
    (function (LOG_LEVEL) {
        LOG_LEVEL[LOG_LEVEL["INFO"] = 3] = "INFO";
        LOG_LEVEL[LOG_LEVEL["WARN"] = 2] = "WARN";
        LOG_LEVEL[LOG_LEVEL["ERROR"] = 1] = "ERROR";
        LOG_LEVEL[LOG_LEVEL["NOLOG"] = 0] = "NOLOG";
    })(LOG_LEVEL || (LOG_LEVEL = {}));
    class LogManager {
        constructor() {
            this._mLevel = LOG_LEVEL.INFO;
        }
        setLevel(level) {
            this._mLevel = level;
        }
        DEBUG(isDebug = true) {
            if (isDebug === false) {
                this._mLevel = LOG_LEVEL.NOLOG;
            }
            else {
                this._mLevel = LOG_LEVEL.INFO;
            }
        }
        Log(msg, ...subst) {
            if (this._mLevel >= LOG_LEVEL.INFO) {
                let curDate = new Date();
                let curTime = curDate.getHours() + ':' + curDate.getMinutes() + ':' + curDate.getSeconds() + '.' + curDate.getMilliseconds() + ': ';
                msg = curTime + msg;
                subst.length === 0 ? console.log(msg) : console.log(msg, ...subst);
            }
        }
        Logw(msg, ...subst) {
            if (this._mLevel >= LOG_LEVEL.WARN) {
                let curDate = new Date();
                let curTime = curDate.getHours() + ':' + curDate.getMinutes() + ':' + curDate.getSeconds() + ': ';
                msg = curTime + msg;
                subst.length === 0 ? console.warn(msg) : console.warn(msg, ...subst);
            }
        }
        Loge(msg, ...subst) {
            if (this._mLevel >= LOG_LEVEL.ERROR) {
                let curDate = new Date();
                let curTime = curDate.getHours() + ':' + curDate.getMinutes() + ':' + curDate.getSeconds() + ': ';
                msg = curTime + msg;
                subst.length === 0 ? console.error(msg) : console.error(msg, subst);
            }
        }
    }
    const CC = new LogManager();

    class PREFAB_LOBBY {
    }
    PREFAB_LOBBY.UPDATE_NAME = 'prefab/user/UpdateNickname.json';
    PREFAB_LOBBY.UPDATE_AVATAR = 'prefab/user/UpdateAvatar.json';
    PREFAB_LOBBY.REAL_NAME_AUTHE = 'prefab/Authentication.json';
    PREFAB_LOBBY.ACCOUNT_CANCEL = 'prefab/AccountCancel.json';
    PREFAB_LOBBY.MESSAGE_BOX = 'prefab/messageBox.json';
    PREFAB_LOBBY.COMMON_LOAD = 'prefab/Loading.json';
    PREFAB_LOBBY.POLICY_PAGE = 'prefab/PolicyPage.json';
    PREFAB_LOBBY.SHARE_PAGE = 'prefab/SharePage.json';
    PREFAB_LOBBY.PLAYER_INFO = 'prefab/user/UserInfo.json';
    PREFAB_LOBBY.BIND_PHONE = 'prefab/user/BindPhone.json';
    PREFAB_LOBBY.RANK = 'prefab/Rank.json';
    PREFAB_LOBBY.REBATE = 'prefab/Rebate.json';
    PREFAB_LOBBY.INVITE = 'prefab/invite/Invite.json';
    PREFAB_LOBBY.INVITE_INTRO = 'prefab/invite/InviteIntro.json';
    PREFAB_LOBBY.INVITE_ACT = 'prefab/invite/InviteAct.json';
    PREFAB_LOBBY.INVITE_SHARE = 'prefab/invite/InviteShare.json';
    PREFAB_LOBBY.INVITE_TURN = 'prefab/invite/InviteTurn.json';
    PREFAB_LOBBY.WITHDRAW = 'prefab/withdraw/Withdraw.json';
    PREFAB_LOBBY.WITHDRAW_SUCCESS = 'prefab/withdraw/WithdrawSuccess.json';
    PREFAB_LOBBY.WITHDRAW_DIRECT = 'prefab/withdraw/WithdrawDirect.json';
    PREFAB_LOBBY.WITHDRAW_BANK = 'prefab/withdraw/WithdrawBank.json';
    PREFAB_LOBBY.WITHDRAW_RECORD = 'prefab/withdraw/WithdrawRecord.json';
    PREFAB_LOBBY.HALL_SET = 'prefab/user/HallSet.json';
    PREFAB_LOBBY.UPDATE_PWD = 'prefab/user/UpdatePwd.json';
    PREFAB_LOBBY.MAIL = 'prefab/lobbyScene/Mail.json';
    PREFAB_LOBBY.MAIL_ITEM = 'prefab/lobbyScene/mailItem.json';
    PREFAB_LOBBY.MAIL_AWARD = 'prefab/lobbyScene/items/MailAward.json';
    PREFAB_LOBBY.SHOP = 'prefab/lobbyScene/Shop.json';
    PREFAB_LOBBY.SHOP_DETAIL = 'prefab/lobbyScene/ShopDetail.json';
    PREFAB_LOBBY.RECEIVE_SUCCESS = 'prefab/lobbyScene/ReceiveSuccess.json';
    PREFAB_LOBBY.BULLETIN = 'prefab/lobbyScene/Bulletin.json';
    PREFAB_LOBBY.VIP_WIN = "prefab/lobbyScene/vip/Vip.json";
    PREFAB_LOBBY.VIP_INFO = "prefab/lobbyScene/vip/VipInfo.json";
    PREFAB_LOBBY.VIP_DES = "prefab/lobbyScene/vip/VipDes.json";
    PREFAB_LOBBY.VIP_RATE = "prefab/lobbyScene/vip/VipRate.json";
    PREFAB_LOBBY.VIP_LEVELUP_WIN = "prefab/lobbyScene/VipLevelUp.json";
    PREFAB_LOBBY.AFFILIATE_PANEL = 'prefab/lobbyScene/affiliate/AffiliatePanel.json';
    PREFAB_LOBBY.AFFILIATE_FAQ = 'prefab/lobbyScene/affiliate/AffiliateFaq.json';
    PREFAB_LOBBY.AFFILIATE_TUTORIAL = 'prefab/lobbyScene/affiliate/AffiliateTutorial.json';
    PREFAB_LOBBY.AFFILIATE_COMMISSION = 'prefab/lobbyScene/affiliate/AffiliateCommission.json';
    PREFAB_LOBBY.AFFILIATE_RULE = 'prefab/lobbyScene/affiliate/AffiliateRule.json';
    PREFAB_LOBBY.AFFILIATE_CASHBACK = 'prefab/lobbyScene/affiliate/AffiliateCashback.json';
    PREFAB_LOBBY.AFFILIATE_DETAIL = 'prefab/lobbyScene/affiliate/AffiliateDetail.json';
    PREFAB_LOBBY.BET_RECORD = 'prefab/user/BetRecord.json';
    PREFAB_LOBBY.TIENLEN_ENTER = 'prefab/lobbyScene/TienLenEnter.json';
    PREFAB_LOBBY.ENTER_KEY = 'prefab/lobbyScene/EnterKey.json';
    PREFAB_LOBBY.LUCKY_TURN_TABLE = 'prefab/LuckyTurnTable.json';
    PREFAB_LOBBY.TOPTIPS = 'prefab/TopTip.json';
    PREFAB_LOBBY.GUIDE_LAYER = 'prefab/lobbyScene/GuideLayer.json';
    PREFAB_LOBBY.HALL_COOPERATE = 'prefab/lobbyScene/Cooperate.json';
    PREFAB_LOBBY.GOLD_SELECT = 'prefab/lobbyScene/GoldSelect.json';
    PREFAB_LOBBY.NEW_GIFT = 'prefab/lobbyScene/NewGift.json';
    PREFAB_LOBBY.SAFE_BOX = 'prefab/lobbyScene/SafeBox.json';
    PREFAB_LOBBY.DEL_ACCOUNT = 'prefab/lobbyScene/DelAccount.json';
    PREFAB_LOBBY.WEEK_GIFT = 'prefab/lobbyScene/WeekGift.json';
    PREFAB_LOBBY.RECHARGE_ACT = 'prefab/lobbyScene/RechargeAct.json';
    PREFAB_LOBBY.CASH_POT = 'prefab/lobbyScene/CashPot.json';
    PREFAB_LOBBY.ACT_FIRST = 'prefab/lobbyScene/Activs/ActFirst.json';
    PREFAB_LOBBY.ACT_INVITED = 'prefab/lobbyScene/Activs/ActInvited.json';
    PREFAB_LOBBY.ACT_DETAIL = 'prefab/lobbyScene/Activs/ActDetail.json';
    PREFAB_LOBBY.ACT_RECORD = 'prefab/lobbyScene/Activs/ActRecord.json';
    PREFAB_LOBBY.ACT_AWARD = 'prefab/lobbyScene/Activs/ActAward.json';
    PREFAB_LOBBY.WALLET = 'prefab/wallet/Wallet.json';
    PREFAB_LOBBY.WALLET_TURN_TABLE = 'prefab/wallet/WalletTurnTable.json';
    PREFAB_LOBBY.WALLET_USE = 'prefab/wallet/WalletUse.json';
    PREFAB_LOBBY.WALLET_GUIDE = 'prefab/wallet/WalletGuide.json';
    PREFAB_LOBBY.WALLET_CODE = 'prefab/wallet/WalletCode.json';
    PREFAB_LOBBY.SEL_PAY = 'prefab/lobbyScene/SelPay.json';
    PREFAB_LOBBY.SHARE_ASSEM = 'prefab/lobbyScene/ShareAssem.json';
    PREFAB_LOBBY.JACKPOT_MAIN = 'prefab/lobbyScene/JackPot/JackPotMain.json';
    PREFAB_LOBBY.JACKPOT_RULE = 'prefab/lobbyScene/JackPot/JackPotRule.json';
    PREFAB_LOBBY.SERIAL_GIFT = 'prefab/lobbyScene/SerialGift.json';
    PREFAB_LOBBY.SIGN = 'prefab/lobbyScene/Sign.json';
    PREFAB_LOBBY.DOWN_APP = 'prefab/lobbyScene/DownloadApp.json';
    PREFAB_LOBBY.SUB_LAYER_BONUS = 'prefab/lobbyScene/mainLayers/LayerBonus.json';
    PREFAB_LOBBY.SUB_LAYER_PROFILE = 'prefab/lobbyScene/mainLayers/LayerProfile.json';
    PREFAB_LOBBY.SUB_LAYER_GAMESEL = 'prefab/lobbyScene/mainLayers/LayerGameSel.json';
    PREFAB_LOBBY.SUB_LAYER_AFFIL = 'prefab/lobbyScene/mainLayers/LayerAffiliate.json';
    PREFAB_LOBBY.GAME_BRIEF = 'prefab/lobbyScene/GameBrief.json';
    PREFAB_LOBBY.HALL_MENU = 'prefab/lobbyScene/mainLayers/HallMenu.json';
    PREFAB_LOBBY.HALL_SIGN = 'prefab/lobbyScene/HallSignIn.json';
    PREFAB_LOBBY.FIND_PWD = 'prefab/lobbyScene/FindPwd.json';
    PREFAB_LOBBY.NODE_GAME_ITEM = 'prefab/lobbyScene/mainLayers/nodeGame.json';
    class LobbyRes {
        static getIconResArr() {
            return [];
        }
    }
    LobbyRes.GAME_FONT = "font/SourceHanSansCN-Medium.ttf";
    LobbyRes.LOGIN_SCENE = "views/login.scene";
    LobbyRes.LOBBY_SCENE = "views/home.scene";
    LobbyRes.LOADING_SCENE = "views/loading.scene";
    LobbyRes.MONTH_FRAME = '2d/icon/frames/month.png';
    LobbyRes.NORMAL_FRAME = '2d/icon/frames/normal.png';
    LobbyRes.DEFAULT_MAN = '2d/ui/gamebase/head_1.png';
    LobbyRes.DEFAULT_WOMAN = '2d/ui/gamebase/head_2.png';
    LobbyRes.ATLAS_COMMON = "res/atlas/2d/ui/common.atlas";
    LobbyRes.ATLAS_SECOND_UI = "res/atlas/2d/ui/secondary.atlas";
    LobbyRes.VIP_LEVEL = "table/PrivilegeLevel.json";
    LobbyRes.PLAYER_ACCESSORY = "table/Accessory.json";
    LobbyRes.LOBBY_RESARR = [
        LobbyRes.ATLAS_COMMON,
        LobbyRes.VIP_LEVEL,
        LobbyRes.GAME_FONT,
        "res/atlas/2d/animation/waiting.atlas",
        "res/atlas/2d/ui/hall/yl.atlas",
        "res/atlas/2d/ui/nShangcheng.atlas",
        "res/atlas/2d/ui/nShouye.atlas",
        "res/atlas/2d/ui/BR_geren.atlas",
        "res/atlas/2d/ui/BR_signin.atlas",
        "res/atlas/2d/ui/nMenu.atlas",
        "res/atlas/2d/icon/head.atlas",
        "res/atlas/2d/icon/gameSource.atlas",
        "res/atlas/2d/ui/qianbi.atlas",
        "res/atlas/2d/ui/BR_huodong/chuxuguan.atlas",
        "res/atlas/2d/ui/BR_huodong/jackpot.atlas",
        "res/atlas/2d/ui/BR_huodong/tehuilibao.atlas",
        "res/atlas/2d/ui/BR_tuiguang.atlas",
        "res/atlas/2d/ui/BR_jiangjin.atlas",
        "2d/ui/BR_huodong/tehuilibao/wz_zhu_number_huangcheng.png",
        PREFAB_LOBBY.MESSAGE_BOX,
        PREFAB_LOBBY.COMMON_LOAD,
        PREFAB_LOBBY.TOPTIPS,
        PREFAB_LOBBY.BULLETIN,
        PREFAB_LOBBY.MAIL_AWARD,
        PREFAB_LOBBY.NODE_GAME_ITEM,
        PREFAB_LOBBY.NEW_GIFT,
        PREFAB_LOBBY.HALL_SET,
        PREFAB_LOBBY.JACKPOT_MAIN,
        PREFAB_LOBBY.PLAYER_INFO,
        PREFAB_LOBBY.CASH_POT,
    ];
    var DYNO_IMAGES = {
        RANK_IMG_JQ: "2d/ui/hall/yl/sp_xc_jq.png",
        RANK_IMG_MFJB: "2d/ui/hall/yl/sp_xc_mfjb.png",
        REBATE_IMG_KLQ: '2d/ui/nFanli/btn_klq.png',
        REBATE_IMG_YLQ: "2d/ui/nFanli/btn_ylq.png",
        GIFT_BUY: "2d/ui/nNewGift/btn_yigoumai.png",
        ACT_STEP_1: "2d/ui/nInviteRed/sp_yq_hbjindu1.png",
        ACT_STEP_2: "2d/ui/nInviteRed/sp_yq_hbjindu2.png",
        ACT_STEP_3: "2d/ui/nInviteRed/sp_yq_hbjindu3.png",
        ACT_TX_SUC: "2d/ui/nInviteRed/wz_yq_chenggong.png",
        ACT_TX_ING: "2d/ui/nInviteRed/wz_yq_jinxingzhong.png",
        BANNER_1: "2d/ui/nShouye/banner1.png",
        BANNER_2: "2d/ui/nShouye/banner2.png",
        BANNER_3: "2d/ui/nShouye/banner3.png",
        BANNER_4: "2d/ui/nShouye/banner4.png",
        BANNER_5: "2d/ui/nShouye/banner5.png",
        MONEY: "2d/ui/common/wz_sc_money.png",
        GIFT_100: "2d/ui/nNewGift/wz_yh_100.png",
        GIFT_188: "2d/ui/nNewGift/wz_yh_188.png",
        EXTRA_188: "2d/ui/hall/yl/tx_icon_188.png",
        EXTRA_100: "2d/ui/hall/yl/tx_icon_100.png",
        GIFT_BUY1: "2d/ui/nSerialGift/btn_yhlb_yigoumai.png",
    };
    var LANG_IMAGES = [];
    var GAME_ICON_VI = [];
    var GAME_ICON_RU = [];
    var GAME_ICON_EN = [];

    var LoadGroupType;
    (function (LoadGroupType) {
        LoadGroupType["PreLoad"] = "PreLoad";
        LoadGroupType["Majiang"] = "Majiang";
        LoadGroupType["HuCardEffect"] = "HuCardEffect";
    })(LoadGroupType || (LoadGroupType = {}));
    class LoadManager {
        constructor() {
            this.m_dic = [];
            this.m_group = "";
            this.m_loadfailNum = 0;
            this.m_failIndex = 0;
            this.m_isLoadFail = false;
            this.m_isLoadFont = false;
            this.m_failLoadIndex = 0;
            this.m_loadfailList2 = [];
            this.m_unReleaseResArr = [
                LobbyRes.ATLAS_COMMON,
                LobbyRes.VIP_LEVEL,
                LobbyRes.GAME_FONT,
                "res/atlas/2d/animation/waiting.atlas",
                "res/atlas/2d/ui/hall/yl.atlas",
                "res/atlas/2d/ui/nShangcheng.atlas",
                "res/atlas/2d/ui/nShouye.atlas",
                "res/atlas/2d/ui/BR_geren.atlas",
                "res/atlas/2d/ui/BR_signin.atlas",
                "res/atlas/2d/ui/nMenu.atlas",
                "res/atlas/2d/icon/head.atlas",
                "res/atlas/2d/icon/gameSource.atlas",
                "res/atlas/2d/ui/qianbi.atlas",
                "res/atlas/2d/ui/BR_huodong/chuxuguan.atlas",
                "res/atlas/2d/ui/BR_huodong/jackpot.atlas",
                "res/atlas/2d/ui/BR_huodong/tehuilibao.atlas",
            ];
        }
        loadResArr(p_arr, p_group, callback) {
            this.m_max = p_arr.length;
            this.m_index = 0;
            this.m_group = p_group;
            this.m_loadArr = p_arr;
            this.m_loadFailList = [];
            this.m_isLoadFail = false;
            for (var i = 0; i < p_arr.length; i++) {
                this.setUrlDic(p_arr[i], p_group);
            }
            this.callFunc = callback;
            Laya.loader.maxLoader = 20;
            Laya.loader.on(Laya.Event.ERROR, this, this.onError);
            this.setLoadIndex();
        }
        onLoad(p_url, l_type, p_index) {
            let l_is3D = false;
            let l_isttf = false;
            switch (l_type) {
                case "ls":
                case "lh":
                case "lmat":
                case "lani":
                    l_is3D = true;
                    break;
                case "ttf":
                    l_is3D = false;
                    l_isttf = true;
                    break;
                default:
                    l_is3D = false;
                    break;
            }
            if (l_is3D) {
                let l_data = Laya.loader.getRes(p_url);
                if (l_data == null) {
                    if (this.m_isLoadFail) {
                        Laya.loader.create(p_url, Laya.Handler.create(this, this.onLoadFailComptele, [p_index]));
                    }
                    else {
                        Laya.loader.create(p_url, Laya.Handler.create(this, this.onLoadComptele, [p_index]));
                    }
                }
                else {
                    if (this.m_isLoadFail) {
                        this.onLoadFailComptele(p_index, l_data);
                    }
                    else {
                        this.onLoadComptele(p_index, l_data);
                    }
                }
            }
            else {
                if (this.m_isLoadFail) {
                    let l_data = Laya.loader.getRes(p_url);
                    if (l_data == null) {
                        if (l_isttf == true) {
                            this.loadTTF(p_url, "SourceHanSansCN-Medium", Laya.Handler.create(this, this.onLoadFailComptele, [p_index]), Laya.Handler.create(this, this.onLoadFailComptele, [p_index, null]));
                        }
                        else {
                            Laya.loader.load(p_url, Laya.Handler.create(this, this.onLoadFailComptele, [p_index]));
                        }
                    }
                    else {
                        this.onLoadFailComptele(p_index, l_data);
                    }
                }
                else {
                    let l_data = Laya.loader.getRes(p_url);
                    if (l_data == null) {
                        if (l_isttf == true) {
                            this.loadTTF(p_url, "SourceHanSansCN-Medium", Laya.Handler.create(this, this.onLoadComptele, [p_index]), Laya.Handler.create(this, this.onLoadComptele, [p_index, null]));
                        }
                        else {
                            Laya.loader.load(p_url, Laya.Handler.create(this, this.onLoadComptele, [p_index]));
                        }
                    }
                    else {
                        this.onLoadComptele(p_index, l_data);
                    }
                }
            }
        }
        onLoadComptele(p_index, p_data) {
            if (!p_data) {
                this.m_loadFailList.push(this.m_loadArr[p_index]);
            }
            else {
                this.m_index++;
            }
            if ((this.m_index + this.m_loadFailList.length) < this.m_loadArr.length) {
                let l_prog = this.m_index / this.m_max;
                EventManager.getInstance().emit(LoadManager.LOAD_PROGRESS, [l_prog]);
            }
            else {
                if (this.m_loadFailList.length == 0) {
                    EventManager.getInstance().emit(LoadManager.LOAD_COMPLETE, [1]);
                    this.m_loadfailNum = 0;
                }
                else {
                    this.m_loadfailNum++;
                    if (this.m_loadfailNum >= 3) {
                        EventManager.getInstance().emit(LoadManager.LOAD_NETERROR, [1]);
                    }
                    else {
                        this.m_isLoadFail = true;
                        this.loadFailList(this.m_loadFailList, this.m_group);
                    }
                }
            }
        }
        loadFailList(p_arr, p_group) {
            this.m_group = p_group;
            this.m_loadArr = p_arr;
            this.m_failIndex = 0;
            this.m_isLoadFail = true;
            this.m_loadArr = p_arr;
            this.m_failLoadIndex = 0;
            Laya.loader.on(Laya.Event.ERROR, this, this.onError);
            for (var i = 0; i < p_arr.length; i++) {
                this.setUrlDic(p_arr[i], p_group);
            }
            this.loadfailByIndex();
        }
        loadfailByIndex() {
            for (let i = 0; i < this.m_loadFailList.length; i++) {
                let l_url = this.m_loadFailList[i];
                let l_type = l_url.split(".")[1];
                this.onLoad(l_url, l_type, i);
            }
        }
        onLoadFailComptele(p_index, p_data) {
            if (p_data) {
                this.m_index++;
                this.m_failIndex++;
            }
            else {
                this.m_loadfailList2.push(this.m_loadFailList[p_index]);
                this.m_failIndex++;
                this.m_failLoadIndex++;
            }
            if (this.m_index + this.m_failLoadIndex < this.m_max) {
                let l_prog = this.m_index / this.m_max;
                EventManager.getInstance().emit(LoadManager.LOAD_PROGRESS, [l_prog]);
            }
            else {
                if (this.m_failLoadIndex == 0) {
                    EventManager.getInstance().emit(LoadManager.LOAD_COMPLETE, [1]);
                    this.m_loadfailNum = 0;
                }
                else {
                    this.m_loadfailNum++;
                    if (this.m_loadfailNum >= 3) {
                        EventManager.getInstance().emit(LoadManager.LOAD_NETERROR, [1]);
                    }
                    else {
                        this.m_isLoadFail = true;
                        this.m_loadFailList = this.m_loadfailList2.slice(0, this.m_loadfailList2.length);
                        this.m_loadfailList2 = [];
                        this.loadFailList(this.m_loadFailList, this.m_group);
                    }
                }
            }
        }
        setLoadIndex() {
            for (let i = 0; i < this.m_loadArr.length; i++) {
                let l_url = this.m_loadArr[i];
                let l_type = l_url.split(".")[1];
                this.onLoad(l_url, l_type, i);
            }
        }
        loadRes(p_str, compCall, p_group) {
            Laya.loader.create(p_str, compCall);
            this.setUrlDic(p_group, p_str);
        }
        setUrlDic(p_url, p_group) {
            if (!this.m_dic[p_group]) {
                this.m_dic[p_group] = [];
            }
            if (!this.m_dic[p_group].includes(p_url)) {
                this.m_dic[p_group].push(p_url);
            }
        }
        onError(err) {
            CC.Log("加载失败: " + err);
        }
        releaseResByUrl(p_url) {
            let l_key = p_url.split(".")[1];
            switch (l_key) {
                case "ani":
                    Laya.Animation.clearCache(p_url);
                    break;
                case "png":
                case "jpg":
                case "atlas":
                    Laya.loader.clearTextureRes(p_url);
                    break;
                case "json":
                case "ttf":
                case "txt":
                case "part":
                case "sk":
                    break;
                case "ls":
                case "lh":
                case "lmat":
                case "lani":
                    let l_data = Laya.Loader.getRes(p_url);
                    if (l_data) {
                        let l_bool = l_data.destroy(true);
                        l_data = null;
                    }
                    Laya.Loader.clearRes(p_url);
                    break;
                case "scene":
                    Laya.View.close(p_url);
                    Laya.View.destroy(p_url);
                    Laya.Loader.clearRes(p_url);
                    break;
                default:
                    if (Laya.Loader.getRes(p_url)) {
                        Laya.Loader.getRes(p_url).destroy();
                    }
                    Laya.Loader.clearRes(p_url);
                    break;
            }
        }
        releaseResByArr(p_arr) {
            for (let i = 0; i < p_arr.length; i++) {
                this.releaseResByUrl(p_arr[i]);
            }
        }
        releaseResByGroup(p_group) {
            if (this.m_dic[p_group]) {
                for (let i = 0; i < this.m_dic[p_group].length; i++) {
                    let url = this.m_dic[p_group][i];
                    if (this.m_unReleaseResArr.includes(url) == false) {
                        this.releaseResByUrl(this.m_dic[p_group][i]);
                    }
                    else {
                        CC.Log(url);
                    }
                }
            }
        }
        releaseAllRes(callback) {
            for (let i = 0; i < this.m_dic.length; i++) {
                const group = this.m_dic[i];
                for (let j = 0; j < group.length; j++) {
                    const resURL = group[j];
                    this.releaseResByUrl(resURL);
                }
            }
            callback();
        }
        loadSpine(p_url, p_spineTemplet, p_handler) {
            if (!p_spineTemplet) {
                p_spineTemplet = new Laya.SpineTemplet(Laya.SpineVersion.v4_0);
            }
            p_spineTemplet.loadAni(p_url);
            p_spineTemplet.once(Laya.Event.COMPLETE, this, function () {
                p_handler.run();
            });
            p_spineTemplet.once(Laya.Event.ERROR, this, this.onError);
        }
        loadBaseSpine(p_url, p_spine, p_handler) {
            p_spine.load(p_url, p_handler);
        }
        reLoadSpine(p_arr) {
            for (let i = 0; i < p_arr.length; i++) {
                let l_spineTemplet = new Laya.SpineTemplet(Laya.SpineVersion.v4_0);
                l_spineTemplet.loadAni(p_arr[i]);
            }
        }
        loadscene3D(p_url, p_handler) {
            this.setUrlDic(p_url, LoadGroupType.Majiang);
            if (Laya.loader.getRes(p_url)) {
                p_handler.runWith(Laya.loader.getRes(p_url));
            }
            else {
                Laya.loader.create(p_url, p_handler);
            }
        }
        loadAni(p_ani, p_url, p_handler) {
            this.setUrlDic(p_url, LoadGroupType.Majiang);
            p_ani.loadAnimation(p_url, p_handler);
        }
        loadMajiangMaterial(p_url, p_mesh) {
            let l_material = Laya.loader.getRes(p_url);
            if (l_material) {
                (p_mesh.meshRenderer.material) = l_material;
            }
            else {
                this.setUrlDic(p_url, LoadGroupType.Majiang);
                Laya.loader.create(p_url, Laya.Handler.create(this, function (p_material) {
                    if (p_material && p_mesh.meshRenderer.material) {
                        (p_mesh.meshRenderer.material) = p_material;
                    }
                }));
            }
        }
        loadScene(p_url, p_handler, p_group = "") {
            if (p_group.length > 0) {
                this.setUrlDic(p_url, p_group);
            }
            Laya.Scene.load(p_url, p_handler);
        }
        loadTTF(p_url, fontName, p_handler, err) {
            let ttfloader = new Laya.TTFLoader();
            ttfloader.fontName = fontName;
            ttfloader.load(p_url);
            ttfloader.complete = p_handler;
            ttfloader.err = err;
            if (this.m_loadfailNum > 0 && this.m_failLoadIndex > 0) {
                err.runWith([null]);
            }
            else {
                if (this.m_loadfailNum == 0 && this.m_loadFailList.length > 0) {
                    err.runWith([null]);
                }
            }
        }
        checkData(p_group) {
            if (this.m_dic[p_group]) {
                for (let i = 0; i < this.m_dic[p_group].length; i++) {
                    let url = this.m_dic[p_group][i];
                    if (this.m_unReleaseResArr.includes(url) == false) {
                        if (Laya.Resource.getResourceByURL(url)) {
                            CC.Log(url + ":   " + Laya.Resource.getResourceByURL(url).gpuMemory);
                        }
                    }
                    else {
                        CC.Log(url);
                    }
                }
            }
        }
        static get instance() {
            if (!this.m_instance) {
                this.m_instance = new LoadManager();
            }
            return this.m_instance;
        }
    }
    LoadManager.LOAD_PROGRESS = "LOAD_PROGRESS";
    LoadManager.LOAD_COMPLETE = "LOAD_COMPLETE";
    LoadManager.LOAD_NETERROR = "LOAD_NETERROR";

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    function commonjsRequire () {
    	throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');
    }

    function unwrapExports (x) {
    	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
    }

    function createCommonjsModule(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    function getCjsExportFromNamespace (n) {
    	return n && n['default'] || n;
    }

    var googleProtobuf = createCommonjsModule(function (module, exports) {
    var $jscomp = $jscomp || {};
    $jscomp.scope = {};
    $jscomp.findInternal = function (a, b, c) { a instanceof String && (a = String(a)); for (var d = a.length, e = 0; e < d; e++) {
        var f = a[e];
        if (b.call(c, f, e, a))
            return { i: e, v: f };
    } return { i: -1, v: void 0 }; };
    $jscomp.ASSUME_ES5 = !1;
    $jscomp.ASSUME_NO_NATIVE_MAP = !1;
    $jscomp.ASSUME_NO_NATIVE_SET = !1;
    $jscomp.SIMPLE_FROUND_POLYFILL = !1;
    $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) { a != Array.prototype && a != Object.prototype && (a[b] = c.value); };
    $jscomp.getGlobal = function (a) { return "undefined" != typeof window && window === a ? a : "undefined" != typeof commonjsGlobal && null != commonjsGlobal ? commonjsGlobal : a; };
    $jscomp.global = $jscomp.getGlobal(commonjsGlobal);
    $jscomp.polyfill = function (a, b, c, d) { if (b) {
        c = $jscomp.global;
        a = a.split(".");
        for (d = 0; d < a.length - 1; d++) {
            var e = a[d];
            e in c || (c[e] = {});
            c = c[e];
        }
        a = a[a.length - 1];
        d = c[a];
        b = b(d);
        b != d && null != b && $jscomp.defineProperty(c, a, { configurable: !0, writable: !0, value: b });
    } };
    $jscomp.polyfill("Array.prototype.findIndex", function (a) { return a ? a : function (a, c) { return $jscomp.findInternal(this, a, c).i; }; }, "es6", "es3");
    $jscomp.checkStringArgs = function (a, b, c) { if (null == a)
        throw new TypeError("The 'this' value for String.prototype." + c + " must not be null or undefined"); if (b instanceof RegExp)
        throw new TypeError("First argument to String.prototype." + c + " must not be a regular expression"); return a + ""; };
    $jscomp.polyfill("String.prototype.endsWith", function (a) { return a ? a : function (a, c) { var b = $jscomp.checkStringArgs(this, a, "endsWith"); a += ""; void 0 === c && (c = b.length); c = Math.max(0, Math.min(c | 0, b.length)); for (var e = a.length; 0 < e && 0 < c;)
        if (b[--c] != a[--e])
            return !1; return 0 >= e; }; }, "es6", "es3");
    $jscomp.polyfill("Array.prototype.find", function (a) { return a ? a : function (a, c) { return $jscomp.findInternal(this, a, c).v; }; }, "es6", "es3");
    $jscomp.polyfill("String.prototype.startsWith", function (a) { return a ? a : function (a, c) { var b = $jscomp.checkStringArgs(this, a, "startsWith"); a += ""; var e = b.length, f = a.length; c = Math.max(0, Math.min(c | 0, b.length)); for (var g = 0; g < f && c < e;)
        if (b[c++] != a[g++])
            return !1; return g >= f; }; }, "es6", "es3");
    $jscomp.polyfill("String.prototype.repeat", function (a) { return a ? a : function (a) { var b = $jscomp.checkStringArgs(this, null, "repeat"); if (0 > a || 1342177279 < a)
        throw new RangeError("Invalid count value"); a |= 0; for (var d = ""; a;)
        if (a & 1 && (d += b), a >>>= 1)
            b += b; return d; }; }, "es6", "es3");
    var COMPILED = !0, goog = goog || {};
    goog.global = commonjsGlobal || self;
    goog.exportPath_ = function (a, b, c) { a = a.split("."); c = c || goog.global; a[0] in c || "undefined" == typeof c.execScript || c.execScript("var " + a[0]); for (var d; a.length && (d = a.shift());)
        a.length || void 0 === b ? c = c[d] && c[d] !== Object.prototype[d] ? c[d] : c[d] = {} : c[d] = b; };
    goog.define = function (a, b) { if (!COMPILED) {
        var c = goog.global.CLOSURE_UNCOMPILED_DEFINES, d = goog.global.CLOSURE_DEFINES;
        c && void 0 === c.nodeType && Object.prototype.hasOwnProperty.call(c, a) ? b = c[a] : d && void 0 === d.nodeType && Object.prototype.hasOwnProperty.call(d, a) && (b = d[a]);
    } return b; };
    goog.FEATURESET_YEAR = 2012;
    goog.DEBUG = !0;
    goog.LOCALE = "en";
    goog.TRUSTED_SITE = !0;
    goog.STRICT_MODE_COMPATIBLE = !1;
    goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;
    goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;
    goog.provide = function (a) { if (goog.isInModuleLoader_())
        throw Error("goog.provide cannot be used within a module."); if (!COMPILED && goog.isProvided_(a))
        throw Error('Namespace "' + a + '" already declared.'); goog.constructNamespace_(a); };
    goog.constructNamespace_ = function (a, b) { if (!COMPILED) {
        delete goog.implicitNamespaces_[a];
        for (var c = a; (c = c.substring(0, c.lastIndexOf("."))) && !goog.getObjectByName(c);)
            goog.implicitNamespaces_[c] = !0;
    } goog.exportPath_(a, b); };
    goog.getScriptNonce = function (a) { if (a && a != goog.global)
        return goog.getScriptNonce_(a.document); null === goog.cspNonce_ && (goog.cspNonce_ = goog.getScriptNonce_(goog.global.document)); return goog.cspNonce_; };
    goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
    goog.cspNonce_ = null;
    goog.getScriptNonce_ = function (a) { return (a = a.querySelector && a.querySelector("script[nonce]")) && (a = a.nonce || a.getAttribute("nonce")) && goog.NONCE_PATTERN_.test(a) ? a : ""; };
    goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
    goog.module = function (a) {
        if ("string" !== typeof a || !a || -1 == a.search(goog.VALID_MODULE_RE_))
            throw Error("Invalid module identifier");
        if (!goog.isInGoogModuleLoader_())
            throw Error("Module " + a + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
        if (goog.moduleLoaderState_.moduleName)
            throw Error("goog.module may only be called once per module.");
        goog.moduleLoaderState_.moduleName = a;
        if (!COMPILED) {
            if (goog.isProvided_(a))
                throw Error('Namespace "' + a + '" already declared.');
            delete goog.implicitNamespaces_[a];
        }
    };
    goog.module.get = function (a) { return goog.module.getInternal_(a); };
    goog.module.getInternal_ = function (a) { if (!COMPILED) {
        if (a in goog.loadedModules_)
            return goog.loadedModules_[a].exports;
        if (!goog.implicitNamespaces_[a])
            return a = goog.getObjectByName(a), null != a ? a : null;
    } return null; };
    goog.ModuleType = { ES6: "es6", GOOG: "goog" };
    goog.moduleLoaderState_ = null;
    goog.isInModuleLoader_ = function () { return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_(); };
    goog.isInGoogModuleLoader_ = function () { return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG; };
    goog.isInEs6ModuleLoader_ = function () { if (goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6)
        return !0; var a = goog.global.$jscomp; return a ? "function" != typeof a.getCurrentModulePath ? !1 : !!a.getCurrentModulePath() : !1; };
    goog.module.declareLegacyNamespace = function () { if (!COMPILED && !goog.isInGoogModuleLoader_())
        throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module"); if (!COMPILED && !goog.moduleLoaderState_.moduleName)
        throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace."); goog.moduleLoaderState_.declareLegacyNamespace = !0; };
    goog.declareModuleId = function (a) {
        if (!COMPILED) {
            if (!goog.isInEs6ModuleLoader_())
                throw Error("goog.declareModuleId may only be called from within an ES6 module");
            if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName)
                throw Error("goog.declareModuleId may only be called once per module.");
            if (a in goog.loadedModules_)
                throw Error('Module with namespace "' + a + '" already exists.');
        }
        if (goog.moduleLoaderState_)
            goog.moduleLoaderState_.moduleName = a;
        else {
            var b = goog.global.$jscomp;
            if (!b || "function" != typeof b.getCurrentModulePath)
                throw Error('Module with namespace "' +
                    a + '" has been loaded incorrectly.');
            b = b.require(b.getCurrentModulePath());
            goog.loadedModules_[a] = { exports: b, type: goog.ModuleType.ES6, moduleId: a };
        }
    };
    goog.setTestOnly = function (a) { if (goog.DISALLOW_TEST_ONLY_CODE)
        throw a = a || "", Error("Importing test-only code into non-debug environment" + (a ? ": " + a : ".")); };
    goog.forwardDeclare = function (a) { };
    COMPILED || (goog.isProvided_ = function (a) { return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && null != goog.getObjectByName(a); }, goog.implicitNamespaces_ = { "goog.module": !0 });
    goog.getObjectByName = function (a, b) { a = a.split("."); b = b || goog.global; for (var c = 0; c < a.length; c++)
        if (b = b[a[c]], null == b)
            return null; return b; };
    goog.globalize = function (a, b) { b = b || goog.global; for (var c in a)
        b[c] = a[c]; };
    goog.addDependency = function (a, b, c, d) { !COMPILED && goog.DEPENDENCIES_ENABLED && goog.debugLoader_.addDependency(a, b, c, d); };
    goog.ENABLE_DEBUG_LOADER = !0;
    goog.logToConsole_ = function (a) { goog.global.console && goog.global.console.error(a); };
    goog.require = function (a) { if (!COMPILED) {
        goog.ENABLE_DEBUG_LOADER && goog.debugLoader_.requested(a);
        if (goog.isProvided_(a)) {
            if (goog.isInModuleLoader_())
                return goog.module.getInternal_(a);
        }
        else if (goog.ENABLE_DEBUG_LOADER) {
            var b = goog.moduleLoaderState_;
            goog.moduleLoaderState_ = null;
            try {
                goog.debugLoader_.load_(a);
            }
            finally {
                goog.moduleLoaderState_ = b;
            }
        }
        return null;
    } };
    goog.requireType = function (a) { return {}; };
    goog.basePath = "";
    goog.nullFunction = function () { };
    goog.abstractMethod = function () { throw Error("unimplemented abstract method"); };
    goog.addSingletonGetter = function (a) { a.instance_ = void 0; a.getInstance = function () { if (a.instance_)
        return a.instance_; goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a); return a.instance_ = new a; }; };
    goog.instantiatedSingletons_ = [];
    goog.LOAD_MODULE_USING_EVAL = !0;
    goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
    goog.loadedModules_ = {};
    goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
    goog.TRANSPILE = "detect";
    goog.ASSUME_ES_MODULES_TRANSPILED = !1;
    goog.TRANSPILE_TO_LANGUAGE = "";
    goog.TRANSPILER = "transpile.js";
    goog.hasBadLetScoping = null;
    goog.useSafari10Workaround = function () { if (null == goog.hasBadLetScoping) {
        try {
            var a = !eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";');
        }
        catch (b) {
            a = !1;
        }
        goog.hasBadLetScoping = a;
    } return goog.hasBadLetScoping; };
    goog.workaroundSafari10EvalBug = function (a) { return "(function(){" + a + "\n;})();\n"; };
    goog.loadModule = function (a) {
        var b = goog.moduleLoaderState_;
        try {
            goog.moduleLoaderState_ = { moduleName: "", declareLegacyNamespace: !1, type: goog.ModuleType.GOOG };
            if (goog.isFunction(a))
                var c = a.call(void 0, {});
            else if ("string" === typeof a)
                goog.useSafari10Workaround() && (a = goog.workaroundSafari10EvalBug(a)), c = goog.loadModuleFromSource_.call(void 0, a);
            else
                throw Error("Invalid module definition");
            var d = goog.moduleLoaderState_.moduleName;
            if ("string" === typeof d && d)
                goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && "object" == typeof c && null != c && Object.seal(c), goog.loadedModules_[d] = { exports: c, type: goog.ModuleType.GOOG, moduleId: goog.moduleLoaderState_.moduleName };
            else
                throw Error('Invalid module name "' + d + '"');
        }
        finally {
            goog.moduleLoaderState_ = b;
        }
    };
    goog.loadModuleFromSource_ = function (a) { eval(a); return {}; };
    goog.normalizePath_ = function (a) { a = a.split("/"); for (var b = 0; b < a.length;)
        "." == a[b] ? a.splice(b, 1) : b && ".." == a[b] && a[b - 1] && ".." != a[b - 1] ? a.splice(--b, 2) : b++; return a.join("/"); };
    goog.loadFileSync_ = function (a) { if (goog.global.CLOSURE_LOAD_FILE_SYNC)
        return goog.global.CLOSURE_LOAD_FILE_SYNC(a); try {
        var b = new goog.global.XMLHttpRequest;
        b.open("get", a, !1);
        b.send();
        return 0 == b.status || 200 == b.status ? b.responseText : null;
    }
    catch (c) {
        return null;
    } };
    goog.transpile_ = function (a, b, c) {
        var d = goog.global.$jscomp;
        d || (goog.global.$jscomp = d = {});
        var e = d.transpile;
        if (!e) {
            var f = goog.basePath + goog.TRANSPILER, g = goog.loadFileSync_(f);
            if (g) {
                (function () { (0, eval)(g + "\n//# sourceURL=" + f); }).call(goog.global);
                if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile)
                    throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
                goog.global.$jscomp.transpile =
                    goog.global.$gwtExport.$jscomp.transpile;
                d = goog.global.$jscomp;
                e = d.transpile;
            }
        }
        e || (e = d.transpile = function (a, b) { goog.logToConsole_(b + " requires transpilation but no transpiler was found."); return a; });
        return e(a, b, c);
    };
    goog.typeOf = function (a) {
        var b = typeof a;
        if ("object" == b)
            if (a) {
                if (a instanceof Array)
                    return "array";
                if (a instanceof Object)
                    return b;
                var c = Object.prototype.toString.call(a);
                if ("[object Window]" == c)
                    return "object";
                if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice"))
                    return "array";
                if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call"))
                    return "function";
            }
            else
                return "null";
        else if ("function" == b && "undefined" == typeof a.call)
            return "object";
        return b;
    };
    goog.isArray = function (a) { return "array" == goog.typeOf(a); };
    goog.isArrayLike = function (a) { var b = goog.typeOf(a); return "array" == b || "object" == b && "number" == typeof a.length; };
    goog.isDateLike = function (a) { return goog.isObject(a) && "function" == typeof a.getFullYear; };
    goog.isFunction = function (a) { return "function" == goog.typeOf(a); };
    goog.isObject = function (a) { var b = typeof a; return "object" == b && null != a || "function" == b; };
    goog.getUid = function (a) { return Object.prototype.hasOwnProperty.call(a, goog.UID_PROPERTY_) && a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_); };
    goog.hasUid = function (a) { return !!a[goog.UID_PROPERTY_]; };
    goog.removeUid = function (a) { null !== a && "removeAttribute" in a && a.removeAttribute(goog.UID_PROPERTY_); try {
        delete a[goog.UID_PROPERTY_];
    }
    catch (b) { } };
    goog.UID_PROPERTY_ = "closure_uid_" + (1E9 * Math.random() >>> 0);
    goog.uidCounter_ = 0;
    goog.getHashCode = goog.getUid;
    goog.removeHashCode = goog.removeUid;
    goog.cloneObject = function (a) { var b = goog.typeOf(a); if ("object" == b || "array" == b) {
        if ("function" === typeof a.clone)
            return a.clone();
        b = "array" == b ? [] : {};
        for (var c in a)
            b[c] = goog.cloneObject(a[c]);
        return b;
    } return a; };
    goog.bindNative_ = function (a, b, c) { return a.call.apply(a.bind, arguments); };
    goog.bindJs_ = function (a, b, c) { if (!a)
        throw Error(); if (2 < arguments.length) {
        var d = Array.prototype.slice.call(arguments, 2);
        return function () { var c = Array.prototype.slice.call(arguments); Array.prototype.unshift.apply(c, d); return a.apply(b, c); };
    } return function () { return a.apply(b, arguments); }; };
    goog.bind = function (a, b, c) { Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_; return goog.bind.apply(null, arguments); };
    goog.partial = function (a, b) { var c = Array.prototype.slice.call(arguments, 1); return function () { var b = c.slice(); b.push.apply(b, arguments); return a.apply(this, b); }; };
    goog.mixin = function (a, b) { for (var c in b)
        a[c] = b[c]; };
    goog.now = goog.TRUSTED_SITE && Date.now || function () { return +new Date; };
    goog.globalEval = function (a) {
        if (goog.global.execScript)
            goog.global.execScript(a, "JavaScript");
        else if (goog.global.eval) {
            if (null == goog.evalWorksForGlobals_) {
                try {
                    goog.global.eval("var _evalTest_ = 1;");
                }
                catch (d) { }
                if ("undefined" != typeof goog.global._evalTest_) {
                    try {
                        delete goog.global._evalTest_;
                    }
                    catch (d) { }
                    goog.evalWorksForGlobals_ = !0;
                }
                else
                    goog.evalWorksForGlobals_ = !1;
            }
            if (goog.evalWorksForGlobals_)
                goog.global.eval(a);
            else {
                var b = goog.global.document, c = b.createElement("script");
                c.type = "text/javascript";
                c.defer =
                    !1;
                c.appendChild(b.createTextNode(a));
                b.head.appendChild(c);
                b.head.removeChild(c);
            }
        }
        else
            throw Error("goog.globalEval not available");
    };
    goog.evalWorksForGlobals_ = null;
    goog.getCssName = function (a, b) { if ("." == String(a).charAt(0))
        throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + a); var c = function (a) { return goog.cssNameMapping_[a] || a; }, d = function (a) { a = a.split("-"); for (var b = [], d = 0; d < a.length; d++)
        b.push(c(a[d])); return b.join("-"); }; d = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? c : d : function (a) { return a; }; a = b ? a + "-" + d(b) : d(a); return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(a) : a; };
    goog.setCssNameMapping = function (a, b) { goog.cssNameMapping_ = a; goog.cssNameMappingStyle_ = b; };
    !COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);
    goog.getMsg = function (a, b, c) { c && c.html && (a = a.replace(/</g, "&lt;")); b && (a = a.replace(/\{\$([^}]+)}/g, function (a, c) { return null != b && c in b ? b[c] : a; })); return a; };
    goog.getMsgWithFallback = function (a, b) { return a; };
    goog.exportSymbol = function (a, b, c) { goog.exportPath_(a, b, c); };
    goog.exportProperty = function (a, b, c) { a[b] = c; };
    goog.inherits = function (a, b) { function c() { } c.prototype = b.prototype; a.superClass_ = b.prototype; a.prototype = new c; a.prototype.constructor = a; a.base = function (a, c, f) { for (var d = Array(arguments.length - 2), e = 2; e < arguments.length; e++)
        d[e - 2] = arguments[e]; return b.prototype[c].apply(a, d); }; };
    goog.scope = function (a) { if (goog.isInModuleLoader_())
        throw Error("goog.scope is not supported within a module."); a.call(goog.global); };
    COMPILED || (goog.global.COMPILED = COMPILED);
    goog.defineClass = function (a, b) { var c = b.constructor, d = b.statics; c && c != Object.prototype.constructor || (c = function () { throw Error("cannot instantiate an interface (no constructor defined)."); }); c = goog.defineClass.createSealingConstructor_(c, a); a && goog.inherits(c, a); delete b.constructor; delete b.statics; goog.defineClass.applyProperties_(c.prototype, b); null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d)); return c; };
    goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
    goog.defineClass.createSealingConstructor_ = function (a, b) { if (!goog.defineClass.SEAL_CLASS_INSTANCES)
        return a; var c = !goog.defineClass.isUnsealable_(b), d = function () { var b = a.apply(this, arguments) || this; b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_]; this.constructor === d && c && Object.seal instanceof Function && Object.seal(b); return b; }; return d; };
    goog.defineClass.isUnsealable_ = function (a) { return a && a.prototype && a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]; };
    goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
    goog.defineClass.applyProperties_ = function (a, b) { for (var c in b)
        Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]); for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++)
        c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]); };
    goog.tagUnsealableClass = function (a) { !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0); };
    goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
    !COMPILED && goog.DEPENDENCIES_ENABLED && (goog.inHtmlDocument_ = function () { var a = goog.global.document; return null != a && "write" in a; }, goog.isDocumentLoading_ = function () { var a = goog.global.document; return a.attachEvent ? "complete" != a.readyState : "loading" == a.readyState; }, goog.findBasePath_ = function () {
        if (void 0 != goog.global.CLOSURE_BASE_PATH && "string" === typeof goog.global.CLOSURE_BASE_PATH)
            goog.basePath = goog.global.CLOSURE_BASE_PATH;
        else if (goog.inHtmlDocument_()) {
            var a = goog.global.document, b = a.currentScript;
            a = b ? [b] : a.getElementsByTagName("SCRIPT");
            for (b = a.length - 1; 0 <= b; --b) {
                var c = a[b].src, d = c.lastIndexOf("?");
                d = -1 == d ? c.length : d;
                if ("base.js" == c.substr(d - 7, 7)) {
                    goog.basePath = c.substr(0, d - 7);
                    break;
                }
            }
        }
    }, goog.findBasePath_(), goog.Transpiler = function () { this.requiresTranspilation_ = null; this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE; }, goog.Transpiler.prototype.createRequiresTranspilation_ = function () {
        function a(a, b) { e ? d[a] = !0 : b() ? (c = a, d[a] = !1) : e = d[a] = !0; }
        function b(a) { try {
            return !!eval(a);
        }
        catch (h) {
            return !1;
        } }
        var c = "es3", d = { es3: !1 }, e = !1, f = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
        a("es5", function () { return b("[1,].length==1"); });
        a("es6", function () { return f.match(/Edge\/(\d+)(\.\d)*/i) ? !1 : b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()'); });
        a("es7", function () { return b("2 ** 2 == 4"); });
        a("es8", function () { return b("async () => 1, true"); });
        a("es9", function () { return b("({...rest} = {}), true"); });
        a("es_next", function () { return !1; });
        return { target: c, map: d };
    }, goog.Transpiler.prototype.needsTranspile = function (a, b) {
        if ("always" == goog.TRANSPILE)
            return !0;
        if ("never" == goog.TRANSPILE)
            return !1;
        if (!this.requiresTranspilation_) {
            var c = this.createRequiresTranspilation_();
            this.requiresTranspilation_ = c.map;
            this.transpilationTarget_ = this.transpilationTarget_ ||
                c.target;
        }
        if (a in this.requiresTranspilation_)
            return this.requiresTranspilation_[a] ? !0 : !goog.inHtmlDocument_() || "es6" != b || "noModule" in goog.global.document.createElement("script") ? !1 : !0;
        throw Error("Unknown language mode: " + a);
    }, goog.Transpiler.prototype.transpile = function (a, b) { return goog.transpile_(a, b, this.transpilationTarget_); }, goog.transpiler_ = new goog.Transpiler, goog.protectScriptTag_ = function (a) { return a.replace(/<\/(SCRIPT)/ig, "\\x3c/$1"); }, goog.DebugLoader_ = function () {
        this.dependencies_ = {};
        this.idToPath_ = {};
        this.written_ = {};
        this.loadingDeps_ = [];
        this.depsToLoad_ = [];
        this.paused_ = !1;
        this.factory_ = new goog.DependencyFactory(goog.transpiler_);
        this.deferredCallbacks_ = {};
        this.deferredQueue_ = [];
    }, goog.DebugLoader_.prototype.bootstrap = function (a, b) {
        function c() { d && (goog.global.setTimeout(d, 0), d = null); }
        var d = b;
        if (a.length) {
            b = [];
            for (var e = 0; e < a.length; e++) {
                var f = this.getPathFromDeps_(a[e]);
                if (!f)
                    throw Error("Unregonized namespace: " + a[e]);
                b.push(this.dependencies_[f]);
            }
            f = goog.require;
            var g = 0;
            for (e =
                0; e < a.length; e++)
                f(a[e]), b[e].onLoad(function () { ++g == a.length && c(); });
        }
        else
            c();
    }, goog.DebugLoader_.prototype.loadClosureDeps = function () { this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + "deps.js"), "deps.js", [], [], {}, !1)); this.loadDeps_(); }, goog.DebugLoader_.prototype.requested = function (a, b) { (a = this.getPathFromDeps_(a)) && (b || this.areDepsLoaded_(this.dependencies_[a].requires)) && (b = this.deferredCallbacks_[a]) && (delete this.deferredCallbacks_[a], b()); }, goog.DebugLoader_.prototype.setDependencyFactory =
        function (a) { this.factory_ = a; }, goog.DebugLoader_.prototype.load_ = function (a) {
        if (this.getPathFromDeps_(a)) {
            var b = this, c = [], d = function (a) { var e = b.getPathFromDeps_(a); if (!e)
                throw Error("Bad dependency path or symbol: " + a); if (!b.written_[e]) {
                b.written_[e] = !0;
                a = b.dependencies_[e];
                for (e = 0; e < a.requires.length; e++)
                    goog.isProvided_(a.requires[e]) || d(a.requires[e]);
                c.push(a);
            } };
            d(a);
            a = !!this.depsToLoad_.length;
            this.depsToLoad_ = this.depsToLoad_.concat(c);
            this.paused_ || a || this.loadDeps_();
        }
        else
            throw a = "goog.require could not find: " +
                a, goog.logToConsole_(a), Error(a);
    }, goog.DebugLoader_.prototype.loadDeps_ = function () {
        for (var a = this, b = this.paused_; this.depsToLoad_.length && !b;)
            (function () {
                var c = !1, d = a.depsToLoad_.shift(), e = !1;
                a.loading_(d);
                var f = { pause: function () { if (c)
                        throw Error("Cannot call pause after the call to load."); b = !0; }, resume: function () { c ? a.resume_() : b = !1; }, loaded: function () { if (e)
                        throw Error("Double call to loaded."); e = !0; a.loaded_(d); }, pending: function () {
                        for (var b = [], c = 0; c < a.loadingDeps_.length; c++)
                            b.push(a.loadingDeps_[c]);
                        return b;
                    }, setModuleState: function (a) { goog.moduleLoaderState_ = { type: a, moduleName: "", declareLegacyNamespace: !1 }; }, registerEs6ModuleExports: function (a, b, c) { c && (goog.loadedModules_[c] = { exports: b, type: goog.ModuleType.ES6, moduleId: c || "" }); }, registerGoogModuleExports: function (a, b) { goog.loadedModules_[a] = { exports: b, type: goog.ModuleType.GOOG, moduleId: a }; }, clearModuleState: function () { goog.moduleLoaderState_ = null; }, defer: function (b) {
                        if (c)
                            throw Error("Cannot register with defer after the call to load.");
                        a.defer_(d, b);
                    }, areDepsLoaded: function () { return a.areDepsLoaded_(d.requires); } };
                try {
                    d.load(f);
                }
                finally {
                    c = !0;
                }
            })();
        b && this.pause_();
    }, goog.DebugLoader_.prototype.pause_ = function () { this.paused_ = !0; }, goog.DebugLoader_.prototype.resume_ = function () { this.paused_ && (this.paused_ = !1, this.loadDeps_()); }, goog.DebugLoader_.prototype.loading_ = function (a) { this.loadingDeps_.push(a); }, goog.DebugLoader_.prototype.loaded_ = function (a) {
        for (var b = 0; b < this.loadingDeps_.length; b++)
            if (this.loadingDeps_[b] == a) {
                this.loadingDeps_.splice(b, 1);
                break;
            }
        for (b = 0; b < this.deferredQueue_.length; b++)
            if (this.deferredQueue_[b] == a.path) {
                this.deferredQueue_.splice(b, 1);
                break;
            }
        if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length)
            for (; this.deferredQueue_.length;)
                this.requested(this.deferredQueue_.shift(), !0);
        a.loaded();
    }, goog.DebugLoader_.prototype.areDepsLoaded_ = function (a) { for (var b = 0; b < a.length; b++) {
        var c = this.getPathFromDeps_(a[b]);
        if (!c || !(c in this.deferredCallbacks_ || goog.isProvided_(a[b])))
            return !1;
    } return !0; }, goog.DebugLoader_.prototype.getPathFromDeps_ =
        function (a) { return a in this.idToPath_ ? this.idToPath_[a] : a in this.dependencies_ ? a : null; }, goog.DebugLoader_.prototype.defer_ = function (a, b) { this.deferredCallbacks_[a.path] = b; this.deferredQueue_.push(a.path); }, goog.LoadController = function () { }, goog.LoadController.prototype.pause = function () { }, goog.LoadController.prototype.resume = function () { }, goog.LoadController.prototype.loaded = function () { }, goog.LoadController.prototype.pending = function () { }, goog.LoadController.prototype.registerEs6ModuleExports = function (a, b, c) { }, goog.LoadController.prototype.setModuleState = function (a) { }, goog.LoadController.prototype.clearModuleState = function () { }, goog.LoadController.prototype.defer = function (a) { }, goog.LoadController.prototype.areDepsLoaded = function () { }, goog.Dependency = function (a, b, c, d, e) { this.path = a; this.relativePath = b; this.provides = c; this.requires = d; this.loadFlags = e; this.loaded_ = !1; this.loadCallbacks_ = []; }, goog.Dependency.prototype.getPathName = function () {
        var a = this.path, b = a.indexOf("://");
        0 <= b && (a = a.substring(b + 3), b =
            a.indexOf("/"), 0 <= b && (a = a.substring(b + 1)));
        return a;
    }, goog.Dependency.prototype.onLoad = function (a) { this.loaded_ ? a() : this.loadCallbacks_.push(a); }, goog.Dependency.prototype.loaded = function () { this.loaded_ = !0; var a = this.loadCallbacks_; this.loadCallbacks_ = []; for (var b = 0; b < a.length; b++)
        a[b](); }, goog.Dependency.defer_ = !1, goog.Dependency.callbackMap_ = {}, goog.Dependency.registerCallback_ = function (a) { var b = Math.random().toString(32); goog.Dependency.callbackMap_[b] = a; return b; }, goog.Dependency.unregisterCallback_ =
        function (a) { delete goog.Dependency.callbackMap_[a]; }, goog.Dependency.callback_ = function (a, b) { if (a in goog.Dependency.callbackMap_) {
        for (var c = goog.Dependency.callbackMap_[a], d = [], e = 1; e < arguments.length; e++)
            d.push(arguments[e]);
        c.apply(void 0, d);
    }
    else
        throw Error("Callback key " + a + " does not exist (was base.js loaded more than once?)."); }, goog.Dependency.prototype.load = function (a) {
        if (goog.global.CLOSURE_IMPORT_SCRIPT)
            goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();
        else if (goog.inHtmlDocument_()) {
            var b = goog.global.document;
            if ("complete" == b.readyState && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
                if (/\bdeps.js$/.test(this.path)) {
                    a.loaded();
                    return;
                }
                throw Error('Cannot write "' + this.path + '" after document load');
            }
            if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
                var c = goog.Dependency.registerCallback_(function (b) { goog.DebugLoader_.IS_OLD_IE_ && "complete" != b.readyState || (goog.Dependency.unregisterCallback_(c), a.loaded()); }), d = !goog.DebugLoader_.IS_OLD_IE_ && goog.getScriptNonce() ?
                    ' nonce="' + goog.getScriptNonce() + '"' : "";
                d = '<script src="' + this.path + '" ' + (goog.DebugLoader_.IS_OLD_IE_ ? "onreadystatechange" : "onload") + "=\"goog.Dependency.callback_('" + c + '\', this)" type="text/javascript" ' + (goog.Dependency.defer_ ? "defer" : "") + d + ">\x3c/script>";
                b.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(d) : d);
            }
            else {
                var e = b.createElement("script");
                e.defer = goog.Dependency.defer_;
                e.async = !1;
                e.type = "text/javascript";
                (d = goog.getScriptNonce()) && e.setAttribute("nonce", d);
                goog.DebugLoader_.IS_OLD_IE_ ?
                    (a.pause(), e.onreadystatechange = function () { if ("loaded" == e.readyState || "complete" == e.readyState)
                        a.loaded(), a.resume(); }) : e.onload = function () { e.onload = null; a.loaded(); };
                e.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path;
                b.head.appendChild(e);
            }
        }
        else
            goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), "deps.js" == this.relativePath ? (goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),
                a.loaded()) : a.pause();
    }, goog.Es6ModuleDependency = function (a, b, c, d, e) { goog.Dependency.call(this, a, b, c, d, e); }, goog.inherits(goog.Es6ModuleDependency, goog.Dependency), goog.Es6ModuleDependency.prototype.load = function (a) {
        function b(a, b) { a = b ? '<script type="module" crossorigin>' + b + "\x3c/script>" : '<script type="module" crossorigin src="' + a + '">\x3c/script>'; d.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(a) : a); }
        function c(a, b) {
            var c = d.createElement("script");
            c.defer = !0;
            c.async = !1;
            c.type =
                "module";
            c.setAttribute("crossorigin", !0);
            var e = goog.getScriptNonce();
            e && c.setAttribute("nonce", e);
            b ? c.textContent = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(b) : b : c.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(a) : a;
            d.head.appendChild(c);
        }
        if (goog.global.CLOSURE_IMPORT_SCRIPT)
            goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();
        else if (goog.inHtmlDocument_()) {
            var d = goog.global.document, e = this;
            if (goog.isDocumentLoading_()) {
                var f = b;
                goog.Dependency.defer_ =
                    !0;
            }
            else
                f = c;
            var g = goog.Dependency.registerCallback_(function () { goog.Dependency.unregisterCallback_(g); a.setModuleState(goog.ModuleType.ES6); });
            f(void 0, 'goog.Dependency.callback_("' + g + '")');
            f(this.path, void 0);
            var h = goog.Dependency.registerCallback_(function (b) { goog.Dependency.unregisterCallback_(h); a.registerEs6ModuleExports(e.path, b, goog.moduleLoaderState_.moduleName); });
            f(void 0, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + h + '", m)');
            var k = goog.Dependency.registerCallback_(function () {
                goog.Dependency.unregisterCallback_(k);
                a.clearModuleState();
                a.loaded();
            });
            f(void 0, 'goog.Dependency.callback_("' + k + '")');
        }
        else
            goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), a.pause();
    }, goog.TransformedDependency = function (a, b, c, d, e) { goog.Dependency.call(this, a, b, c, d, e); this.contents_ = null; this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script")); }, goog.inherits(goog.TransformedDependency, goog.Dependency), goog.TransformedDependency.prototype.load = function (a) {
        function b() {
            e.contents_ =
                goog.loadFileSync_(e.path);
            e.contents_ && (e.contents_ = e.transform(e.contents_), e.contents_ && (e.contents_ += "\n//# sourceURL=" + e.path));
        }
        function c() {
            e.lazyFetch_ && b();
            if (e.contents_) {
                f && a.setModuleState(goog.ModuleType.ES6);
                try {
                    var c = e.contents_;
                    e.contents_ = null;
                    goog.globalEval(c);
                    if (f)
                        var d = goog.moduleLoaderState_.moduleName;
                }
                finally {
                    f && a.clearModuleState();
                }
                f && goog.global.$jscomp.require.ensure([e.getPathName()], function () {
                    a.registerEs6ModuleExports(e.path, goog.global.$jscomp.require(e.getPathName()), d);
                });
                a.loaded();
            }
        }
        function d() { var a = goog.global.document, b = goog.Dependency.registerCallback_(function () { goog.Dependency.unregisterCallback_(b); c(); }), d = '<script type="text/javascript">' + goog.protectScriptTag_('goog.Dependency.callback_("' + b + '");') + "\x3c/script>"; a.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(d) : d); }
        var e = this;
        if (goog.global.CLOSURE_IMPORT_SCRIPT)
            b(), this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_) ? (this.contents_ = null, a.loaded()) : a.pause();
        else {
            var f = this.loadFlags.module == goog.ModuleType.ES6;
            this.lazyFetch_ || b();
            var g = 1 < a.pending().length, h = g && goog.DebugLoader_.IS_OLD_IE_;
            g = goog.Dependency.defer_ && (g || goog.isDocumentLoading_());
            if (h || g)
                a.defer(function () { c(); });
            else {
                var k = goog.global.document;
                h = goog.inHtmlDocument_() && "ActiveXObject" in goog.global;
                if (f && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !h) {
                    goog.Dependency.defer_ = !0;
                    a.pause();
                    var l = k.onreadystatechange;
                    k.onreadystatechange = function () {
                        "interactive" == k.readyState && (k.onreadystatechange =
                            l, c(), a.resume());
                        goog.isFunction(l) && l.apply(void 0, arguments);
                    };
                }
                else
                    !goog.DebugLoader_.IS_OLD_IE_ && goog.inHtmlDocument_() && goog.isDocumentLoading_() ? d() : c();
            }
        }
    }, goog.TransformedDependency.prototype.transform = function (a) { }, goog.TranspiledDependency = function (a, b, c, d, e, f) { goog.TransformedDependency.call(this, a, b, c, d, e); this.transpiler = f; }, goog.inherits(goog.TranspiledDependency, goog.TransformedDependency), goog.TranspiledDependency.prototype.transform = function (a) { return this.transpiler.transpile(a, this.getPathName()); },
        goog.PreTranspiledEs6ModuleDependency = function (a, b, c, d, e) { goog.TransformedDependency.call(this, a, b, c, d, e); }, goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency), goog.PreTranspiledEs6ModuleDependency.prototype.transform = function (a) { return a; }, goog.GoogModuleDependency = function (a, b, c, d, e, f, g) { goog.TransformedDependency.call(this, a, b, c, d, e); this.needsTranspile_ = f; this.transpiler_ = g; }, goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency), goog.GoogModuleDependency.prototype.transform =
        function (a) { this.needsTranspile_ && (a = this.transpiler_.transpile(a, this.getPathName())); return goog.LOAD_MODULE_USING_EVAL && void 0 !== goog.global.JSON ? "goog.loadModule(" + goog.global.JSON.stringify(a + "\n//# sourceURL=" + this.path + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + a + "\n;return exports});\n//# sourceURL=" + this.path + "\n"; }, goog.DebugLoader_.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.DebugLoader_.prototype.addDependency = function (a, b, c, d) { b = b || []; a = a.replace(/\\/g, "/"); var e = goog.normalizePath_(goog.basePath + a); d && "boolean" !== typeof d || (d = d ? { module: goog.ModuleType.GOOG } : {}); c = this.factory_.createDependency(e, a, b, c, d, goog.transpiler_.needsTranspile(d.lang || "es3", d.module)); this.dependencies_[e] = c; for (c = 0; c < b.length; c++)
        this.idToPath_[b[c]] = e; this.idToPath_[a] = e; }, goog.DependencyFactory = function (a) { this.transpiler = a; }, goog.DependencyFactory.prototype.createDependency = function (a, b, c, d, e, f) {
        return e.module == goog.ModuleType.GOOG ? new goog.GoogModuleDependency(a, b, c, d, e, f, this.transpiler) : f ? new goog.TranspiledDependency(a, b, c, d, e, this.transpiler) : e.module == goog.ModuleType.ES6 ? "never" == goog.TRANSPILE && goog.ASSUME_ES_MODULES_TRANSPILED ? new goog.PreTranspiledEs6ModuleDependency(a, b, c, d, e) : new goog.Es6ModuleDependency(a, b, c, d, e) : new goog.Dependency(a, b, c, d, e);
    }, goog.debugLoader_ = new goog.DebugLoader_, goog.loadClosureDeps = function () { goog.debugLoader_.loadClosureDeps(); }, goog.setDependencyFactory = function (a) { goog.debugLoader_.setDependencyFactory(a); }, goog.global.CLOSURE_NO_DEPS ||
        goog.debugLoader_.loadClosureDeps(), goog.bootstrap = function (a, b) { goog.debugLoader_.bootstrap(a, b); });
    goog.TRUSTED_TYPES_POLICY_NAME = "";
    goog.identity_ = function (a) { return a; };
    goog.createTrustedTypesPolicy = function (a) { var b = null, c = goog.global.trustedTypes || goog.global.TrustedTypes; if (!c || !c.createPolicy)
        return b; try {
        b = c.createPolicy(a, { createHTML: goog.identity_, createScript: goog.identity_, createScriptURL: goog.identity_, createURL: goog.identity_ });
    }
    catch (d) {
        goog.logToConsole_(d.message);
    } return b; };
    goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
    goog.object = {};
    goog.object.is = function (a, b) { return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b; };
    goog.object.forEach = function (a, b, c) { for (var d in a)
        b.call(c, a[d], d, a); };
    goog.object.filter = function (a, b, c) { var d = {}, e; for (e in a)
        b.call(c, a[e], e, a) && (d[e] = a[e]); return d; };
    goog.object.map = function (a, b, c) { var d = {}, e; for (e in a)
        d[e] = b.call(c, a[e], e, a); return d; };
    goog.object.some = function (a, b, c) { for (var d in a)
        if (b.call(c, a[d], d, a))
            return !0; return !1; };
    goog.object.every = function (a, b, c) { for (var d in a)
        if (!b.call(c, a[d], d, a))
            return !1; return !0; };
    goog.object.getCount = function (a) { var b = 0, c; for (c in a)
        b++; return b; };
    goog.object.getAnyKey = function (a) { for (var b in a)
        return b; };
    goog.object.getAnyValue = function (a) { for (var b in a)
        return a[b]; };
    goog.object.contains = function (a, b) { return goog.object.containsValue(a, b); };
    goog.object.getValues = function (a) { var b = [], c = 0, d; for (d in a)
        b[c++] = a[d]; return b; };
    goog.object.getKeys = function (a) { var b = [], c = 0, d; for (d in a)
        b[c++] = d; return b; };
    goog.object.getValueByKeys = function (a, b) { var c = goog.isArrayLike(b), d = c ? b : arguments; for (c = c ? 0 : 1; c < d.length; c++) {
        if (null == a)
            return;
        a = a[d[c]];
    } return a; };
    goog.object.containsKey = function (a, b) { return null !== a && b in a; };
    goog.object.containsValue = function (a, b) { for (var c in a)
        if (a[c] == b)
            return !0; return !1; };
    goog.object.findKey = function (a, b, c) { for (var d in a)
        if (b.call(c, a[d], d, a))
            return d; };
    goog.object.findValue = function (a, b, c) { return (b = goog.object.findKey(a, b, c)) && a[b]; };
    goog.object.isEmpty = function (a) { for (var b in a)
        return !1; return !0; };
    goog.object.clear = function (a) { for (var b in a)
        delete a[b]; };
    goog.object.remove = function (a, b) { var c; (c = b in a) && delete a[b]; return c; };
    goog.object.add = function (a, b, c) { if (null !== a && b in a)
        throw Error('The object already contains the key "' + b + '"'); goog.object.set(a, b, c); };
    goog.object.get = function (a, b, c) { return null !== a && b in a ? a[b] : c; };
    goog.object.set = function (a, b, c) { a[b] = c; };
    goog.object.setIfUndefined = function (a, b, c) { return b in a ? a[b] : a[b] = c; };
    goog.object.setWithReturnValueIfNotSet = function (a, b, c) { if (b in a)
        return a[b]; c = c(); return a[b] = c; };
    goog.object.equals = function (a, b) { for (var c in a)
        if (!(c in b) || a[c] !== b[c])
            return !1; for (var d in b)
        if (!(d in a))
            return !1; return !0; };
    goog.object.clone = function (a) { var b = {}, c; for (c in a)
        b[c] = a[c]; return b; };
    goog.object.unsafeClone = function (a) { var b = goog.typeOf(a); if ("object" == b || "array" == b) {
        if (goog.isFunction(a.clone))
            return a.clone();
        b = "array" == b ? [] : {};
        for (var c in a)
            b[c] = goog.object.unsafeClone(a[c]);
        return b;
    } return a; };
    goog.object.transpose = function (a) { var b = {}, c; for (c in a)
        b[a[c]] = c; return b; };
    goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
    goog.object.extend = function (a, b) { for (var c, d, e = 1; e < arguments.length; e++) {
        d = arguments[e];
        for (c in d)
            a[c] = d[c];
        for (var f = 0; f < goog.object.PROTOTYPE_FIELDS_.length; f++)
            c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    } };
    goog.object.create = function (a) { var b = arguments.length; if (1 == b && Array.isArray(arguments[0]))
        return goog.object.create.apply(null, arguments[0]); if (b % 2)
        throw Error("Uneven number of arguments"); for (var c = {}, d = 0; d < b; d += 2)
        c[arguments[d]] = arguments[d + 1]; return c; };
    goog.object.createSet = function (a) { var b = arguments.length; if (1 == b && Array.isArray(arguments[0]))
        return goog.object.createSet.apply(null, arguments[0]); for (var c = {}, d = 0; d < b; d++)
        c[arguments[d]] = !0; return c; };
    goog.object.createImmutableView = function (a) { var b = a; Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b)); return b; };
    goog.object.isImmutableView = function (a) { return !!Object.isFrozen && Object.isFrozen(a); };
    goog.object.getAllPropertyNames = function (a, b, c) { if (!a)
        return []; if (!Object.getOwnPropertyNames || !Object.getPrototypeOf)
        return goog.object.getKeys(a); for (var d = {}; a && (a !== Object.prototype || b) && (a !== Function.prototype || c);) {
        for (var e = Object.getOwnPropertyNames(a), f = 0; f < e.length; f++)
            d[e[f]] = !0;
        a = Object.getPrototypeOf(a);
    } return goog.object.getKeys(d); };
    goog.object.getSuperClass = function (a) { return (a = Object.getPrototypeOf(a.prototype)) && a.constructor; };
    var jspb = { asserts: {} };
    jspb.asserts.doAssertFailure = function (a, b, c, d) { var e = "Assertion failed"; if (c) {
        e += ": " + c;
        var f = d;
    }
    else
        a && (e += ": " + a, f = b); throw Error("" + e, f || []); };
    jspb.asserts.assert = function (a, b, c) { for (var d = [], e = 2; e < arguments.length; ++e)
        d[e - 2] = arguments[e]; a || jspb.asserts.doAssertFailure("", null, b, d); return a; };
    jspb.asserts.assertString = function (a, b, c) { for (var d = [], e = 2; e < arguments.length; ++e)
        d[e - 2] = arguments[e]; "string" !== typeof a && jspb.asserts.doAssertFailure("Expected string but got %s: %s.", [goog.typeOf(a), a], b, d); return a; };
    jspb.asserts.assertArray = function (a, b, c) { for (var d = [], e = 2; e < arguments.length; ++e)
        d[e - 2] = arguments[e]; Array.isArray(a) || jspb.asserts.doAssertFailure("Expected array but got %s: %s.", [goog.typeOf(a), a], b, d); return a; };
    jspb.asserts.fail = function (a, b) { for (var c = [], d = 1; d < arguments.length; ++d)
        c[d - 1] = arguments[d]; throw Error("Failure" + (a ? ": " + a : ""), c); };
    jspb.asserts.assertInstanceof = function (a, b, c, d) { for (var e = [], f = 3; f < arguments.length; ++f)
        e[f - 3] = arguments[f]; a instanceof b || jspb.asserts.doAssertFailure("Expected instanceof %s but got %s.", [jspb.asserts.getType(b), jspb.asserts.getType(a)], c, e); return a; };
    jspb.asserts.getType = function (a) { return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a; };
    jspb.BinaryConstants = {};
    jspb.ConstBinaryMessage = function () { };
    jspb.BinaryMessage = function () { };
    jspb.BinaryConstants.FieldType = { INVALID: -1, DOUBLE: 1, FLOAT: 2, INT64: 3, UINT64: 4, INT32: 5, FIXED64: 6, FIXED32: 7, BOOL: 8, STRING: 9, GROUP: 10, MESSAGE: 11, BYTES: 12, UINT32: 13, ENUM: 14, SFIXED32: 15, SFIXED64: 16, SINT32: 17, SINT64: 18, FHASH64: 30, VHASH64: 31 };
    jspb.BinaryConstants.WireType = { INVALID: -1, VARINT: 0, FIXED64: 1, DELIMITED: 2, START_GROUP: 3, END_GROUP: 4, FIXED32: 5 };
    jspb.BinaryConstants.FieldTypeToWireType = function (a) { var b = jspb.BinaryConstants.FieldType, c = jspb.BinaryConstants.WireType; switch (a) {
        case b.INT32:
        case b.INT64:
        case b.UINT32:
        case b.UINT64:
        case b.SINT32:
        case b.SINT64:
        case b.BOOL:
        case b.ENUM:
        case b.VHASH64: return c.VARINT;
        case b.DOUBLE:
        case b.FIXED64:
        case b.SFIXED64:
        case b.FHASH64: return c.FIXED64;
        case b.STRING:
        case b.MESSAGE:
        case b.BYTES: return c.DELIMITED;
        case b.FLOAT:
        case b.FIXED32:
        case b.SFIXED32: return c.FIXED32;
        default: return c.INVALID;
    } };
    jspb.BinaryConstants.INVALID_FIELD_NUMBER = -1;
    jspb.BinaryConstants.FLOAT32_EPS = 1.401298464324817E-45;
    jspb.BinaryConstants.FLOAT32_MIN = 1.1754943508222875E-38;
    jspb.BinaryConstants.FLOAT32_MAX = 3.4028234663852886E38;
    jspb.BinaryConstants.FLOAT64_EPS = 4.9E-324;
    jspb.BinaryConstants.FLOAT64_MIN = 2.2250738585072014E-308;
    jspb.BinaryConstants.FLOAT64_MAX = 1.7976931348623157E308;
    jspb.BinaryConstants.TWO_TO_20 = 1048576;
    jspb.BinaryConstants.TWO_TO_23 = 8388608;
    jspb.BinaryConstants.TWO_TO_31 = 2147483648;
    jspb.BinaryConstants.TWO_TO_32 = 4294967296;
    jspb.BinaryConstants.TWO_TO_52 = 4503599627370496;
    jspb.BinaryConstants.TWO_TO_63 = 0x7fffffffffffffff;
    jspb.BinaryConstants.TWO_TO_64 = 1.8446744073709552E19;
    jspb.BinaryConstants.ZERO_HASH = "\x00\x00\x00\x00\x00\x00\x00\x00";
    goog.debug = {};
    goog.debug.Error = function (a) { if (Error.captureStackTrace)
        Error.captureStackTrace(this, goog.debug.Error);
    else {
        var b = Error().stack;
        b && (this.stack = b);
    } a && (this.message = String(a)); this.reportErrorToServer = !0; };
    goog.inherits(goog.debug.Error, Error);
    goog.debug.Error.prototype.name = "CustomError";
    goog.dom = {};
    goog.dom.NodeType = { ELEMENT: 1, ATTRIBUTE: 2, TEXT: 3, CDATA_SECTION: 4, ENTITY_REFERENCE: 5, ENTITY: 6, PROCESSING_INSTRUCTION: 7, COMMENT: 8, DOCUMENT: 9, DOCUMENT_TYPE: 10, DOCUMENT_FRAGMENT: 11, NOTATION: 12 };
    goog.asserts = {};
    goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
    goog.asserts.AssertionError = function (a, b) { goog.debug.Error.call(this, goog.asserts.subs_(a, b)); this.messagePattern = a; };
    goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
    goog.asserts.AssertionError.prototype.name = "AssertionError";
    goog.asserts.DEFAULT_ERROR_HANDLER = function (a) { throw a; };
    goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
    goog.asserts.subs_ = function (a, b) { a = a.split("%s"); for (var c = "", d = a.length - 1, e = 0; e < d; e++)
        c += a[e] + (e < b.length ? b[e] : "%s"); return c + a[d]; };
    goog.asserts.doAssertFailure_ = function (a, b, c, d) { var e = "Assertion failed"; if (c) {
        e += ": " + c;
        var f = d;
    }
    else
        a && (e += ": " + a, f = b); a = new goog.asserts.AssertionError("" + e, f || []); goog.asserts.errorHandler_(a); };
    goog.asserts.setErrorHandler = function (a) { goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a); };
    goog.asserts.assert = function (a, b, c) { goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_("", null, b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.assertExists = function (a, b, c) { goog.asserts.ENABLE_ASSERTS && null == a && goog.asserts.doAssertFailure_("Expected to exist: %s.", [a], b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.fail = function (a, b) { goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1))); };
    goog.asserts.assertNumber = function (a, b, c) { goog.asserts.ENABLE_ASSERTS && "number" !== typeof a && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.assertString = function (a, b, c) { goog.asserts.ENABLE_ASSERTS && "string" !== typeof a && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.assertFunction = function (a, b, c) { goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.assertObject = function (a, b, c) { goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.assertArray = function (a, b, c) { goog.asserts.ENABLE_ASSERTS && !Array.isArray(a) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.assertBoolean = function (a, b, c) { goog.asserts.ENABLE_ASSERTS && "boolean" !== typeof a && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.assertElement = function (a, b, c) { !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.assertInstanceof = function (a, b, c, d) { !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3)); return a; };
    goog.asserts.assertFinite = function (a, b, c) { !goog.asserts.ENABLE_ASSERTS || "number" == typeof a && isFinite(a) || goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [a], b, Array.prototype.slice.call(arguments, 2)); return a; };
    goog.asserts.assertObjectPrototypeIsIntact = function () { for (var a in Object.prototype)
        goog.asserts.fail(a + " should not be enumerable in Object.prototype."); };
    goog.asserts.getType_ = function (a) { return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a; };
    goog.array = {};
    goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
    goog.array.ASSUME_NATIVE_FUNCTIONS = 2012 < goog.FEATURESET_YEAR;
    goog.array.peek = function (a) { return a[a.length - 1]; };
    goog.array.last = goog.array.peek;
    goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function (a, b, c) { goog.asserts.assert(null != a.length); return Array.prototype.indexOf.call(a, b, c); } : function (a, b, c) { c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c; if ("string" === typeof a)
        return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, c); for (; c < a.length; c++)
        if (c in a && a[c] === b)
            return c; return -1; };
    goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function (a, b, c) { goog.asserts.assert(null != a.length); return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c); } : function (a, b, c) { c = null == c ? a.length - 1 : c; 0 > c && (c = Math.max(0, a.length + c)); if ("string" === typeof a)
        return "string" !== typeof b || 1 != b.length ? -1 : a.lastIndexOf(b, c); for (; 0 <= c; c--)
        if (c in a && a[c] === b)
            return c; return -1; };
    goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function (a, b, c) { goog.asserts.assert(null != a.length); Array.prototype.forEach.call(a, b, c); } : function (a, b, c) { for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++)
        f in e && b.call(c, e[f], f, a); };
    goog.array.forEachRight = function (a, b, c) { var d = a.length, e = "string" === typeof a ? a.split("") : a; for (--d; 0 <= d; --d)
        d in e && b.call(c, e[d], d, a); };
    goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function (a, b, c) { goog.asserts.assert(null != a.length); return Array.prototype.filter.call(a, b, c); } : function (a, b, c) { for (var d = a.length, e = [], f = 0, g = "string" === typeof a ? a.split("") : a, h = 0; h < d; h++)
        if (h in g) {
            var k = g[h];
            b.call(c, k, h, a) && (e[f++] = k);
        } return e; };
    goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function (a, b, c) { goog.asserts.assert(null != a.length); return Array.prototype.map.call(a, b, c); } : function (a, b, c) { for (var d = a.length, e = Array(d), f = "string" === typeof a ? a.split("") : a, g = 0; g < d; g++)
        g in f && (e[g] = b.call(c, f[g], g, a)); return e; };
    goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function (a, b, c, d) { goog.asserts.assert(null != a.length); d && (b = goog.bind(b, d)); return Array.prototype.reduce.call(a, b, c); } : function (a, b, c, d) { var e = c; goog.array.forEach(a, function (c, g) { e = b.call(d, e, c, g, a); }); return e; };
    goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function (a, b, c, d) { goog.asserts.assert(null != a.length); goog.asserts.assert(null != b); d && (b = goog.bind(b, d)); return Array.prototype.reduceRight.call(a, b, c); } : function (a, b, c, d) { var e = c; goog.array.forEachRight(a, function (c, g) { e = b.call(d, e, c, g, a); }); return e; };
    goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function (a, b, c) { goog.asserts.assert(null != a.length); return Array.prototype.some.call(a, b, c); } : function (a, b, c) { for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++)
        if (f in e && b.call(c, e[f], f, a))
            return !0; return !1; };
    goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function (a, b, c) { goog.asserts.assert(null != a.length); return Array.prototype.every.call(a, b, c); } : function (a, b, c) { for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++)
        if (f in e && !b.call(c, e[f], f, a))
            return !1; return !0; };
    goog.array.count = function (a, b, c) { var d = 0; goog.array.forEach(a, function (a, f, g) { b.call(c, a, f, g) && ++d; }, c); return d; };
    goog.array.find = function (a, b, c) { b = goog.array.findIndex(a, b, c); return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b]; };
    goog.array.findIndex = function (a, b, c) { for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++)
        if (f in e && b.call(c, e[f], f, a))
            return f; return -1; };
    goog.array.findRight = function (a, b, c) { b = goog.array.findIndexRight(a, b, c); return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b]; };
    goog.array.findIndexRight = function (a, b, c) { var d = a.length, e = "string" === typeof a ? a.split("") : a; for (--d; 0 <= d; d--)
        if (d in e && b.call(c, e[d], d, a))
            return d; return -1; };
    goog.array.contains = function (a, b) { return 0 <= goog.array.indexOf(a, b); };
    goog.array.isEmpty = function (a) { return 0 == a.length; };
    goog.array.clear = function (a) { if (!Array.isArray(a))
        for (var b = a.length - 1; 0 <= b; b--)
            delete a[b]; a.length = 0; };
    goog.array.insert = function (a, b) { goog.array.contains(a, b) || a.push(b); };
    goog.array.insertAt = function (a, b, c) { goog.array.splice(a, c, 0, b); };
    goog.array.insertArrayAt = function (a, b, c) { goog.partial(goog.array.splice, a, c, 0).apply(null, b); };
    goog.array.insertBefore = function (a, b, c) { var d; 2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d); };
    goog.array.remove = function (a, b) { b = goog.array.indexOf(a, b); var c; (c = 0 <= b) && goog.array.removeAt(a, b); return c; };
    goog.array.removeLast = function (a, b) { b = goog.array.lastIndexOf(a, b); return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1; };
    goog.array.removeAt = function (a, b) { goog.asserts.assert(null != a.length); return 1 == Array.prototype.splice.call(a, b, 1).length; };
    goog.array.removeIf = function (a, b, c) { b = goog.array.findIndex(a, b, c); return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1; };
    goog.array.removeAllIf = function (a, b, c) { var d = 0; goog.array.forEachRight(a, function (e, f) { b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++; }); return d; };
    goog.array.concat = function (a) { return Array.prototype.concat.apply([], arguments); };
    goog.array.join = function (a) { return Array.prototype.concat.apply([], arguments); };
    goog.array.toArray = function (a) { var b = a.length; if (0 < b) {
        for (var c = Array(b), d = 0; d < b; d++)
            c[d] = a[d];
        return c;
    } return []; };
    goog.array.clone = goog.array.toArray;
    goog.array.extend = function (a, b) { for (var c = 1; c < arguments.length; c++) {
        var d = arguments[c];
        if (goog.isArrayLike(d)) {
            var e = a.length || 0, f = d.length || 0;
            a.length = e + f;
            for (var g = 0; g < f; g++)
                a[e + g] = d[g];
        }
        else
            a.push(d);
    } };
    goog.array.splice = function (a, b, c, d) { goog.asserts.assert(null != a.length); return Array.prototype.splice.apply(a, goog.array.slice(arguments, 1)); };
    goog.array.slice = function (a, b, c) { goog.asserts.assert(null != a.length); return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c); };
    goog.array.removeDuplicates = function (a, b, c) { b = b || a; var d = function (a) { return goog.isObject(a) ? "o" + goog.getUid(a) : (typeof a).charAt(0) + a; }; c = c || d; d = {}; for (var e = 0, f = 0; f < a.length;) {
        var g = a[f++], h = c(g);
        Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);
    } b.length = e; };
    goog.array.binarySearch = function (a, b, c) { return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b); };
    goog.array.binarySelect = function (a, b, c) { return goog.array.binarySearch_(a, b, !0, void 0, c); };
    goog.array.binarySearch_ = function (a, b, c, d, e) { for (var f = 0, g = a.length, h; f < g;) {
        var k = f + (g - f >>> 1);
        var l = c ? b.call(e, a[k], k, a) : b(d, a[k]);
        0 < l ? f = k + 1 : (g = k, h = !l);
    } return h ? f : -f - 1; };
    goog.array.sort = function (a, b) { a.sort(b || goog.array.defaultCompare); };
    goog.array.stableSort = function (a, b) { for (var c = Array(a.length), d = 0; d < a.length; d++)
        c[d] = { index: d, value: a[d] }; var e = b || goog.array.defaultCompare; goog.array.sort(c, function (a, b) { return e(a.value, b.value) || a.index - b.index; }); for (d = 0; d < a.length; d++)
        a[d] = c[d].value; };
    goog.array.sortByKey = function (a, b, c) { var d = c || goog.array.defaultCompare; goog.array.sort(a, function (a, c) { return d(b(a), b(c)); }); };
    goog.array.sortObjectsByKey = function (a, b, c) { goog.array.sortByKey(a, function (a) { return a[b]; }, c); };
    goog.array.isSorted = function (a, b, c) { b = b || goog.array.defaultCompare; for (var d = 1; d < a.length; d++) {
        var e = b(a[d - 1], a[d]);
        if (0 < e || 0 == e && c)
            return !1;
    } return !0; };
    goog.array.equals = function (a, b, c) { if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length)
        return !1; var d = a.length; c = c || goog.array.defaultCompareEquality; for (var e = 0; e < d; e++)
        if (!c(a[e], b[e]))
            return !1; return !0; };
    goog.array.compare3 = function (a, b, c) { c = c || goog.array.defaultCompare; for (var d = Math.min(a.length, b.length), e = 0; e < d; e++) {
        var f = c(a[e], b[e]);
        if (0 != f)
            return f;
    } return goog.array.defaultCompare(a.length, b.length); };
    goog.array.defaultCompare = function (a, b) { return a > b ? 1 : a < b ? -1 : 0; };
    goog.array.inverseDefaultCompare = function (a, b) { return -goog.array.defaultCompare(a, b); };
    goog.array.defaultCompareEquality = function (a, b) { return a === b; };
    goog.array.binaryInsert = function (a, b, c) { c = goog.array.binarySearch(a, b, c); return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1; };
    goog.array.binaryRemove = function (a, b, c) { b = goog.array.binarySearch(a, b, c); return 0 <= b ? goog.array.removeAt(a, b) : !1; };
    goog.array.bucket = function (a, b, c) { for (var d = {}, e = 0; e < a.length; e++) {
        var f = a[e], g = b.call(c, f, e, a);
        void 0 !== g && (d[g] || (d[g] = [])).push(f);
    } return d; };
    goog.array.toObject = function (a, b, c) { var d = {}; goog.array.forEach(a, function (e, f) { d[b.call(c, e, f, a)] = e; }); return d; };
    goog.array.range = function (a, b, c) { var d = [], e = 0, f = a; c = c || 1; void 0 !== b && (e = a, f = b); if (0 > c * (f - e))
        return []; if (0 < c)
        for (a = e; a < f; a += c)
            d.push(a);
    else
        for (a = e; a > f; a += c)
            d.push(a); return d; };
    goog.array.repeat = function (a, b) { for (var c = [], d = 0; d < b; d++)
        c[d] = a; return c; };
    goog.array.flatten = function (a) { for (var b = [], c = 0; c < arguments.length; c++) {
        var d = arguments[c];
        if (Array.isArray(d))
            for (var e = 0; e < d.length; e += 8192) {
                var f = goog.array.slice(d, e, e + 8192);
                f = goog.array.flatten.apply(null, f);
                for (var g = 0; g < f.length; g++)
                    b.push(f[g]);
            }
        else
            b.push(d);
    } return b; };
    goog.array.rotate = function (a, b) { goog.asserts.assert(null != a.length); a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b))); return a; };
    goog.array.moveItem = function (a, b, c) { goog.asserts.assert(0 <= b && b < a.length); goog.asserts.assert(0 <= c && c < a.length); b = Array.prototype.splice.call(a, b, 1); Array.prototype.splice.call(a, c, 0, b[0]); };
    goog.array.zip = function (a) { if (!arguments.length)
        return []; for (var b = [], c = arguments[0].length, d = 1; d < arguments.length; d++)
        arguments[d].length < c && (c = arguments[d].length); for (d = 0; d < c; d++) {
        for (var e = [], f = 0; f < arguments.length; f++)
            e.push(arguments[f][d]);
        b.push(e);
    } return b; };
    goog.array.shuffle = function (a, b) { b = b || Math.random; for (var c = a.length - 1; 0 < c; c--) {
        var d = Math.floor(b() * (c + 1)), e = a[c];
        a[c] = a[d];
        a[d] = e;
    } };
    goog.array.copyByIndex = function (a, b) { var c = []; goog.array.forEach(b, function (b) { c.push(a[b]); }); return c; };
    goog.array.concatMap = function (a, b, c) { return goog.array.concat.apply([], goog.array.map(a, b, c)); };
    goog.crypt = {};
    goog.crypt.stringToByteArray = function (a) { for (var b = [], c = 0, d = 0; d < a.length; d++) {
        var e = a.charCodeAt(d);
        255 < e && (b[c++] = e & 255, e >>= 8);
        b[c++] = e;
    } return b; };
    goog.crypt.byteArrayToString = function (a) { if (8192 >= a.length)
        return String.fromCharCode.apply(null, a); for (var b = "", c = 0; c < a.length; c += 8192) {
        var d = goog.array.slice(a, c, c + 8192);
        b += String.fromCharCode.apply(null, d);
    } return b; };
    goog.crypt.byteArrayToHex = function (a, b) { return goog.array.map(a, function (a) { a = a.toString(16); return 1 < a.length ? a : "0" + a; }).join(b || ""); };
    goog.crypt.hexToByteArray = function (a) { goog.asserts.assert(0 == a.length % 2, "Key string length must be multiple of 2"); for (var b = [], c = 0; c < a.length; c += 2)
        b.push(parseInt(a.substring(c, c + 2), 16)); return b; };
    goog.crypt.stringToUtf8ByteArray = function (a) { for (var b = [], c = 0, d = 0; d < a.length; d++) {
        var e = a.charCodeAt(d);
        128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (55296 == (e & 64512) && d + 1 < a.length && 56320 == (a.charCodeAt(d + 1) & 64512) ? (e = 65536 + ((e & 1023) << 10) + (a.charCodeAt(++d) & 1023), b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128) : b[c++] = e >> 12 | 224, b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);
    } return b; };
    goog.crypt.utf8ByteArrayToString = function (a) { for (var b = [], c = 0, d = 0; c < a.length;) {
        var e = a[c++];
        if (128 > e)
            b[d++] = String.fromCharCode(e);
        else if (191 < e && 224 > e) {
            var f = a[c++];
            b[d++] = String.fromCharCode((e & 31) << 6 | f & 63);
        }
        else if (239 < e && 365 > e) {
            f = a[c++];
            var g = a[c++], h = a[c++];
            e = ((e & 7) << 18 | (f & 63) << 12 | (g & 63) << 6 | h & 63) - 65536;
            b[d++] = String.fromCharCode(55296 + (e >> 10));
            b[d++] = String.fromCharCode(56320 + (e & 1023));
        }
        else
            f = a[c++], g = a[c++], b[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63);
    } return b.join(""); };
    goog.crypt.xorByteArray = function (a, b) { goog.asserts.assert(a.length == b.length, "XOR array lengths must match"); for (var c = [], d = 0; d < a.length; d++)
        c.push(a[d] ^ b[d]); return c; };
    goog.dom.asserts = {};
    goog.dom.asserts.assertIsLocation = function (a) { if (goog.asserts.ENABLE_ASSERTS) {
        var b = goog.dom.asserts.getWindow_(a);
        b && (!a || !(a instanceof b.Location) && a instanceof b.Element) && goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(a));
    } return a; };
    goog.dom.asserts.assertIsElementType_ = function (a, b) { if (goog.asserts.ENABLE_ASSERTS) {
        var c = goog.dom.asserts.getWindow_(a);
        c && "undefined" != typeof c[b] && (a && (a instanceof c[b] || !(a instanceof c.Location || a instanceof c.Element)) || goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s", b, goog.dom.asserts.debugStringForType_(a)));
    } return a; };
    goog.dom.asserts.assertIsHTMLAnchorElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLAnchorElement"); };
    goog.dom.asserts.assertIsHTMLButtonElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLButtonElement"); };
    goog.dom.asserts.assertIsHTMLLinkElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLLinkElement"); };
    goog.dom.asserts.assertIsHTMLImageElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLImageElement"); };
    goog.dom.asserts.assertIsHTMLAudioElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLAudioElement"); };
    goog.dom.asserts.assertIsHTMLVideoElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLVideoElement"); };
    goog.dom.asserts.assertIsHTMLInputElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLInputElement"); };
    goog.dom.asserts.assertIsHTMLTextAreaElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLTextAreaElement"); };
    goog.dom.asserts.assertIsHTMLCanvasElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLCanvasElement"); };
    goog.dom.asserts.assertIsHTMLEmbedElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLEmbedElement"); };
    goog.dom.asserts.assertIsHTMLFormElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLFormElement"); };
    goog.dom.asserts.assertIsHTMLFrameElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLFrameElement"); };
    goog.dom.asserts.assertIsHTMLIFrameElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLIFrameElement"); };
    goog.dom.asserts.assertIsHTMLObjectElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLObjectElement"); };
    goog.dom.asserts.assertIsHTMLScriptElement = function (a) { return goog.dom.asserts.assertIsElementType_(a, "HTMLScriptElement"); };
    goog.dom.asserts.debugStringForType_ = function (a) { if (goog.isObject(a))
        try {
            return a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a);
        }
        catch (b) {
            return "<object could not be stringified>";
        }
    else
        return void 0 === a ? "undefined" : null === a ? "null" : typeof a; };
    goog.dom.asserts.getWindow_ = function (a) { try {
        var b = a && a.ownerDocument, c = b && (b.defaultView || b.parentWindow);
        c = c || goog.global;
        if (c.Element && c.Location)
            return c;
    }
    catch (d) { } return null; };
    goog.functions = {};
    goog.functions.constant = function (a) { return function () { return a; }; };
    goog.functions.FALSE = function () { return !1; };
    goog.functions.TRUE = function () { return !0; };
    goog.functions.NULL = function () { return null; };
    goog.functions.identity = function (a, b) { return a; };
    goog.functions.error = function (a) { return function () { throw Error(a); }; };
    goog.functions.fail = function (a) { return function () { throw a; }; };
    goog.functions.lock = function (a, b) { b = b || 0; return function () { return a.apply(this, Array.prototype.slice.call(arguments, 0, b)); }; };
    goog.functions.nth = function (a) { return function () { return arguments[a]; }; };
    goog.functions.partialRight = function (a, b) { var c = Array.prototype.slice.call(arguments, 1); return function () { var b = Array.prototype.slice.call(arguments); b.push.apply(b, c); return a.apply(this, b); }; };
    goog.functions.withReturnValue = function (a, b) { return goog.functions.sequence(a, goog.functions.constant(b)); };
    goog.functions.equalTo = function (a, b) { return function (c) { return b ? a == c : a === c; }; };
    goog.functions.compose = function (a, b) { var c = arguments, d = c.length; return function () { var a; d && (a = c[d - 1].apply(this, arguments)); for (var b = d - 2; 0 <= b; b--)
        a = c[b].call(this, a); return a; }; };
    goog.functions.sequence = function (a) { var b = arguments, c = b.length; return function () { for (var a, e = 0; e < c; e++)
        a = b[e].apply(this, arguments); return a; }; };
    goog.functions.and = function (a) { var b = arguments, c = b.length; return function () { for (var a = 0; a < c; a++)
        if (!b[a].apply(this, arguments))
            return !1; return !0; }; };
    goog.functions.or = function (a) { var b = arguments, c = b.length; return function () { for (var a = 0; a < c; a++)
        if (b[a].apply(this, arguments))
            return !0; return !1; }; };
    goog.functions.not = function (a) { return function () { return !a.apply(this, arguments); }; };
    goog.functions.create = function (a, b) { var c = function () { }; c.prototype = a.prototype; c = new c; a.apply(c, Array.prototype.slice.call(arguments, 1)); return c; };
    goog.functions.CACHE_RETURN_VALUE = !0;
    goog.functions.cacheReturnValue = function (a) { var b = !1, c; return function () { if (!goog.functions.CACHE_RETURN_VALUE)
        return a(); b || (c = a(), b = !0); return c; }; };
    goog.functions.once = function (a) { var b = a; return function () { if (b) {
        var a = b;
        b = null;
        a();
    } }; };
    goog.functions.debounce = function (a, b, c) { var d = 0; return function (e) { goog.global.clearTimeout(d); var f = arguments; d = goog.global.setTimeout(function () { a.apply(c, f); }, b); }; };
    goog.functions.throttle = function (a, b, c) { var d = 0, e = !1, f = [], g = function () { d = 0; e && (e = !1, h()); }, h = function () { d = goog.global.setTimeout(g, b); a.apply(c, f); }; return function (a) { f = arguments; d ? e = !0 : h(); }; };
    goog.functions.rateLimit = function (a, b, c) { var d = 0, e = function () { d = 0; }; return function (f) { d || (d = goog.global.setTimeout(e, b), a.apply(c, arguments)); }; };
    goog.dom.HtmlElement = function () { };
    goog.dom.TagName = function (a) { this.tagName_ = a; };
    goog.dom.TagName.prototype.toString = function () { return this.tagName_; };
    goog.dom.TagName.A = new goog.dom.TagName("A");
    goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
    goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
    goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
    goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
    goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
    goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
    goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
    goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
    goog.dom.TagName.B = new goog.dom.TagName("B");
    goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
    goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
    goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
    goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
    goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
    goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
    goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
    goog.dom.TagName.BR = new goog.dom.TagName("BR");
    goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
    goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
    goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
    goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
    goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
    goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
    goog.dom.TagName.COL = new goog.dom.TagName("COL");
    goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
    goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
    goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
    goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
    goog.dom.TagName.DD = new goog.dom.TagName("DD");
    goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
    goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
    goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
    goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
    goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
    goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
    goog.dom.TagName.DL = new goog.dom.TagName("DL");
    goog.dom.TagName.DT = new goog.dom.TagName("DT");
    goog.dom.TagName.EM = new goog.dom.TagName("EM");
    goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
    goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
    goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
    goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
    goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
    goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
    goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
    goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
    goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
    goog.dom.TagName.H1 = new goog.dom.TagName("H1");
    goog.dom.TagName.H2 = new goog.dom.TagName("H2");
    goog.dom.TagName.H3 = new goog.dom.TagName("H3");
    goog.dom.TagName.H4 = new goog.dom.TagName("H4");
    goog.dom.TagName.H5 = new goog.dom.TagName("H5");
    goog.dom.TagName.H6 = new goog.dom.TagName("H6");
    goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
    goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
    goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
    goog.dom.TagName.HR = new goog.dom.TagName("HR");
    goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
    goog.dom.TagName.I = new goog.dom.TagName("I");
    goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
    goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
    goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
    goog.dom.TagName.INS = new goog.dom.TagName("INS");
    goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
    goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
    goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
    goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
    goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
    goog.dom.TagName.LI = new goog.dom.TagName("LI");
    goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
    goog.dom.TagName.MAIN = new goog.dom.TagName("MAIN");
    goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
    goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
    goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
    goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
    goog.dom.TagName.MENUITEM = new goog.dom.TagName("MENUITEM");
    goog.dom.TagName.META = new goog.dom.TagName("META");
    goog.dom.TagName.METER = new goog.dom.TagName("METER");
    goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
    goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
    goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
    goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
    goog.dom.TagName.OL = new goog.dom.TagName("OL");
    goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
    goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
    goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
    goog.dom.TagName.P = new goog.dom.TagName("P");
    goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
    goog.dom.TagName.PICTURE = new goog.dom.TagName("PICTURE");
    goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
    goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
    goog.dom.TagName.Q = new goog.dom.TagName("Q");
    goog.dom.TagName.RP = new goog.dom.TagName("RP");
    goog.dom.TagName.RT = new goog.dom.TagName("RT");
    goog.dom.TagName.RTC = new goog.dom.TagName("RTC");
    goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
    goog.dom.TagName.S = new goog.dom.TagName("S");
    goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
    goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
    goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
    goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
    goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
    goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
    goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
    goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
    goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
    goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
    goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
    goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
    goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
    goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
    goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
    goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
    goog.dom.TagName.TD = new goog.dom.TagName("TD");
    goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
    goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
    goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
    goog.dom.TagName.TH = new goog.dom.TagName("TH");
    goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
    goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
    goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
    goog.dom.TagName.TR = new goog.dom.TagName("TR");
    goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
    goog.dom.TagName.TT = new goog.dom.TagName("TT");
    goog.dom.TagName.U = new goog.dom.TagName("U");
    goog.dom.TagName.UL = new goog.dom.TagName("UL");
    goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
    goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
    goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
    goog.dom.tags = {};
    goog.dom.tags.VOID_TAGS_ = { area: !0, base: !0, br: !0, col: !0, command: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 };
    goog.dom.tags.isVoidTag = function (a) { return !0 === goog.dom.tags.VOID_TAGS_[a]; };
    goog.html = {};
    goog.html.trustedtypes = {};
    goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html") : null;
    goog.string = {};
    goog.string.TypedString = function () { };
    goog.string.Const = function (a, b) { this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = a === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && b || ""; this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_; };
    goog.string.Const.prototype.implementsGoogStringTypedString = !0;
    goog.string.Const.prototype.getTypedStringValue = function () { return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_; };
    goog.DEBUG && (goog.string.Const.prototype.toString = function () { return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}"; });
    goog.string.Const.unwrap = function (a) { if (a instanceof goog.string.Const && a.constructor === goog.string.Const && a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_)
        return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_; goog.asserts.fail("expected object of type Const, got '" + a + "'"); return "type_error:Const"; };
    goog.string.Const.from = function (a) { return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, a); };
    goog.string.Const.TYPE_MARKER_ = {};
    goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
    goog.string.Const.EMPTY = goog.string.Const.from("");
    goog.html.SafeScript = function () { this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = ""; this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_; };
    goog.html.SafeScript.prototype.implementsGoogStringTypedString = !0;
    goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeScript.fromConstant = function (a) { a = goog.string.Const.unwrap(a); return 0 === a.length ? goog.html.SafeScript.EMPTY : goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeScript.fromConstantAndArgs = function (a, b) { for (var c = [], d = 1; d < arguments.length; d++)
        c.push(goog.html.SafeScript.stringify_(arguments[d])); return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("(" + goog.string.Const.unwrap(a) + ")(" + c.join(", ") + ");"); };
    goog.html.SafeScript.fromJson = function (a) { return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(a)); };
    goog.html.SafeScript.prototype.getTypedStringValue = function () { return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString(); };
    goog.DEBUG && (goog.html.SafeScript.prototype.toString = function () { return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}"; });
    goog.html.SafeScript.unwrap = function (a) { return goog.html.SafeScript.unwrapTrustedScript(a).toString(); };
    goog.html.SafeScript.unwrapTrustedScript = function (a) { if (a instanceof goog.html.SafeScript && a.constructor === goog.html.SafeScript && a.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a.privateDoNotAccessOrElseSafeScriptWrappedValue_; goog.asserts.fail("expected object of type SafeScript, got '" + a + "' of type " + goog.typeOf(a)); return "type_error:SafeScript"; };
    goog.html.SafeScript.stringify_ = function (a) { return JSON.stringify(a).replace(/</g, "\\x3c"); };
    goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function (a) { return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(a); };
    goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function (a) { this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(a) : a; return this; };
    goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
    goog.fs = {};
    goog.fs.url = {};
    goog.fs.url.createObjectUrl = function (a) { return goog.fs.url.getUrlObject_().createObjectURL(a); };
    goog.fs.url.revokeObjectUrl = function (a) { goog.fs.url.getUrlObject_().revokeObjectURL(a); };
    goog.fs.url.UrlObject_ = function () { };
    goog.fs.url.UrlObject_.prototype.createObjectURL = function (a) { };
    goog.fs.url.UrlObject_.prototype.revokeObjectURL = function (a) { };
    goog.fs.url.getUrlObject_ = function () { var a = goog.fs.url.findUrlObject_(); if (null != a)
        return a; throw Error("This browser doesn't seem to support blob URLs"); };
    goog.fs.url.findUrlObject_ = function () { return void 0 !== goog.global.URL && void 0 !== goog.global.URL.createObjectURL ? goog.global.URL : void 0 !== goog.global.webkitURL && void 0 !== goog.global.webkitURL.createObjectURL ? goog.global.webkitURL : void 0 !== goog.global.createObjectURL ? goog.global : null; };
    goog.fs.url.browserSupportsObjectUrls = function () { return null != goog.fs.url.findUrlObject_(); };
    goog.fs.blob = {};
    goog.fs.blob.getBlob = function (a) { var b = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder; if (void 0 !== b) {
        b = new b;
        for (var c = 0; c < arguments.length; c++)
            b.append(arguments[c]);
        return b.getBlob();
    } return goog.fs.blob.getBlobWithProperties(goog.array.toArray(arguments)); };
    goog.fs.blob.getBlobWithProperties = function (a, b, c) { var d = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder; if (void 0 !== d) {
        d = new d;
        for (var e = 0; e < a.length; e++)
            d.append(a[e], c);
        return d.getBlob(b);
    } if (void 0 !== goog.global.Blob)
        return d = {}, b && (d.type = b), c && (d.endings = c), new Blob(a, d); throw Error("This browser doesn't seem to support creating Blobs"); };
    goog.i18n = {};
    goog.i18n.bidi = {};
    goog.i18n.bidi.FORCE_RTL = !1;
    goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || ("ar" == goog.LOCALE.substring(0, 2).toLowerCase() || "fa" == goog.LOCALE.substring(0, 2).toLowerCase() || "he" == goog.LOCALE.substring(0, 2).toLowerCase() || "iw" == goog.LOCALE.substring(0, 2).toLowerCase() || "ps" == goog.LOCALE.substring(0, 2).toLowerCase() || "sd" == goog.LOCALE.substring(0, 2).toLowerCase() || "ug" == goog.LOCALE.substring(0, 2).toLowerCase() || "ur" == goog.LOCALE.substring(0, 2).toLowerCase() || "yi" == goog.LOCALE.substring(0, 2).toLowerCase()) && (2 == goog.LOCALE.length ||
        "-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) || 3 <= goog.LOCALE.length && "ckb" == goog.LOCALE.substring(0, 3).toLowerCase() && (3 == goog.LOCALE.length || "-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) || 7 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) && ("adlm" == goog.LOCALE.substring(3, 7).toLowerCase() || "arab" == goog.LOCALE.substring(3, 7).toLowerCase() || "hebr" == goog.LOCALE.substring(3, 7).toLowerCase() || "nkoo" == goog.LOCALE.substring(3, 7).toLowerCase() || "rohg" == goog.LOCALE.substring(3, 7).toLowerCase() || "thaa" == goog.LOCALE.substring(3, 7).toLowerCase()) || 8 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) && ("adlm" == goog.LOCALE.substring(4, 8).toLowerCase() || "arab" == goog.LOCALE.substring(4, 8).toLowerCase() || "hebr" == goog.LOCALE.substring(4, 8).toLowerCase() || "nkoo" == goog.LOCALE.substring(4, 8).toLowerCase() || "rohg" == goog.LOCALE.substring(4, 8).toLowerCase() || "thaa" == goog.LOCALE.substring(4, 8).toLowerCase());
    goog.i18n.bidi.Format = { LRE: "\u202a", RLE: "\u202b", PDF: "\u202c", LRM: "\u200e", RLM: "\u200f" };
    goog.i18n.bidi.Dir = { LTR: 1, RTL: -1, NEUTRAL: 0 };
    goog.i18n.bidi.RIGHT = "right";
    goog.i18n.bidi.LEFT = "left";
    goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
    goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
    goog.i18n.bidi.toDir = function (a, b) { return "number" == typeof a ? 0 < a ? goog.i18n.bidi.Dir.LTR : 0 > a ? goog.i18n.bidi.Dir.RTL : b ? null : goog.i18n.bidi.Dir.NEUTRAL : null == a ? null : a ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR; };
    goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0900-\u1fff\u200e\u2c00-\ud801\ud804-\ud839\ud83c-\udbff\uf900-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
    goog.i18n.bidi.rtlChars_ = "\u0591-\u06ef\u06fa-\u08ff\u200f\ud802-\ud803\ud83a-\ud83b\ufb1d-\ufdff\ufe70-\ufefc";
    goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
    goog.i18n.bidi.stripHtmlIfNeeded_ = function (a, b) { return b ? a.replace(goog.i18n.bidi.htmlSkipReg_, "") : a; };
    goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
    goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
    goog.i18n.bidi.hasAnyRtl = function (a, b) { return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b)); };
    goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
    goog.i18n.bidi.hasAnyLtr = function (a, b) { return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b)); };
    goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
    goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
    goog.i18n.bidi.isRtlChar = function (a) { return goog.i18n.bidi.rtlRe_.test(a); };
    goog.i18n.bidi.isLtrChar = function (a) { return goog.i18n.bidi.ltrRe_.test(a); };
    goog.i18n.bidi.isNeutralChar = function (a) { return !goog.i18n.bidi.isLtrChar(a) && !goog.i18n.bidi.isRtlChar(a); };
    goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
    goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
    goog.i18n.bidi.startsWithRtl = function (a, b) { return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b)); };
    goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
    goog.i18n.bidi.startsWithLtr = function (a, b) { return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b)); };
    goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
    goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
    goog.i18n.bidi.isNeutralText = function (a, b) { a = goog.i18n.bidi.stripHtmlIfNeeded_(a, b); return goog.i18n.bidi.isRequiredLtrRe_.test(a) || !goog.i18n.bidi.hasAnyLtr(a) && !goog.i18n.bidi.hasAnyRtl(a); };
    goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
    goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
    goog.i18n.bidi.endsWithLtr = function (a, b) { return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b)); };
    goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
    goog.i18n.bidi.endsWithRtl = function (a, b) { return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b)); };
    goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
    goog.i18n.bidi.rtlLocalesRe_ = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
    goog.i18n.bidi.isRtlLanguage = function (a) { return goog.i18n.bidi.rtlLocalesRe_.test(a); };
    goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
    goog.i18n.bidi.guardBracketInText = function (a, b) { b = (void 0 === b ? goog.i18n.bidi.hasAnyRtl(a) : b) ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM; return a.replace(goog.i18n.bidi.bracketGuardTextRe_, b + "$&" + b); };
    goog.i18n.bidi.enforceRtlInHtml = function (a) { return "<" == a.charAt(0) ? a.replace(/<\w+/, "$& dir=rtl") : "\n<span dir=rtl>" + a + "</span>"; };
    goog.i18n.bidi.enforceRtlInText = function (a) { return goog.i18n.bidi.Format.RLE + a + goog.i18n.bidi.Format.PDF; };
    goog.i18n.bidi.enforceLtrInHtml = function (a) { return "<" == a.charAt(0) ? a.replace(/<\w+/, "$& dir=ltr") : "\n<span dir=ltr>" + a + "</span>"; };
    goog.i18n.bidi.enforceLtrInText = function (a) { return goog.i18n.bidi.Format.LRE + a + goog.i18n.bidi.Format.PDF; };
    goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
    goog.i18n.bidi.leftRe_ = /left/gi;
    goog.i18n.bidi.rightRe_ = /right/gi;
    goog.i18n.bidi.tempRe_ = /%%%%/g;
    goog.i18n.bidi.mirrorCSS = function (a) { return a.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT); };
    goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
    goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
    goog.i18n.bidi.normalizeHebrewQuote = function (a) { return a.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3"); };
    goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
    goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
    goog.i18n.bidi.rtlDetectionThreshold_ = .4;
    goog.i18n.bidi.estimateDirection = function (a, b) { var c = 0, d = 0, e = !1; a = goog.i18n.bidi.stripHtmlIfNeeded_(a, b).split(goog.i18n.bidi.wordSeparatorRe_); for (b = 0; b < a.length; b++) {
        var f = a[b];
        goog.i18n.bidi.startsWithRtl(f) ? (c++, d++) : goog.i18n.bidi.isRequiredLtrRe_.test(f) ? e = !0 : goog.i18n.bidi.hasAnyLtr(f) ? d++ : goog.i18n.bidi.hasNumeralsRe_.test(f) && (e = !0);
    } return 0 == d ? e ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : c / d > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR; };
    goog.i18n.bidi.detectRtlDirectionality = function (a, b) { return goog.i18n.bidi.estimateDirection(a, b) == goog.i18n.bidi.Dir.RTL; };
    goog.i18n.bidi.setElementDirAndAlign = function (a, b) { a && (b = goog.i18n.bidi.toDir(b)) && (a.style.textAlign = b == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, a.dir = b == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr"); };
    goog.i18n.bidi.setElementDirByTextDirectionality = function (a, b) { switch (goog.i18n.bidi.estimateDirection(b)) {
        case goog.i18n.bidi.Dir.LTR:
            a.dir = "ltr";
            break;
        case goog.i18n.bidi.Dir.RTL:
            a.dir = "rtl";
            break;
        default: a.removeAttribute("dir");
    } };
    goog.i18n.bidi.DirectionalString = function () { };
    goog.html.TrustedResourceUrl = function (a, b) { this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = a === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && b || ""; this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_; };
    goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = !0;
    goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function () { return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString(); };
    goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
    goog.html.TrustedResourceUrl.prototype.getDirection = function () { return goog.i18n.bidi.Dir.LTR; };
    goog.html.TrustedResourceUrl.prototype.cloneWithParams = function (a, b) { var c = goog.html.TrustedResourceUrl.unwrap(this); c = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c); var d = c[3] || ""; return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1] + goog.html.TrustedResourceUrl.stringifyParams_("?", c[2] || "", a) + goog.html.TrustedResourceUrl.stringifyParams_("#", d, b)); };
    goog.DEBUG && (goog.html.TrustedResourceUrl.prototype.toString = function () { return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}"; });
    goog.html.TrustedResourceUrl.unwrap = function (a) { return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString(); };
    goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function (a) { if (a instanceof goog.html.TrustedResourceUrl && a.constructor === goog.html.TrustedResourceUrl && a.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_; goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + a + "' of type " + goog.typeOf(a)); return "type_error:TrustedResourceUrl"; };
    goog.html.TrustedResourceUrl.format = function (a, b) {
        var c = goog.string.Const.unwrap(a);
        if (!goog.html.TrustedResourceUrl.BASE_URL_.test(c))
            throw Error("Invalid TrustedResourceUrl format: " + c);
        a = c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function (a, e) {
            if (!Object.prototype.hasOwnProperty.call(b, e))
                throw Error('Found marker, "' + e + '", in format string, "' + c + '", but no valid label mapping found in args: ' + JSON.stringify(b));
            a = b[e];
            return a instanceof goog.string.Const ? goog.string.Const.unwrap(a) :
                encodeURIComponent(String(a));
        });
        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a);
    };
    goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
    goog.html.TrustedResourceUrl.BASE_URL_ = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;
    goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
    goog.html.TrustedResourceUrl.formatWithParams = function (a, b, c, d) { return goog.html.TrustedResourceUrl.format(a, b).cloneWithParams(c, d); };
    goog.html.TrustedResourceUrl.fromConstant = function (a) { return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a)); };
    goog.html.TrustedResourceUrl.fromConstants = function (a) { for (var b = "", c = 0; c < a.length; c++)
        b += goog.string.Const.unwrap(a[c]); return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b); };
    goog.html.TrustedResourceUrl.fromSafeScript = function (a) { a = goog.fs.blob.getBlobWithProperties([goog.html.SafeScript.unwrap(a)], "text/javascript"); a = goog.fs.url.createObjectUrl(a); return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function (a) { a = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(a) : a; return new goog.html.TrustedResourceUrl(goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_, a); };
    goog.html.TrustedResourceUrl.stringifyParams_ = function (a, b, c) { if (null == c)
        return b; if ("string" === typeof c)
        return c ? a + encodeURIComponent(c) : ""; for (var d in c) {
        var e = c[d];
        e = Array.isArray(e) ? e : [e];
        for (var f = 0; f < e.length; f++) {
            var g = e[f];
            null != g && (b || (b = a), b += (b.length > a.length ? "&" : "") + encodeURIComponent(d) + "=" + encodeURIComponent(String(g)));
        }
    } return b; };
    goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
    goog.string.internal = {};
    goog.string.internal.startsWith = function (a, b) { return 0 == a.lastIndexOf(b, 0); };
    goog.string.internal.endsWith = function (a, b) { var c = a.length - b.length; return 0 <= c && a.indexOf(b, c) == c; };
    goog.string.internal.caseInsensitiveStartsWith = function (a, b) { return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(0, b.length)); };
    goog.string.internal.caseInsensitiveEndsWith = function (a, b) { return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length)); };
    goog.string.internal.caseInsensitiveEquals = function (a, b) { return a.toLowerCase() == b.toLowerCase(); };
    goog.string.internal.isEmptyOrWhitespace = function (a) { return /^[\s\xa0]*$/.test(a); };
    goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function (a) { return a.trim(); } : function (a) { return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]; };
    goog.string.internal.caseInsensitiveCompare = function (a, b) { a = String(a).toLowerCase(); b = String(b).toLowerCase(); return a < b ? -1 : a == b ? 0 : 1; };
    goog.string.internal.newLineToBr = function (a, b) { return a.replace(/(\r\n|\r|\n)/g, b ? "<br />" : "<br>"); };
    goog.string.internal.htmlEscape = function (a, b) {
        if (b)
            a = a.replace(goog.string.internal.AMP_RE_, "&amp;").replace(goog.string.internal.LT_RE_, "&lt;").replace(goog.string.internal.GT_RE_, "&gt;").replace(goog.string.internal.QUOT_RE_, "&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.internal.NULL_RE_, "&#0;");
        else {
            if (!goog.string.internal.ALL_RE_.test(a))
                return a;
            -1 != a.indexOf("&") && (a = a.replace(goog.string.internal.AMP_RE_, "&amp;"));
            -1 != a.indexOf("<") && (a = a.replace(goog.string.internal.LT_RE_, "&lt;"));
            -1 != a.indexOf(">") && (a = a.replace(goog.string.internal.GT_RE_, "&gt;"));
            -1 != a.indexOf('"') && (a = a.replace(goog.string.internal.QUOT_RE_, "&quot;"));
            -1 != a.indexOf("'") && (a = a.replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;"));
            -1 != a.indexOf("\x00") && (a = a.replace(goog.string.internal.NULL_RE_, "&#0;"));
        }
        return a;
    };
    goog.string.internal.AMP_RE_ = /&/g;
    goog.string.internal.LT_RE_ = /</g;
    goog.string.internal.GT_RE_ = />/g;
    goog.string.internal.QUOT_RE_ = /"/g;
    goog.string.internal.SINGLE_QUOTE_RE_ = /'/g;
    goog.string.internal.NULL_RE_ = /\x00/g;
    goog.string.internal.ALL_RE_ = /[\x00&<>"']/;
    goog.string.internal.whitespaceEscape = function (a, b) { return goog.string.internal.newLineToBr(a.replace(/  /g, " &#160;"), b); };
    goog.string.internal.contains = function (a, b) { return -1 != a.indexOf(b); };
    goog.string.internal.caseInsensitiveContains = function (a, b) { return goog.string.internal.contains(a.toLowerCase(), b.toLowerCase()); };
    goog.string.internal.compareVersions = function (a, b) {
        var c = 0;
        a = goog.string.internal.trim(String(a)).split(".");
        b = goog.string.internal.trim(String(b)).split(".");
        for (var d = Math.max(a.length, b.length), e = 0; 0 == c && e < d; e++) {
            var f = a[e] || "", g = b[e] || "";
            do {
                f = /(\d*)(\D*)(.*)/.exec(f) || ["", "", "", ""];
                g = /(\d*)(\D*)(.*)/.exec(g) || ["", "", "", ""];
                if (0 == f[0].length && 0 == g[0].length)
                    break;
                c = 0 == f[1].length ? 0 : parseInt(f[1], 10);
                var h = 0 == g[1].length ? 0 : parseInt(g[1], 10);
                c = goog.string.internal.compareElements_(c, h) || goog.string.internal.compareElements_(0 ==
                    f[2].length, 0 == g[2].length) || goog.string.internal.compareElements_(f[2], g[2]);
                f = f[3];
                g = g[3];
            } while (0 == c);
        }
        return c;
    };
    goog.string.internal.compareElements_ = function (a, b) { return a < b ? -1 : a > b ? 1 : 0; };
    goog.html.SafeUrl = function (a, b) { this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = a === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && b || ""; this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_; };
    goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
    goog.html.SafeUrl.prototype.implementsGoogStringTypedString = !0;
    goog.html.SafeUrl.prototype.getTypedStringValue = function () { return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString(); };
    goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
    goog.html.SafeUrl.prototype.getDirection = function () { return goog.i18n.bidi.Dir.LTR; };
    goog.DEBUG && (goog.html.SafeUrl.prototype.toString = function () { return "SafeUrl{" + this.privateDoNotAccessOrElseSafeUrlWrappedValue_ + "}"; });
    goog.html.SafeUrl.unwrap = function (a) { if (a instanceof goog.html.SafeUrl && a.constructor === goog.html.SafeUrl && a.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a.privateDoNotAccessOrElseSafeUrlWrappedValue_; goog.asserts.fail("expected object of type SafeUrl, got '" + a + "' of type " + goog.typeOf(a)); return "type_error:SafeUrl"; };
    goog.html.SafeUrl.fromConstant = function (a) { return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a)); };
    goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\w+=(?:\w+|"[\w;,= ]+"))*$/i;
    goog.html.SafeUrl.isSafeMimeType = function (a) { return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a); };
    goog.html.SafeUrl.fromBlob = function (a) { a = goog.html.SafeUrl.isSafeMimeType(a.type) ? goog.fs.url.createObjectUrl(a) : goog.html.SafeUrl.INNOCUOUS_STRING; return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeUrl.fromMediaSource = function (a) { goog.asserts.assert("MediaSource" in goog.global, "No support for MediaSource"); a = a instanceof MediaSource ? goog.fs.url.createObjectUrl(a) : goog.html.SafeUrl.INNOCUOUS_STRING; return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.DATA_URL_PATTERN_ = /^data:(.*);base64,[a-z0-9+\/]+=*$/i;
    goog.html.SafeUrl.fromDataUrl = function (a) { a = a.replace(/(%0A|%0D)/g, ""); var b = a.match(goog.html.DATA_URL_PATTERN_); b = b && goog.html.SafeUrl.isSafeMimeType(b[1]); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b ? a : goog.html.SafeUrl.INNOCUOUS_STRING); };
    goog.html.SafeUrl.fromTelUrl = function (a) { goog.string.internal.caseInsensitiveStartsWith(a, "tel:") || (a = goog.html.SafeUrl.INNOCUOUS_STRING); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SIP_URL_PATTERN_ = /^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i;
    goog.html.SafeUrl.fromSipUrl = function (a) { goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a)) || (a = goog.html.SafeUrl.INNOCUOUS_STRING); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeUrl.fromFacebookMessengerUrl = function (a) { goog.string.internal.caseInsensitiveStartsWith(a, "fb-messenger://share") || (a = goog.html.SafeUrl.INNOCUOUS_STRING); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeUrl.fromWhatsAppUrl = function (a) { goog.string.internal.caseInsensitiveStartsWith(a, "whatsapp://send") || (a = goog.html.SafeUrl.INNOCUOUS_STRING); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeUrl.fromSmsUrl = function (a) { goog.string.internal.caseInsensitiveStartsWith(a, "sms:") && goog.html.SafeUrl.isSmsUrlBodyValid_(a) || (a = goog.html.SafeUrl.INNOCUOUS_STRING); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeUrl.isSmsUrlBodyValid_ = function (a) { var b = a.indexOf("#"); 0 < b && (a = a.substring(0, b)); b = a.match(/[?&]body=/gi); if (!b)
        return !0; if (1 < b.length)
        return !1; a = a.match(/[?&]body=([^&]*)/)[1]; if (!a)
        return !0; try {
        decodeURIComponent(a);
    }
    catch (c) {
        return !1;
    } return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(a); };
    goog.html.SafeUrl.fromSshUrl = function (a) { goog.string.internal.caseInsensitiveStartsWith(a, "ssh://") || (a = goog.html.SafeUrl.INNOCUOUS_STRING); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeUrl.sanitizeChromeExtensionUrl = function (a, b) { return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, a, b); };
    goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function (a, b) { return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, a, b); };
    goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function (a, b) { return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, a, b); };
    goog.html.SafeUrl.sanitizeExtensionUrl_ = function (a, b, c) { (a = a.exec(b)) ? (a = a[1], -1 == (c instanceof goog.string.Const ? [goog.string.Const.unwrap(c)] : c.map(function (a) { return goog.string.Const.unwrap(a); })).indexOf(a) && (b = goog.html.SafeUrl.INNOCUOUS_STRING)) : b = goog.html.SafeUrl.INNOCUOUS_STRING; return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b); };
    goog.html.SafeUrl.fromTrustedResourceUrl = function (a) { return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a)); };
    goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
    goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;
    goog.html.SafeUrl.sanitize = function (a) { if (a instanceof goog.html.SafeUrl)
        return a; a = "object" == typeof a && a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a); goog.html.SAFE_URL_PATTERN_.test(a) || (a = goog.html.SafeUrl.INNOCUOUS_STRING); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeUrl.sanitizeAssertUnchanged = function (a, b) { if (a instanceof goog.html.SafeUrl)
        return a; a = "object" == typeof a && a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a); if (b && /^data:/i.test(a) && (b = goog.html.SafeUrl.fromDataUrl(a), b.getTypedStringValue() == a))
        return b; goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a), "%s does not match the safe URL pattern", a) || (a = goog.html.SafeUrl.INNOCUOUS_STRING); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function (a) { return new goog.html.SafeUrl(goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_, a); };
    goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
    goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
    goog.html.SafeStyle = function () { this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = ""; this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_; };
    goog.html.SafeStyle.prototype.implementsGoogStringTypedString = !0;
    goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeStyle.fromConstant = function (a) { a = goog.string.Const.unwrap(a); if (0 === a.length)
        return goog.html.SafeStyle.EMPTY; goog.asserts.assert(goog.string.internal.endsWith(a, ";"), "Last character of style string is not ';': " + a); goog.asserts.assert(goog.string.internal.contains(a, ":"), "Style string must contain at least one ':', to specify a \"name: value\" pair: " + a); return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeStyle.prototype.getTypedStringValue = function () { return this.privateDoNotAccessOrElseSafeStyleWrappedValue_; };
    goog.DEBUG && (goog.html.SafeStyle.prototype.toString = function () { return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}"; });
    goog.html.SafeStyle.unwrap = function (a) { if (a instanceof goog.html.SafeStyle && a.constructor === goog.html.SafeStyle && a.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a.privateDoNotAccessOrElseSafeStyleWrappedValue_; goog.asserts.fail("expected object of type SafeStyle, got '" + a + "' of type " + goog.typeOf(a)); return "type_error:SafeStyle"; };
    goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function (a) { return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(a); };
    goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function (a) { this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = a; return this; };
    goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
    goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
    goog.html.SafeStyle.create = function (a) { var b = "", c; for (c in a) {
        if (!/^[-_a-zA-Z0-9]+$/.test(c))
            throw Error("Name allows only [-_a-zA-Z0-9], got: " + c);
        var d = a[c];
        null != d && (d = Array.isArray(d) ? goog.array.map(d, goog.html.SafeStyle.sanitizePropertyValue_).join(" ") : goog.html.SafeStyle.sanitizePropertyValue_(d), b += c + ":" + d + ";");
    } return b ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b) : goog.html.SafeStyle.EMPTY; };
    goog.html.SafeStyle.sanitizePropertyValue_ = function (a) { if (a instanceof goog.html.SafeUrl)
        return 'url("' + goog.html.SafeUrl.unwrap(a).replace(/</g, "%3c").replace(/[\\"]/g, "\\$&") + '")'; a = a instanceof goog.string.Const ? goog.string.Const.unwrap(a) : goog.html.SafeStyle.sanitizePropertyValueString_(String(a)); if (/[{;}]/.test(a))
        throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [a]); return a; };
    goog.html.SafeStyle.sanitizePropertyValueString_ = function (a) {
        var b = a.replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.URL_RE_, "url");
        if (goog.html.SafeStyle.VALUE_RE_.test(b)) {
            if (goog.html.SafeStyle.COMMENT_RE_.test(a))
                return goog.asserts.fail("String value disallows comments, got: " + a), goog.html.SafeStyle.INNOCUOUS_STRING;
            if (!goog.html.SafeStyle.hasBalancedQuotes_(a))
                return goog.asserts.fail("String value requires balanced quotes, got: " +
                    a), goog.html.SafeStyle.INNOCUOUS_STRING;
            if (!goog.html.SafeStyle.hasBalancedSquareBrackets_(a))
                return goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: " + a), goog.html.SafeStyle.INNOCUOUS_STRING;
        }
        else
            return goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + a), goog.html.SafeStyle.INNOCUOUS_STRING;
        return goog.html.SafeStyle.sanitizeUrl_(a);
    };
    goog.html.SafeStyle.hasBalancedQuotes_ = function (a) { for (var b = !0, c = !0, d = 0; d < a.length; d++) {
        var e = a.charAt(d);
        "'" == e && c ? b = !b : '"' == e && b && (c = !c);
    } return b && c; };
    goog.html.SafeStyle.hasBalancedSquareBrackets_ = function (a) { for (var b = !0, c = /^[-_a-zA-Z0-9]$/, d = 0; d < a.length; d++) {
        var e = a.charAt(d);
        if ("]" == e) {
            if (b)
                return !1;
            b = !0;
        }
        else if ("[" == e) {
            if (!b)
                return !1;
            b = !1;
        }
        else if (!b && !c.test(e))
            return !1;
    } return b; };
    goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = "[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
    goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$");
    goog.html.SafeStyle.URL_RE_ = /\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;
    goog.html.SafeStyle.ALLOWED_FUNCTIONS_ = "calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)?".split(" ");
    goog.html.SafeStyle.FUNCTIONS_RE_ = new RegExp("\\b(" + goog.html.SafeStyle.ALLOWED_FUNCTIONS_.join("|") + ")\\([-+*/0-9a-z.%\\[\\], ]+\\)", "g");
    goog.html.SafeStyle.COMMENT_RE_ = /\/\*/;
    goog.html.SafeStyle.sanitizeUrl_ = function (a) { return a.replace(goog.html.SafeStyle.URL_RE_, function (a, c, d, e) { var b = ""; d = d.replace(/^(['"])(.*)\1$/, function (a, c, d) { b = c; return d; }); a = goog.html.SafeUrl.sanitize(d).getTypedStringValue(); return c + b + a + b + e; }); };
    goog.html.SafeStyle.concat = function (a) { var b = "", c = function (a) { Array.isArray(a) ? goog.array.forEach(a, c) : b += goog.html.SafeStyle.unwrap(a); }; goog.array.forEach(arguments, c); return b ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b) : goog.html.SafeStyle.EMPTY; };
    goog.html.SafeStyleSheet = function () { this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = ""; this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_; };
    goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = !0;
    goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeStyleSheet.createRule = function (a, b) {
        if (goog.string.internal.contains(a, "<"))
            throw Error("Selector does not allow '<', got: " + a);
        var c = a.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
        if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c))
            throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: " + a);
        if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(c))
            throw Error("() and [] in selector must be balanced, got: " + a);
        b instanceof goog.html.SafeStyle || (b = goog.html.SafeStyle.create(b));
        a = a + "{" + goog.html.SafeStyle.unwrap(b).replace(/</g, "\\3C ") + "}";
        return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a);
    };
    goog.html.SafeStyleSheet.hasBalancedBrackets_ = function (a) { for (var b = { "(": ")", "[": "]" }, c = [], d = 0; d < a.length; d++) {
        var e = a[d];
        if (b[e])
            c.push(b[e]);
        else if (goog.object.contains(b, e) && c.pop() != e)
            return !1;
    } return 0 == c.length; };
    goog.html.SafeStyleSheet.concat = function (a) { var b = "", c = function (a) { Array.isArray(a) ? goog.array.forEach(a, c) : b += goog.html.SafeStyleSheet.unwrap(a); }; goog.array.forEach(arguments, c); return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b); };
    goog.html.SafeStyleSheet.fromConstant = function (a) { a = goog.string.Const.unwrap(a); if (0 === a.length)
        return goog.html.SafeStyleSheet.EMPTY; goog.asserts.assert(!goog.string.internal.contains(a, "<"), "Forbidden '<' character in style sheet string: " + a); return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a); };
    goog.html.SafeStyleSheet.prototype.getTypedStringValue = function () { return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_; };
    goog.DEBUG && (goog.html.SafeStyleSheet.prototype.toString = function () { return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}"; });
    goog.html.SafeStyleSheet.unwrap = function (a) { if (a instanceof goog.html.SafeStyleSheet && a.constructor === goog.html.SafeStyleSheet && a.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_; goog.asserts.fail("expected object of type SafeStyleSheet, got '" + a + "' of type " + goog.typeOf(a)); return "type_error:SafeStyleSheet"; };
    goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function (a) { return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(a); };
    goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function (a) { this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = a; return this; };
    goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
    goog.labs = {};
    goog.labs.userAgent = {};
    goog.labs.userAgent.util = {};
    goog.labs.userAgent.util.getNativeUserAgentString_ = function () { var a = goog.labs.userAgent.util.getNavigator_(); return a && (a = a.userAgent) ? a : ""; };
    goog.labs.userAgent.util.getNavigator_ = function () { return goog.global.navigator; };
    goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
    goog.labs.userAgent.util.setUserAgent = function (a) { goog.labs.userAgent.util.userAgent_ = a || goog.labs.userAgent.util.getNativeUserAgentString_(); };
    goog.labs.userAgent.util.getUserAgent = function () { return goog.labs.userAgent.util.userAgent_; };
    goog.labs.userAgent.util.matchUserAgent = function (a) { var b = goog.labs.userAgent.util.getUserAgent(); return goog.string.internal.contains(b, a); };
    goog.labs.userAgent.util.matchUserAgentIgnoreCase = function (a) { var b = goog.labs.userAgent.util.getUserAgent(); return goog.string.internal.caseInsensitiveContains(b, a); };
    goog.labs.userAgent.util.extractVersionTuples = function (a) { for (var b = /(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g, c = [], d; d = b.exec(a);)
        c.push([d[1], d[2], d[3] || void 0]); return c; };
    goog.labs.userAgent.browser = {};
    goog.labs.userAgent.browser.matchOpera_ = function () { return goog.labs.userAgent.util.matchUserAgent("Opera"); };
    goog.labs.userAgent.browser.matchIE_ = function () { return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE"); };
    goog.labs.userAgent.browser.matchEdgeHtml_ = function () { return goog.labs.userAgent.util.matchUserAgent("Edge"); };
    goog.labs.userAgent.browser.matchEdgeChromium_ = function () { return goog.labs.userAgent.util.matchUserAgent("Edg/"); };
    goog.labs.userAgent.browser.matchOperaChromium_ = function () { return goog.labs.userAgent.util.matchUserAgent("OPR"); };
    goog.labs.userAgent.browser.matchFirefox_ = function () { return goog.labs.userAgent.util.matchUserAgent("Firefox") || goog.labs.userAgent.util.matchUserAgent("FxiOS"); };
    goog.labs.userAgent.browser.matchSafari_ = function () { return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdgeHtml_() || goog.labs.userAgent.browser.matchEdgeChromium_() || goog.labs.userAgent.browser.matchOperaChromium_() || goog.labs.userAgent.browser.matchFirefox_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android")); };
    goog.labs.userAgent.browser.matchCoast_ = function () { return goog.labs.userAgent.util.matchUserAgent("Coast"); };
    goog.labs.userAgent.browser.matchIosWebview_ = function () { return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && !goog.labs.userAgent.browser.matchFirefox_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit"); };
    goog.labs.userAgent.browser.matchChrome_ = function () { return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdgeHtml_(); };
    goog.labs.userAgent.browser.matchAndroidBrowser_ = function () { return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk()); };
    goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
    goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
    goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdgeHtml_;
    goog.labs.userAgent.browser.isEdgeChromium = goog.labs.userAgent.browser.matchEdgeChromium_;
    goog.labs.userAgent.browser.isOperaChromium = goog.labs.userAgent.browser.matchOperaChromium_;
    goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
    goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
    goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
    goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
    goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
    goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
    goog.labs.userAgent.browser.isSilk = function () { return goog.labs.userAgent.util.matchUserAgent("Silk"); };
    goog.labs.userAgent.browser.getVersion = function () {
        function a(a) { a = goog.array.find(a, d); return c[a] || ""; }
        var b = goog.labs.userAgent.util.getUserAgent();
        if (goog.labs.userAgent.browser.isIE())
            return goog.labs.userAgent.browser.getIEVersion_(b);
        b = goog.labs.userAgent.util.extractVersionTuples(b);
        var c = {};
        goog.array.forEach(b, function (a) { c[a[0]] = a[1]; });
        var d = goog.partial(goog.object.containsKey, c);
        return goog.labs.userAgent.browser.isOpera() ? a(["Version", "Opera"]) : goog.labs.userAgent.browser.isEdge() ? a(["Edge"]) :
            goog.labs.userAgent.browser.isEdgeChromium() ? a(["Edg"]) : goog.labs.userAgent.browser.isChrome() ? a(["Chrome", "CriOS", "HeadlessChrome"]) : (b = b[2]) && b[1] || "";
    };
    goog.labs.userAgent.browser.isVersionOrHigher = function (a) { return 0 <= goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(), a); };
    goog.labs.userAgent.browser.getIEVersion_ = function (a) { var b = /rv: *([\d\.]*)/.exec(a); if (b && b[1])
        return b[1]; b = ""; var c = /MSIE +([\d\.]+)/.exec(a); if (c && c[1])
        if (a = /Trident\/(\d.\d)/.exec(a), "7.0" == c[1])
            if (a && a[1])
                switch (a[1]) {
                    case "4.0":
                        b = "8.0";
                        break;
                    case "5.0":
                        b = "9.0";
                        break;
                    case "6.0":
                        b = "10.0";
                        break;
                    case "7.0": b = "11.0";
                }
            else
                b = "7.0";
        else
            b = c[1]; return b; };
    goog.html.SafeHtml = function () { this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = ""; this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_; this.dir_ = null; };
    goog.html.SafeHtml.ENABLE_ERROR_MESSAGES = goog.DEBUG;
    goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE = !0;
    goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = !0;
    goog.html.SafeHtml.prototype.getDirection = function () { return this.dir_; };
    goog.html.SafeHtml.prototype.implementsGoogStringTypedString = !0;
    goog.html.SafeHtml.prototype.getTypedStringValue = function () { return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString(); };
    goog.DEBUG && (goog.html.SafeHtml.prototype.toString = function () { return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}"; });
    goog.html.SafeHtml.unwrap = function (a) { return goog.html.SafeHtml.unwrapTrustedHTML(a).toString(); };
    goog.html.SafeHtml.unwrapTrustedHTML = function (a) { if (a instanceof goog.html.SafeHtml && a.constructor === goog.html.SafeHtml && a.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)
        return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_; goog.asserts.fail("expected object of type SafeHtml, got '" + a + "' of type " + goog.typeOf(a)); return "type_error:SafeHtml"; };
    goog.html.SafeHtml.htmlEscape = function (a) { if (a instanceof goog.html.SafeHtml)
        return a; var b = "object" == typeof a, c = null; b && a.implementsGoogI18nBidiDirectionalString && (c = a.getDirection()); a = b && a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a); return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a), c); };
    goog.html.SafeHtml.htmlEscapePreservingNewlines = function (a) { if (a instanceof goog.html.SafeHtml)
        return a; a = goog.html.SafeHtml.htmlEscape(a); return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(a)), a.getDirection()); };
    goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function (a) { if (a instanceof goog.html.SafeHtml)
        return a; a = goog.html.SafeHtml.htmlEscape(a); return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(a)), a.getDirection()); };
    goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
    goog.html.SafeHtml.comment = function (a) { return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!--" + goog.string.internal.htmlEscape(a) + "--\x3e", null); };
    goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
    goog.html.SafeHtml.URL_ATTRIBUTES_ = { action: !0, cite: !0, data: !0, formaction: !0, href: !0, manifest: !0, poster: !0, src: !0 };
    goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = { APPLET: !0, BASE: !0, EMBED: !0, IFRAME: !0, LINK: !0, MATH: !0, META: !0, OBJECT: !0, SCRIPT: !0, STYLE: !0, SVG: !0, TEMPLATE: !0 };
    goog.html.SafeHtml.create = function (a, b, c) { goog.html.SafeHtml.verifyTagName(String(a)); return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a), b, c); };
    goog.html.SafeHtml.verifyTagName = function (a) { if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(a))
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Invalid tag name <" + a + ">." : ""); if (a.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Tag name <" + a + "> is not allowed for SafeHtml." : ""); };
    goog.html.SafeHtml.createIframe = function (a, b, c, d) { a && goog.html.TrustedResourceUrl.unwrap(a); var e = {}; e.src = a || null; e.srcdoc = b && goog.html.SafeHtml.unwrap(b); a = goog.html.SafeHtml.combineAttributes(e, { sandbox: "" }, c); return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a, d); };
    goog.html.SafeHtml.createSandboxIframe = function (a, b, c, d) { if (!goog.html.SafeHtml.canUseSandboxIframe())
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "The browser does not support sandboxed iframes." : ""); var e = {}; e.src = a ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)) : null; e.srcdoc = b || null; e.sandbox = ""; a = goog.html.SafeHtml.combineAttributes(e, {}, c); return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a, d); };
    goog.html.SafeHtml.canUseSandboxIframe = function () { return goog.global.HTMLIFrameElement && "sandbox" in goog.global.HTMLIFrameElement.prototype; };
    goog.html.SafeHtml.createScriptSrc = function (a, b) { goog.html.TrustedResourceUrl.unwrap(a); a = goog.html.SafeHtml.combineAttributes({ src: a }, {}, b); return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", a); };
    goog.html.SafeHtml.createScript = function (a, b) { for (var c in b) {
        var d = c.toLowerCase();
        if ("language" == d || "src" == d || "text" == d || "type" == d)
            throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot set "' + d + '" attribute' : "");
    } c = ""; a = goog.array.concat(a); for (d = 0; d < a.length; d++)
        c += goog.html.SafeScript.unwrap(a[d]); a = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c, goog.i18n.bidi.Dir.NEUTRAL); return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", b, a); };
    goog.html.SafeHtml.createStyle = function (a, b) { b = goog.html.SafeHtml.combineAttributes({ type: "text/css" }, {}, b); var c = ""; a = goog.array.concat(a); for (var d = 0; d < a.length; d++)
        c += goog.html.SafeStyleSheet.unwrap(a[d]); a = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c, goog.i18n.bidi.Dir.NEUTRAL); return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", b, a); };
    goog.html.SafeHtml.createMetaRefresh = function (a, b) { a = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)); (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) && goog.string.internal.contains(a, ";") && (a = "'" + a.replace(/'/g, "%27") + "'"); return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", { "http-equiv": "refresh", content: (b || 0) + "; url=" + a }); };
    goog.html.SafeHtml.getAttrNameAndValue_ = function (a, b, c) {
        if (c instanceof goog.string.Const)
            c = goog.string.Const.unwrap(c);
        else if ("style" == b.toLowerCase())
            if (goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE)
                c = goog.html.SafeHtml.getStyleValue_(c);
            else
                throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "style" not supported.' : "");
        else {
            if (/^on/i.test(b))
                throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + b + '" requires goog.string.Const value, "' + c + '" given.' : "");
            if (b.toLowerCase() in
                goog.html.SafeHtml.URL_ATTRIBUTES_)
                if (c instanceof goog.html.TrustedResourceUrl)
                    c = goog.html.TrustedResourceUrl.unwrap(c);
                else if (c instanceof goog.html.SafeUrl)
                    c = goog.html.SafeUrl.unwrap(c);
                else if ("string" === typeof c)
                    c = goog.html.SafeUrl.sanitize(c).getTypedStringValue();
                else
                    throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + b + '" on tag "' + a + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + c + '" given.' : "");
        }
        c.implementsGoogStringTypedString && (c = c.getTypedStringValue());
        goog.asserts.assert("string" === typeof c || "number" === typeof c, "String or number value expected, got " + typeof c + " with value: " + c);
        return b + '="' + goog.string.internal.htmlEscape(String(c)) + '"';
    };
    goog.html.SafeHtml.getStyleValue_ = function (a) { if (!goog.isObject(a))
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof a + " given: " + a : ""); a instanceof goog.html.SafeStyle || (a = goog.html.SafeStyle.create(a)); return goog.html.SafeStyle.unwrap(a); };
    goog.html.SafeHtml.createWithDir = function (a, b, c, d) { b = goog.html.SafeHtml.create(b, c, d); b.dir_ = a; return b; };
    goog.html.SafeHtml.join = function (a, b) { a = goog.html.SafeHtml.htmlEscape(a); var c = a.getDirection(), d = [], e = function (a) { Array.isArray(a) ? goog.array.forEach(a, e) : (a = goog.html.SafeHtml.htmlEscape(a), d.push(goog.html.SafeHtml.unwrap(a)), a = a.getDirection(), c == goog.i18n.bidi.Dir.NEUTRAL ? c = a : a != goog.i18n.bidi.Dir.NEUTRAL && c != a && (c = null)); }; goog.array.forEach(b, e); return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d.join(goog.html.SafeHtml.unwrap(a)), c); };
    goog.html.SafeHtml.concat = function (a) { return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments)); };
    goog.html.SafeHtml.concatWithDir = function (a, b) { var c = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1)); c.dir_ = a; return c; };
    goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function (a, b) { return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(a, b); };
    goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function (a, b) { this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(a) : a; this.dir_ = b; return this; };
    goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function (a, b, c) {
        var d = null;
        var e = "<" + a + goog.html.SafeHtml.stringifyAttributes(a, b);
        null == c ? c = [] : Array.isArray(c) || (c = [c]);
        goog.dom.tags.isVoidTag(a.toLowerCase()) ? (goog.asserts.assert(!c.length, "Void tag <" + a + "> does not allow content."), e += ">") : (d = goog.html.SafeHtml.concat(c), e += ">" + goog.html.SafeHtml.unwrap(d) + "</" + a + ">", d = d.getDirection());
        (a = b && b.dir) && (d = /^(ltr|rtl|auto)$/i.test(a) ? goog.i18n.bidi.Dir.NEUTRAL : null);
        return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e, d);
    };
    goog.html.SafeHtml.stringifyAttributes = function (a, b) { var c = ""; if (b)
        for (var d in b) {
            if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(d))
                throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Invalid attribute name "' + d + '".' : "");
            var e = b[d];
            null != e && (c += " " + goog.html.SafeHtml.getAttrNameAndValue_(a, d, e));
        } return c; };
    goog.html.SafeHtml.combineAttributes = function (a, b, c) { var d = {}, e; for (e in a)
        goog.asserts.assert(e.toLowerCase() == e, "Must be lower case"), d[e] = a[e]; for (e in b)
        goog.asserts.assert(e.toLowerCase() == e, "Must be lower case"), d[e] = b[e]; if (c)
        for (e in c) {
            var f = e.toLowerCase();
            if (f in a)
                throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot override "' + f + '" attribute, got "' + e + '" with value "' + c[e] + '"' : "");
            f in b && delete d[f];
            d[e] = c[e];
        } return d; };
    goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>", goog.i18n.bidi.Dir.NEUTRAL);
    goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
    goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>", goog.i18n.bidi.Dir.NEUTRAL);
    goog.html.uncheckedconversions = {};
    goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function (a, b, c) { goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification"); goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification"); return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b, c || null); };
    goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function (a, b) { goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification"); goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification"); return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b); };
    goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function (a, b) { goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification"); goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification"); return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b); };
    goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function (a, b) { goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification"); goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification"); return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b); };
    goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function (a, b) { goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification"); goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification"); return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b); };
    goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function (a, b) { goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification"); goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification"); return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b); };
    goog.dom.safe = {};
    goog.dom.safe.InsertAdjacentHtmlPosition = { AFTERBEGIN: "afterbegin", AFTEREND: "afterend", BEFOREBEGIN: "beforebegin", BEFOREEND: "beforeend" };
    goog.dom.safe.insertAdjacentHtml = function (a, b, c) { a.insertAdjacentHTML(b, goog.html.SafeHtml.unwrapTrustedHTML(c)); };
    goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = { MATH: !0, SCRIPT: !0, STYLE: !0, SVG: !0, TEMPLATE: !0 };
    goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function () { if (goog.DEBUG && "undefined" === typeof document)
        return !1; var a = document.createElement("div"), b = document.createElement("div"); b.appendChild(document.createElement("div")); a.appendChild(b); if (goog.DEBUG && !a.firstChild)
        return !1; b = a.firstChild.firstChild; a.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY); return !b.parentElement; });
    goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function (a, b) { if (goog.dom.safe.isInnerHtmlCleanupRecursive_())
        for (; a.lastChild;)
            a.removeChild(a.lastChild); a.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(b); };
    goog.dom.safe.setInnerHtml = function (a, b) { if (goog.asserts.ENABLE_ASSERTS) {
        var c = a.tagName.toUpperCase();
        if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])
            throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + a.tagName + ".");
    } goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a, b); };
    goog.dom.safe.setOuterHtml = function (a, b) { a.outerHTML = goog.html.SafeHtml.unwrapTrustedHTML(b); };
    goog.dom.safe.setFormElementAction = function (a, b) { b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b); goog.dom.asserts.assertIsHTMLFormElement(a).action = goog.html.SafeUrl.unwrap(b); };
    goog.dom.safe.setButtonFormAction = function (a, b) { b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b); goog.dom.asserts.assertIsHTMLButtonElement(a).formAction = goog.html.SafeUrl.unwrap(b); };
    goog.dom.safe.setInputFormAction = function (a, b) { b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b); goog.dom.asserts.assertIsHTMLInputElement(a).formAction = goog.html.SafeUrl.unwrap(b); };
    goog.dom.safe.setStyle = function (a, b) { a.style.cssText = goog.html.SafeStyle.unwrap(b); };
    goog.dom.safe.documentWrite = function (a, b) { a.write(goog.html.SafeHtml.unwrapTrustedHTML(b)); };
    goog.dom.safe.setAnchorHref = function (a, b) { goog.dom.asserts.assertIsHTMLAnchorElement(a); b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b); a.href = goog.html.SafeUrl.unwrap(b); };
    goog.dom.safe.setImageSrc = function (a, b) { goog.dom.asserts.assertIsHTMLImageElement(a); if (!(b instanceof goog.html.SafeUrl)) {
        var c = /^data:image\//i.test(b);
        b = goog.html.SafeUrl.sanitizeAssertUnchanged(b, c);
    } a.src = goog.html.SafeUrl.unwrap(b); };
    goog.dom.safe.setAudioSrc = function (a, b) { goog.dom.asserts.assertIsHTMLAudioElement(a); if (!(b instanceof goog.html.SafeUrl)) {
        var c = /^data:audio\//i.test(b);
        b = goog.html.SafeUrl.sanitizeAssertUnchanged(b, c);
    } a.src = goog.html.SafeUrl.unwrap(b); };
    goog.dom.safe.setVideoSrc = function (a, b) { goog.dom.asserts.assertIsHTMLVideoElement(a); if (!(b instanceof goog.html.SafeUrl)) {
        var c = /^data:video\//i.test(b);
        b = goog.html.SafeUrl.sanitizeAssertUnchanged(b, c);
    } a.src = goog.html.SafeUrl.unwrap(b); };
    goog.dom.safe.setEmbedSrc = function (a, b) { goog.dom.asserts.assertIsHTMLEmbedElement(a); a.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b); };
    goog.dom.safe.setFrameSrc = function (a, b) { goog.dom.asserts.assertIsHTMLFrameElement(a); a.src = goog.html.TrustedResourceUrl.unwrap(b); };
    goog.dom.safe.setIframeSrc = function (a, b) { goog.dom.asserts.assertIsHTMLIFrameElement(a); a.src = goog.html.TrustedResourceUrl.unwrap(b); };
    goog.dom.safe.setIframeSrcdoc = function (a, b) { goog.dom.asserts.assertIsHTMLIFrameElement(a); a.srcdoc = goog.html.SafeHtml.unwrapTrustedHTML(b); };
    goog.dom.safe.setLinkHrefAndRel = function (a, b, c) { goog.dom.asserts.assertIsHTMLLinkElement(a); a.rel = c; goog.string.internal.caseInsensitiveContains(c, "stylesheet") ? (goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), a.href = goog.html.TrustedResourceUrl.unwrap(b)) : a.href = b instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrap(b) : b instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrap(b) : goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b)); };
    goog.dom.safe.setObjectData = function (a, b) { goog.dom.asserts.assertIsHTMLObjectElement(a); a.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b); };
    goog.dom.safe.setScriptSrc = function (a, b) { goog.dom.asserts.assertIsHTMLScriptElement(a); a.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b); (b = goog.getScriptNonce()) && a.setAttribute("nonce", b); };
    goog.dom.safe.setScriptContent = function (a, b) { goog.dom.asserts.assertIsHTMLScriptElement(a); a.text = goog.html.SafeScript.unwrapTrustedScript(b); (b = goog.getScriptNonce()) && a.setAttribute("nonce", b); };
    goog.dom.safe.setLocationHref = function (a, b) { goog.dom.asserts.assertIsLocation(a); b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b); a.href = goog.html.SafeUrl.unwrap(b); };
    goog.dom.safe.assignLocation = function (a, b) { goog.dom.asserts.assertIsLocation(a); b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b); a.assign(goog.html.SafeUrl.unwrap(b)); };
    goog.dom.safe.replaceLocation = function (a, b) { b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b); a.replace(goog.html.SafeUrl.unwrap(b)); };
    goog.dom.safe.openInWindow = function (a, b, c, d, e) { a = a instanceof goog.html.SafeUrl ? a : goog.html.SafeUrl.sanitizeAssertUnchanged(a); b = b || goog.global; c = c instanceof goog.string.Const ? goog.string.Const.unwrap(c) : c || ""; return b.open(goog.html.SafeUrl.unwrap(a), c, d, e); };
    goog.dom.safe.parseFromStringHtml = function (a, b) { return goog.dom.safe.parseFromString(a, b, "text/html"); };
    goog.dom.safe.parseFromString = function (a, b, c) { return a.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(b), c); };
    goog.dom.safe.createImageFromBlob = function (a) { if (!/^image\/.*/g.test(a.type))
        throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*."); var b = goog.global.URL.createObjectURL(a); a = new goog.global.Image; a.onload = function () { goog.global.URL.revokeObjectURL(b); }; goog.dom.safe.setImageSrc(a, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), b)); return a; };
    goog.string.DETECT_DOUBLE_ESCAPING = !1;
    goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
    goog.string.Unicode = { NBSP: "\u00a0" };
    goog.string.startsWith = goog.string.internal.startsWith;
    goog.string.endsWith = goog.string.internal.endsWith;
    goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;
    goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;
    goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;
    goog.string.subs = function (a, b) { for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;)
        d += c.shift() + e.shift(); return d + c.join("%s"); };
    goog.string.collapseWhitespace = function (a) { return a.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, ""); };
    goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;
    goog.string.isEmptyString = function (a) { return 0 == a.length; };
    goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
    goog.string.isEmptyOrWhitespaceSafe = function (a) { return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a)); };
    goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
    goog.string.isBreakingWhitespace = function (a) { return !/[^\t\n\r ]/.test(a); };
    goog.string.isAlpha = function (a) { return !/[^a-zA-Z]/.test(a); };
    goog.string.isNumeric = function (a) { return !/[^0-9]/.test(a); };
    goog.string.isAlphaNumeric = function (a) { return !/[^a-zA-Z0-9]/.test(a); };
    goog.string.isSpace = function (a) { return " " == a; };
    goog.string.isUnicodeChar = function (a) { return 1 == a.length && " " <= a && "~" >= a || "\u0080" <= a && "\ufffd" >= a; };
    goog.string.stripNewlines = function (a) { return a.replace(/(\r\n|\r|\n)+/g, " "); };
    goog.string.canonicalizeNewlines = function (a) { return a.replace(/(\r\n|\r|\n)/g, "\n"); };
    goog.string.normalizeWhitespace = function (a) { return a.replace(/\xa0|\s/g, " "); };
    goog.string.normalizeSpaces = function (a) { return a.replace(/\xa0|[ \t]+/g, " "); };
    goog.string.collapseBreakingSpaces = function (a) { return a.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, ""); };
    goog.string.trim = goog.string.internal.trim;
    goog.string.trimLeft = function (a) { return a.replace(/^[\s\xa0]+/, ""); };
    goog.string.trimRight = function (a) { return a.replace(/[\s\xa0]+$/, ""); };
    goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;
    goog.string.numberAwareCompare_ = function (a, b, c) { if (a == b)
        return 0; if (!a)
        return -1; if (!b)
        return 1; for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0; g < f; g++) {
        c = d[g];
        var h = e[g];
        if (c != h)
            return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;
    } return d.length != e.length ? d.length - e.length : a < b ? -1 : 1; };
    goog.string.intAwareCompare = function (a, b) { return goog.string.numberAwareCompare_(a, b, /\d+|\D+/g); };
    goog.string.floatAwareCompare = function (a, b) { return goog.string.numberAwareCompare_(a, b, /\d+|\.\d+|\D+/g); };
    goog.string.numerateCompare = goog.string.floatAwareCompare;
    goog.string.urlEncode = function (a) { return encodeURIComponent(String(a)); };
    goog.string.urlDecode = function (a) { return decodeURIComponent(a.replace(/\+/g, " ")); };
    goog.string.newLineToBr = goog.string.internal.newLineToBr;
    goog.string.htmlEscape = function (a, b) { a = goog.string.internal.htmlEscape(a, b); goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, "&#101;")); return a; };
    goog.string.E_RE_ = /e/g;
    goog.string.unescapeEntities = function (a) { return goog.string.contains(a, "&") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a; };
    goog.string.unescapeEntitiesWithDocument = function (a, b) { return goog.string.contains(a, "&") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a; };
    goog.string.unescapeEntitiesUsingDom_ = function (a, b) {
        var c = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"' };
        var d = b ? b.createElement("div") : goog.global.document.createElement("div");
        return a.replace(goog.string.HTML_ENTITY_PATTERN_, function (a, b) {
            var e = c[a];
            if (e)
                return e;
            "#" == b.charAt(0) && (b = Number("0" + b.substr(1)), isNaN(b) || (e = String.fromCharCode(b)));
            e || (goog.dom.safe.setInnerHtml(d, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), a + " ")), e = d.firstChild.nodeValue.slice(0, -1));
            return c[a] = e;
        });
    };
    goog.string.unescapePureXmlEntities_ = function (a) { return a.replace(/&([^;]+);/g, function (a, c) { switch (c) {
        case "amp": return "&";
        case "lt": return "<";
        case "gt": return ">";
        case "quot": return '"';
        default: return "#" != c.charAt(0) || (c = Number("0" + c.substr(1)), isNaN(c)) ? a : String.fromCharCode(c);
    } }); };
    goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
    goog.string.whitespaceEscape = function (a, b) { return goog.string.newLineToBr(a.replace(/  /g, " &#160;"), b); };
    goog.string.preserveSpaces = function (a) { return a.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP); };
    goog.string.stripQuotes = function (a, b) { for (var c = b.length, d = 0; d < c; d++) {
        var e = 1 == c ? b : b.charAt(d);
        if (a.charAt(0) == e && a.charAt(a.length - 1) == e)
            return a.substring(1, a.length - 1);
    } return a; };
    goog.string.truncate = function (a, b, c) { c && (a = goog.string.unescapeEntities(a)); a.length > b && (a = a.substring(0, b - 3) + "..."); c && (a = goog.string.htmlEscape(a)); return a; };
    goog.string.truncateMiddle = function (a, b, c, d) { c && (a = goog.string.unescapeEntities(a)); if (d && a.length > b) {
        d > b && (d = b);
        var e = a.length - d;
        a = a.substring(0, b - d) + "..." + a.substring(e);
    }
    else
        a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + "..." + a.substring(e)); c && (a = goog.string.htmlEscape(a)); return a; };
    goog.string.specialEscapeChars_ = { "\x00": "\\0", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "\t": "\\t", "\x0B": "\\x0B", '"': '\\"', "\\": "\\\\", "<": "\\u003C" };
    goog.string.jsEscapeCache_ = { "'": "\\'" };
    goog.string.quote = function (a) { a = String(a); for (var b = ['"'], c = 0; c < a.length; c++) {
        var d = a.charAt(c), e = d.charCodeAt(0);
        b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));
    } b.push('"'); return b.join(""); };
    goog.string.escapeString = function (a) { for (var b = [], c = 0; c < a.length; c++)
        b[c] = goog.string.escapeChar(a.charAt(c)); return b.join(""); };
    goog.string.escapeChar = function (a) { if (a in goog.string.jsEscapeCache_)
        return goog.string.jsEscapeCache_[a]; if (a in goog.string.specialEscapeChars_)
        return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a]; var b = a.charCodeAt(0); if (31 < b && 127 > b)
        var c = a;
    else {
        if (256 > b) {
            if (c = "\\x", 16 > b || 256 < b)
                c += "0";
        }
        else
            c = "\\u", 4096 > b && (c += "0");
        c += b.toString(16).toUpperCase();
    } return goog.string.jsEscapeCache_[a] = c; };
    goog.string.contains = goog.string.internal.contains;
    goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;
    goog.string.countOf = function (a, b) { return a && b ? a.split(b).length - 1 : 0; };
    goog.string.removeAt = function (a, b, c) { var d = a; 0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c)); return d; };
    goog.string.remove = function (a, b) { return a.replace(b, ""); };
    goog.string.removeAll = function (a, b) { b = new RegExp(goog.string.regExpEscape(b), "g"); return a.replace(b, ""); };
    goog.string.replaceAll = function (a, b, c) { b = new RegExp(goog.string.regExpEscape(b), "g"); return a.replace(b, c.replace(/\$/g, "$$$$")); };
    goog.string.regExpEscape = function (a) { return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08"); };
    goog.string.repeat = String.prototype.repeat ? function (a, b) { return a.repeat(b); } : function (a, b) { return Array(b + 1).join(a); };
    goog.string.padNumber = function (a, b, c) { a = void 0 !== c ? a.toFixed(c) : String(a); c = a.indexOf("."); -1 == c && (c = a.length); return goog.string.repeat("0", Math.max(0, b - c)) + a; };
    goog.string.makeSafe = function (a) { return null == a ? "" : String(a); };
    goog.string.buildString = function (a) { return Array.prototype.join.call(arguments, ""); };
    goog.string.getRandomString = function () { return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36); };
    goog.string.compareVersions = goog.string.internal.compareVersions;
    goog.string.hashCode = function (a) { for (var b = 0, c = 0; c < a.length; ++c)
        b = 31 * b + a.charCodeAt(c) >>> 0; return b; };
    goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
    goog.string.createUniqueString = function () { return "goog_" + goog.string.uniqueStringCounter_++; };
    goog.string.toNumber = function (a) { var b = Number(a); return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b; };
    goog.string.isLowerCamelCase = function (a) { return /^[a-z]+([A-Z][a-z]*)*$/.test(a); };
    goog.string.isUpperCamelCase = function (a) { return /^([A-Z][a-z]*)+$/.test(a); };
    goog.string.toCamelCase = function (a) { return String(a).replace(/\-([a-z])/g, function (a, c) { return c.toUpperCase(); }); };
    goog.string.toSelectorCase = function (a) { return String(a).replace(/([A-Z])/g, "-$1").toLowerCase(); };
    goog.string.toTitleCase = function (a, b) { b = "string" === typeof b ? goog.string.regExpEscape(b) : "\\s"; return a.replace(new RegExp("(^" + (b ? "|[" + b + "]+" : "") + ")([a-z])", "g"), function (a, b, e) { return b + e.toUpperCase(); }); };
    goog.string.capitalize = function (a) { return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase(); };
    goog.string.parseInt = function (a) { isFinite(a) && (a = String(a)); return "string" === typeof a ? /^\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN; };
    goog.string.splitLimit = function (a, b, c) { a = a.split(b); for (var d = []; 0 < c && a.length;)
        d.push(a.shift()), c--; a.length && d.push(a.join(b)); return d; };
    goog.string.lastComponent = function (a, b) { if (b)
        "string" == typeof b && (b = [b]);
    else
        return a; for (var c = -1, d = 0; d < b.length; d++)
        if ("" != b[d]) {
            var e = a.lastIndexOf(b[d]);
            e > c && (c = e);
        } return -1 == c ? a : a.slice(c + 1); };
    goog.string.editDistance = function (a, b) { var c = [], d = []; if (a == b)
        return 0; if (!a.length || !b.length)
        return Math.max(a.length, b.length); for (var e = 0; e < b.length + 1; e++)
        c[e] = e; for (e = 0; e < a.length; e++) {
        d[0] = e + 1;
        for (var f = 0; f < b.length; f++)
            d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));
        for (f = 0; f < c.length; f++)
            c[f] = d[f];
    } return d[b.length]; };
    goog.labs.userAgent.engine = {};
    goog.labs.userAgent.engine.isPresto = function () { return goog.labs.userAgent.util.matchUserAgent("Presto"); };
    goog.labs.userAgent.engine.isTrident = function () { return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE"); };
    goog.labs.userAgent.engine.isEdge = function () { return goog.labs.userAgent.util.matchUserAgent("Edge"); };
    goog.labs.userAgent.engine.isWebKit = function () { return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge(); };
    goog.labs.userAgent.engine.isGecko = function () { return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge(); };
    goog.labs.userAgent.engine.getVersion = function () { var a = goog.labs.userAgent.util.getUserAgent(); if (a) {
        a = goog.labs.userAgent.util.extractVersionTuples(a);
        var b = goog.labs.userAgent.engine.getEngineTuple_(a);
        if (b)
            return "Gecko" == b[0] ? goog.labs.userAgent.engine.getVersionForKey_(a, "Firefox") : b[1];
        a = a[0];
        var c;
        if (a && (c = a[2]) && (c = /Trident\/([^\s;]+)/.exec(c)))
            return c[1];
    } return ""; };
    goog.labs.userAgent.engine.getEngineTuple_ = function (a) { if (!goog.labs.userAgent.engine.isEdge())
        return a[1]; for (var b = 0; b < a.length; b++) {
        var c = a[b];
        if ("Edge" == c[0])
            return c;
    } };
    goog.labs.userAgent.engine.isVersionOrHigher = function (a) { return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), a); };
    goog.labs.userAgent.engine.getVersionForKey_ = function (a, b) { return (a = goog.array.find(a, function (a) { return b == a[0]; })) && a[1] || ""; };
    goog.labs.userAgent.platform = {};
    goog.labs.userAgent.platform.isAndroid = function () { return goog.labs.userAgent.util.matchUserAgent("Android"); };
    goog.labs.userAgent.platform.isIpod = function () { return goog.labs.userAgent.util.matchUserAgent("iPod"); };
    goog.labs.userAgent.platform.isIphone = function () { return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad"); };
    goog.labs.userAgent.platform.isIpad = function () { return goog.labs.userAgent.util.matchUserAgent("iPad"); };
    goog.labs.userAgent.platform.isIos = function () { return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod(); };
    goog.labs.userAgent.platform.isMacintosh = function () { return goog.labs.userAgent.util.matchUserAgent("Macintosh"); };
    goog.labs.userAgent.platform.isLinux = function () { return goog.labs.userAgent.util.matchUserAgent("Linux"); };
    goog.labs.userAgent.platform.isWindows = function () { return goog.labs.userAgent.util.matchUserAgent("Windows"); };
    goog.labs.userAgent.platform.isChromeOS = function () { return goog.labs.userAgent.util.matchUserAgent("CrOS"); };
    goog.labs.userAgent.platform.isChromecast = function () { return goog.labs.userAgent.util.matchUserAgent("CrKey"); };
    goog.labs.userAgent.platform.isKaiOS = function () { return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS"); };
    goog.labs.userAgent.platform.getVersion = function () {
        var a = goog.labs.userAgent.util.getUserAgent(), b = "";
        goog.labs.userAgent.platform.isWindows() ? (b = /Windows (?:NT|Phone) ([0-9.]+)/, b = (a = b.exec(a)) ? a[1] : "0.0") : goog.labs.userAgent.platform.isIos() ? (b = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/, b = (a = b.exec(a)) && a[1].replace(/_/g, ".")) : goog.labs.userAgent.platform.isMacintosh() ? (b = /Mac OS X ([0-9_.]+)/, b = (a = b.exec(a)) ? a[1].replace(/_/g, ".") : "10") : goog.labs.userAgent.platform.isKaiOS() ? (b = /(?:KaiOS)\/(\S+)/i,
            b = (a = b.exec(a)) && a[1]) : goog.labs.userAgent.platform.isAndroid() ? (b = /Android\s+([^\);]+)(\)|;)/, b = (a = b.exec(a)) && a[1]) : goog.labs.userAgent.platform.isChromeOS() && (b = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/, b = (a = b.exec(a)) && a[1]);
        return b || "";
    };
    goog.labs.userAgent.platform.isVersionOrHigher = function (a) { return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), a); };
    goog.reflect = {};
    goog.reflect.object = function (a, b) { return b; };
    goog.reflect.objectProperty = function (a, b) { return a; };
    goog.reflect.sinkValue = function (a) { goog.reflect.sinkValue[" "](a); return a; };
    goog.reflect.sinkValue[" "] = goog.nullFunction;
    goog.reflect.canAccessProperty = function (a, b) { try {
        return goog.reflect.sinkValue(a[b]), !0;
    }
    catch (c) { } return !1; };
    goog.reflect.cache = function (a, b, c, d) { d = d ? d(b) : b; return Object.prototype.hasOwnProperty.call(a, d) ? a[d] : a[d] = c(b); };
    goog.userAgent = {};
    goog.userAgent.ASSUME_IE = !1;
    goog.userAgent.ASSUME_EDGE = !1;
    goog.userAgent.ASSUME_GECKO = !1;
    goog.userAgent.ASSUME_WEBKIT = !1;
    goog.userAgent.ASSUME_MOBILE_WEBKIT = !1;
    goog.userAgent.ASSUME_OPERA = !1;
    goog.userAgent.ASSUME_ANY_VERSION = !1;
    goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
    goog.userAgent.getUserAgentString = function () { return goog.labs.userAgent.util.getUserAgent(); };
    goog.userAgent.getNavigatorTyped = function () { return goog.global.navigator || null; };
    goog.userAgent.getNavigator = function () { return goog.userAgent.getNavigatorTyped(); };
    goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
    goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
    goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
    goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
    goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
    goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
    goog.userAgent.isMobile_ = function () { return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile"); };
    goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
    goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
    goog.userAgent.determinePlatform_ = function () { var a = goog.userAgent.getNavigatorTyped(); return a && a.platform || ""; };
    goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
    goog.userAgent.ASSUME_MAC = !1;
    goog.userAgent.ASSUME_WINDOWS = !1;
    goog.userAgent.ASSUME_LINUX = !1;
    goog.userAgent.ASSUME_X11 = !1;
    goog.userAgent.ASSUME_ANDROID = !1;
    goog.userAgent.ASSUME_IPHONE = !1;
    goog.userAgent.ASSUME_IPAD = !1;
    goog.userAgent.ASSUME_IPOD = !1;
    goog.userAgent.ASSUME_KAIOS = !1;
    goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
    goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
    goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
    goog.userAgent.isLegacyLinux_ = function () { return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS(); };
    goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
    goog.userAgent.isX11_ = function () { var a = goog.userAgent.getNavigatorTyped(); return !!a && goog.string.contains(a.appVersion || "", "X11"); };
    goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
    goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
    goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
    goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
    goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
    goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos();
    goog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_KAIOS : goog.labs.userAgent.platform.isKaiOS();
    goog.userAgent.determineVersion_ = function () { var a = "", b = goog.userAgent.getVersionRegexResult_(); b && (a = b ? b[1] : ""); return goog.userAgent.IE && (b = goog.userAgent.getDocumentMode_(), null != b && b > parseFloat(a)) ? String(b) : a; };
    goog.userAgent.getVersionRegexResult_ = function () { var a = goog.userAgent.getUserAgentString(); if (goog.userAgent.GECKO)
        return /rv:([^\);]+)(\)|;)/.exec(a); if (goog.userAgent.EDGE)
        return /Edge\/([\d\.]+)/.exec(a); if (goog.userAgent.IE)
        return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a); if (goog.userAgent.WEBKIT)
        return /WebKit\/(\S+)/.exec(a); if (goog.userAgent.OPERA)
        return /(?:Version)[ \/]?(\S+)/.exec(a); };
    goog.userAgent.getDocumentMode_ = function () { var a = goog.global.document; return a ? a.documentMode : void 0; };
    goog.userAgent.VERSION = goog.userAgent.determineVersion_();
    goog.userAgent.compare = function (a, b) { return goog.string.compareVersions(a, b); };
    goog.userAgent.isVersionOrHigherCache_ = {};
    goog.userAgent.isVersionOrHigher = function (a) { return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, a, function () { return 0 <= goog.string.compareVersions(goog.userAgent.VERSION, a); }); };
    goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
    goog.userAgent.isDocumentModeOrHigher = function (a) { return Number(goog.userAgent.DOCUMENT_MODE) >= a; };
    goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
    goog.userAgent.DOCUMENT_MODE = function () { if (goog.global.document && goog.userAgent.IE) {
        var a = goog.userAgent.getDocumentMode_();
        return a ? a : parseInt(goog.userAgent.VERSION, 10) || void 0;
    } }();
    goog.userAgent.product = {};
    goog.userAgent.product.ASSUME_FIREFOX = !1;
    goog.userAgent.product.ASSUME_IPHONE = !1;
    goog.userAgent.product.ASSUME_IPAD = !1;
    goog.userAgent.product.ASSUME_ANDROID = !1;
    goog.userAgent.product.ASSUME_CHROME = !1;
    goog.userAgent.product.ASSUME_SAFARI = !1;
    goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
    goog.userAgent.product.OPERA = goog.userAgent.OPERA;
    goog.userAgent.product.IE = goog.userAgent.IE;
    goog.userAgent.product.EDGE = goog.userAgent.EDGE;
    goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
    goog.userAgent.product.isIphoneOrIpod_ = function () { return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod(); };
    goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
    goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
    goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
    goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
    goog.userAgent.product.isSafariDesktop_ = function () { return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos(); };
    goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
    goog.crypt.base64 = {};
    goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "+/=";
    goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "-_.";
    goog.crypt.base64.Alphabet = { DEFAULT: 0, NO_PADDING: 1, WEBSAFE: 2, WEBSAFE_DOT_PADDING: 3, WEBSAFE_NO_PADDING: 4 };
    goog.crypt.base64.paddingChars_ = "=.";
    goog.crypt.base64.isPadding_ = function (a) { return goog.string.contains(goog.crypt.base64.paddingChars_, a); };
    goog.crypt.base64.byteToCharMaps_ = {};
    goog.crypt.base64.charToByteMap_ = null;
    goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;
    goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || "function" == typeof goog.global.btoa;
    goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && "function" == typeof goog.global.atob;
    goog.crypt.base64.encodeByteArray = function (a, b) { goog.asserts.assert(goog.isArrayLike(a), "encodeByteArray takes an array as a parameter"); void 0 === b && (b = goog.crypt.base64.Alphabet.DEFAULT); goog.crypt.base64.init_(); b = goog.crypt.base64.byteToCharMaps_[b]; for (var c = [], d = 0; d < a.length; d += 3) {
        var e = a[d], f = d + 1 < a.length, g = f ? a[d + 1] : 0, h = d + 2 < a.length, k = h ? a[d + 2] : 0, l = e >> 2;
        e = (e & 3) << 4 | g >> 4;
        g = (g & 15) << 2 | k >> 6;
        k &= 63;
        h || (k = 64, f || (g = 64));
        c.push(b[l], b[e], b[g] || "", b[k] || "");
    } return c.join(""); };
    goog.crypt.base64.encodeString = function (a, b) { return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !b ? goog.global.btoa(a) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a), b); };
    goog.crypt.base64.decodeString = function (a, b) { if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !b)
        return goog.global.atob(a); var c = ""; goog.crypt.base64.decodeStringInternal_(a, function (a) { c += String.fromCharCode(a); }); return c; };
    goog.crypt.base64.decodeStringToByteArray = function (a, b) { var c = []; goog.crypt.base64.decodeStringInternal_(a, function (a) { c.push(a); }); return c; };
    goog.crypt.base64.decodeStringToUint8Array = function (a) { goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays"); var b = a.length, c = 3 * b / 4; c % 3 ? c = Math.floor(c) : goog.crypt.base64.isPadding_(a[b - 1]) && (c = goog.crypt.base64.isPadding_(a[b - 2]) ? c - 2 : c - 1); var d = new Uint8Array(c), e = 0; goog.crypt.base64.decodeStringInternal_(a, function (a) { d[e++] = a; }); return d.subarray(0, e); };
    goog.crypt.base64.decodeStringInternal_ = function (a, b) { function c(b) { for (; d < a.length;) {
        var c = a.charAt(d++), e = goog.crypt.base64.charToByteMap_[c];
        if (null != e)
            return e;
        if (!goog.string.isEmptyOrWhitespace(c))
            throw Error("Unknown base64 encoding at char: " + c);
    } return b; } goog.crypt.base64.init_(); for (var d = 0;;) {
        var e = c(-1), f = c(0), g = c(64), h = c(64);
        if (64 === h && -1 === e)
            break;
        b(e << 2 | f >> 4);
        64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));
    } };
    goog.crypt.base64.init_ = function () { if (!goog.crypt.base64.charToByteMap_) {
        goog.crypt.base64.charToByteMap_ = {};
        for (var a = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(""), b = ["+/=", "+/", "-_=", "-_.", "-_"], c = 0; 5 > c; c++) {
            var d = a.concat(b[c].split(""));
            goog.crypt.base64.byteToCharMaps_[c] = d;
            for (var e = 0; e < d.length; e++) {
                var f = d[e], g = goog.crypt.base64.charToByteMap_[f];
                void 0 === g ? goog.crypt.base64.charToByteMap_[f] = e : goog.asserts.assert(g === e);
            }
        }
    } };
    jspb.utils = {};
    jspb.utils.split64Low = 0;
    jspb.utils.split64High = 0;
    jspb.utils.splitUint64 = function (a) { var b = a >>> 0; a = Math.floor((a - b) / jspb.BinaryConstants.TWO_TO_32) >>> 0; jspb.utils.split64Low = b; jspb.utils.split64High = a; };
    jspb.utils.splitInt64 = function (a) { var b = 0 > a; a = Math.abs(a); var c = a >>> 0; a = Math.floor((a - c) / jspb.BinaryConstants.TWO_TO_32); a >>>= 0; b && (a = ~a >>> 0, c = (~c >>> 0) + 1, 4294967295 < c && (c = 0, a++, 4294967295 < a && (a = 0))); jspb.utils.split64Low = c; jspb.utils.split64High = a; };
    jspb.utils.splitZigzag64 = function (a) { var b = 0 > a; a = 2 * Math.abs(a); jspb.utils.splitUint64(a); a = jspb.utils.split64Low; var c = jspb.utils.split64High; b && (0 == a ? 0 == c ? c = a = 4294967295 : (c--, a = 4294967295) : a--); jspb.utils.split64Low = a; jspb.utils.split64High = c; };
    jspb.utils.splitFloat32 = function (a) {
        var b = 0 > a ? 1 : 0;
        a = b ? -a : a;
        if (0 === a)
            0 < 1 / a ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 0) : (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483648);
        else if (isNaN(a))
            jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483647;
        else if (a > jspb.BinaryConstants.FLOAT32_MAX)
            jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 | 2139095040) >>> 0;
        else if (a < jspb.BinaryConstants.FLOAT32_MIN)
            a = Math.round(a / Math.pow(2, -149)), jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 |
                a) >>> 0;
        else {
            var c = Math.floor(Math.log(a) / Math.LN2);
            a *= Math.pow(2, -c);
            a = Math.round(a * jspb.BinaryConstants.TWO_TO_23);
            16777216 <= a && ++c;
            jspb.utils.split64High = 0;
            jspb.utils.split64Low = (b << 31 | c + 127 << 23 | a & 8388607) >>> 0;
        }
    };
    jspb.utils.splitFloat64 = function (a) {
        var b = 0 > a ? 1 : 0;
        a = b ? -a : a;
        if (0 === a)
            jspb.utils.split64High = 0 < 1 / a ? 0 : 2147483648, jspb.utils.split64Low = 0;
        else if (isNaN(a))
            jspb.utils.split64High = 2147483647, jspb.utils.split64Low = 4294967295;
        else if (a > jspb.BinaryConstants.FLOAT64_MAX)
            jspb.utils.split64High = (b << 31 | 2146435072) >>> 0, jspb.utils.split64Low = 0;
        else if (a < jspb.BinaryConstants.FLOAT64_MIN) {
            var c = a / Math.pow(2, -1074);
            a = c / jspb.BinaryConstants.TWO_TO_32;
            jspb.utils.split64High = (b << 31 | a) >>> 0;
            jspb.utils.split64Low = c >>> 0;
        }
        else {
            c =
                a;
            var d = 0;
            if (2 <= c)
                for (; 2 <= c && 1023 > d;)
                    d++, c /= 2;
            else
                for (; 1 > c && -1022 < d;)
                    c *= 2, d--;
            c = a * Math.pow(2, -d);
            a = c * jspb.BinaryConstants.TWO_TO_20 & 1048575;
            c = c * jspb.BinaryConstants.TWO_TO_52 >>> 0;
            jspb.utils.split64High = (b << 31 | d + 1023 << 20 | a) >>> 0;
            jspb.utils.split64Low = c;
        }
    };
    jspb.utils.splitHash64 = function (a) { var b = a.charCodeAt(0), c = a.charCodeAt(1), d = a.charCodeAt(2), e = a.charCodeAt(3), f = a.charCodeAt(4), g = a.charCodeAt(5), h = a.charCodeAt(6); a = a.charCodeAt(7); jspb.utils.split64Low = b + (c << 8) + (d << 16) + (e << 24) >>> 0; jspb.utils.split64High = f + (g << 8) + (h << 16) + (a << 24) >>> 0; };
    jspb.utils.joinUint64 = function (a, b) { return b * jspb.BinaryConstants.TWO_TO_32 + (a >>> 0); };
    jspb.utils.joinInt64 = function (a, b) { var c = b & 2147483648; c && (a = ~a + 1 >>> 0, b = ~b >>> 0, 0 == a && (b = b + 1 >>> 0)); a = jspb.utils.joinUint64(a, b); return c ? -a : a; };
    jspb.utils.toZigzag64 = function (a, b, c) { var d = b >> 31; return c(a << 1 ^ d, (b << 1 | a >>> 31) ^ d); };
    jspb.utils.joinZigzag64 = function (a, b) { return jspb.utils.fromZigzag64(a, b, jspb.utils.joinInt64); };
    jspb.utils.fromZigzag64 = function (a, b, c) { var d = -(a & 1); return c((a >>> 1 | b << 31) ^ d, b >>> 1 ^ d); };
    jspb.utils.joinFloat32 = function (a, b) { b = 2 * (a >> 31) + 1; var c = a >>> 23 & 255; a &= 8388607; return 255 == c ? a ? NaN : Infinity * b : 0 == c ? b * Math.pow(2, -149) * a : b * Math.pow(2, c - 150) * (a + Math.pow(2, 23)); };
    jspb.utils.joinFloat64 = function (a, b) { var c = 2 * (b >> 31) + 1, d = b >>> 20 & 2047; a = jspb.BinaryConstants.TWO_TO_32 * (b & 1048575) + a; return 2047 == d ? a ? NaN : Infinity * c : 0 == d ? c * Math.pow(2, -1074) * a : c * Math.pow(2, d - 1075) * (a + jspb.BinaryConstants.TWO_TO_52); };
    jspb.utils.joinHash64 = function (a, b) { return String.fromCharCode(a >>> 0 & 255, a >>> 8 & 255, a >>> 16 & 255, a >>> 24 & 255, b >>> 0 & 255, b >>> 8 & 255, b >>> 16 & 255, b >>> 24 & 255); };
    jspb.utils.DIGITS = "0123456789abcdef".split("");
    jspb.utils.ZERO_CHAR_CODE_ = 48;
    jspb.utils.A_CHAR_CODE_ = 97;
    jspb.utils.joinUnsignedDecimalString = function (a, b) { function c(a, b) { a = a ? String(a) : ""; return b ? "0000000".slice(a.length) + a : a; } if (2097151 >= b)
        return "" + jspb.utils.joinUint64(a, b); var d = (a >>> 24 | b << 8) >>> 0 & 16777215; b = b >> 16 & 65535; a = (a & 16777215) + 6777216 * d + 6710656 * b; d += 8147497 * b; b *= 2; 1E7 <= a && (d += Math.floor(a / 1E7), a %= 1E7); 1E7 <= d && (b += Math.floor(d / 1E7), d %= 1E7); return c(b, 0) + c(d, b) + c(a, 1); };
    jspb.utils.joinSignedDecimalString = function (a, b) { var c = b & 2147483648; c && (a = ~a + 1 >>> 0, b = ~b + (0 == a ? 1 : 0) >>> 0); a = jspb.utils.joinUnsignedDecimalString(a, b); return c ? "-" + a : a; };
    jspb.utils.hash64ToDecimalString = function (a, b) { jspb.utils.splitHash64(a); a = jspb.utils.split64Low; var c = jspb.utils.split64High; return b ? jspb.utils.joinSignedDecimalString(a, c) : jspb.utils.joinUnsignedDecimalString(a, c); };
    jspb.utils.hash64ArrayToDecimalStrings = function (a, b) { for (var c = Array(a.length), d = 0; d < a.length; d++)
        c[d] = jspb.utils.hash64ToDecimalString(a[d], b); return c; };
    jspb.utils.decimalStringToHash64 = function (a) { function b(a, b) { for (var c = 0; 8 > c && (1 !== a || 0 < b); c++)
        b = a * e[c] + b, e[c] = b & 255, b >>>= 8; } function c() { for (var a = 0; 8 > a; a++)
        e[a] = ~e[a] & 255; } jspb.asserts.assert(0 < a.length); var d = !1; "-" === a[0] && (d = !0, a = a.slice(1)); for (var e = [0, 0, 0, 0, 0, 0, 0, 0], f = 0; f < a.length; f++)
        b(10, a.charCodeAt(f) - jspb.utils.ZERO_CHAR_CODE_); d && (c(), b(1, 1)); return goog.crypt.byteArrayToString(e); };
    jspb.utils.splitDecimalString = function (a) { jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a)); };
    jspb.utils.toHexDigit_ = function (a) { return String.fromCharCode(10 > a ? jspb.utils.ZERO_CHAR_CODE_ + a : jspb.utils.A_CHAR_CODE_ - 10 + a); };
    jspb.utils.fromHexCharCode_ = function (a) { return a >= jspb.utils.A_CHAR_CODE_ ? a - jspb.utils.A_CHAR_CODE_ + 10 : a - jspb.utils.ZERO_CHAR_CODE_; };
    jspb.utils.hash64ToHexString = function (a) { var b = Array(18); b[0] = "0"; b[1] = "x"; for (var c = 0; 8 > c; c++) {
        var d = a.charCodeAt(7 - c);
        b[2 * c + 2] = jspb.utils.toHexDigit_(d >> 4);
        b[2 * c + 3] = jspb.utils.toHexDigit_(d & 15);
    } return b.join(""); };
    jspb.utils.hexStringToHash64 = function (a) { a = a.toLowerCase(); jspb.asserts.assert(18 == a.length); jspb.asserts.assert("0" == a[0]); jspb.asserts.assert("x" == a[1]); for (var b = "", c = 0; 8 > c; c++) {
        var d = jspb.utils.fromHexCharCode_(a.charCodeAt(2 * c + 2)), e = jspb.utils.fromHexCharCode_(a.charCodeAt(2 * c + 3));
        b = String.fromCharCode(16 * d + e) + b;
    } return b; };
    jspb.utils.hash64ToNumber = function (a, b) { jspb.utils.splitHash64(a); a = jspb.utils.split64Low; var c = jspb.utils.split64High; return b ? jspb.utils.joinInt64(a, c) : jspb.utils.joinUint64(a, c); };
    jspb.utils.numberToHash64 = function (a) { jspb.utils.splitInt64(a); return jspb.utils.joinHash64(jspb.utils.split64Low, jspb.utils.split64High); };
    jspb.utils.countVarints = function (a, b, c) { for (var d = 0, e = b; e < c; e++)
        d += a[e] >> 7; return c - b - d; };
    jspb.utils.countVarintFields = function (a, b, c, d) { var e = 0; d = 8 * d + jspb.BinaryConstants.WireType.VARINT; if (128 > d)
        for (; b < c && a[b++] == d;)
            for (e++;;) {
                var f = a[b++];
                if (0 == (f & 128))
                    break;
            }
    else
        for (; b < c;) {
            for (f = d; 128 < f;) {
                if (a[b] != (f & 127 | 128))
                    return e;
                b++;
                f >>= 7;
            }
            if (a[b++] != f)
                break;
            for (e++; f = a[b++], 0 != (f & 128);)
                ;
        } return e; };
    jspb.utils.countFixedFields_ = function (a, b, c, d, e) { var f = 0; if (128 > d)
        for (; b < c && a[b++] == d;)
            f++, b += e;
    else
        for (; b < c;) {
            for (var g = d; 128 < g;) {
                if (a[b++] != (g & 127 | 128))
                    return f;
                g >>= 7;
            }
            if (a[b++] != g)
                break;
            f++;
            b += e;
        } return f; };
    jspb.utils.countFixed32Fields = function (a, b, c, d) { return jspb.utils.countFixedFields_(a, b, c, 8 * d + jspb.BinaryConstants.WireType.FIXED32, 4); };
    jspb.utils.countFixed64Fields = function (a, b, c, d) { return jspb.utils.countFixedFields_(a, b, c, 8 * d + jspb.BinaryConstants.WireType.FIXED64, 8); };
    jspb.utils.countDelimitedFields = function (a, b, c, d) { var e = 0; for (d = 8 * d + jspb.BinaryConstants.WireType.DELIMITED; b < c;) {
        for (var f = d; 128 < f;) {
            if (a[b++] != (f & 127 | 128))
                return e;
            f >>= 7;
        }
        if (a[b++] != f)
            break;
        e++;
        for (var g = 0, h = 1; f = a[b++], g += (f & 127) * h, h *= 128, 0 != (f & 128);)
            ;
        b += g;
    } return e; };
    jspb.utils.debugBytesToTextFormat = function (a) { var b = '"'; if (a) {
        a = jspb.utils.byteSourceToUint8Array(a);
        for (var c = 0; c < a.length; c++)
            b += "\\x", 16 > a[c] && (b += "0"), b += a[c].toString(16);
    } return b + '"'; };
    jspb.utils.debugScalarToTextFormat = function (a) { return "string" === typeof a ? goog.string.quote(a) : a.toString(); };
    jspb.utils.stringToByteArray = function (a) { for (var b = new Uint8Array(a.length), c = 0; c < a.length; c++) {
        var d = a.charCodeAt(c);
        if (255 < d)
            throw Error("Conversion error: string contains codepoint outside of byte range");
        b[c] = d;
    } return b; };
    jspb.utils.byteSourceToUint8Array = function (a) { if (a.constructor === Uint8Array)
        return a; if (a.constructor === ArrayBuffer || a.constructor === Array)
        return new Uint8Array(a); if (a.constructor === String)
        return goog.crypt.base64.decodeStringToUint8Array(a); if (a instanceof Uint8Array)
        return new Uint8Array(a.buffer, a.byteOffset, a.byteLength); jspb.asserts.fail("Type not convertible to Uint8Array."); return new Uint8Array(0); };
    jspb.BinaryDecoder = function (a, b, c) { this.bytes_ = null; this.cursor_ = this.end_ = this.start_ = 0; this.error_ = !1; a && this.setBlock(a, b, c); };
    jspb.BinaryDecoder.instanceCache_ = [];
    jspb.BinaryDecoder.alloc = function (a, b, c) { if (jspb.BinaryDecoder.instanceCache_.length) {
        var d = jspb.BinaryDecoder.instanceCache_.pop();
        a && d.setBlock(a, b, c);
        return d;
    } return new jspb.BinaryDecoder(a, b, c); };
    jspb.BinaryDecoder.prototype.free = function () { this.clear(); 100 > jspb.BinaryDecoder.instanceCache_.length && jspb.BinaryDecoder.instanceCache_.push(this); };
    jspb.BinaryDecoder.prototype.clone = function () { return jspb.BinaryDecoder.alloc(this.bytes_, this.start_, this.end_ - this.start_); };
    jspb.BinaryDecoder.prototype.clear = function () { this.bytes_ = null; this.cursor_ = this.end_ = this.start_ = 0; this.error_ = !1; };
    jspb.BinaryDecoder.prototype.getBuffer = function () { return this.bytes_; };
    jspb.BinaryDecoder.prototype.setBlock = function (a, b, c) { this.bytes_ = jspb.utils.byteSourceToUint8Array(a); this.start_ = void 0 !== b ? b : 0; this.end_ = void 0 !== c ? this.start_ + c : this.bytes_.length; this.cursor_ = this.start_; };
    jspb.BinaryDecoder.prototype.getEnd = function () { return this.end_; };
    jspb.BinaryDecoder.prototype.setEnd = function (a) { this.end_ = a; };
    jspb.BinaryDecoder.prototype.reset = function () { this.cursor_ = this.start_; };
    jspb.BinaryDecoder.prototype.getCursor = function () { return this.cursor_; };
    jspb.BinaryDecoder.prototype.setCursor = function (a) { this.cursor_ = a; };
    jspb.BinaryDecoder.prototype.advance = function (a) { this.cursor_ += a; jspb.asserts.assert(this.cursor_ <= this.end_); };
    jspb.BinaryDecoder.prototype.atEnd = function () { return this.cursor_ == this.end_; };
    jspb.BinaryDecoder.prototype.pastEnd = function () { return this.cursor_ > this.end_; };
    jspb.BinaryDecoder.prototype.getError = function () { return this.error_ || 0 > this.cursor_ || this.cursor_ > this.end_; };
    jspb.BinaryDecoder.prototype.readSplitVarint64 = function (a) { for (var b = 128, c = 0, d = 0, e = 0; 4 > e && 128 <= b; e++)
        b = this.bytes_[this.cursor_++], c |= (b & 127) << 7 * e; 128 <= b && (b = this.bytes_[this.cursor_++], c |= (b & 127) << 28, d |= (b & 127) >> 4); if (128 <= b)
        for (e = 0; 5 > e && 128 <= b; e++)
            b = this.bytes_[this.cursor_++], d |= (b & 127) << 7 * e + 3; if (128 > b)
        return a(c >>> 0, d >>> 0); jspb.asserts.fail("Failed to read varint, encoding is invalid."); this.error_ = !0; };
    jspb.BinaryDecoder.prototype.readSplitZigzagVarint64 = function (a) { return this.readSplitVarint64(function (b, c) { return jspb.utils.fromZigzag64(b, c, a); }); };
    jspb.BinaryDecoder.prototype.readSplitFixed64 = function (a) { var b = this.bytes_, c = this.cursor_; this.cursor_ += 8; for (var d = 0, e = 0, f = c + 7; f >= c; f--)
        d = d << 8 | b[f], e = e << 8 | b[f + 4]; return a(d, e); };
    jspb.BinaryDecoder.prototype.skipVarint = function () { for (; this.bytes_[this.cursor_] & 128;)
        this.cursor_++; this.cursor_++; };
    jspb.BinaryDecoder.prototype.unskipVarint = function (a) { for (; 128 < a;)
        this.cursor_--, a >>>= 7; this.cursor_--; };
    jspb.BinaryDecoder.prototype.readUnsignedVarint32 = function () {
        var a = this.bytes_;
        var b = a[this.cursor_ + 0];
        var c = b & 127;
        if (128 > b)
            return this.cursor_ += 1, jspb.asserts.assert(this.cursor_ <= this.end_), c;
        b = a[this.cursor_ + 1];
        c |= (b & 127) << 7;
        if (128 > b)
            return this.cursor_ += 2, jspb.asserts.assert(this.cursor_ <= this.end_), c;
        b = a[this.cursor_ + 2];
        c |= (b & 127) << 14;
        if (128 > b)
            return this.cursor_ += 3, jspb.asserts.assert(this.cursor_ <= this.end_), c;
        b = a[this.cursor_ + 3];
        c |= (b & 127) << 21;
        if (128 > b)
            return this.cursor_ += 4, jspb.asserts.assert(this.cursor_ <=
                this.end_), c;
        b = a[this.cursor_ + 4];
        c |= (b & 15) << 28;
        if (128 > b)
            return this.cursor_ += 5, jspb.asserts.assert(this.cursor_ <= this.end_), c >>> 0;
        this.cursor_ += 5;
        128 <= a[this.cursor_++] && 128 <= a[this.cursor_++] && 128 <= a[this.cursor_++] && 128 <= a[this.cursor_++] && 128 <= a[this.cursor_++] && jspb.asserts.assert(!1);
        jspb.asserts.assert(this.cursor_ <= this.end_);
        return c;
    };
    jspb.BinaryDecoder.prototype.readSignedVarint32 = function () { return ~~this.readUnsignedVarint32(); };
    jspb.BinaryDecoder.prototype.readUnsignedVarint32String = function () { return this.readUnsignedVarint32().toString(); };
    jspb.BinaryDecoder.prototype.readSignedVarint32String = function () { return this.readSignedVarint32().toString(); };
    jspb.BinaryDecoder.prototype.readZigzagVarint32 = function () { var a = this.readUnsignedVarint32(); return a >>> 1 ^ -(a & 1); };
    jspb.BinaryDecoder.prototype.readUnsignedVarint64 = function () { return this.readSplitVarint64(jspb.utils.joinUint64); };
    jspb.BinaryDecoder.prototype.readUnsignedVarint64String = function () { return this.readSplitVarint64(jspb.utils.joinUnsignedDecimalString); };
    jspb.BinaryDecoder.prototype.readSignedVarint64 = function () { return this.readSplitVarint64(jspb.utils.joinInt64); };
    jspb.BinaryDecoder.prototype.readSignedVarint64String = function () { return this.readSplitVarint64(jspb.utils.joinSignedDecimalString); };
    jspb.BinaryDecoder.prototype.readZigzagVarint64 = function () { return this.readSplitVarint64(jspb.utils.joinZigzag64); };
    jspb.BinaryDecoder.prototype.readZigzagVarintHash64 = function () { return this.readSplitZigzagVarint64(jspb.utils.joinHash64); };
    jspb.BinaryDecoder.prototype.readZigzagVarint64String = function () { return this.readSplitZigzagVarint64(jspb.utils.joinSignedDecimalString); };
    jspb.BinaryDecoder.prototype.readUint8 = function () { var a = this.bytes_[this.cursor_ + 0]; this.cursor_ += 1; jspb.asserts.assert(this.cursor_ <= this.end_); return a; };
    jspb.BinaryDecoder.prototype.readUint16 = function () { var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1]; this.cursor_ += 2; jspb.asserts.assert(this.cursor_ <= this.end_); return a << 0 | b << 8; };
    jspb.BinaryDecoder.prototype.readUint32 = function () { var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1], c = this.bytes_[this.cursor_ + 2], d = this.bytes_[this.cursor_ + 3]; this.cursor_ += 4; jspb.asserts.assert(this.cursor_ <= this.end_); return (a << 0 | b << 8 | c << 16 | d << 24) >>> 0; };
    jspb.BinaryDecoder.prototype.readUint64 = function () { var a = this.readUint32(), b = this.readUint32(); return jspb.utils.joinUint64(a, b); };
    jspb.BinaryDecoder.prototype.readUint64String = function () { var a = this.readUint32(), b = this.readUint32(); return jspb.utils.joinUnsignedDecimalString(a, b); };
    jspb.BinaryDecoder.prototype.readInt8 = function () { var a = this.bytes_[this.cursor_ + 0]; this.cursor_ += 1; jspb.asserts.assert(this.cursor_ <= this.end_); return a << 24 >> 24; };
    jspb.BinaryDecoder.prototype.readInt16 = function () { var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1]; this.cursor_ += 2; jspb.asserts.assert(this.cursor_ <= this.end_); return (a << 0 | b << 8) << 16 >> 16; };
    jspb.BinaryDecoder.prototype.readInt32 = function () { var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1], c = this.bytes_[this.cursor_ + 2], d = this.bytes_[this.cursor_ + 3]; this.cursor_ += 4; jspb.asserts.assert(this.cursor_ <= this.end_); return a << 0 | b << 8 | c << 16 | d << 24; };
    jspb.BinaryDecoder.prototype.readInt64 = function () { var a = this.readUint32(), b = this.readUint32(); return jspb.utils.joinInt64(a, b); };
    jspb.BinaryDecoder.prototype.readInt64String = function () { var a = this.readUint32(), b = this.readUint32(); return jspb.utils.joinSignedDecimalString(a, b); };
    jspb.BinaryDecoder.prototype.readFloat = function () { var a = this.readUint32(); return jspb.utils.joinFloat32(a, 0); };
    jspb.BinaryDecoder.prototype.readDouble = function () { var a = this.readUint32(), b = this.readUint32(); return jspb.utils.joinFloat64(a, b); };
    jspb.BinaryDecoder.prototype.readBool = function () { return !!this.bytes_[this.cursor_++]; };
    jspb.BinaryDecoder.prototype.readEnum = function () { return this.readSignedVarint32(); };
    jspb.BinaryDecoder.prototype.readString = function (a) {
        var b = this.bytes_, c = this.cursor_;
        a = c + a;
        for (var d = [], e = ""; c < a;) {
            var f = b[c++];
            if (128 > f)
                d.push(f);
            else if (192 > f)
                continue;
            else if (224 > f) {
                var g = b[c++];
                d.push((f & 31) << 6 | g & 63);
            }
            else if (240 > f) {
                g = b[c++];
                var h = b[c++];
                d.push((f & 15) << 12 | (g & 63) << 6 | h & 63);
            }
            else if (248 > f) {
                g = b[c++];
                h = b[c++];
                var k = b[c++];
                f = (f & 7) << 18 | (g & 63) << 12 | (h & 63) << 6 | k & 63;
                f -= 65536;
                d.push((f >> 10 & 1023) + 55296, (f & 1023) + 56320);
            }
            8192 <= d.length && (e += String.fromCharCode.apply(null, d), d.length = 0);
        }
        e += goog.crypt.byteArrayToString(d);
        this.cursor_ = c;
        return e;
    };
    jspb.BinaryDecoder.prototype.readStringWithLength = function () { var a = this.readUnsignedVarint32(); return this.readString(a); };
    jspb.BinaryDecoder.prototype.readBytes = function (a) { if (0 > a || this.cursor_ + a > this.bytes_.length)
        return this.error_ = !0, jspb.asserts.fail("Invalid byte length!"), new Uint8Array(0); var b = this.bytes_.subarray(this.cursor_, this.cursor_ + a); this.cursor_ += a; jspb.asserts.assert(this.cursor_ <= this.end_); return b; };
    jspb.BinaryDecoder.prototype.readVarintHash64 = function () { return this.readSplitVarint64(jspb.utils.joinHash64); };
    jspb.BinaryDecoder.prototype.readFixedHash64 = function () { var a = this.bytes_, b = this.cursor_, c = a[b + 0], d = a[b + 1], e = a[b + 2], f = a[b + 3], g = a[b + 4], h = a[b + 5], k = a[b + 6]; a = a[b + 7]; this.cursor_ += 8; return String.fromCharCode(c, d, e, f, g, h, k, a); };
    jspb.BinaryReader = function (a, b, c) { this.decoder_ = jspb.BinaryDecoder.alloc(a, b, c); this.fieldCursor_ = this.decoder_.getCursor(); this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER; this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID; this.error_ = !1; this.readCallbacks_ = null; };
    jspb.BinaryReader.instanceCache_ = [];
    jspb.BinaryReader.alloc = function (a, b, c) { if (jspb.BinaryReader.instanceCache_.length) {
        var d = jspb.BinaryReader.instanceCache_.pop();
        a && d.decoder_.setBlock(a, b, c);
        return d;
    } return new jspb.BinaryReader(a, b, c); };
    jspb.BinaryReader.prototype.alloc = jspb.BinaryReader.alloc;
    jspb.BinaryReader.prototype.free = function () { this.decoder_.clear(); this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER; this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID; this.error_ = !1; this.readCallbacks_ = null; 100 > jspb.BinaryReader.instanceCache_.length && jspb.BinaryReader.instanceCache_.push(this); };
    jspb.BinaryReader.prototype.getFieldCursor = function () { return this.fieldCursor_; };
    jspb.BinaryReader.prototype.getCursor = function () { return this.decoder_.getCursor(); };
    jspb.BinaryReader.prototype.getBuffer = function () { return this.decoder_.getBuffer(); };
    jspb.BinaryReader.prototype.getFieldNumber = function () { return this.nextField_; };
    goog.exportProperty(jspb.BinaryReader.prototype, "getFieldNumber", jspb.BinaryReader.prototype.getFieldNumber);
    jspb.BinaryReader.prototype.getWireType = function () { return this.nextWireType_; };
    jspb.BinaryReader.prototype.isDelimited = function () { return this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED; };
    goog.exportProperty(jspb.BinaryReader.prototype, "isDelimited", jspb.BinaryReader.prototype.isDelimited);
    jspb.BinaryReader.prototype.isEndGroup = function () { return this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP; };
    goog.exportProperty(jspb.BinaryReader.prototype, "isEndGroup", jspb.BinaryReader.prototype.isEndGroup);
    jspb.BinaryReader.prototype.getError = function () { return this.error_ || this.decoder_.getError(); };
    jspb.BinaryReader.prototype.setBlock = function (a, b, c) { this.decoder_.setBlock(a, b, c); this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER; this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID; };
    jspb.BinaryReader.prototype.reset = function () { this.decoder_.reset(); this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER; this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID; };
    jspb.BinaryReader.prototype.advance = function (a) { this.decoder_.advance(a); };
    jspb.BinaryReader.prototype.nextField = function () {
        if (this.decoder_.atEnd())
            return !1;
        if (this.getError())
            return jspb.asserts.fail("Decoder hit an error"), !1;
        this.fieldCursor_ = this.decoder_.getCursor();
        var a = this.decoder_.readUnsignedVarint32(), b = a >>> 3;
        a &= 7;
        if (a != jspb.BinaryConstants.WireType.VARINT && a != jspb.BinaryConstants.WireType.FIXED32 && a != jspb.BinaryConstants.WireType.FIXED64 && a != jspb.BinaryConstants.WireType.DELIMITED && a != jspb.BinaryConstants.WireType.START_GROUP && a != jspb.BinaryConstants.WireType.END_GROUP)
            return jspb.asserts.fail("Invalid wire type: %s (at position %s)", a, this.fieldCursor_), this.error_ = !0, !1;
        this.nextField_ = b;
        this.nextWireType_ = a;
        return !0;
    };
    goog.exportProperty(jspb.BinaryReader.prototype, "nextField", jspb.BinaryReader.prototype.nextField);
    jspb.BinaryReader.prototype.unskipHeader = function () { this.decoder_.unskipVarint(this.nextField_ << 3 | this.nextWireType_); };
    jspb.BinaryReader.prototype.skipMatchingFields = function () { var a = this.nextField_; for (this.unskipHeader(); this.nextField() && this.getFieldNumber() == a;)
        this.skipField(); this.decoder_.atEnd() || this.unskipHeader(); };
    jspb.BinaryReader.prototype.skipVarintField = function () { this.nextWireType_ != jspb.BinaryConstants.WireType.VARINT ? (jspb.asserts.fail("Invalid wire type for skipVarintField"), this.skipField()) : this.decoder_.skipVarint(); };
    jspb.BinaryReader.prototype.skipDelimitedField = function () { if (this.nextWireType_ != jspb.BinaryConstants.WireType.DELIMITED)
        jspb.asserts.fail("Invalid wire type for skipDelimitedField"), this.skipField();
    else {
        var a = this.decoder_.readUnsignedVarint32();
        this.decoder_.advance(a);
    } };
    jspb.BinaryReader.prototype.skipFixed32Field = function () { this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED32 ? (jspb.asserts.fail("Invalid wire type for skipFixed32Field"), this.skipField()) : this.decoder_.advance(4); };
    jspb.BinaryReader.prototype.skipFixed64Field = function () { this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED64 ? (jspb.asserts.fail("Invalid wire type for skipFixed64Field"), this.skipField()) : this.decoder_.advance(8); };
    jspb.BinaryReader.prototype.skipGroup = function () { var a = this.nextField_; do {
        if (!this.nextField()) {
            jspb.asserts.fail("Unmatched start-group tag: stream EOF");
            this.error_ = !0;
            break;
        }
        if (this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP) {
            this.nextField_ != a && (jspb.asserts.fail("Unmatched end-group tag"), this.error_ = !0);
            break;
        }
        this.skipField();
    } while (1); };
    jspb.BinaryReader.prototype.skipField = function () { switch (this.nextWireType_) {
        case jspb.BinaryConstants.WireType.VARINT:
            this.skipVarintField();
            break;
        case jspb.BinaryConstants.WireType.FIXED64:
            this.skipFixed64Field();
            break;
        case jspb.BinaryConstants.WireType.DELIMITED:
            this.skipDelimitedField();
            break;
        case jspb.BinaryConstants.WireType.FIXED32:
            this.skipFixed32Field();
            break;
        case jspb.BinaryConstants.WireType.START_GROUP:
            this.skipGroup();
            break;
        default: jspb.asserts.fail("Invalid wire encoding for field.");
    } };
    jspb.BinaryReader.prototype.registerReadCallback = function (a, b) { null === this.readCallbacks_ && (this.readCallbacks_ = {}); jspb.asserts.assert(!this.readCallbacks_[a]); this.readCallbacks_[a] = b; };
    jspb.BinaryReader.prototype.runReadCallback = function (a) { jspb.asserts.assert(null !== this.readCallbacks_); a = this.readCallbacks_[a]; jspb.asserts.assert(a); return a(this); };
    jspb.BinaryReader.prototype.readAny = function (a) {
        this.nextWireType_ = jspb.BinaryConstants.FieldTypeToWireType(a);
        var b = jspb.BinaryConstants.FieldType;
        switch (a) {
            case b.DOUBLE: return this.readDouble();
            case b.FLOAT: return this.readFloat();
            case b.INT64: return this.readInt64();
            case b.UINT64: return this.readUint64();
            case b.INT32: return this.readInt32();
            case b.FIXED64: return this.readFixed64();
            case b.FIXED32: return this.readFixed32();
            case b.BOOL: return this.readBool();
            case b.STRING: return this.readString();
            case b.GROUP: jspb.asserts.fail("Group field type not supported in readAny()");
            case b.MESSAGE: jspb.asserts.fail("Message field type not supported in readAny()");
            case b.BYTES: return this.readBytes();
            case b.UINT32: return this.readUint32();
            case b.ENUM: return this.readEnum();
            case b.SFIXED32: return this.readSfixed32();
            case b.SFIXED64: return this.readSfixed64();
            case b.SINT32: return this.readSint32();
            case b.SINT64: return this.readSint64();
            case b.FHASH64: return this.readFixedHash64();
            case b.VHASH64: return this.readVarintHash64();
            default: jspb.asserts.fail("Invalid field type in readAny()");
        }
        return 0;
    };
    jspb.BinaryReader.prototype.readMessage = function (a, b) { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED); var c = this.decoder_.getEnd(), d = this.decoder_.readUnsignedVarint32(); d = this.decoder_.getCursor() + d; this.decoder_.setEnd(d); b(a, this); this.decoder_.setCursor(d); this.decoder_.setEnd(c); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readMessage", jspb.BinaryReader.prototype.readMessage);
    jspb.BinaryReader.prototype.readGroup = function (a, b, c) { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP); jspb.asserts.assert(this.nextField_ == a); c(b, this); this.error_ || this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP || (jspb.asserts.fail("Group submessage did not end with an END_GROUP tag"), this.error_ = !0); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readGroup", jspb.BinaryReader.prototype.readGroup);
    jspb.BinaryReader.prototype.getFieldDecoder = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED); var a = this.decoder_.readUnsignedVarint32(), b = this.decoder_.getCursor(), c = b + a; a = jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(), b, a); this.decoder_.setCursor(c); return a; };
    jspb.BinaryReader.prototype.readInt32 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readSignedVarint32(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readInt32", jspb.BinaryReader.prototype.readInt32);
    jspb.BinaryReader.prototype.readInt32String = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readSignedVarint32String(); };
    jspb.BinaryReader.prototype.readInt64 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readSignedVarint64(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readInt64", jspb.BinaryReader.prototype.readInt64);
    jspb.BinaryReader.prototype.readInt64String = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readSignedVarint64String(); };
    jspb.BinaryReader.prototype.readUint32 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readUnsignedVarint32(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readUint32", jspb.BinaryReader.prototype.readUint32);
    jspb.BinaryReader.prototype.readUint32String = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readUnsignedVarint32String(); };
    jspb.BinaryReader.prototype.readUint64 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readUnsignedVarint64(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readUint64", jspb.BinaryReader.prototype.readUint64);
    jspb.BinaryReader.prototype.readUint64String = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readUnsignedVarint64String(); };
    jspb.BinaryReader.prototype.readSint32 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readZigzagVarint32(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readSint32", jspb.BinaryReader.prototype.readSint32);
    jspb.BinaryReader.prototype.readSint64 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readZigzagVarint64(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readSint64", jspb.BinaryReader.prototype.readSint64);
    jspb.BinaryReader.prototype.readSint64String = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readZigzagVarint64String(); };
    jspb.BinaryReader.prototype.readFixed32 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32); return this.decoder_.readUint32(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readFixed32", jspb.BinaryReader.prototype.readFixed32);
    jspb.BinaryReader.prototype.readFixed64 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64); return this.decoder_.readUint64(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readFixed64", jspb.BinaryReader.prototype.readFixed64);
    jspb.BinaryReader.prototype.readFixed64String = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64); return this.decoder_.readUint64String(); };
    jspb.BinaryReader.prototype.readSfixed32 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32); return this.decoder_.readInt32(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readSfixed32", jspb.BinaryReader.prototype.readSfixed32);
    jspb.BinaryReader.prototype.readSfixed32String = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32); return this.decoder_.readInt32().toString(); };
    jspb.BinaryReader.prototype.readSfixed64 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64); return this.decoder_.readInt64(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readSfixed64", jspb.BinaryReader.prototype.readSfixed64);
    jspb.BinaryReader.prototype.readSfixed64String = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64); return this.decoder_.readInt64String(); };
    jspb.BinaryReader.prototype.readFloat = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32); return this.decoder_.readFloat(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readFloat", jspb.BinaryReader.prototype.readFloat);
    jspb.BinaryReader.prototype.readDouble = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64); return this.decoder_.readDouble(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readDouble", jspb.BinaryReader.prototype.readDouble);
    jspb.BinaryReader.prototype.readBool = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return !!this.decoder_.readUnsignedVarint32(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readBool", jspb.BinaryReader.prototype.readBool);
    jspb.BinaryReader.prototype.readEnum = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readSignedVarint64(); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readEnum", jspb.BinaryReader.prototype.readEnum);
    jspb.BinaryReader.prototype.readString = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED); var a = this.decoder_.readUnsignedVarint32(); return this.decoder_.readString(a); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readString", jspb.BinaryReader.prototype.readString);
    jspb.BinaryReader.prototype.readBytes = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED); var a = this.decoder_.readUnsignedVarint32(); return this.decoder_.readBytes(a); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readBytes", jspb.BinaryReader.prototype.readBytes);
    jspb.BinaryReader.prototype.readVarintHash64 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readVarintHash64(); };
    jspb.BinaryReader.prototype.readSintHash64 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readZigzagVarintHash64(); };
    jspb.BinaryReader.prototype.readSplitVarint64 = function (a) { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readSplitVarint64(a); };
    jspb.BinaryReader.prototype.readSplitZigzagVarint64 = function (a) { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT); return this.decoder_.readSplitVarint64(function (b, c) { return jspb.utils.fromZigzag64(b, c, a); }); };
    jspb.BinaryReader.prototype.readFixedHash64 = function () { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64); return this.decoder_.readFixedHash64(); };
    jspb.BinaryReader.prototype.readSplitFixed64 = function (a) { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64); return this.decoder_.readSplitFixed64(a); };
    jspb.BinaryReader.prototype.readPackedField_ = function (a) { jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED); var b = this.decoder_.readUnsignedVarint32(); b = this.decoder_.getCursor() + b; for (var c = []; this.decoder_.getCursor() < b;)
        c.push(a.call(this.decoder_)); return c; };
    jspb.BinaryReader.prototype.readPackedInt32 = function () { return this.readPackedField_(this.decoder_.readSignedVarint32); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedInt32", jspb.BinaryReader.prototype.readPackedInt32);
    jspb.BinaryReader.prototype.readPackedInt32String = function () { return this.readPackedField_(this.decoder_.readSignedVarint32String); };
    jspb.BinaryReader.prototype.readPackedInt64 = function () { return this.readPackedField_(this.decoder_.readSignedVarint64); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedInt64", jspb.BinaryReader.prototype.readPackedInt64);
    jspb.BinaryReader.prototype.readPackedInt64String = function () { return this.readPackedField_(this.decoder_.readSignedVarint64String); };
    jspb.BinaryReader.prototype.readPackedUint32 = function () { return this.readPackedField_(this.decoder_.readUnsignedVarint32); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedUint32", jspb.BinaryReader.prototype.readPackedUint32);
    jspb.BinaryReader.prototype.readPackedUint32String = function () { return this.readPackedField_(this.decoder_.readUnsignedVarint32String); };
    jspb.BinaryReader.prototype.readPackedUint64 = function () { return this.readPackedField_(this.decoder_.readUnsignedVarint64); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedUint64", jspb.BinaryReader.prototype.readPackedUint64);
    jspb.BinaryReader.prototype.readPackedUint64String = function () { return this.readPackedField_(this.decoder_.readUnsignedVarint64String); };
    jspb.BinaryReader.prototype.readPackedSint32 = function () { return this.readPackedField_(this.decoder_.readZigzagVarint32); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedSint32", jspb.BinaryReader.prototype.readPackedSint32);
    jspb.BinaryReader.prototype.readPackedSint64 = function () { return this.readPackedField_(this.decoder_.readZigzagVarint64); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedSint64", jspb.BinaryReader.prototype.readPackedSint64);
    jspb.BinaryReader.prototype.readPackedSint64String = function () { return this.readPackedField_(this.decoder_.readZigzagVarint64String); };
    jspb.BinaryReader.prototype.readPackedFixed32 = function () { return this.readPackedField_(this.decoder_.readUint32); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedFixed32", jspb.BinaryReader.prototype.readPackedFixed32);
    jspb.BinaryReader.prototype.readPackedFixed64 = function () { return this.readPackedField_(this.decoder_.readUint64); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedFixed64", jspb.BinaryReader.prototype.readPackedFixed64);
    jspb.BinaryReader.prototype.readPackedFixed64String = function () { return this.readPackedField_(this.decoder_.readUint64String); };
    jspb.BinaryReader.prototype.readPackedSfixed32 = function () { return this.readPackedField_(this.decoder_.readInt32); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedSfixed32", jspb.BinaryReader.prototype.readPackedSfixed32);
    jspb.BinaryReader.prototype.readPackedSfixed64 = function () { return this.readPackedField_(this.decoder_.readInt64); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedSfixed64", jspb.BinaryReader.prototype.readPackedSfixed64);
    jspb.BinaryReader.prototype.readPackedSfixed64String = function () { return this.readPackedField_(this.decoder_.readInt64String); };
    jspb.BinaryReader.prototype.readPackedFloat = function () { return this.readPackedField_(this.decoder_.readFloat); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedFloat", jspb.BinaryReader.prototype.readPackedFloat);
    jspb.BinaryReader.prototype.readPackedDouble = function () { return this.readPackedField_(this.decoder_.readDouble); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedDouble", jspb.BinaryReader.prototype.readPackedDouble);
    jspb.BinaryReader.prototype.readPackedBool = function () { return this.readPackedField_(this.decoder_.readBool); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedBool", jspb.BinaryReader.prototype.readPackedBool);
    jspb.BinaryReader.prototype.readPackedEnum = function () { return this.readPackedField_(this.decoder_.readEnum); };
    goog.exportProperty(jspb.BinaryReader.prototype, "readPackedEnum", jspb.BinaryReader.prototype.readPackedEnum);
    jspb.BinaryReader.prototype.readPackedVarintHash64 = function () { return this.readPackedField_(this.decoder_.readVarintHash64); };
    jspb.BinaryReader.prototype.readPackedFixedHash64 = function () { return this.readPackedField_(this.decoder_.readFixedHash64); };
    jspb.BinaryEncoder = function () { this.buffer_ = []; };
    jspb.BinaryEncoder.prototype.length = function () { return this.buffer_.length; };
    jspb.BinaryEncoder.prototype.end = function () { var a = this.buffer_; this.buffer_ = []; return a; };
    jspb.BinaryEncoder.prototype.writeSplitVarint64 = function (a, b) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(b == Math.floor(b)); jspb.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32); for (jspb.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32); 0 < b || 127 < a;)
        this.buffer_.push(a & 127 | 128), a = (a >>> 7 | b << 25) >>> 0, b >>>= 7; this.buffer_.push(a); };
    jspb.BinaryEncoder.prototype.writeSplitFixed64 = function (a, b) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(b == Math.floor(b)); jspb.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32); jspb.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32); this.writeUint32(a); this.writeUint32(b); };
    jspb.BinaryEncoder.prototype.writeUnsignedVarint32 = function (a) { jspb.asserts.assert(a == Math.floor(a)); for (jspb.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32); 127 < a;)
        this.buffer_.push(a & 127 | 128), a >>>= 7; this.buffer_.push(a); };
    jspb.BinaryEncoder.prototype.writeSignedVarint32 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31); if (0 <= a)
        this.writeUnsignedVarint32(a);
    else {
        for (var b = 0; 9 > b; b++)
            this.buffer_.push(a & 127 | 128), a >>= 7;
        this.buffer_.push(1);
    } };
    jspb.BinaryEncoder.prototype.writeUnsignedVarint64 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_64); jspb.utils.splitInt64(a); this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High); };
    jspb.BinaryEncoder.prototype.writeSignedVarint64 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63); jspb.utils.splitInt64(a); this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High); };
    jspb.BinaryEncoder.prototype.writeZigzagVarint32 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31); this.writeUnsignedVarint32((a << 1 ^ a >> 31) >>> 0); };
    jspb.BinaryEncoder.prototype.writeZigzagVarint64 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63); jspb.utils.splitZigzag64(a); this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High); };
    jspb.BinaryEncoder.prototype.writeZigzagVarint64String = function (a) { this.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(a)); };
    jspb.BinaryEncoder.prototype.writeZigzagVarintHash64 = function (a) { var b = this; jspb.utils.splitHash64(a); jspb.utils.toZigzag64(jspb.utils.split64Low, jspb.utils.split64High, function (a, d) { b.writeSplitVarint64(a >>> 0, d >>> 0); }); };
    jspb.BinaryEncoder.prototype.writeUint8 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(0 <= a && 256 > a); this.buffer_.push(a >>> 0 & 255); };
    jspb.BinaryEncoder.prototype.writeUint16 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(0 <= a && 65536 > a); this.buffer_.push(a >>> 0 & 255); this.buffer_.push(a >>> 8 & 255); };
    jspb.BinaryEncoder.prototype.writeUint32 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32); this.buffer_.push(a >>> 0 & 255); this.buffer_.push(a >>> 8 & 255); this.buffer_.push(a >>> 16 & 255); this.buffer_.push(a >>> 24 & 255); };
    jspb.BinaryEncoder.prototype.writeUint64 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_64); jspb.utils.splitUint64(a); this.writeUint32(jspb.utils.split64Low); this.writeUint32(jspb.utils.split64High); };
    jspb.BinaryEncoder.prototype.writeInt8 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(-128 <= a && 128 > a); this.buffer_.push(a >>> 0 & 255); };
    jspb.BinaryEncoder.prototype.writeInt16 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(-32768 <= a && 32768 > a); this.buffer_.push(a >>> 0 & 255); this.buffer_.push(a >>> 8 & 255); };
    jspb.BinaryEncoder.prototype.writeInt32 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31); this.buffer_.push(a >>> 0 & 255); this.buffer_.push(a >>> 8 & 255); this.buffer_.push(a >>> 16 & 255); this.buffer_.push(a >>> 24 & 255); };
    jspb.BinaryEncoder.prototype.writeInt64 = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63); jspb.utils.splitInt64(a); this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High); };
    jspb.BinaryEncoder.prototype.writeInt64String = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(+a >= -jspb.BinaryConstants.TWO_TO_63 && +a < jspb.BinaryConstants.TWO_TO_63); jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a)); this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High); };
    jspb.BinaryEncoder.prototype.writeFloat = function (a) { jspb.asserts.assert(Infinity === a || -Infinity === a || isNaN(a) || a >= -jspb.BinaryConstants.FLOAT32_MAX && a <= jspb.BinaryConstants.FLOAT32_MAX); jspb.utils.splitFloat32(a); this.writeUint32(jspb.utils.split64Low); };
    jspb.BinaryEncoder.prototype.writeDouble = function (a) { jspb.asserts.assert(Infinity === a || -Infinity === a || isNaN(a) || a >= -jspb.BinaryConstants.FLOAT64_MAX && a <= jspb.BinaryConstants.FLOAT64_MAX); jspb.utils.splitFloat64(a); this.writeUint32(jspb.utils.split64Low); this.writeUint32(jspb.utils.split64High); };
    jspb.BinaryEncoder.prototype.writeBool = function (a) { jspb.asserts.assert("boolean" === typeof a || "number" === typeof a); this.buffer_.push(a ? 1 : 0); };
    jspb.BinaryEncoder.prototype.writeEnum = function (a) { jspb.asserts.assert(a == Math.floor(a)); jspb.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31); this.writeSignedVarint32(a); };
    jspb.BinaryEncoder.prototype.writeBytes = function (a) { this.buffer_.push.apply(this.buffer_, a); };
    jspb.BinaryEncoder.prototype.writeVarintHash64 = function (a) { jspb.utils.splitHash64(a); this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High); };
    jspb.BinaryEncoder.prototype.writeFixedHash64 = function (a) { jspb.utils.splitHash64(a); this.writeUint32(jspb.utils.split64Low); this.writeUint32(jspb.utils.split64High); };
    jspb.BinaryEncoder.prototype.writeString = function (a) {
        var b = this.buffer_.length;
        jspb.asserts.assertString(a);
        for (var c = 0; c < a.length; c++) {
            var d = a.charCodeAt(c);
            if (128 > d)
                this.buffer_.push(d);
            else if (2048 > d)
                this.buffer_.push(d >> 6 | 192), this.buffer_.push(d & 63 | 128);
            else if (65536 > d)
                if (55296 <= d && 56319 >= d && c + 1 < a.length) {
                    var e = a.charCodeAt(c + 1);
                    56320 <= e && 57343 >= e && (d = 1024 * (d - 55296) + e - 56320 + 65536, this.buffer_.push(d >> 18 | 240), this.buffer_.push(d >> 12 & 63 | 128), this.buffer_.push(d >> 6 & 63 | 128), this.buffer_.push(d & 63 |
                        128), c++);
                }
                else
                    this.buffer_.push(d >> 12 | 224), this.buffer_.push(d >> 6 & 63 | 128), this.buffer_.push(d & 63 | 128);
        }
        return this.buffer_.length - b;
    };
    jspb.arith = {};
    jspb.arith.UInt64 = function (a, b) { this.lo = a; this.hi = b; };
    jspb.arith.UInt64.prototype.cmp = function (a) { return this.hi < a.hi || this.hi == a.hi && this.lo < a.lo ? -1 : this.hi == a.hi && this.lo == a.lo ? 0 : 1; };
    jspb.arith.UInt64.prototype.rightShift = function () { return new jspb.arith.UInt64((this.lo >>> 1 | (this.hi & 1) << 31) >>> 0, this.hi >>> 1 >>> 0); };
    jspb.arith.UInt64.prototype.leftShift = function () { return new jspb.arith.UInt64(this.lo << 1 >>> 0, (this.hi << 1 | this.lo >>> 31) >>> 0); };
    jspb.arith.UInt64.prototype.msb = function () { return !!(this.hi & 2147483648); };
    jspb.arith.UInt64.prototype.lsb = function () { return !!(this.lo & 1); };
    jspb.arith.UInt64.prototype.zero = function () { return 0 == this.lo && 0 == this.hi; };
    jspb.arith.UInt64.prototype.add = function (a) { return new jspb.arith.UInt64((this.lo + a.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a.lo ? 1 : 0) >>> 0); };
    jspb.arith.UInt64.prototype.sub = function (a) { return new jspb.arith.UInt64((this.lo - a.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a.hi & 4294967295) >>> 0) - (0 > this.lo - a.lo ? 1 : 0) >>> 0); };
    jspb.arith.UInt64.mul32x32 = function (a, b) { var c = a & 65535; a >>>= 16; var d = b & 65535, e = b >>> 16; b = c * d + 65536 * (c * e & 65535) + 65536 * (a * d & 65535); for (c = a * e + (c * e >>> 16) + (a * d >>> 16); 4294967296 <= b;)
        b -= 4294967296, c += 1; return new jspb.arith.UInt64(b >>> 0, c >>> 0); };
    jspb.arith.UInt64.prototype.mul = function (a) { var b = jspb.arith.UInt64.mul32x32(this.lo, a); a = jspb.arith.UInt64.mul32x32(this.hi, a); a.hi = a.lo; a.lo = 0; return b.add(a); };
    jspb.arith.UInt64.prototype.div = function (a) { if (0 == a)
        return []; var b = new jspb.arith.UInt64(0, 0), c = new jspb.arith.UInt64(this.lo, this.hi); a = new jspb.arith.UInt64(a, 0); for (var d = new jspb.arith.UInt64(1, 0); !a.msb();)
        a = a.leftShift(), d = d.leftShift(); for (; !d.zero();)
        0 >= a.cmp(c) && (b = b.add(d), c = c.sub(a)), a = a.rightShift(), d = d.rightShift(); return [b, c]; };
    jspb.arith.UInt64.prototype.toString = function () { for (var a = "", b = this; !b.zero();) {
        b = b.div(10);
        var c = b[0];
        a = b[1].lo + a;
        b = c;
    } "" == a && (a = "0"); return a; };
    jspb.arith.UInt64.fromString = function (a) { for (var b = new jspb.arith.UInt64(0, 0), c = new jspb.arith.UInt64(0, 0), d = 0; d < a.length; d++) {
        if ("0" > a[d] || "9" < a[d])
            return null;
        var e = parseInt(a[d], 10);
        c.lo = e;
        b = b.mul(10).add(c);
    } return b; };
    jspb.arith.UInt64.prototype.clone = function () { return new jspb.arith.UInt64(this.lo, this.hi); };
    jspb.arith.Int64 = function (a, b) { this.lo = a; this.hi = b; };
    jspb.arith.Int64.prototype.add = function (a) { return new jspb.arith.Int64((this.lo + a.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a.lo ? 1 : 0) >>> 0); };
    jspb.arith.Int64.prototype.sub = function (a) { return new jspb.arith.Int64((this.lo - a.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a.hi & 4294967295) >>> 0) - (0 > this.lo - a.lo ? 1 : 0) >>> 0); };
    jspb.arith.Int64.prototype.clone = function () { return new jspb.arith.Int64(this.lo, this.hi); };
    jspb.arith.Int64.prototype.toString = function () { var a = 0 != (this.hi & 2147483648), b = new jspb.arith.UInt64(this.lo, this.hi); a && (b = (new jspb.arith.UInt64(0, 0)).sub(b)); return (a ? "-" : "") + b.toString(); };
    jspb.arith.Int64.fromString = function (a) { var b = 0 < a.length && "-" == a[0]; b && (a = a.substring(1)); a = jspb.arith.UInt64.fromString(a); if (null === a)
        return null; b && (a = (new jspb.arith.UInt64(0, 0)).sub(a)); return new jspb.arith.Int64(a.lo, a.hi); };
    jspb.BinaryWriter = function () { this.blocks_ = []; this.totalLength_ = 0; this.encoder_ = new jspb.BinaryEncoder; this.bookmarks_ = []; };
    jspb.BinaryWriter.prototype.appendUint8Array_ = function (a) { var b = this.encoder_.end(); this.blocks_.push(b); this.blocks_.push(a); this.totalLength_ += b.length + a.length; };
    jspb.BinaryWriter.prototype.beginDelimited_ = function (a) { this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED); a = this.encoder_.end(); this.blocks_.push(a); this.totalLength_ += a.length; a.push(this.totalLength_); return a; };
    jspb.BinaryWriter.prototype.endDelimited_ = function (a) { var b = a.pop(); b = this.totalLength_ + this.encoder_.length() - b; for (jspb.asserts.assert(0 <= b); 127 < b;)
        a.push(b & 127 | 128), b >>>= 7, this.totalLength_++; a.push(b); this.totalLength_++; };
    jspb.BinaryWriter.prototype.writeSerializedMessage = function (a, b, c) { this.appendUint8Array_(a.subarray(b, c)); };
    jspb.BinaryWriter.prototype.maybeWriteSerializedMessage = function (a, b, c) { null != a && null != b && null != c && this.writeSerializedMessage(a, b, c); };
    jspb.BinaryWriter.prototype.reset = function () { this.blocks_ = []; this.encoder_.end(); this.totalLength_ = 0; this.bookmarks_ = []; };
    jspb.BinaryWriter.prototype.getResultBuffer = function () { jspb.asserts.assert(0 == this.bookmarks_.length); for (var a = new Uint8Array(this.totalLength_ + this.encoder_.length()), b = this.blocks_, c = b.length, d = 0, e = 0; e < c; e++) {
        var f = b[e];
        a.set(f, d);
        d += f.length;
    } b = this.encoder_.end(); a.set(b, d); d += b.length; jspb.asserts.assert(d == a.length); this.blocks_ = [a]; return a; };
    goog.exportProperty(jspb.BinaryWriter.prototype, "getResultBuffer", jspb.BinaryWriter.prototype.getResultBuffer);
    jspb.BinaryWriter.prototype.getResultBase64String = function (a) { return goog.crypt.base64.encodeByteArray(this.getResultBuffer(), a); };
    jspb.BinaryWriter.prototype.beginSubMessage = function (a) { this.bookmarks_.push(this.beginDelimited_(a)); };
    jspb.BinaryWriter.prototype.endSubMessage = function () { jspb.asserts.assert(0 <= this.bookmarks_.length); this.endDelimited_(this.bookmarks_.pop()); };
    jspb.BinaryWriter.prototype.writeFieldHeader_ = function (a, b) { jspb.asserts.assert(1 <= a && a == Math.floor(a)); this.encoder_.writeUnsignedVarint32(8 * a + b); };
    jspb.BinaryWriter.prototype.writeAny = function (a, b, c) {
        var d = jspb.BinaryConstants.FieldType;
        switch (a) {
            case d.DOUBLE:
                this.writeDouble(b, c);
                break;
            case d.FLOAT:
                this.writeFloat(b, c);
                break;
            case d.INT64:
                this.writeInt64(b, c);
                break;
            case d.UINT64:
                this.writeUint64(b, c);
                break;
            case d.INT32:
                this.writeInt32(b, c);
                break;
            case d.FIXED64:
                this.writeFixed64(b, c);
                break;
            case d.FIXED32:
                this.writeFixed32(b, c);
                break;
            case d.BOOL:
                this.writeBool(b, c);
                break;
            case d.STRING:
                this.writeString(b, c);
                break;
            case d.GROUP:
                jspb.asserts.fail("Group field type not supported in writeAny()");
                break;
            case d.MESSAGE:
                jspb.asserts.fail("Message field type not supported in writeAny()");
                break;
            case d.BYTES:
                this.writeBytes(b, c);
                break;
            case d.UINT32:
                this.writeUint32(b, c);
                break;
            case d.ENUM:
                this.writeEnum(b, c);
                break;
            case d.SFIXED32:
                this.writeSfixed32(b, c);
                break;
            case d.SFIXED64:
                this.writeSfixed64(b, c);
                break;
            case d.SINT32:
                this.writeSint32(b, c);
                break;
            case d.SINT64:
                this.writeSint64(b, c);
                break;
            case d.FHASH64:
                this.writeFixedHash64(b, c);
                break;
            case d.VHASH64:
                this.writeVarintHash64(b, c);
                break;
            default: jspb.asserts.fail("Invalid field type in writeAny()");
        }
    };
    jspb.BinaryWriter.prototype.writeUnsignedVarint32_ = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint32(b)); };
    jspb.BinaryWriter.prototype.writeSignedVarint32_ = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b)); };
    jspb.BinaryWriter.prototype.writeUnsignedVarint64_ = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint64(b)); };
    jspb.BinaryWriter.prototype.writeSignedVarint64_ = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint64(b)); };
    jspb.BinaryWriter.prototype.writeZigzagVarint32_ = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint32(b)); };
    jspb.BinaryWriter.prototype.writeZigzagVarint64_ = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64(b)); };
    jspb.BinaryWriter.prototype.writeZigzagVarint64String_ = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64String(b)); };
    jspb.BinaryWriter.prototype.writeZigzagVarintHash64_ = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarintHash64(b)); };
    jspb.BinaryWriter.prototype.writeInt32 = function (a, b) { null != b && (jspb.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(a, b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeInt32", jspb.BinaryWriter.prototype.writeInt32);
    jspb.BinaryWriter.prototype.writeInt32String = function (a, b) { null != b && (b = parseInt(b, 10), jspb.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(a, b)); };
    jspb.BinaryWriter.prototype.writeInt64 = function (a, b) { null != b && (jspb.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeSignedVarint64_(a, b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeInt64", jspb.BinaryWriter.prototype.writeInt64);
    jspb.BinaryWriter.prototype.writeInt64String = function (a, b) { null != b && (b = jspb.arith.Int64.fromString(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(b.lo, b.hi)); };
    jspb.BinaryWriter.prototype.writeUint32 = function (a, b) { null != b && (jspb.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(a, b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeUint32", jspb.BinaryWriter.prototype.writeUint32);
    jspb.BinaryWriter.prototype.writeUint32String = function (a, b) { null != b && (b = parseInt(b, 10), jspb.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(a, b)); };
    jspb.BinaryWriter.prototype.writeUint64 = function (a, b) { null != b && (jspb.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_64), this.writeUnsignedVarint64_(a, b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeUint64", jspb.BinaryWriter.prototype.writeUint64);
    jspb.BinaryWriter.prototype.writeUint64String = function (a, b) { null != b && (b = jspb.arith.UInt64.fromString(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(b.lo, b.hi)); };
    jspb.BinaryWriter.prototype.writeSint32 = function (a, b) { null != b && (jspb.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeZigzagVarint32_(a, b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeSint32", jspb.BinaryWriter.prototype.writeSint32);
    jspb.BinaryWriter.prototype.writeSint64 = function (a, b) { null != b && (jspb.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64_(a, b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeSint64", jspb.BinaryWriter.prototype.writeSint64);
    jspb.BinaryWriter.prototype.writeSintHash64 = function (a, b) { null != b && this.writeZigzagVarintHash64_(a, b); };
    jspb.BinaryWriter.prototype.writeSint64String = function (a, b) { null != b && this.writeZigzagVarint64String_(a, b); };
    jspb.BinaryWriter.prototype.writeFixed32 = function (a, b) { null != b && (jspb.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeUint32(b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeFixed32", jspb.BinaryWriter.prototype.writeFixed32);
    jspb.BinaryWriter.prototype.writeFixed64 = function (a, b) { null != b && (jspb.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_64), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeUint64(b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeFixed64", jspb.BinaryWriter.prototype.writeFixed64);
    jspb.BinaryWriter.prototype.writeFixed64String = function (a, b) { null != b && (b = jspb.arith.UInt64.fromString(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(b.lo, b.hi)); };
    jspb.BinaryWriter.prototype.writeSfixed32 = function (a, b) { null != b && (jspb.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeInt32(b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeSfixed32", jspb.BinaryWriter.prototype.writeSfixed32);
    jspb.BinaryWriter.prototype.writeSfixed64 = function (a, b) { null != b && (jspb.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeInt64(b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeSfixed64", jspb.BinaryWriter.prototype.writeSfixed64);
    jspb.BinaryWriter.prototype.writeSfixed64String = function (a, b) { null != b && (b = jspb.arith.Int64.fromString(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(b.lo, b.hi)); };
    jspb.BinaryWriter.prototype.writeFloat = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeFloat(b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeFloat", jspb.BinaryWriter.prototype.writeFloat);
    jspb.BinaryWriter.prototype.writeDouble = function (a, b) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeDouble(b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeDouble", jspb.BinaryWriter.prototype.writeDouble);
    jspb.BinaryWriter.prototype.writeBool = function (a, b) { null != b && (jspb.asserts.assert("boolean" === typeof b || "number" === typeof b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeBool(b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeBool", jspb.BinaryWriter.prototype.writeBool);
    jspb.BinaryWriter.prototype.writeEnum = function (a, b) { null != b && (jspb.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeEnum", jspb.BinaryWriter.prototype.writeEnum);
    jspb.BinaryWriter.prototype.writeString = function (a, b) { null != b && (a = this.beginDelimited_(a), this.encoder_.writeString(b), this.endDelimited_(a)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeString", jspb.BinaryWriter.prototype.writeString);
    jspb.BinaryWriter.prototype.writeBytes = function (a, b) { null != b && (b = jspb.utils.byteSourceToUint8Array(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(b.length), this.appendUint8Array_(b)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeBytes", jspb.BinaryWriter.prototype.writeBytes);
    jspb.BinaryWriter.prototype.writeMessage = function (a, b, c) { null != b && (a = this.beginDelimited_(a), c(b, this), this.endDelimited_(a)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeMessage", jspb.BinaryWriter.prototype.writeMessage);
    jspb.BinaryWriter.prototype.writeMessageSet = function (a, b, c) { null != b && (this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.START_GROUP), this.writeFieldHeader_(2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(a), a = this.beginDelimited_(3), c(b, this), this.endDelimited_(a), this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.END_GROUP)); };
    jspb.BinaryWriter.prototype.writeGroup = function (a, b, c) { null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.START_GROUP), c(b, this), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.END_GROUP)); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeGroup", jspb.BinaryWriter.prototype.writeGroup);
    jspb.BinaryWriter.prototype.writeFixedHash64 = function (a, b) { null != b && (jspb.asserts.assert(8 == b.length), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeFixedHash64(b)); };
    jspb.BinaryWriter.prototype.writeVarintHash64 = function (a, b) { null != b && (jspb.asserts.assert(8 == b.length), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeVarintHash64(b)); };
    jspb.BinaryWriter.prototype.writeSplitFixed64 = function (a, b, c) { this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64); this.encoder_.writeSplitFixed64(b, c); };
    jspb.BinaryWriter.prototype.writeSplitVarint64 = function (a, b, c) { this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT); this.encoder_.writeSplitVarint64(b, c); };
    jspb.BinaryWriter.prototype.writeSplitZigzagVarint64 = function (a, b, c) { this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT); var d = this.encoder_; jspb.utils.toZigzag64(b, c, function (a, b) { d.writeSplitVarint64(a >>> 0, b >>> 0); }); };
    jspb.BinaryWriter.prototype.writeRepeatedInt32 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeSignedVarint32_(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedInt32", jspb.BinaryWriter.prototype.writeRepeatedInt32);
    jspb.BinaryWriter.prototype.writeRepeatedInt32String = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeInt32String(a, b[c]); };
    jspb.BinaryWriter.prototype.writeRepeatedInt64 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeSignedVarint64_(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedInt64", jspb.BinaryWriter.prototype.writeRepeatedInt64);
    jspb.BinaryWriter.prototype.writeRepeatedSplitFixed64 = function (a, b, c, d) { if (null != b)
        for (var e = 0; e < b.length; e++)
            this.writeSplitFixed64(a, c(b[e]), d(b[e])); };
    jspb.BinaryWriter.prototype.writeRepeatedSplitVarint64 = function (a, b, c, d) { if (null != b)
        for (var e = 0; e < b.length; e++)
            this.writeSplitVarint64(a, c(b[e]), d(b[e])); };
    jspb.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64 = function (a, b, c, d) { if (null != b)
        for (var e = 0; e < b.length; e++)
            this.writeSplitZigzagVarint64(a, c(b[e]), d(b[e])); };
    jspb.BinaryWriter.prototype.writeRepeatedInt64String = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeInt64String(a, b[c]); };
    jspb.BinaryWriter.prototype.writeRepeatedUint32 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeUnsignedVarint32_(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedUint32", jspb.BinaryWriter.prototype.writeRepeatedUint32);
    jspb.BinaryWriter.prototype.writeRepeatedUint32String = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeUint32String(a, b[c]); };
    jspb.BinaryWriter.prototype.writeRepeatedUint64 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeUnsignedVarint64_(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedUint64", jspb.BinaryWriter.prototype.writeRepeatedUint64);
    jspb.BinaryWriter.prototype.writeRepeatedUint64String = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeUint64String(a, b[c]); };
    jspb.BinaryWriter.prototype.writeRepeatedSint32 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeZigzagVarint32_(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedSint32", jspb.BinaryWriter.prototype.writeRepeatedSint32);
    jspb.BinaryWriter.prototype.writeRepeatedSint64 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeZigzagVarint64_(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedSint64", jspb.BinaryWriter.prototype.writeRepeatedSint64);
    jspb.BinaryWriter.prototype.writeRepeatedSint64String = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeZigzagVarint64String_(a, b[c]); };
    jspb.BinaryWriter.prototype.writeRepeatedSintHash64 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeZigzagVarintHash64_(a, b[c]); };
    jspb.BinaryWriter.prototype.writeRepeatedFixed32 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeFixed32(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedFixed32", jspb.BinaryWriter.prototype.writeRepeatedFixed32);
    jspb.BinaryWriter.prototype.writeRepeatedFixed64 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeFixed64(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedFixed64", jspb.BinaryWriter.prototype.writeRepeatedFixed64);
    jspb.BinaryWriter.prototype.writeRepeatedFixed64String = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeFixed64String(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedFixed64String", jspb.BinaryWriter.prototype.writeRepeatedFixed64String);
    jspb.BinaryWriter.prototype.writeRepeatedSfixed32 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeSfixed32(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedSfixed32", jspb.BinaryWriter.prototype.writeRepeatedSfixed32);
    jspb.BinaryWriter.prototype.writeRepeatedSfixed64 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeSfixed64(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedSfixed64", jspb.BinaryWriter.prototype.writeRepeatedSfixed64);
    jspb.BinaryWriter.prototype.writeRepeatedSfixed64String = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeSfixed64String(a, b[c]); };
    jspb.BinaryWriter.prototype.writeRepeatedFloat = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeFloat(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedFloat", jspb.BinaryWriter.prototype.writeRepeatedFloat);
    jspb.BinaryWriter.prototype.writeRepeatedDouble = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeDouble(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedDouble", jspb.BinaryWriter.prototype.writeRepeatedDouble);
    jspb.BinaryWriter.prototype.writeRepeatedBool = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeBool(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedBool", jspb.BinaryWriter.prototype.writeRepeatedBool);
    jspb.BinaryWriter.prototype.writeRepeatedEnum = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeEnum(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedEnum", jspb.BinaryWriter.prototype.writeRepeatedEnum);
    jspb.BinaryWriter.prototype.writeRepeatedString = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeString(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedString", jspb.BinaryWriter.prototype.writeRepeatedString);
    jspb.BinaryWriter.prototype.writeRepeatedBytes = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeBytes(a, b[c]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedBytes", jspb.BinaryWriter.prototype.writeRepeatedBytes);
    jspb.BinaryWriter.prototype.writeRepeatedMessage = function (a, b, c) { if (null != b)
        for (var d = 0; d < b.length; d++) {
            var e = this.beginDelimited_(a);
            c(b[d], this);
            this.endDelimited_(e);
        } };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedMessage", jspb.BinaryWriter.prototype.writeRepeatedMessage);
    jspb.BinaryWriter.prototype.writeRepeatedGroup = function (a, b, c) { if (null != b)
        for (var d = 0; d < b.length; d++)
            this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.START_GROUP), c(b[d], this), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.END_GROUP); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedGroup", jspb.BinaryWriter.prototype.writeRepeatedGroup);
    jspb.BinaryWriter.prototype.writeRepeatedFixedHash64 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeFixedHash64(a, b[c]); };
    jspb.BinaryWriter.prototype.writeRepeatedVarintHash64 = function (a, b) { if (null != b)
        for (var c = 0; c < b.length; c++)
            this.writeVarintHash64(a, b[c]); };
    jspb.BinaryWriter.prototype.writePackedInt32 = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeSignedVarint32(b[c]);
        this.endDelimited_(a);
    } };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedInt32", jspb.BinaryWriter.prototype.writePackedInt32);
    jspb.BinaryWriter.prototype.writePackedInt32String = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeSignedVarint32(parseInt(b[c], 10));
        this.endDelimited_(a);
    } };
    jspb.BinaryWriter.prototype.writePackedInt64 = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeSignedVarint64(b[c]);
        this.endDelimited_(a);
    } };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedInt64", jspb.BinaryWriter.prototype.writePackedInt64);
    jspb.BinaryWriter.prototype.writePackedSplitFixed64 = function (a, b, c, d) { if (null != b) {
        a = this.beginDelimited_(a);
        for (var e = 0; e < b.length; e++)
            this.encoder_.writeSplitFixed64(c(b[e]), d(b[e]));
        this.endDelimited_(a);
    } };
    jspb.BinaryWriter.prototype.writePackedSplitVarint64 = function (a, b, c, d) { if (null != b) {
        a = this.beginDelimited_(a);
        for (var e = 0; e < b.length; e++)
            this.encoder_.writeSplitVarint64(c(b[e]), d(b[e]));
        this.endDelimited_(a);
    } };
    jspb.BinaryWriter.prototype.writePackedSplitZigzagVarint64 = function (a, b, c, d) { if (null != b) {
        a = this.beginDelimited_(a);
        for (var e = this.encoder_, f = 0; f < b.length; f++)
            jspb.utils.toZigzag64(c(b[f]), d(b[f]), function (a, b) { e.writeSplitVarint64(a >>> 0, b >>> 0); });
        this.endDelimited_(a);
    } };
    jspb.BinaryWriter.prototype.writePackedInt64String = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++) {
            var d = jspb.arith.Int64.fromString(b[c]);
            this.encoder_.writeSplitVarint64(d.lo, d.hi);
        }
        this.endDelimited_(a);
    } };
    jspb.BinaryWriter.prototype.writePackedUint32 = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeUnsignedVarint32(b[c]);
        this.endDelimited_(a);
    } };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedUint32", jspb.BinaryWriter.prototype.writePackedUint32);
    jspb.BinaryWriter.prototype.writePackedUint32String = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeUnsignedVarint32(parseInt(b[c], 10));
        this.endDelimited_(a);
    } };
    jspb.BinaryWriter.prototype.writePackedUint64 = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeUnsignedVarint64(b[c]);
        this.endDelimited_(a);
    } };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedUint64", jspb.BinaryWriter.prototype.writePackedUint64);
    jspb.BinaryWriter.prototype.writePackedUint64String = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++) {
            var d = jspb.arith.UInt64.fromString(b[c]);
            this.encoder_.writeSplitVarint64(d.lo, d.hi);
        }
        this.endDelimited_(a);
    } };
    jspb.BinaryWriter.prototype.writePackedSint32 = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeZigzagVarint32(b[c]);
        this.endDelimited_(a);
    } };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedSint32", jspb.BinaryWriter.prototype.writePackedSint32);
    jspb.BinaryWriter.prototype.writePackedSint64 = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeZigzagVarint64(b[c]);
        this.endDelimited_(a);
    } };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedSint64", jspb.BinaryWriter.prototype.writePackedSint64);
    jspb.BinaryWriter.prototype.writePackedSint64String = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(b[c]));
        this.endDelimited_(a);
    } };
    jspb.BinaryWriter.prototype.writePackedSintHash64 = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeZigzagVarintHash64(b[c]);
        this.endDelimited_(a);
    } };
    jspb.BinaryWriter.prototype.writePackedFixed32 = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b.length), a = 0; a < b.length; a++)
            this.encoder_.writeUint32(b[a]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedFixed32", jspb.BinaryWriter.prototype.writePackedFixed32);
    jspb.BinaryWriter.prototype.writePackedFixed64 = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++)
            this.encoder_.writeUint64(b[a]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedFixed64", jspb.BinaryWriter.prototype.writePackedFixed64);
    jspb.BinaryWriter.prototype.writePackedFixed64String = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++) {
            var c = jspb.arith.UInt64.fromString(b[a]);
            this.encoder_.writeSplitFixed64(c.lo, c.hi);
        } };
    jspb.BinaryWriter.prototype.writePackedSfixed32 = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b.length), a = 0; a < b.length; a++)
            this.encoder_.writeInt32(b[a]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedSfixed32", jspb.BinaryWriter.prototype.writePackedSfixed32);
    jspb.BinaryWriter.prototype.writePackedSfixed64 = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++)
            this.encoder_.writeInt64(b[a]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedSfixed64", jspb.BinaryWriter.prototype.writePackedSfixed64);
    jspb.BinaryWriter.prototype.writePackedSfixed64String = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++)
            this.encoder_.writeInt64String(b[a]); };
    jspb.BinaryWriter.prototype.writePackedFloat = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b.length), a = 0; a < b.length; a++)
            this.encoder_.writeFloat(b[a]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedFloat", jspb.BinaryWriter.prototype.writePackedFloat);
    jspb.BinaryWriter.prototype.writePackedDouble = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++)
            this.encoder_.writeDouble(b[a]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedDouble", jspb.BinaryWriter.prototype.writePackedDouble);
    jspb.BinaryWriter.prototype.writePackedBool = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(b.length), a = 0; a < b.length; a++)
            this.encoder_.writeBool(b[a]); };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedBool", jspb.BinaryWriter.prototype.writePackedBool);
    jspb.BinaryWriter.prototype.writePackedEnum = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeEnum(b[c]);
        this.endDelimited_(a);
    } };
    goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedEnum", jspb.BinaryWriter.prototype.writePackedEnum);
    jspb.BinaryWriter.prototype.writePackedFixedHash64 = function (a, b) { if (null != b && b.length)
        for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++)
            this.encoder_.writeFixedHash64(b[a]); };
    jspb.BinaryWriter.prototype.writePackedVarintHash64 = function (a, b) { if (null != b && b.length) {
        a = this.beginDelimited_(a);
        for (var c = 0; c < b.length; c++)
            this.encoder_.writeVarintHash64(b[c]);
        this.endDelimited_(a);
    } };
    jspb.Map = function (a, b) { this.arr_ = a; this.valueCtor_ = b; this.map_ = {}; this.arrClean = !0; 0 < this.arr_.length && this.loadFromArray_(); };
    goog.exportSymbol("jspb.Map", jspb.Map);
    jspb.Map.prototype.loadFromArray_ = function () { for (var a = 0; a < this.arr_.length; a++) {
        var b = this.arr_[a], c = b[0];
        this.map_[c.toString()] = new jspb.Map.Entry_(c, b[1]);
    } this.arrClean = !0; };
    jspb.Map.prototype.toArray = function () { if (this.arrClean) {
        if (this.valueCtor_) {
            var a = this.map_, b;
            for (b in a)
                if (Object.prototype.hasOwnProperty.call(a, b)) {
                    var c = a[b].valueWrapper;
                    c && c.toArray();
                }
        }
    }
    else {
        this.arr_.length = 0;
        a = this.stringKeys_();
        a.sort();
        for (b = 0; b < a.length; b++) {
            var d = this.map_[a[b]];
            (c = d.valueWrapper) && c.toArray();
            this.arr_.push([d.key, d.value]);
        }
        this.arrClean = !0;
    } return this.arr_; };
    goog.exportProperty(jspb.Map.prototype, "toArray", jspb.Map.prototype.toArray);
    jspb.Map.prototype.toObject = function (a, b) { for (var c = this.toArray(), d = [], e = 0; e < c.length; e++) {
        var f = this.map_[c[e][0].toString()];
        this.wrapEntry_(f);
        var g = f.valueWrapper;
        g ? (jspb.asserts.assert(b), d.push([f.key, b(a, g)])) : d.push([f.key, f.value]);
    } return d; };
    goog.exportProperty(jspb.Map.prototype, "toObject", jspb.Map.prototype.toObject);
    jspb.Map.fromObject = function (a, b, c) { b = new jspb.Map([], b); for (var d = 0; d < a.length; d++) {
        var e = a[d][0], f = c(a[d][1]);
        b.set(e, f);
    } return b; };
    goog.exportProperty(jspb.Map, "fromObject", jspb.Map.fromObject);
    jspb.Map.ArrayIteratorIterable_ = function (a) { this.idx_ = 0; this.arr_ = a; };
    jspb.Map.ArrayIteratorIterable_.prototype.next = function () { return this.idx_ < this.arr_.length ? { done: !1, value: this.arr_[this.idx_++] } : { done: !0, value: void 0 }; };
    "undefined" != typeof Symbol && (jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator] = function () { return this; });
    jspb.Map.prototype.getLength = function () { return this.stringKeys_().length; };
    goog.exportProperty(jspb.Map.prototype, "getLength", jspb.Map.prototype.getLength);
    jspb.Map.prototype.clear = function () { this.map_ = {}; this.arrClean = !1; };
    goog.exportProperty(jspb.Map.prototype, "clear", jspb.Map.prototype.clear);
    jspb.Map.prototype.del = function (a) { a = a.toString(); var b = this.map_.hasOwnProperty(a); delete this.map_[a]; this.arrClean = !1; return b; };
    goog.exportProperty(jspb.Map.prototype, "del", jspb.Map.prototype.del);
    jspb.Map.prototype.getEntryList = function () { var a = [], b = this.stringKeys_(); b.sort(); for (var c = 0; c < b.length; c++) {
        var d = this.map_[b[c]];
        a.push([d.key, d.value]);
    } return a; };
    goog.exportProperty(jspb.Map.prototype, "getEntryList", jspb.Map.prototype.getEntryList);
    jspb.Map.prototype.entries = function () { var a = [], b = this.stringKeys_(); b.sort(); for (var c = 0; c < b.length; c++) {
        var d = this.map_[b[c]];
        a.push([d.key, this.wrapEntry_(d)]);
    } return new jspb.Map.ArrayIteratorIterable_(a); };
    goog.exportProperty(jspb.Map.prototype, "entries", jspb.Map.prototype.entries);
    jspb.Map.prototype.keys = function () { var a = [], b = this.stringKeys_(); b.sort(); for (var c = 0; c < b.length; c++)
        a.push(this.map_[b[c]].key); return new jspb.Map.ArrayIteratorIterable_(a); };
    goog.exportProperty(jspb.Map.prototype, "keys", jspb.Map.prototype.keys);
    jspb.Map.prototype.values = function () { var a = [], b = this.stringKeys_(); b.sort(); for (var c = 0; c < b.length; c++)
        a.push(this.wrapEntry_(this.map_[b[c]])); return new jspb.Map.ArrayIteratorIterable_(a); };
    goog.exportProperty(jspb.Map.prototype, "values", jspb.Map.prototype.values);
    jspb.Map.prototype.forEach = function (a, b) { var c = this.stringKeys_(); c.sort(); for (var d = 0; d < c.length; d++) {
        var e = this.map_[c[d]];
        a.call(b, this.wrapEntry_(e), e.key, this);
    } };
    goog.exportProperty(jspb.Map.prototype, "forEach", jspb.Map.prototype.forEach);
    jspb.Map.prototype.set = function (a, b) { var c = new jspb.Map.Entry_(a); this.valueCtor_ ? (c.valueWrapper = b, c.value = b.toArray()) : c.value = b; this.map_[a.toString()] = c; this.arrClean = !1; return this; };
    goog.exportProperty(jspb.Map.prototype, "set", jspb.Map.prototype.set);
    jspb.Map.prototype.wrapEntry_ = function (a) { return this.valueCtor_ ? (a.valueWrapper || (a.valueWrapper = new this.valueCtor_(a.value)), a.valueWrapper) : a.value; };
    jspb.Map.prototype.get = function (a) { if (a = this.map_[a.toString()])
        return this.wrapEntry_(a); };
    goog.exportProperty(jspb.Map.prototype, "get", jspb.Map.prototype.get);
    jspb.Map.prototype.has = function (a) { return a.toString() in this.map_; };
    goog.exportProperty(jspb.Map.prototype, "has", jspb.Map.prototype.has);
    jspb.Map.prototype.serializeBinary = function (a, b, c, d, e) { var f = this.stringKeys_(); f.sort(); for (var g = 0; g < f.length; g++) {
        var h = this.map_[f[g]];
        b.beginSubMessage(a);
        c.call(b, 1, h.key);
        this.valueCtor_ ? d.call(b, 2, this.wrapEntry_(h), e) : d.call(b, 2, h.value);
        b.endSubMessage();
    } };
    goog.exportProperty(jspb.Map.prototype, "serializeBinary", jspb.Map.prototype.serializeBinary);
    jspb.Map.deserializeBinary = function (a, b, c, d, e, f, g) { for (; b.nextField() && !b.isEndGroup();) {
        var h = b.getFieldNumber();
        1 == h ? f = c.call(b) : 2 == h && (a.valueCtor_ ? (jspb.asserts.assert(e), g || (g = new a.valueCtor_), d.call(b, g, e)) : g = d.call(b));
    } jspb.asserts.assert(void 0 != f); jspb.asserts.assert(void 0 != g); a.set(f, g); };
    goog.exportProperty(jspb.Map, "deserializeBinary", jspb.Map.deserializeBinary);
    jspb.Map.prototype.stringKeys_ = function () { var a = this.map_, b = [], c; for (c in a)
        Object.prototype.hasOwnProperty.call(a, c) && b.push(c); return b; };
    jspb.Map.Entry_ = function (a, b) { this.key = a; this.value = b; this.valueWrapper = void 0; };
    jspb.ExtensionFieldInfo = function (a, b, c, d, e) { this.fieldIndex = a; this.fieldName = b; this.ctor = c; this.toObjectFn = d; this.isRepeated = e; };
    goog.exportSymbol("jspb.ExtensionFieldInfo", jspb.ExtensionFieldInfo);
    jspb.ExtensionFieldBinaryInfo = function (a, b, c, d, e, f) { this.fieldInfo = a; this.binaryReaderFn = b; this.binaryWriterFn = c; this.binaryMessageSerializeFn = d; this.binaryMessageDeserializeFn = e; this.isPacked = f; };
    goog.exportSymbol("jspb.ExtensionFieldBinaryInfo", jspb.ExtensionFieldBinaryInfo);
    jspb.ExtensionFieldInfo.prototype.isMessageType = function () { return !!this.ctor; };
    goog.exportProperty(jspb.ExtensionFieldInfo.prototype, "isMessageType", jspb.ExtensionFieldInfo.prototype.isMessageType);
    jspb.Message = function () { };
    goog.exportSymbol("jspb.Message", jspb.Message);
    jspb.Message.GENERATE_TO_OBJECT = !0;
    goog.exportProperty(jspb.Message, "GENERATE_TO_OBJECT", jspb.Message.GENERATE_TO_OBJECT);
    jspb.Message.GENERATE_FROM_OBJECT = !goog.DISALLOW_TEST_ONLY_CODE;
    goog.exportProperty(jspb.Message, "GENERATE_FROM_OBJECT", jspb.Message.GENERATE_FROM_OBJECT);
    jspb.Message.GENERATE_TO_STRING = !0;
    jspb.Message.ASSUME_LOCAL_ARRAYS = !1;
    jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS = !0;
    jspb.Message.SUPPORTS_UINT8ARRAY_ = "function" == typeof Uint8Array;
    jspb.Message.prototype.getJsPbMessageId = function () { return this.messageId_; };
    goog.exportProperty(jspb.Message.prototype, "getJsPbMessageId", jspb.Message.prototype.getJsPbMessageId);
    jspb.Message.getIndex_ = function (a, b) { return b + a.arrayIndexOffset_; };
    jspb.Message.hiddenES6Property_ = function () { };
    jspb.Message.getFieldNumber_ = function (a, b) { return b - a.arrayIndexOffset_; };
    jspb.Message.initialize = function (a, b, c, d, e, f) {
        a.wrappers_ = null;
        b || (b = c ? [c] : []);
        a.messageId_ = c ? String(c) : void 0;
        a.arrayIndexOffset_ = 0 === c ? -1 : 0;
        a.array = b;
        jspb.Message.initPivotAndExtensionObject_(a, d);
        a.convertedPrimitiveFields_ = {};
        jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS || (a.repeatedFields = e);
        if (e)
            for (b = 0; b < e.length; b++)
                c = e[b], c < a.pivot_ ? (c = jspb.Message.getIndex_(a, c), a.array[c] = a.array[c] || jspb.Message.EMPTY_LIST_SENTINEL_) : (jspb.Message.maybeInitEmptyExtensionObject_(a), a.extensionObject_[c] =
                    a.extensionObject_[c] || jspb.Message.EMPTY_LIST_SENTINEL_);
        if (f && f.length)
            for (b = 0; b < f.length; b++)
                jspb.Message.computeOneofCase(a, f[b]);
    };
    goog.exportProperty(jspb.Message, "initialize", jspb.Message.initialize);
    jspb.Message.EMPTY_LIST_SENTINEL_ = goog.DEBUG && Object.freeze ? Object.freeze([]) : [];
    jspb.Message.isArray_ = function (a) { return jspb.Message.ASSUME_LOCAL_ARRAYS ? a instanceof Array : Array.isArray(a); };
    jspb.Message.isExtensionObject_ = function (a) { return null !== a && "object" == typeof a && !jspb.Message.isArray_(a) && !(jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array); };
    jspb.Message.initPivotAndExtensionObject_ = function (a, b) { var c = a.array.length, d = -1; if (c && (d = c - 1, c = a.array[d], jspb.Message.isExtensionObject_(c))) {
        a.pivot_ = jspb.Message.getFieldNumber_(a, d);
        a.extensionObject_ = c;
        return;
    } -1 < b ? (a.pivot_ = Math.max(b, jspb.Message.getFieldNumber_(a, d + 1)), a.extensionObject_ = null) : a.pivot_ = Number.MAX_VALUE; };
    jspb.Message.maybeInitEmptyExtensionObject_ = function (a) { var b = jspb.Message.getIndex_(a, a.pivot_); a.array[b] || (a.extensionObject_ = a.array[b] = {}); };
    jspb.Message.toObjectList = function (a, b, c) { for (var d = [], e = 0; e < a.length; e++)
        d[e] = b.call(a[e], c, a[e]); return d; };
    goog.exportProperty(jspb.Message, "toObjectList", jspb.Message.toObjectList);
    jspb.Message.toObjectExtension = function (a, b, c, d, e) { for (var f in c) {
        var g = c[f], h = d.call(a, g);
        if (null != h) {
            for (var k in g.fieldName)
                if (g.fieldName.hasOwnProperty(k))
                    break;
            b[k] = g.toObjectFn ? g.isRepeated ? jspb.Message.toObjectList(h, g.toObjectFn, e) : g.toObjectFn(e, h) : h;
        }
    } };
    goog.exportProperty(jspb.Message, "toObjectExtension", jspb.Message.toObjectExtension);
    jspb.Message.serializeBinaryExtensions = function (a, b, c, d) {
        for (var e in c) {
            var f = c[e], g = f.fieldInfo;
            if (!f.binaryWriterFn)
                throw Error("Message extension present that was generated without binary serialization support");
            var h = d.call(a, g);
            if (null != h)
                if (g.isMessageType())
                    if (f.binaryMessageSerializeFn)
                        f.binaryWriterFn.call(b, g.fieldIndex, h, f.binaryMessageSerializeFn);
                    else
                        throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
                else
                    f.binaryWriterFn.call(b, g.fieldIndex, h);
        }
    };
    goog.exportProperty(jspb.Message, "serializeBinaryExtensions", jspb.Message.serializeBinaryExtensions);
    jspb.Message.readBinaryExtension = function (a, b, c, d, e) { var f = c[b.getFieldNumber()]; if (f) {
        c = f.fieldInfo;
        if (!f.binaryReaderFn)
            throw Error("Deserializing extension whose generated code does not support binary format");
        if (c.isMessageType()) {
            var g = new c.ctor;
            f.binaryReaderFn.call(b, g, f.binaryMessageDeserializeFn);
        }
        else
            g = f.binaryReaderFn.call(b);
        c.isRepeated && !f.isPacked ? (b = d.call(a, c)) ? b.push(g) : e.call(a, c, [g]) : e.call(a, c, g);
    }
    else
        b.skipField(); };
    goog.exportProperty(jspb.Message, "readBinaryExtension", jspb.Message.readBinaryExtension);
    jspb.Message.getField = function (a, b) { if (b < a.pivot_) {
        b = jspb.Message.getIndex_(a, b);
        var c = a.array[b];
        return c === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.array[b] = [] : c;
    } if (a.extensionObject_)
        return c = a.extensionObject_[b], c === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.extensionObject_[b] = [] : c; };
    goog.exportProperty(jspb.Message, "getField", jspb.Message.getField);
    jspb.Message.getRepeatedField = function (a, b) { return jspb.Message.getField(a, b); };
    goog.exportProperty(jspb.Message, "getRepeatedField", jspb.Message.getRepeatedField);
    jspb.Message.getOptionalFloatingPointField = function (a, b) { a = jspb.Message.getField(a, b); return null == a ? a : +a; };
    goog.exportProperty(jspb.Message, "getOptionalFloatingPointField", jspb.Message.getOptionalFloatingPointField);
    jspb.Message.getBooleanField = function (a, b) { a = jspb.Message.getField(a, b); return null == a ? a : !!a; };
    goog.exportProperty(jspb.Message, "getBooleanField", jspb.Message.getBooleanField);
    jspb.Message.getRepeatedFloatingPointField = function (a, b) { var c = jspb.Message.getRepeatedField(a, b); a.convertedPrimitiveFields_ || (a.convertedPrimitiveFields_ = {}); if (!a.convertedPrimitiveFields_[b]) {
        for (var d = 0; d < c.length; d++)
            c[d] = +c[d];
        a.convertedPrimitiveFields_[b] = !0;
    } return c; };
    goog.exportProperty(jspb.Message, "getRepeatedFloatingPointField", jspb.Message.getRepeatedFloatingPointField);
    jspb.Message.getRepeatedBooleanField = function (a, b) { var c = jspb.Message.getRepeatedField(a, b); a.convertedPrimitiveFields_ || (a.convertedPrimitiveFields_ = {}); if (!a.convertedPrimitiveFields_[b]) {
        for (var d = 0; d < c.length; d++)
            c[d] = !!c[d];
        a.convertedPrimitiveFields_[b] = !0;
    } return c; };
    goog.exportProperty(jspb.Message, "getRepeatedBooleanField", jspb.Message.getRepeatedBooleanField);
    jspb.Message.bytesAsB64 = function (a) { if (null == a || "string" === typeof a)
        return a; if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array)
        return goog.crypt.base64.encodeByteArray(a); jspb.asserts.fail("Cannot coerce to b64 string: " + goog.typeOf(a)); return null; };
    goog.exportProperty(jspb.Message, "bytesAsB64", jspb.Message.bytesAsB64);
    jspb.Message.bytesAsU8 = function (a) { if (null == a || a instanceof Uint8Array)
        return a; if ("string" === typeof a)
        return goog.crypt.base64.decodeStringToUint8Array(a); jspb.asserts.fail("Cannot coerce to Uint8Array: " + goog.typeOf(a)); return null; };
    goog.exportProperty(jspb.Message, "bytesAsU8", jspb.Message.bytesAsU8);
    jspb.Message.bytesListAsB64 = function (a) { jspb.Message.assertConsistentTypes_(a); return a.length && "string" !== typeof a[0] ? goog.array.map(a, jspb.Message.bytesAsB64) : a; };
    goog.exportProperty(jspb.Message, "bytesListAsB64", jspb.Message.bytesListAsB64);
    jspb.Message.bytesListAsU8 = function (a) { jspb.Message.assertConsistentTypes_(a); return !a.length || a[0] instanceof Uint8Array ? a : goog.array.map(a, jspb.Message.bytesAsU8); };
    goog.exportProperty(jspb.Message, "bytesListAsU8", jspb.Message.bytesListAsU8);
    jspb.Message.assertConsistentTypes_ = function (a) { if (goog.DEBUG && a && 1 < a.length) {
        var b = goog.typeOf(a[0]);
        goog.array.forEach(a, function (a) { goog.typeOf(a) != b && jspb.asserts.fail("Inconsistent type in JSPB repeated field array. Got " + goog.typeOf(a) + " expected " + b); });
    } };
    jspb.Message.getFieldWithDefault = function (a, b, c) { a = jspb.Message.getField(a, b); return null == a ? c : a; };
    goog.exportProperty(jspb.Message, "getFieldWithDefault", jspb.Message.getFieldWithDefault);
    jspb.Message.getBooleanFieldWithDefault = function (a, b, c) { a = jspb.Message.getBooleanField(a, b); return null == a ? c : a; };
    goog.exportProperty(jspb.Message, "getBooleanFieldWithDefault", jspb.Message.getBooleanFieldWithDefault);
    jspb.Message.getFloatingPointFieldWithDefault = function (a, b, c) { a = jspb.Message.getOptionalFloatingPointField(a, b); return null == a ? c : a; };
    goog.exportProperty(jspb.Message, "getFloatingPointFieldWithDefault", jspb.Message.getFloatingPointFieldWithDefault);
    jspb.Message.getFieldProto3 = jspb.Message.getFieldWithDefault;
    goog.exportProperty(jspb.Message, "getFieldProto3", jspb.Message.getFieldProto3);
    jspb.Message.getMapField = function (a, b, c, d) { a.wrappers_ || (a.wrappers_ = {}); if (b in a.wrappers_)
        return a.wrappers_[b]; var e = jspb.Message.getField(a, b); if (!e) {
        if (c)
            return;
        e = [];
        jspb.Message.setField(a, b, e);
    } return a.wrappers_[b] = new jspb.Map(e, d); };
    goog.exportProperty(jspb.Message, "getMapField", jspb.Message.getMapField);
    jspb.Message.setField = function (a, b, c) { jspb.asserts.assertInstanceof(a, jspb.Message); b < a.pivot_ ? a.array[jspb.Message.getIndex_(a, b)] = c : (jspb.Message.maybeInitEmptyExtensionObject_(a), a.extensionObject_[b] = c); return a; };
    goog.exportProperty(jspb.Message, "setField", jspb.Message.setField);
    jspb.Message.setProto3IntField = function (a, b, c) { return jspb.Message.setFieldIgnoringDefault_(a, b, c, 0); };
    goog.exportProperty(jspb.Message, "setProto3IntField", jspb.Message.setProto3IntField);
    jspb.Message.setProto3FloatField = function (a, b, c) { return jspb.Message.setFieldIgnoringDefault_(a, b, c, 0); };
    goog.exportProperty(jspb.Message, "setProto3FloatField", jspb.Message.setProto3FloatField);
    jspb.Message.setProto3BooleanField = function (a, b, c) { return jspb.Message.setFieldIgnoringDefault_(a, b, c, !1); };
    goog.exportProperty(jspb.Message, "setProto3BooleanField", jspb.Message.setProto3BooleanField);
    jspb.Message.setProto3StringField = function (a, b, c) { return jspb.Message.setFieldIgnoringDefault_(a, b, c, ""); };
    goog.exportProperty(jspb.Message, "setProto3StringField", jspb.Message.setProto3StringField);
    jspb.Message.setProto3BytesField = function (a, b, c) { return jspb.Message.setFieldIgnoringDefault_(a, b, c, ""); };
    goog.exportProperty(jspb.Message, "setProto3BytesField", jspb.Message.setProto3BytesField);
    jspb.Message.setProto3EnumField = function (a, b, c) { return jspb.Message.setFieldIgnoringDefault_(a, b, c, 0); };
    goog.exportProperty(jspb.Message, "setProto3EnumField", jspb.Message.setProto3EnumField);
    jspb.Message.setProto3StringIntField = function (a, b, c) { return jspb.Message.setFieldIgnoringDefault_(a, b, c, "0"); };
    goog.exportProperty(jspb.Message, "setProto3StringIntField", jspb.Message.setProto3StringIntField);
    jspb.Message.setFieldIgnoringDefault_ = function (a, b, c, d) { jspb.asserts.assertInstanceof(a, jspb.Message); c !== d ? jspb.Message.setField(a, b, c) : b < a.pivot_ ? a.array[jspb.Message.getIndex_(a, b)] = null : (jspb.Message.maybeInitEmptyExtensionObject_(a), delete a.extensionObject_[b]); return a; };
    jspb.Message.addToRepeatedField = function (a, b, c, d) { jspb.asserts.assertInstanceof(a, jspb.Message); b = jspb.Message.getRepeatedField(a, b); void 0 != d ? b.splice(d, 0, c) : b.push(c); return a; };
    goog.exportProperty(jspb.Message, "addToRepeatedField", jspb.Message.addToRepeatedField);
    jspb.Message.setOneofField = function (a, b, c, d) { jspb.asserts.assertInstanceof(a, jspb.Message); (c = jspb.Message.computeOneofCase(a, c)) && c !== b && void 0 !== d && (a.wrappers_ && c in a.wrappers_ && (a.wrappers_[c] = void 0), jspb.Message.setField(a, c, void 0)); return jspb.Message.setField(a, b, d); };
    goog.exportProperty(jspb.Message, "setOneofField", jspb.Message.setOneofField);
    jspb.Message.computeOneofCase = function (a, b) { for (var c, d, e = 0; e < b.length; e++) {
        var f = b[e], g = jspb.Message.getField(a, f);
        null != g && (c = f, d = g, jspb.Message.setField(a, f, void 0));
    } return c ? (jspb.Message.setField(a, c, d), c) : 0; };
    goog.exportProperty(jspb.Message, "computeOneofCase", jspb.Message.computeOneofCase);
    jspb.Message.getWrapperField = function (a, b, c, d) { a.wrappers_ || (a.wrappers_ = {}); if (!a.wrappers_[c]) {
        var e = jspb.Message.getField(a, c);
        if (d || e)
            a.wrappers_[c] = new b(e);
    } return a.wrappers_[c]; };
    goog.exportProperty(jspb.Message, "getWrapperField", jspb.Message.getWrapperField);
    jspb.Message.getRepeatedWrapperField = function (a, b, c) { jspb.Message.wrapRepeatedField_(a, b, c); b = a.wrappers_[c]; b == jspb.Message.EMPTY_LIST_SENTINEL_ && (b = a.wrappers_[c] = []); return b; };
    goog.exportProperty(jspb.Message, "getRepeatedWrapperField", jspb.Message.getRepeatedWrapperField);
    jspb.Message.wrapRepeatedField_ = function (a, b, c) { a.wrappers_ || (a.wrappers_ = {}); if (!a.wrappers_[c]) {
        for (var d = jspb.Message.getRepeatedField(a, c), e = [], f = 0; f < d.length; f++)
            e[f] = new b(d[f]);
        a.wrappers_[c] = e;
    } };
    jspb.Message.setWrapperField = function (a, b, c) { jspb.asserts.assertInstanceof(a, jspb.Message); a.wrappers_ || (a.wrappers_ = {}); var d = c ? c.toArray() : c; a.wrappers_[b] = c; return jspb.Message.setField(a, b, d); };
    goog.exportProperty(jspb.Message, "setWrapperField", jspb.Message.setWrapperField);
    jspb.Message.setOneofWrapperField = function (a, b, c, d) { jspb.asserts.assertInstanceof(a, jspb.Message); a.wrappers_ || (a.wrappers_ = {}); var e = d ? d.toArray() : d; a.wrappers_[b] = d; return jspb.Message.setOneofField(a, b, c, e); };
    goog.exportProperty(jspb.Message, "setOneofWrapperField", jspb.Message.setOneofWrapperField);
    jspb.Message.setRepeatedWrapperField = function (a, b, c) { jspb.asserts.assertInstanceof(a, jspb.Message); a.wrappers_ || (a.wrappers_ = {}); c = c || []; for (var d = [], e = 0; e < c.length; e++)
        d[e] = c[e].toArray(); a.wrappers_[b] = c; return jspb.Message.setField(a, b, d); };
    goog.exportProperty(jspb.Message, "setRepeatedWrapperField", jspb.Message.setRepeatedWrapperField);
    jspb.Message.addToRepeatedWrapperField = function (a, b, c, d, e) { jspb.Message.wrapRepeatedField_(a, d, b); var f = a.wrappers_[b]; f || (f = a.wrappers_[b] = []); c = c ? c : new d; a = jspb.Message.getRepeatedField(a, b); void 0 != e ? (f.splice(e, 0, c), a.splice(e, 0, c.toArray())) : (f.push(c), a.push(c.toArray())); return c; };
    goog.exportProperty(jspb.Message, "addToRepeatedWrapperField", jspb.Message.addToRepeatedWrapperField);
    jspb.Message.toMap = function (a, b, c, d) { for (var e = {}, f = 0; f < a.length; f++)
        e[b.call(a[f])] = c ? c.call(a[f], d, a[f]) : a[f]; return e; };
    goog.exportProperty(jspb.Message, "toMap", jspb.Message.toMap);
    jspb.Message.prototype.syncMapFields_ = function () { if (this.wrappers_)
        for (var a in this.wrappers_) {
            var b = this.wrappers_[a];
            if (Array.isArray(b))
                for (var c = 0; c < b.length; c++)
                    b[c] && b[c].toArray();
            else
                b && b.toArray();
        } };
    jspb.Message.prototype.toArray = function () { this.syncMapFields_(); return this.array; };
    goog.exportProperty(jspb.Message.prototype, "toArray", jspb.Message.prototype.toArray);
    jspb.Message.GENERATE_TO_STRING && (jspb.Message.prototype.toString = function () { this.syncMapFields_(); return this.array.toString(); });
    jspb.Message.prototype.getExtension = function (a) { if (this.extensionObject_) {
        this.wrappers_ || (this.wrappers_ = {});
        var b = a.fieldIndex;
        if (a.isRepeated) {
            if (a.isMessageType())
                return this.wrappers_[b] || (this.wrappers_[b] = goog.array.map(this.extensionObject_[b] || [], function (b) { return new a.ctor(b); })), this.wrappers_[b];
        }
        else if (a.isMessageType())
            return !this.wrappers_[b] && this.extensionObject_[b] && (this.wrappers_[b] = new a.ctor(this.extensionObject_[b])), this.wrappers_[b];
        return this.extensionObject_[b];
    } };
    goog.exportProperty(jspb.Message.prototype, "getExtension", jspb.Message.prototype.getExtension);
    jspb.Message.prototype.setExtension = function (a, b) { this.wrappers_ || (this.wrappers_ = {}); jspb.Message.maybeInitEmptyExtensionObject_(this); var c = a.fieldIndex; a.isRepeated ? (b = b || [], a.isMessageType() ? (this.wrappers_[c] = b, this.extensionObject_[c] = goog.array.map(b, function (a) { return a.toArray(); })) : this.extensionObject_[c] = b) : a.isMessageType() ? (this.wrappers_[c] = b, this.extensionObject_[c] = b ? b.toArray() : b) : this.extensionObject_[c] = b; return this; };
    goog.exportProperty(jspb.Message.prototype, "setExtension", jspb.Message.prototype.setExtension);
    jspb.Message.difference = function (a, b) { if (!(a instanceof b.constructor))
        throw Error("Messages have different types."); var c = a.toArray(); b = b.toArray(); var d = [], e = 0, f = c.length > b.length ? c.length : b.length; a.getJsPbMessageId() && (d[0] = a.getJsPbMessageId(), e = 1); for (; e < f; e++)
        jspb.Message.compareFields(c[e], b[e]) || (d[e] = b[e]); return new a.constructor(d); };
    goog.exportProperty(jspb.Message, "difference", jspb.Message.difference);
    jspb.Message.equals = function (a, b) { return a == b || !(!a || !b) && a instanceof b.constructor && jspb.Message.compareFields(a.toArray(), b.toArray()); };
    goog.exportProperty(jspb.Message, "equals", jspb.Message.equals);
    jspb.Message.compareExtensions = function (a, b) { a = a || {}; b = b || {}; var c = {}, d; for (d in a)
        c[d] = 0; for (d in b)
        c[d] = 0; for (d in c)
        if (!jspb.Message.compareFields(a[d], b[d]))
            return !1; return !0; };
    goog.exportProperty(jspb.Message, "compareExtensions", jspb.Message.compareExtensions);
    jspb.Message.compareFields = function (a, b) {
        if (a == b)
            return !0;
        if (!goog.isObject(a) || !goog.isObject(b))
            return "number" === typeof a && isNaN(a) || "number" === typeof b && isNaN(b) ? String(a) == String(b) : !1;
        if (a.constructor != b.constructor)
            return !1;
        if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a.constructor === Uint8Array) {
            if (a.length != b.length)
                return !1;
            for (var c = 0; c < a.length; c++)
                if (a[c] != b[c])
                    return !1;
            return !0;
        }
        if (a.constructor === Array) {
            var d = void 0, e = void 0, f = Math.max(a.length, b.length);
            for (c = 0; c < f; c++) {
                var g = a[c], h = b[c];
                g &&
                    g.constructor == Object && (jspb.asserts.assert(void 0 === d), jspb.asserts.assert(c === a.length - 1), d = g, g = void 0);
                h && h.constructor == Object && (jspb.asserts.assert(void 0 === e), jspb.asserts.assert(c === b.length - 1), e = h, h = void 0);
                if (!jspb.Message.compareFields(g, h))
                    return !1;
            }
            return d || e ? (d = d || {}, e = e || {}, jspb.Message.compareExtensions(d, e)) : !0;
        }
        if (a.constructor === Object)
            return jspb.Message.compareExtensions(a, b);
        throw Error("Invalid type in JSPB array");
    };
    goog.exportProperty(jspb.Message, "compareFields", jspb.Message.compareFields);
    jspb.Message.prototype.cloneMessage = function () { return jspb.Message.cloneMessage(this); };
    goog.exportProperty(jspb.Message.prototype, "cloneMessage", jspb.Message.prototype.cloneMessage);
    jspb.Message.prototype.clone = function () { return jspb.Message.cloneMessage(this); };
    goog.exportProperty(jspb.Message.prototype, "clone", jspb.Message.prototype.clone);
    jspb.Message.clone = function (a) { return jspb.Message.cloneMessage(a); };
    goog.exportProperty(jspb.Message, "clone", jspb.Message.clone);
    jspb.Message.cloneMessage = function (a) { return new a.constructor(jspb.Message.clone_(a.toArray())); };
    jspb.Message.copyInto = function (a, b) { jspb.asserts.assertInstanceof(a, jspb.Message); jspb.asserts.assertInstanceof(b, jspb.Message); jspb.asserts.assert(a.constructor == b.constructor, "Copy source and target message should have the same type."); a = jspb.Message.clone(a); for (var c = b.toArray(), d = a.toArray(), e = c.length = 0; e < d.length; e++)
        c[e] = d[e]; b.wrappers_ = a.wrappers_; b.extensionObject_ = a.extensionObject_; };
    goog.exportProperty(jspb.Message, "copyInto", jspb.Message.copyInto);
    jspb.Message.clone_ = function (a) { if (Array.isArray(a)) {
        for (var b = Array(a.length), c = 0; c < a.length; c++) {
            var d = a[c];
            null != d && (b[c] = "object" == typeof d ? jspb.Message.clone_(jspb.asserts.assert(d)) : d);
        }
        return b;
    } if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array)
        return new Uint8Array(a); b = {}; for (c in a)
        d = a[c], null != d && (b[c] = "object" == typeof d ? jspb.Message.clone_(jspb.asserts.assert(d)) : d); return b; };
    jspb.Message.registerMessageType = function (a, b) { b.messageId = a; };
    goog.exportProperty(jspb.Message, "registerMessageType", jspb.Message.registerMessageType);
    jspb.Message.messageSetExtensions = {};
    jspb.Message.messageSetExtensionsBinary = {};
    jspb.Export = {};
    "object" === 'object' && (exports.Map = jspb.Map, exports.Message = jspb.Message, exports.BinaryReader = jspb.BinaryReader, exports.BinaryWriter = jspb.BinaryWriter, exports.ExtensionFieldInfo = jspb.ExtensionFieldInfo, exports.ExtensionFieldBinaryInfo = jspb.ExtensionFieldBinaryInfo, exports.exportSymbol = goog.exportSymbol, exports.inherits = goog.inherits, exports.object = { extend: goog.object.extend }, exports.typeOf = goog.typeOf);

    });
    var googleProtobuf_1 = googleProtobuf.Map;
    var googleProtobuf_2 = googleProtobuf.Message;
    var googleProtobuf_3 = googleProtobuf.BinaryReader;
    var googleProtobuf_4 = googleProtobuf.BinaryWriter;
    var googleProtobuf_5 = googleProtobuf.ExtensionFieldInfo;
    var googleProtobuf_6 = googleProtobuf.ExtensionFieldBinaryInfo;
    var googleProtobuf_7 = googleProtobuf.exportSymbol;
    var googleProtobuf_8 = googleProtobuf.inherits;
    var googleProtobuf_9 = googleProtobuf.object;
    var googleProtobuf_10 = googleProtobuf.typeOf;

    var Second_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Second.AutoPlayGet', null, global);
    goog.exportSymbol('proto.Second.AutoPlayNoti', null, global);
    goog.exportSymbol('proto.Second.CommonAck', null, global);
    goog.exportSymbol('proto.Second.DealCardNoti', null, global);
    goog.exportSymbol('proto.Second.ExtraInfo', null, global);
    goog.exportSymbol('proto.Second.GameMoneyChange', null, global);
    goog.exportSymbol('proto.Second.GameResult', null, global);
    goog.exportSymbol('proto.Second.GameResultNoti', null, global);
    goog.exportSymbol('proto.Second.GameStartNoti', null, global);
    goog.exportSymbol('proto.Second.Groups', null, global);
    goog.exportSymbol('proto.Second.LeaveGameGet', null, global);
    goog.exportSymbol('proto.Second.PlayerInfo', null, global);
    goog.exportSymbol('proto.Second.PlayerOpGet', null, global);
    goog.exportSymbol('proto.Second.PlayerOpNoti', null, global);
    goog.exportSymbol('proto.Second.PlayerOpResult', null, global);
    goog.exportSymbol('proto.Second.ReconnectNoti', null, global);
    goog.exportSymbol('proto.Second.Result', null, global);
    goog.exportSymbol('proto.Second.SecondStatData', null, global);
    goog.exportSymbol('proto.Second.TianHuItem', null, global);
    goog.exportSymbol('proto.Second.TianHuNoti', null, global);
    goog.exportSymbol('proto.Second.UpdateCardNoti', null, global);
    proto.Second.CommonAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Second.CommonAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.CommonAck.displayName = 'proto.Second.CommonAck';
    }
    proto.Second.GameStartNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Second.GameStartNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.GameStartNoti.displayName = 'proto.Second.GameStartNoti';
    }
    proto.Second.Groups = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.Groups.repeatedFields_, null);
    };
    goog.inherits(proto.Second.Groups, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.Groups.displayName = 'proto.Second.Groups';
    }
    proto.Second.PlayerOpNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.PlayerOpNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Second.PlayerOpNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.PlayerOpNoti.displayName = 'proto.Second.PlayerOpNoti';
    }
    proto.Second.PlayerOpGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.PlayerOpGet.repeatedFields_, null);
    };
    goog.inherits(proto.Second.PlayerOpGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.PlayerOpGet.displayName = 'proto.Second.PlayerOpGet';
    }
    proto.Second.PlayerOpResult = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Second.PlayerOpResult, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.PlayerOpResult.displayName = 'proto.Second.PlayerOpResult';
    }
    proto.Second.DealCardNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.DealCardNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Second.DealCardNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.DealCardNoti.displayName = 'proto.Second.DealCardNoti';
    }
    proto.Second.UpdateCardNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.UpdateCardNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Second.UpdateCardNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.UpdateCardNoti.displayName = 'proto.Second.UpdateCardNoti';
    }
    proto.Second.GameMoneyChange = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Second.GameMoneyChange, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.GameMoneyChange.displayName = 'proto.Second.GameMoneyChange';
    }
    proto.Second.ExtraInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.ExtraInfo.repeatedFields_, null);
    };
    goog.inherits(proto.Second.ExtraInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.ExtraInfo.displayName = 'proto.Second.ExtraInfo';
    }
    proto.Second.GameResult = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.GameResult.repeatedFields_, null);
    };
    goog.inherits(proto.Second.GameResult, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.GameResult.displayName = 'proto.Second.GameResult';
    }
    proto.Second.GameResultNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.GameResultNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Second.GameResultNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.GameResultNoti.displayName = 'proto.Second.GameResultNoti';
    }
    proto.Second.PlayerInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Second.PlayerInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.PlayerInfo.displayName = 'proto.Second.PlayerInfo';
    }
    proto.Second.ReconnectNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.ReconnectNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Second.ReconnectNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.ReconnectNoti.displayName = 'proto.Second.ReconnectNoti';
    }
    proto.Second.AutoPlayGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Second.AutoPlayGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.AutoPlayGet.displayName = 'proto.Second.AutoPlayGet';
    }
    proto.Second.AutoPlayNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Second.AutoPlayNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.AutoPlayNoti.displayName = 'proto.Second.AutoPlayNoti';
    }
    proto.Second.LeaveGameGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Second.LeaveGameGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.LeaveGameGet.displayName = 'proto.Second.LeaveGameGet';
    }
    proto.Second.TianHuItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.TianHuItem.repeatedFields_, null);
    };
    goog.inherits(proto.Second.TianHuItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.TianHuItem.displayName = 'proto.Second.TianHuItem';
    }
    proto.Second.TianHuNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Second.TianHuNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Second.TianHuNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.TianHuNoti.displayName = 'proto.Second.TianHuNoti';
    }
    proto.Second.SecondStatData = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Second.SecondStatData, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Second.SecondStatData.displayName = 'proto.Second.SecondStatData';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.CommonAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.CommonAck.toObject(opt_includeInstance, this);
        };
        proto.Second.CommonAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.CommonAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.CommonAck;
        return proto.Second.CommonAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.CommonAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.CommonAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.CommonAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.CommonAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.Second.CommonAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.CommonAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.GameStartNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.GameStartNoti.toObject(opt_includeInstance, this);
        };
        proto.Second.GameStartNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                banker: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                basescore: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                moneytype: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.GameStartNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.GameStartNoti;
        return proto.Second.GameStartNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.GameStartNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setBanker(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setBasescore(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setMoneytype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.GameStartNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.GameStartNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.GameStartNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getBanker();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getBasescore();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getMoneytype();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
    };
    proto.Second.GameStartNoti.prototype.getBanker = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.GameStartNoti.prototype.setBanker = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.GameStartNoti.prototype.getBasescore = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.GameStartNoti.prototype.setBasescore = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Second.GameStartNoti.prototype.getMoneytype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Second.GameStartNoti.prototype.setMoneytype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Second.Groups.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.Groups.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.Groups.toObject(opt_includeInstance, this);
        };
        proto.Second.Groups.toObject = function (includeInstance, msg) {
            var f, obj = {
                type: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                chair: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                cardsList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.Groups.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.Groups;
        return proto.Second.Groups.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.Groups.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setChair(value);
                    break;
                case 2:
                    var value = (reader.readPackedSint32());
                    msg.setCardsList(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.Groups.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.Groups.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.Groups.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getChair();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getCardsList();
        if (f.length > 0) {
            writer.writePackedSint32(2, f);
        }
    };
    proto.Second.Groups.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.Groups.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.Groups.prototype.getChair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Second.Groups.prototype.setChair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Second.Groups.prototype.getCardsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 2));
    };
    proto.Second.Groups.prototype.setCardsList = function (value) {
        return googleProtobuf.Message.setField(this, 2, value || []);
    };
    proto.Second.Groups.prototype.addCards = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.Second.Groups.prototype.clearCardsList = function () {
        return this.setCardsList([]);
    };
    proto.Second.PlayerOpNoti.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.PlayerOpNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.PlayerOpNoti.toObject(opt_includeInstance, this);
        };
        proto.Second.PlayerOpNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                chair: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                operate: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                fromgroup: (f = msg.getFromgroup()) && proto.Second.Groups.toObject(includeInstance, f),
                fromchair: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                serialid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                deadline: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                newround: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 7, false),
                groupsList: googleProtobuf.Message.toObjectList(msg.getGroupsList(), proto.Second.Groups.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.PlayerOpNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.PlayerOpNoti;
        return proto.Second.PlayerOpNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.PlayerOpNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setChair(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setOperate(value);
                    break;
                case 3:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.setFromgroup(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setFromchair(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setSerialid(value);
                    break;
                case 6:
                    var value = (reader.readUint64());
                    msg.setDeadline(value);
                    break;
                case 7:
                    var value = (reader.readBool());
                    msg.setNewround(value);
                    break;
                case 11:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.addGroups(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.PlayerOpNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.PlayerOpNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.PlayerOpNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getChair();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getOperate();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getFromgroup();
        if (f != null) {
            writer.writeMessage(3, f, proto.Second.Groups.serializeBinaryToWriter);
        }
        f = message.getFromchair();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getSerialid();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getDeadline();
        if (f !== 0) {
            writer.writeUint64(6, f);
        }
        f = message.getNewround();
        if (f) {
            writer.writeBool(7, f);
        }
        f = message.getGroupsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.Second.Groups.serializeBinaryToWriter);
        }
    };
    proto.Second.PlayerOpNoti.prototype.getChair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.PlayerOpNoti.prototype.setChair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.PlayerOpNoti.prototype.getOperate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.PlayerOpNoti.prototype.setOperate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Second.PlayerOpNoti.prototype.getFromgroup = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Second.Groups, 3));
    };
    proto.Second.PlayerOpNoti.prototype.setFromgroup = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Second.PlayerOpNoti.prototype.clearFromgroup = function () {
        return this.setFromgroup(undefined);
    };
    proto.Second.PlayerOpNoti.prototype.hasFromgroup = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    proto.Second.PlayerOpNoti.prototype.getFromchair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Second.PlayerOpNoti.prototype.setFromchair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Second.PlayerOpNoti.prototype.getSerialid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Second.PlayerOpNoti.prototype.setSerialid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Second.PlayerOpNoti.prototype.getDeadline = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Second.PlayerOpNoti.prototype.setDeadline = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Second.PlayerOpNoti.prototype.getNewround = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 7, false));
    };
    proto.Second.PlayerOpNoti.prototype.setNewround = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 7, value);
    };
    proto.Second.PlayerOpNoti.prototype.getGroupsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Second.Groups, 11));
    };
    proto.Second.PlayerOpNoti.prototype.setGroupsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Second.PlayerOpNoti.prototype.addGroups = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Second.Groups, opt_index);
    };
    proto.Second.PlayerOpNoti.prototype.clearGroupsList = function () {
        return this.setGroupsList([]);
    };
    proto.Second.PlayerOpGet.repeatedFields_ = [4];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.PlayerOpGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.PlayerOpGet.toObject(opt_includeInstance, this);
        };
        proto.Second.PlayerOpGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                operate: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                serialid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                cardsList: (f = googleProtobuf.Message.getRepeatedField(msg, 4)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.PlayerOpGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.PlayerOpGet;
        return proto.Second.PlayerOpGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.PlayerOpGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setOperate(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setSerialid(value);
                    break;
                case 4:
                    var value = (reader.readPackedSint32());
                    msg.setCardsList(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.PlayerOpGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.PlayerOpGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.PlayerOpGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getOperate();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getSerialid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getCardsList();
        if (f.length > 0) {
            writer.writePackedSint32(4, f);
        }
    };
    proto.Second.PlayerOpGet.prototype.getOperate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.PlayerOpGet.prototype.setOperate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.PlayerOpGet.prototype.getSerialid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Second.PlayerOpGet.prototype.setSerialid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Second.PlayerOpGet.prototype.getCardsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 4));
    };
    proto.Second.PlayerOpGet.prototype.setCardsList = function (value) {
        return googleProtobuf.Message.setField(this, 4, value || []);
    };
    proto.Second.PlayerOpGet.prototype.addCards = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 4, value, opt_index);
    };
    proto.Second.PlayerOpGet.prototype.clearCardsList = function () {
        return this.setCardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.PlayerOpResult.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.PlayerOpResult.toObject(opt_includeInstance, this);
        };
        proto.Second.PlayerOpResult.toObject = function (includeInstance, msg) {
            var f, obj = {
                chair: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                operate: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                fromgroup: (f = msg.getFromgroup()) && proto.Second.Groups.toObject(includeInstance, f),
                fromchair: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                leftnum: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                group: (f = msg.getGroup()) && proto.Second.Groups.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.PlayerOpResult.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.PlayerOpResult;
        return proto.Second.PlayerOpResult.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.PlayerOpResult.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setChair(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setOperate(value);
                    break;
                case 3:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.setFromgroup(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setFromchair(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setLeftnum(value);
                    break;
                case 11:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.setGroup(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.PlayerOpResult.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.PlayerOpResult.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.PlayerOpResult.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getChair();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getOperate();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getFromgroup();
        if (f != null) {
            writer.writeMessage(3, f, proto.Second.Groups.serializeBinaryToWriter);
        }
        f = message.getFromchair();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getLeftnum();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getGroup();
        if (f != null) {
            writer.writeMessage(11, f, proto.Second.Groups.serializeBinaryToWriter);
        }
    };
    proto.Second.PlayerOpResult.prototype.getChair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.PlayerOpResult.prototype.setChair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.PlayerOpResult.prototype.getOperate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.PlayerOpResult.prototype.setOperate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Second.PlayerOpResult.prototype.getFromgroup = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Second.Groups, 3));
    };
    proto.Second.PlayerOpResult.prototype.setFromgroup = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Second.PlayerOpResult.prototype.clearFromgroup = function () {
        return this.setFromgroup(undefined);
    };
    proto.Second.PlayerOpResult.prototype.hasFromgroup = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    proto.Second.PlayerOpResult.prototype.getFromchair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Second.PlayerOpResult.prototype.setFromchair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Second.PlayerOpResult.prototype.getLeftnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Second.PlayerOpResult.prototype.setLeftnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Second.PlayerOpResult.prototype.getGroup = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Second.Groups, 11));
    };
    proto.Second.PlayerOpResult.prototype.setGroup = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.Second.PlayerOpResult.prototype.clearGroup = function () {
        return this.setGroup(undefined);
    };
    proto.Second.PlayerOpResult.prototype.hasGroup = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    proto.Second.DealCardNoti.repeatedFields_ = [1, 11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.DealCardNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.DealCardNoti.toObject(opt_includeInstance, this);
        };
        proto.Second.DealCardNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                handsList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
                groupsList: googleProtobuf.Message.toObjectList(msg.getGroupsList(), proto.Second.Groups.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.DealCardNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.DealCardNoti;
        return proto.Second.DealCardNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.DealCardNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readPackedSint32());
                    msg.setHandsList(value);
                    break;
                case 11:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.addGroups(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.DealCardNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.DealCardNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.DealCardNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getHandsList();
        if (f.length > 0) {
            writer.writePackedSint32(1, f);
        }
        f = message.getGroupsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.Second.Groups.serializeBinaryToWriter);
        }
    };
    proto.Second.DealCardNoti.prototype.getHandsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Second.DealCardNoti.prototype.setHandsList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Second.DealCardNoti.prototype.addHands = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Second.DealCardNoti.prototype.clearHandsList = function () {
        return this.setHandsList([]);
    };
    proto.Second.DealCardNoti.prototype.getGroupsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Second.Groups, 11));
    };
    proto.Second.DealCardNoti.prototype.setGroupsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Second.DealCardNoti.prototype.addGroups = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Second.Groups, opt_index);
    };
    proto.Second.DealCardNoti.prototype.clearGroupsList = function () {
        return this.setGroupsList([]);
    };
    proto.Second.UpdateCardNoti.repeatedFields_ = [1, 11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.UpdateCardNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.UpdateCardNoti.toObject(opt_includeInstance, this);
        };
        proto.Second.UpdateCardNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                handsList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
                chair: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                groupsList: googleProtobuf.Message.toObjectList(msg.getGroupsList(), proto.Second.Groups.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.UpdateCardNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.UpdateCardNoti;
        return proto.Second.UpdateCardNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.UpdateCardNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readPackedSint32());
                    msg.setHandsList(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setChair(value);
                    break;
                case 11:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.addGroups(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.UpdateCardNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.UpdateCardNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.UpdateCardNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getHandsList();
        if (f.length > 0) {
            writer.writePackedSint32(1, f);
        }
        f = message.getChair();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getGroupsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.Second.Groups.serializeBinaryToWriter);
        }
    };
    proto.Second.UpdateCardNoti.prototype.getHandsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Second.UpdateCardNoti.prototype.setHandsList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Second.UpdateCardNoti.prototype.addHands = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Second.UpdateCardNoti.prototype.clearHandsList = function () {
        return this.setHandsList([]);
    };
    proto.Second.UpdateCardNoti.prototype.getChair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.UpdateCardNoti.prototype.setChair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Second.UpdateCardNoti.prototype.getGroupsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Second.Groups, 11));
    };
    proto.Second.UpdateCardNoti.prototype.setGroupsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Second.UpdateCardNoti.prototype.addGroups = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Second.Groups, opt_index);
    };
    proto.Second.UpdateCardNoti.prototype.clearGroupsList = function () {
        return this.setGroupsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.GameMoneyChange.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.GameMoneyChange.toObject(opt_includeInstance, this);
        };
        proto.Second.GameMoneyChange.toObject = function (includeInstance, msg) {
            var f, obj = {
                nreason: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                changesMap: (f = msg.getChangesMap()) ? f.toObject(includeInstance, undefined) : [],
                scoresMap: (f = msg.getScoresMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.GameMoneyChange.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.GameMoneyChange;
        return proto.Second.GameMoneyChange.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.GameMoneyChange.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNreason(value);
                    break;
                case 11:
                    var value = msg.getChangesMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readInt64, null, 0, 0);
                    });
                    break;
                case 12:
                    var value = msg.getScoresMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readInt64, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.GameMoneyChange.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.GameMoneyChange.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.GameMoneyChange.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNreason();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getChangesMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeInt64);
        }
        f = message.getScoresMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(12, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeInt64);
        }
    };
    proto.Second.GameMoneyChange.prototype.getNreason = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.GameMoneyChange.prototype.setNreason = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.GameMoneyChange.prototype.getChangesMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, null));
    };
    proto.Second.GameMoneyChange.prototype.clearChangesMap = function () {
        this.getChangesMap().clear();
        return this;
    };
    proto.Second.GameMoneyChange.prototype.getScoresMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 12, opt_noLazyCreate, null));
    };
    proto.Second.GameMoneyChange.prototype.clearScoresMap = function () {
        this.getScoresMap().clear();
        return this;
    };
    proto.Second.ExtraInfo.repeatedFields_ = [7];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.ExtraInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.ExtraInfo.toObject(opt_includeInstance, this);
        };
        proto.Second.ExtraInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                scoresList: (f = googleProtobuf.Message.getRepeatedField(msg, 7)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.ExtraInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.ExtraInfo;
        return proto.Second.ExtraInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.ExtraInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 7:
                    var value = (reader.readPackedSint64());
                    msg.setScoresList(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.ExtraInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.ExtraInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.ExtraInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getScoresList();
        if (f.length > 0) {
            writer.writePackedSint64(7, f);
        }
    };
    proto.Second.ExtraInfo.prototype.getScoresList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 7));
    };
    proto.Second.ExtraInfo.prototype.setScoresList = function (value) {
        return googleProtobuf.Message.setField(this, 7, value || []);
    };
    proto.Second.ExtraInfo.prototype.addScores = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 7, value, opt_index);
    };
    proto.Second.ExtraInfo.prototype.clearScoresList = function () {
        return this.setScoresList([]);
    };
    proto.Second.GameResult.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.GameResult.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.GameResult.toObject(opt_includeInstance, this);
        };
        proto.Second.GameResult.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                chair: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                change: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                score: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                rank: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                extra: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                ascore: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                extramapMap: (f = msg.getExtramapMap()) ? f.toObject(includeInstance, proto.Second.ExtraInfo.toObject) : [],
                handsList: (f = googleProtobuf.Message.getRepeatedField(msg, 11)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.GameResult.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.GameResult;
        return proto.Second.GameResult.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.GameResult.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setChair(value);
                    break;
                case 3:
                    var value = (reader.readInt64());
                    msg.setChange(value);
                    break;
                case 4:
                    var value = (reader.readInt64());
                    msg.setScore(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setRank(value);
                    break;
                case 6:
                    var value = (reader.readInt64());
                    msg.setExtra(value);
                    break;
                case 7:
                    var value = (reader.readInt64());
                    msg.setAscore(value);
                    break;
                case 8:
                    var value = msg.getExtramapMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Second.ExtraInfo.deserializeBinaryFromReader, 0, new proto.Second.ExtraInfo());
                    });
                    break;
                case 11:
                    var value = (reader.readPackedSint32());
                    msg.setHandsList(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.GameResult.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.GameResult.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.GameResult.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getChair();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getChange();
        if (f !== 0) {
            writer.writeInt64(3, f);
        }
        f = message.getScore();
        if (f !== 0) {
            writer.writeInt64(4, f);
        }
        f = message.getRank();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getExtra();
        if (f !== 0) {
            writer.writeInt64(6, f);
        }
        f = message.getAscore();
        if (f !== 0) {
            writer.writeInt64(7, f);
        }
        f = message.getExtramapMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(8, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Second.ExtraInfo.serializeBinaryToWriter);
        }
        f = message.getHandsList();
        if (f.length > 0) {
            writer.writePackedSint32(11, f);
        }
    };
    proto.Second.GameResult.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.GameResult.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.GameResult.prototype.getChair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.GameResult.prototype.setChair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Second.GameResult.prototype.getChange = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Second.GameResult.prototype.setChange = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Second.GameResult.prototype.getScore = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Second.GameResult.prototype.setScore = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Second.GameResult.prototype.getRank = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Second.GameResult.prototype.setRank = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Second.GameResult.prototype.getExtra = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Second.GameResult.prototype.setExtra = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Second.GameResult.prototype.getAscore = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Second.GameResult.prototype.setAscore = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Second.GameResult.prototype.getExtramapMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 8, opt_noLazyCreate, proto.Second.ExtraInfo));
    };
    proto.Second.GameResult.prototype.clearExtramapMap = function () {
        this.getExtramapMap().clear();
        return this;
    };
    proto.Second.GameResult.prototype.getHandsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 11));
    };
    proto.Second.GameResult.prototype.setHandsList = function (value) {
        return googleProtobuf.Message.setField(this, 11, value || []);
    };
    proto.Second.GameResult.prototype.addHands = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 11, value, opt_index);
    };
    proto.Second.GameResult.prototype.clearHandsList = function () {
        return this.setHandsList([]);
    };
    proto.Second.GameResultNoti.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.GameResultNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.GameResultNoti.toObject(opt_includeInstance, this);
        };
        proto.Second.GameResultNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                banker: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                resultsList: googleProtobuf.Message.toObjectList(msg.getResultsList(), proto.Second.GameResult.toObject, includeInstance),
                taxfeeMap: (f = msg.getTaxfeeMap()) ? f.toObject(includeInstance, undefined) : [],
                extrastr: googleProtobuf.Message.getFieldWithDefault(msg, 22, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.GameResultNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.GameResultNoti;
        return proto.Second.GameResultNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.GameResultNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setBanker(value);
                    break;
                case 2:
                    var value = new proto.Second.GameResult;
                    reader.readMessage(value, proto.Second.GameResult.deserializeBinaryFromReader);
                    msg.addResults(value);
                    break;
                case 21:
                    var value = msg.getTaxfeeMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readSint64, null, 0, 0);
                    });
                    break;
                case 22:
                    var value = (reader.readString());
                    msg.setExtrastr(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.GameResultNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.GameResultNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.GameResultNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getBanker();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getResultsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Second.GameResult.serializeBinaryToWriter);
        }
        f = message.getTaxfeeMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(21, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeSint64);
        }
        f = message.getExtrastr();
        if (f.length > 0) {
            writer.writeString(22, f);
        }
    };
    proto.Second.GameResultNoti.prototype.getBanker = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.GameResultNoti.prototype.setBanker = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.GameResultNoti.prototype.getResultsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Second.GameResult, 2));
    };
    proto.Second.GameResultNoti.prototype.setResultsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Second.GameResultNoti.prototype.addResults = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Second.GameResult, opt_index);
    };
    proto.Second.GameResultNoti.prototype.clearResultsList = function () {
        return this.setResultsList([]);
    };
    proto.Second.GameResultNoti.prototype.getTaxfeeMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 21, opt_noLazyCreate, null));
    };
    proto.Second.GameResultNoti.prototype.clearTaxfeeMap = function () {
        this.getTaxfeeMap().clear();
        return this;
    };
    proto.Second.GameResultNoti.prototype.getExtrastr = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 22, ""));
    };
    proto.Second.GameResultNoti.prototype.setExtrastr = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 22, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.PlayerInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.PlayerInfo.toObject(opt_includeInstance, this);
        };
        proto.Second.PlayerInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                chair: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                leftnum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                disgroup: (f = msg.getDisgroup()) && proto.Second.Groups.toObject(includeInstance, f),
                pass: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                score: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                rank: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.PlayerInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.PlayerInfo;
        return proto.Second.PlayerInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.PlayerInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setChair(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setLeftnum(value);
                    break;
                case 3:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.setDisgroup(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setPass(value);
                    break;
                case 5:
                    var value = (reader.readInt64());
                    msg.setScore(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setRank(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.PlayerInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.PlayerInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.PlayerInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getChair();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getLeftnum();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getDisgroup();
        if (f != null) {
            writer.writeMessage(3, f, proto.Second.Groups.serializeBinaryToWriter);
        }
        f = message.getPass();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getScore();
        if (f !== 0) {
            writer.writeInt64(5, f);
        }
        f = message.getRank();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
    };
    proto.Second.PlayerInfo.prototype.getChair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.PlayerInfo.prototype.setChair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.PlayerInfo.prototype.getLeftnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.PlayerInfo.prototype.setLeftnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Second.PlayerInfo.prototype.getDisgroup = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Second.Groups, 3));
    };
    proto.Second.PlayerInfo.prototype.setDisgroup = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Second.PlayerInfo.prototype.clearDisgroup = function () {
        return this.setDisgroup(undefined);
    };
    proto.Second.PlayerInfo.prototype.hasDisgroup = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    proto.Second.PlayerInfo.prototype.getPass = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Second.PlayerInfo.prototype.setPass = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Second.PlayerInfo.prototype.getScore = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Second.PlayerInfo.prototype.setScore = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Second.PlayerInfo.prototype.getRank = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Second.PlayerInfo.prototype.setRank = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Second.ReconnectNoti.repeatedFields_ = [11, 12, 13];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.ReconnectNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.ReconnectNoti.toObject(opt_includeInstance, this);
        };
        proto.Second.ReconnectNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                banker: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                basescore: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                auto: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                moneytype: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                cardsList: (f = googleProtobuf.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
                groupsList: googleProtobuf.Message.toObjectList(msg.getGroupsList(), proto.Second.Groups.toObject, includeInstance),
                outgroupsList: googleProtobuf.Message.toObjectList(msg.getOutgroupsList(), proto.Second.Groups.toObject, includeInstance),
                usersMap: (f = msg.getUsersMap()) ? f.toObject(includeInstance, proto.Second.PlayerInfo.toObject) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.ReconnectNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.ReconnectNoti;
        return proto.Second.ReconnectNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.ReconnectNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setBanker(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setBasescore(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setAuto(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setStatus(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setMoneytype(value);
                    break;
                case 11:
                    var value = (reader.readPackedSint32());
                    msg.setCardsList(value);
                    break;
                case 12:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.addGroups(value);
                    break;
                case 13:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.addOutgroups(value);
                    break;
                case 14:
                    var value = msg.getUsersMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readInt32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Second.PlayerInfo.deserializeBinaryFromReader, 0, new proto.Second.PlayerInfo());
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.ReconnectNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.ReconnectNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.ReconnectNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getBanker();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getBasescore();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getAuto();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getStatus();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getMoneytype();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getCardsList();
        if (f.length > 0) {
            writer.writePackedSint32(11, f);
        }
        f = message.getGroupsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(12, f, proto.Second.Groups.serializeBinaryToWriter);
        }
        f = message.getOutgroupsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(13, f, proto.Second.Groups.serializeBinaryToWriter);
        }
        f = message.getUsersMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(14, writer, googleProtobuf.BinaryWriter.prototype.writeInt32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Second.PlayerInfo.serializeBinaryToWriter);
        }
    };
    proto.Second.ReconnectNoti.prototype.getBanker = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.ReconnectNoti.prototype.setBanker = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.ReconnectNoti.prototype.getBasescore = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.ReconnectNoti.prototype.setBasescore = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Second.ReconnectNoti.prototype.getAuto = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Second.ReconnectNoti.prototype.setAuto = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Second.ReconnectNoti.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Second.ReconnectNoti.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Second.ReconnectNoti.prototype.getMoneytype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Second.ReconnectNoti.prototype.setMoneytype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Second.ReconnectNoti.prototype.getCardsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 11));
    };
    proto.Second.ReconnectNoti.prototype.setCardsList = function (value) {
        return googleProtobuf.Message.setField(this, 11, value || []);
    };
    proto.Second.ReconnectNoti.prototype.addCards = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 11, value, opt_index);
    };
    proto.Second.ReconnectNoti.prototype.clearCardsList = function () {
        return this.setCardsList([]);
    };
    proto.Second.ReconnectNoti.prototype.getGroupsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Second.Groups, 12));
    };
    proto.Second.ReconnectNoti.prototype.setGroupsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 12, value);
    };
    proto.Second.ReconnectNoti.prototype.addGroups = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.Second.Groups, opt_index);
    };
    proto.Second.ReconnectNoti.prototype.clearGroupsList = function () {
        return this.setGroupsList([]);
    };
    proto.Second.ReconnectNoti.prototype.getOutgroupsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Second.Groups, 13));
    };
    proto.Second.ReconnectNoti.prototype.setOutgroupsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 13, value);
    };
    proto.Second.ReconnectNoti.prototype.addOutgroups = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.Second.Groups, opt_index);
    };
    proto.Second.ReconnectNoti.prototype.clearOutgroupsList = function () {
        return this.setOutgroupsList([]);
    };
    proto.Second.ReconnectNoti.prototype.getUsersMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 14, opt_noLazyCreate, proto.Second.PlayerInfo));
    };
    proto.Second.ReconnectNoti.prototype.clearUsersMap = function () {
        this.getUsersMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.AutoPlayGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.AutoPlayGet.toObject(opt_includeInstance, this);
        };
        proto.Second.AutoPlayGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                auto: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.AutoPlayGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.AutoPlayGet;
        return proto.Second.AutoPlayGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.AutoPlayGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAuto(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.AutoPlayGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.AutoPlayGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.AutoPlayGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAuto();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Second.AutoPlayGet.prototype.getAuto = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.AutoPlayGet.prototype.setAuto = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.AutoPlayNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.AutoPlayNoti.toObject(opt_includeInstance, this);
        };
        proto.Second.AutoPlayNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                chair: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                auto: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.AutoPlayNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.AutoPlayNoti;
        return proto.Second.AutoPlayNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.AutoPlayNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setChair(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setAuto(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.AutoPlayNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.AutoPlayNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.AutoPlayNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getChair();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAuto();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Second.AutoPlayNoti.prototype.getChair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.AutoPlayNoti.prototype.setChair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.AutoPlayNoti.prototype.getAuto = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.AutoPlayNoti.prototype.setAuto = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.LeaveGameGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.LeaveGameGet.toObject(opt_includeInstance, this);
        };
        proto.Second.LeaveGameGet.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.LeaveGameGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.LeaveGameGet;
        return proto.Second.LeaveGameGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.LeaveGameGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.LeaveGameGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.LeaveGameGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.LeaveGameGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    proto.Second.TianHuItem.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.TianHuItem.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.TianHuItem.toObject(opt_includeInstance, this);
        };
        proto.Second.TianHuItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                chair: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                groupsList: googleProtobuf.Message.toObjectList(msg.getGroupsList(), proto.Second.Groups.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.TianHuItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.TianHuItem;
        return proto.Second.TianHuItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.TianHuItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setChair(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 11:
                    var value = new proto.Second.Groups;
                    reader.readMessage(value, proto.Second.Groups.deserializeBinaryFromReader);
                    msg.addGroups(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.TianHuItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.TianHuItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.TianHuItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getChair();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getGroupsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.Second.Groups.serializeBinaryToWriter);
        }
    };
    proto.Second.TianHuItem.prototype.getChair = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.TianHuItem.prototype.setChair = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.TianHuItem.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.TianHuItem.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Second.TianHuItem.prototype.getGroupsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Second.Groups, 11));
    };
    proto.Second.TianHuItem.prototype.setGroupsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Second.TianHuItem.prototype.addGroups = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Second.Groups, opt_index);
    };
    proto.Second.TianHuItem.prototype.clearGroupsList = function () {
        return this.setGroupsList([]);
    };
    proto.Second.TianHuNoti.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.TianHuNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.TianHuNoti.toObject(opt_includeInstance, this);
        };
        proto.Second.TianHuNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                deadline: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                datasList: googleProtobuf.Message.toObjectList(msg.getDatasList(), proto.Second.TianHuItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.TianHuNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.TianHuNoti;
        return proto.Second.TianHuNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.TianHuNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint64());
                    msg.setDeadline(value);
                    break;
                case 2:
                    var value = new proto.Second.TianHuItem;
                    reader.readMessage(value, proto.Second.TianHuItem.deserializeBinaryFromReader);
                    msg.addDatas(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.TianHuNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.TianHuNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.TianHuNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getDeadline();
        if (f !== 0) {
            writer.writeUint64(1, f);
        }
        f = message.getDatasList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Second.TianHuItem.serializeBinaryToWriter);
        }
    };
    proto.Second.TianHuNoti.prototype.getDeadline = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.TianHuNoti.prototype.setDeadline = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.TianHuNoti.prototype.getDatasList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Second.TianHuItem, 2));
    };
    proto.Second.TianHuNoti.prototype.setDatasList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Second.TianHuNoti.prototype.addDatas = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Second.TianHuItem, opt_index);
    };
    proto.Second.TianHuNoti.prototype.clearDatasList = function () {
        return this.setDatasList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Second.SecondStatData.prototype.toObject = function (opt_includeInstance) {
            return proto.Second.SecondStatData.toObject(opt_includeInstance, this);
        };
        proto.Second.SecondStatData.toObject = function (includeInstance, msg) {
            var f, obj = {
                ntotalround: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nwinround: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nstreak: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                nmaxstreak: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Second.SecondStatData.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Second.SecondStatData;
        return proto.Second.SecondStatData.deserializeBinaryFromReader(msg, reader);
    };
    proto.Second.SecondStatData.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNtotalround(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNwinround(value);
                    break;
                case 5:
                    var value = (reader.readInt32());
                    msg.setNstreak(value);
                    break;
                case 6:
                    var value = (reader.readInt32());
                    msg.setNmaxstreak(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Second.SecondStatData.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Second.SecondStatData.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Second.SecondStatData.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNtotalround();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getNwinround();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
        f = message.getNstreak();
        if (f !== 0) {
            writer.writeInt32(5, f);
        }
        f = message.getNmaxstreak();
        if (f !== 0) {
            writer.writeInt32(6, f);
        }
    };
    proto.Second.SecondStatData.prototype.getNtotalround = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Second.SecondStatData.prototype.setNtotalround = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Second.SecondStatData.prototype.getNwinround = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Second.SecondStatData.prototype.setNwinround = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Second.SecondStatData.prototype.getNstreak = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Second.SecondStatData.prototype.setNstreak = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Second.SecondStatData.prototype.getNmaxstreak = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Second.SecondStatData.prototype.setNmaxstreak = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Second.Result = {
        SUCCESS: 0,
        FAIL: 1,
        FAIL_ITEM_NUM_NOT_ENOUGH: 2,
        FAIL_NOT_ROUND: 3,
        FAIL_NONE_OPE: 4,
        FAIL_ERR_SERIALID: 5,
        FAIL_ERR_CARD: 6,
        FAIL_ERR_MAX: 7,
        FAIL_UNSUPPORT_OPE: 8,
        FAIL_NEXT_PLY: 9,
        FAIL_ERR_GROUP: 10,
        FAIL_NEED_BLACK3: 11
    };
    goog.object.extend(exports, proto.Second);

    });
    var Second_pb_1 = Second_pb.AutoPlayGet;
    var Second_pb_2 = Second_pb.AutoPlayNoti;
    var Second_pb_3 = Second_pb.CommonAck;
    var Second_pb_4 = Second_pb.DealCardNoti;
    var Second_pb_5 = Second_pb.GameMoneyChange;
    var Second_pb_6 = Second_pb.GameResult;
    var Second_pb_7 = Second_pb.GameResultNoti;
    var Second_pb_8 = Second_pb.GameStartNoti;
    var Second_pb_9 = Second_pb.Groups;
    var Second_pb_10 = Second_pb.LeaveGameGet;
    var Second_pb_11 = Second_pb.PlayerInfo;
    var Second_pb_12 = Second_pb.PlayerOpGet;
    var Second_pb_13 = Second_pb.PlayerOpNoti;
    var Second_pb_14 = Second_pb.PlayerOpResult;
    var Second_pb_15 = Second_pb.ReconnectNoti;
    var Second_pb_16 = Second_pb.Result;
    var Second_pb_17 = Second_pb.SecondStatData;
    var Second_pb_18 = Second_pb.TianHuItem;
    var Second_pb_19 = Second_pb.TianHuNoti;
    var Second_pb_20 = Second_pb.UpdateCardNoti;

    var HAND_CARD_N = 13;
    var TOTAL_CARD = 52;
    var SHOW_HAND = false;
    var OpcodeGame;
    (function (OpcodeGame) {
        OpcodeGame[OpcodeGame["UNKNOWN"] = 0] = "UNKNOWN";
        OpcodeGame[OpcodeGame["GameStartNoti"] = 1001] = "GameStartNoti";
        OpcodeGame[OpcodeGame["PlayerOpNoti"] = 1002] = "PlayerOpNoti";
        OpcodeGame[OpcodeGame["PlayerOpGet"] = 1003] = "PlayerOpGet";
        OpcodeGame[OpcodeGame["PlayerOpAck"] = 1004] = "PlayerOpAck";
        OpcodeGame[OpcodeGame["PlayerOpResult"] = 1005] = "PlayerOpResult";
        OpcodeGame[OpcodeGame["DealCardNoti"] = 1006] = "DealCardNoti";
        OpcodeGame[OpcodeGame["GameMoneyChange"] = 1007] = "GameMoneyChange";
        OpcodeGame[OpcodeGame["GameResultNoti"] = 1008] = "GameResultNoti";
        OpcodeGame[OpcodeGame["ReconnectNoti"] = 1009] = "ReconnectNoti";
        OpcodeGame[OpcodeGame["AutoPlayGet"] = 1010] = "AutoPlayGet";
        OpcodeGame[OpcodeGame["AutoPlayAck"] = 1011] = "AutoPlayAck";
        OpcodeGame[OpcodeGame["AutoPlayNoti"] = 1012] = "AutoPlayNoti";
        OpcodeGame[OpcodeGame["MoneyHistroy"] = 1013] = "MoneyHistroy";
        OpcodeGame[OpcodeGame["LeaveGameGet"] = 1014] = "LeaveGameGet";
        OpcodeGame[OpcodeGame["LeaveGameAck"] = 1015] = "LeaveGameAck";
        OpcodeGame[OpcodeGame["TianHuNoti"] = 1016] = "TianHuNoti";
        OpcodeGame[OpcodeGame["UpdateCardNoti"] = 1017] = "UpdateCardNoti";
    })(OpcodeGame || (OpcodeGame = {}));
    var RoomType = {
        SRF: "dle_srf",
        NEW: "dle_new",
        CJC: "dle_cjc",
        PTC: "dle_ptc",
        ZJC: "dle_zjc",
        GJC: "dle_gjc",
        DJC: "dle_djc",
    };
    var GoldSelectParam = [
        {
            name: "Người mới học", base: 10, limit: [200, 1500], vip: 1, type: RoomType.NEW
        },
        {
            name: "Trình độ cơ bản", base: 50, limit: [2000, 80000], vip: 1, type: RoomType.CJC
        },
        {
            name: "Bình thường", base: 100, limit: [5000, 200000], vip: 2, type: RoomType.PTC
        },
        {
            name: "Trình độ trung cấp", base: 500, limit: [25000, 800000], vip: 2, type: RoomType.ZJC
        },
        {
            name: "Trình độ cao cấp", base: 1000, limit: [50000, 2000000], vip: 3, type: RoomType.GJC
        },
        {
            name: "Cấp độ đỉnh cao", base: 10000, limit: [500000, undefined], vip: 3, type: RoomType.DJC
        },
    ];
    var TblStatus;
    (function (TblStatus) {
        TblStatus[TblStatus["STATUS_START"] = 0] = "STATUS_START";
        TblStatus[TblStatus["STATUS_DEAL"] = 1] = "STATUS_DEAL";
        TblStatus[TblStatus["STATUS_PLAY"] = 2] = "STATUS_PLAY";
        TblStatus[TblStatus["STATUS_NONE"] = -1] = "STATUS_NONE";
    })(TblStatus || (TblStatus = {}));
    var OpeType;
    (function (OpeType) {
        OpeType[OpeType["OP_WAIT"] = 0] = "OP_WAIT";
        OpeType[OpeType["OP_CHU_PAI"] = 1] = "OP_CHU_PAI";
        OpeType[OpeType["OP_GIVE_UP"] = 2] = "OP_GIVE_UP";
        OpeType[OpeType["OP_TIAN_HU"] = 4] = "OP_TIAN_HU";
        OpeType[OpeType["OP_RESULT"] = 8] = "OP_RESULT";
        OpeType[OpeType["OP_CAL_BOMB"] = 16] = "OP_CAL_BOMB";
        OpeType[OpeType["OP_ADMIT_DEFEAT"] = 32] = "OP_ADMIT_DEFEAT";
    })(OpeType || (OpeType = {}));
    var CommonRet = {
        [Second_pb_16.SUCCESS]: "",
        [Second_pb_16.FAIL]: "Lỗi thao tác.",
        [Second_pb_16.FAIL_ITEM_NUM_NOT_ENOUGH]: "Item number is not Enough!",
        [Second_pb_16.FAIL_NOT_ROUND]: "Người chơi đang được thao tác hiện tại không phải là bạn.",
        [Second_pb_16.FAIL_NONE_OPE]: "Không có thao tác liên quan.",
        [Second_pb_16.FAIL_ERR_SERIALID]: "Lỗi thao tác.",
        [Second_pb_16.FAIL_ERR_CARD]: "Người chơi không có lá bài nào có thể đánh.",
        [Second_pb_16.FAIL_ERR_MAX]: "Lá bài đánh ra không đủ lớn.",
        [Second_pb_16.FAIL_UNSUPPORT_OPE]: "Không thể thực hiện hành động này.",
        [Second_pb_16.FAIL_NEXT_PLY]: "Không thể tìm thấy người chơi tiếp theo.",
        [Second_pb_16.FAIL_ERR_GROUP]: "Những lá bài mà bạn đã chọn không thể tạo thành một bộ bài.",
        [Second_pb_16.FAIL_NEED_BLACK3]: "Bạn cần đánh lá bích 3 trong lượt đầu tiên.",
    };
    var GameWarn = {
        SEL_CARD: "Vui lòng chọn lá bài trước",
    };
    var GroupType;
    (function (GroupType) {
        GroupType[GroupType["T_Unkown"] = 0] = "T_Unkown";
        GroupType[GroupType["T_Single"] = 1] = "T_Single";
        GroupType[GroupType["T_King2"] = 2] = "T_King2";
        GroupType[GroupType["T_Double"] = 4] = "T_Double";
        GroupType[GroupType["T_DanShun"] = 8] = "T_DanShun";
        GroupType[GroupType["T_Three"] = 16] = "T_Three";
        GroupType[GroupType["T_Lian3"] = 32] = "T_Lian3";
        GroupType[GroupType["T_FOUR"] = 64] = "T_FOUR";
        GroupType[GroupType["T_Lian4"] = 128] = "T_Lian4";
        GroupType[GroupType["T_Bomb"] = 256] = "T_Bomb";
        GroupType[GroupType["T_TianHu"] = 512] = "T_TianHu";
    })(GroupType || (GroupType = {}));
    var TianHuType;
    (function (TianHuType) {
        TianHuType[TianHuType["TH_Dragon"] = 1] = "TH_Dragon";
        TianHuType[TianHuType["TH_Same13"] = 2] = "TH_Same13";
        TianHuType[TianHuType["TH_DQueue6"] = 4] = "TH_DQueue6";
        TianHuType[TianHuType["TH_Double6"] = 8] = "TH_Double6";
        TianHuType[TianHuType["TH_DQueue5"] = 16] = "TH_DQueue5";
        TianHuType[TianHuType["TH_Bomb42"] = 32] = "TH_Bomb42";
        TianHuType[TianHuType["TH_Bomb43"] = 64] = "TH_Bomb43";
    })(TianHuType || (TianHuType = {}));
    var TianHuPri = {
        [TianHuType.TH_Same13]: 1,
        [TianHuType.TH_DQueue6]: 2,
        [TianHuType.TH_Dragon]: 3,
        [TianHuType.TH_Double6]: 4,
        [TianHuType.TH_DQueue5]: 5,
        [TianHuType.TH_Bomb42]: 6,
        [TianHuType.TH_Bomb43]: 7,
    };
    var CreateOpt;
    (function (CreateOpt) {
        CreateOpt[CreateOpt["OPT_RECORD"] = 1] = "OPT_RECORD";
        CreateOpt[CreateOpt["OPT_NO_AUTO"] = 2] = "OPT_NO_AUTO";
        CreateOpt[CreateOpt["OPT_SCORE_MODE"] = 4] = "OPT_SCORE_MODE";
        CreateOpt[CreateOpt["OPT_ADMIT_DEFEAT"] = 8] = "OPT_ADMIT_DEFEAT";
        CreateOpt[CreateOpt["OPT_LEFT_CARD"] = 16] = "OPT_LEFT_CARD";
    })(CreateOpt || (CreateOpt = {}));
    var BaseLimit = [
        [100, 100 * 30, 100 * 50],
        [200, 200 * 30, 200 * 50],
        [500, 500 * 30, 500 * 50],
        [1000, 1000 * 30, 1000 * 50],
        [2000, 2000 * 30, 2000 * 50],
        [3000, 3000 * 30, 3000 * 50],
        [5000, 5000 * 30, 5000 * 50],
        [10000, 10000 * 30, 10000 * 50],
        [20000, 20000 * 30, 20000 * 50],
        [30000, 30000 * 30, 30000 * 50],
        [50000, 50000 * 30, 50000 * 50],
        [100000, 100000 * 30, 100000 * 50],
        [200000, 200000 * 30, 200000 * 50],
        [300000, 300000 * 30, 300000 * 50],
        [1000000, 1000000 * 30, 1000000 * 50],
        [2000000, 2000000 * 30, 2000000 * 50],
        [5000000, 5000000 * 30, 5000000 * 50],
        [10000000, 10000000 * 30, 10000000 * 50],
    ];
    class GameDefine {
    }
    GameDefine.CLOSE_SECONDWIN = "CLOSE_SECONDWIN";
    class LobbyDefine {
    }
    LobbyDefine.HEART_BEART_NOTI = "heart_beat_noti";
    LobbyDefine.LOGIN_SUCCESS = "login_success";
    LobbyDefine.LOADED_USERINFO = "loaded_userinfo";
    LobbyDefine.UPDATE_PLAYER_INFO = "update_player_info";
    LobbyDefine.CURRENCY_CHANGE_NOTI = 'currency_change_noti';
    LobbyDefine.AMOUNT_CHANGE_NOTI = 'amount_change_noti';
    LobbyDefine.MATCH_STATUS_NOTI = 'match_update_noti';
    LobbyDefine.MATCH_RESULT_NOTI = 'match_table_result_noti';
    LobbyDefine.LOBBY_SERVER_DISCONNECT = 'lobby_server_disconnect';
    LobbyDefine.LOBBY_SERVER_CONNECT_FAILED = 'lobby_server_connect_failed';
    LobbyDefine.GAME_TO_LOBBY = 'game_back_to_lobby';
    LobbyDefine.RELIEVE_INFO_NOTI = 'relieve_info_noti';
    LobbyDefine.SIGNIN_INFO_NOTI = 'signin_info_noti';
    LobbyDefine.MAIL_INFO_NOTI = 'mail_info_noti';
    LobbyDefine.TASK_UPDATE_NOTI = 'task_update_noti';
    LobbyDefine.TASK_REPLACE_NOTI = 'task_replace_noti';
    LobbyDefine.VERSION_INIT = "VERSION_INIT";
    LobbyDefine.SHAKE_INFO_NOTI = 'shake_info_noti';
    LobbyDefine.KICK_OUT_NOTI = 'kick_out_noti';
    LobbyDefine.USER_ITEM_CHANGE = 'user_item_change';
    LobbyDefine.PRIVILEGE_NOTI = 'privilege_card_noti';
    LobbyDefine.WEEKLY_CARD_NOTI = 'week_card_success';
    LobbyDefine.MONTHLY_CARD_NOTI = 'month_card_success';
    LobbyDefine.STORE_ORDER_COMPLETE = 'store_order_complete';
    LobbyDefine.GET_AWARD_SUCCESS = 'get_award_success';
    LobbyDefine.COMPLETE_TASK_NOTI = 'complete_task_noti';
    LobbyDefine.ONLINE_AWARD_STATUS = 'online_award_status';
    LobbyDefine.TURN_TABLE_NOTI = 'turn_table_noti';
    LobbyDefine.LOGIN_AWARD_NOTI = 'login_award_noti';
    LobbyDefine.GIFT_INFO_NOTI = 'gift_info_noti';
    LobbyDefine.DAILY_TASK_ACTIVITY_CONFIG = 'dailytask_activity_config';
    LobbyDefine.VIP_INFO_NOTI = "VIP_INFO_NOTI";
    LobbyDefine.LUCKY_GIFT_INFO_NOTI = "LUCKY_GIFT_INFO_NOTI";
    LobbyDefine.SHOPSERVICE_UPDATE_COMPLETE = "SHOPSERVICE_UPDATE_COMPLETE";
    LobbyDefine.UPDATE_PLAYER_ACCESSORIES = "UPDATE_PLAYER_ACCESSORIES";
    LobbyDefine.UPDATE_BAGDATA = "UPDATE_BAGDATA";
    LobbyDefine.CLOSE_HISTORYLEGEND = "CLOSE_HISTORYLEGEND";
    LobbyDefine.CLOSE_LEGENDSTART = "CLOSE_LEGENDSTART";
    LobbyDefine.NEW_SEASONNOTI = "NEW_SEASONNOTI";
    LobbyDefine.RANK_GIFTINFO_UPDATE = "RANK_GIFTINFO_UPDATE";
    LobbyDefine.GAMEGUIDE_GOBACK_HOME = "GAMEGUIDE_GOBACK_HOME";
    LobbyDefine.CLOSE_RECEIVERUCCESS = "CLOSE_RECEIVERUCCESS";
    LobbyDefine.RANK_GUIDE_FINISH = "RANK_GUIDE_FINISH";
    LobbyDefine.AUTHENTICATE_SUCCESS = "AUTHENTICATE_SUCCESS";
    LobbyDefine.TUTORIAL_STATUS_NOTI = "TutorialStatusNoti";
    LobbyDefine.RANK_ITEM_NOTI = "RANK_ITEM_NOTI";
    LobbyDefine.NOVICE_TING_CARD = "NOVICE_TING_CARD";
    LobbyDefine.PRE_SIGNIN_DATA = "PRE_SIGNIN_DATA";
    LobbyDefine.DAILY_FIRST_PATTERN_NOTI = "DAILY_FIRST_PATTERN_NOTI";
    LobbyDefine.DAILY_FIRST_PLAYER_NOTI = "DAILY_FIRST_PLAYER_NOTI";
    LobbyDefine.WALLET_REFRESH = "walletRefresh";
    var PAY_CHANNEL;
    (function (PAY_CHANNEL) {
        PAY_CHANNEL["APPLE_PAY"] = "APPLE_PAY";
        PAY_CHANNEL["W_PAY"] = "1001";
        PAY_CHANNEL["A_PAY"] = "1000";
        PAY_CHANNEL["HW_PAY"] = "1008";
        PAY_CHANNEL["GOOGLE_PAY"] = "1011";
        PAY_CHANNEL["VN_PAY"] = "1012";
        PAY_CHANNEL["QG_PAY"] = "1013";
        PAY_CHANNEL["LETS_PAY"] = "1021";
        PAY_CHANNEL["STAN_PAY"] = "1026";
        PAY_CHANNEL["SUPER_PAY"] = "1037";
        PAY_CHANNEL["EQS_PAY"] = "1040";
    })(PAY_CHANNEL || (PAY_CHANNEL = {}));
    var MAJIANG_PLAYER_POS_ENUM;
    (function (MAJIANG_PLAYER_POS_ENUM) {
        MAJIANG_PLAYER_POS_ENUM[MAJIANG_PLAYER_POS_ENUM["SELF"] = 0] = "SELF";
        MAJIANG_PLAYER_POS_ENUM[MAJIANG_PLAYER_POS_ENUM["RIGHT"] = 1] = "RIGHT";
        MAJIANG_PLAYER_POS_ENUM[MAJIANG_PLAYER_POS_ENUM["TOP"] = 2] = "TOP";
        MAJIANG_PLAYER_POS_ENUM[MAJIANG_PLAYER_POS_ENUM["LEFT"] = 3] = "LEFT";
    })(MAJIANG_PLAYER_POS_ENUM || (MAJIANG_PLAYER_POS_ENUM = {}));
    var CARD_ID = {
        1: "black3", 2: "black3", 3: "red3", 4: "red3", 5: "black4", 6: "black4", 7: "red4", 8: "red4",
        9: "black5", 10: "black5", 11: "red5", 12: "red5",
        13: "black6", 14: "black6", 15: "red6", 16: "red6", 17: "black7", 18: "black7", 19: "red7", 20: "red7",
        21: "black8", 22: "black8", 23: "red8", 24: "red8", 25: "black9", 26: "black9", 27: "red9", 28: "red9",
        29: "black10", 30: "black10", 31: "red10", 32: "red10", 33: "black11", 34: "black11", 35: "red11", 36: "red11",
        37: "black12", 38: "black12", 39: "red12", 40: "red12", 41: "black13", 42: "black13", 43: "red13", 44: "red13",
        45: "black14", 46: "black14", 47: "red14", 48: "red14", 49: "black15", 50: "black15", 51: "red15", 52: "red15",
    };
    var GAME_NAME = {
        0: '红中血流',
        1: '6红中血流',
        2: '血流成河',
        3: '血战到底',
        4: '疯狂8红中',
    };
    var FUN_NAME = {};
    var COLLISION_FILTER_GROUP;
    (function (COLLISION_FILTER_GROUP) {
        COLLISION_FILTER_GROUP[COLLISION_FILTER_GROUP["GROUP_CAMERA2D"] = 64] = "GROUP_CAMERA2D";
        COLLISION_FILTER_GROUP[COLLISION_FILTER_GROUP["GROUP_CAMERA3D"] = 128] = "GROUP_CAMERA3D";
    })(COLLISION_FILTER_GROUP || (COLLISION_FILTER_GROUP = {}));
    var STAGE_Z_ORDER;
    (function (STAGE_Z_ORDER) {
        STAGE_Z_ORDER[STAGE_Z_ORDER["NORMAL"] = 0] = "NORMAL";
        STAGE_Z_ORDER[STAGE_Z_ORDER["BATTLE"] = 50] = "BATTLE";
        STAGE_Z_ORDER[STAGE_Z_ORDER["SHARE"] = 51] = "SHARE";
        STAGE_Z_ORDER[STAGE_Z_ORDER["BULLETIN"] = 100] = "BULLETIN";
        STAGE_Z_ORDER[STAGE_Z_ORDER["POPUP"] = 200] = "POPUP";
        STAGE_Z_ORDER[STAGE_Z_ORDER["TIPS"] = 400] = "TIPS";
    })(STAGE_Z_ORDER || (STAGE_Z_ORDER = {}));

    class GlobalData extends Singleton {
        constructor() {
            super(...arguments);
            this._heartTime = 0;
            this._serverTimeDelta = 0;
            this._baseMeta = null;
            this._myChair = 0;
            this._lobbySocket = null;
            this._gameSocket = null;
            this._wxJson = null;
            this._myPid = null;
            this._myTicket = null;
            this._shareCode = null;
            this._shareFrinedPid = null;
            this.phone = null;
            this._lobbyConfigs = null;
            this._dailyTaskConfig = null;
            this._loginSecne = null;
            this._lobbyScene = null;
            this._loadingAni = null;
            this.gameName = "";
            this.changeGameName = "";
            this.gameType = 0;
            this.m_gameItemList = [];
            this.maxFan = 0;
            this.gameMoneyType = 0;
            this.isHuanSan = false;
            this.isHuanSanColor = false;
            this.isHongZhongGang = false;
            this.isChaDajiao = false;
            this.m_itemCountList = [];
            this.m_shieldPlayerEmoji = [];
            this.m_cardDeadline = 0;
            this.baojiDeadLine = 0;
            this._logToken = null;
            this.isOpenReCommend = false;
        }
        get heartTime() {
            return this._heartTime;
        }
        set heartTime(time) {
            this._heartTime = time;
        }
        get serverTimeDelta() {
            return this._serverTimeDelta;
        }
        set serverTimeDelta(delta) {
            this._serverTimeDelta = delta;
        }
        get baseMeta() {
            return this._baseMeta;
        }
        set baseMeta(meta) {
            this._baseMeta = meta;
        }
        get wxJson() {
            return this._wxJson;
        }
        set wxJson(json) {
            this._wxJson = json;
        }
        get myChair() {
            return this._myChair;
        }
        set myChair(chair) {
            this._myChair = chair;
        }
        get lobbySocket() {
            return this._lobbySocket;
        }
        set lobbySocket(socket) {
            this._lobbySocket = socket;
        }
        get myPid() {
            return this._myPid;
        }
        set myPid(pid) {
            this._myPid = pid;
        }
        get myTicket() {
            return this._myTicket;
        }
        set myTicket(ticket) {
            this._myTicket = ticket;
        }
        get shareCode() {
            return this._shareCode;
        }
        set shareCode(code) {
            this._shareCode = code;
        }
        get shareFriendPID() {
            return this._shareFrinedPid;
        }
        set shareFriendPID(pid) {
            this._shareFrinedPid = pid;
        }
        get lobbyConfigs() {
            return this._lobbyConfigs;
        }
        set lobbyConfigs(configs) {
            this._lobbyConfigs = configs;
        }
        get dailyTaskConfig() {
            return this._dailyTaskConfig;
        }
        set dailyTaskConfig(config) {
            this._dailyTaskConfig = config;
        }
        get gameSocket() {
            return this._gameSocket;
        }
        set gameSocket(socket) {
            this._gameSocket = socket;
        }
        get loginScene() {
            return this._loginSecne;
        }
        set loginScene(scene) {
            this._loginSecne = scene;
        }
        get lobbyScene() {
            return this._lobbyScene;
        }
        set lobbyScene(scene) {
            this._lobbyScene = scene;
        }
        get loadingAni() {
            return this._loadingAni;
        }
        set loadingAni(aniPage) {
            this._loadingAni = aniPage;
        }
        set itemList(p_itemList) {
            this.m_gameItemList = p_itemList;
        }
        get itemList() {
            return this.m_gameItemList;
        }
        isPlayUseItem(p_id) {
            return this.m_gameItemList.includes(p_id);
        }
        getCanItemUse(p_type) {
            for (let i = 0; i < this.m_itemCountList.length; i++) {
                if (this.m_itemCountList[i].id == p_type) {
                    if (this.m_itemCountList[i].count < this.m_itemCountList[i].max) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            }
            return true;
        }
        get huData() {
            return this.m_huData;
        }
        set huData(p_data) {
            this.m_huData = p_data;
        }
        setChangeItemUseNum(p_type) {
            for (let i = 0; i < this.m_itemCountList.length; i++) {
                if (this.m_itemCountList[i].id == p_type) {
                    this.m_itemCountList[i].count = this.m_itemCountList[i].count + 1;
                }
            }
        }
        getNow() {
            return ((Date.now() - this.serverTimeDelta) / 1000);
        }
        setShieldId(p_id) {
            this.m_shieldPlayerEmoji.push(p_id);
        }
        deleteShieldId(p_id) {
            let l_index = this.m_shieldPlayerEmoji.indexOf(p_id);
            if (l_index >= 0) {
                this.m_shieldPlayerEmoji.splice(l_index, 1);
            }
        }
        get shieldPlayerEmoji() {
            return this.m_shieldPlayerEmoji;
        }
        clearMatchData() {
            this.m_shieldPlayerEmoji = [];
        }
        get cardDeadline() {
            return this.m_cardDeadline;
        }
        get logToken() {
            return this._logToken;
        }
        set logToken(token) {
            this._logToken = token;
        }
        clearData() {
            this.baojiDeadLine = 0;
            this.m_cardDeadline = 0;
            this.m_itemCountList = [];
            this.isOpenReCommend = false;
        }
    }

    var Common_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Common.CommonNoti', null, global);
    goog.exportSymbol('proto.Common.CommonNotifyOpcode', null, global);
    goog.exportSymbol('proto.Common.CommonResponse', null, global);
    goog.exportSymbol('proto.Common.ERROR', null, global);
    goog.exportSymbol('proto.Common.Motify', null, global);
    goog.exportSymbol('proto.Common.Status', null, global);
    proto.Common.CommonResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Common.CommonResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Common.CommonResponse.displayName = 'proto.Common.CommonResponse';
    }
    proto.Common.CommonNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Common.CommonNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Common.CommonNoti.displayName = 'proto.Common.CommonNoti';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Common.CommonResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Common.CommonResponse.toObject(opt_includeInstance, this);
        };
        proto.Common.CommonResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strmsg: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Common.CommonResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Common.CommonResponse;
        return proto.Common.CommonResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Common.CommonResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrmsg(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Common.CommonResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Common.CommonResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Common.CommonResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getStrmsg();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Common.CommonResponse.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Common.CommonResponse.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Common.CommonResponse.prototype.getStrmsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Common.CommonResponse.prototype.setStrmsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Common.CommonNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Common.CommonNoti.toObject(opt_includeInstance, this);
        };
        proto.Common.CommonNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                strdata: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Common.CommonNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Common.CommonNoti;
        return proto.Common.CommonNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Common.CommonNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrdata(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Common.CommonNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Common.CommonNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Common.CommonNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrdata();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Common.CommonNoti.prototype.getStrdata = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Common.CommonNoti.prototype.setStrdata = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Common.Motify = {
        QUERYS: 0,
        CREATE: 1,
        DELETE: 2,
        CHANGE: 4
    };
    proto.Common.Status = {
        QUERY: 0,
        JOIN: 1,
        EXIT: 2,
        WAIT: 4,
        FAIL: 8,
        VERIFY: 16,
        REJECT: 32,
        CANCEL: 64,
        OVER: 128
    };
    proto.Common.ERROR = {
        SUCCESS: 0,
        E_FAIL: -1,
        E_TABLE_NOT_EXISTS: -2,
        E_GAME_PLAYING: -11,
        E_ALLOCATE_NO_TABLE: -100,
        E_PLAYER_NO_PLAYING_TABLE: -101,
        E_PLAYER_IN_CANCEL: -102,
        E_GATE_KICK_SERVER_CLOSED: -200,
        E_GATE_KICK_DUPLICATE_LOGIN: -201,
        E_ANTI_ADDICTION_NO_REALNAME: -202,
        E_ANTI_ADDICTION_NOT_PLAY_TIME: -203,
        E_GATE_KICK_BANNED: -204,
        E_MM_ALREADY_HAVE_TICKET: -1000,
        E_MM_HAS_TABLE_TO_PLAY: -1001,
        E_MM_STILL_MATCHING: -1002,
        E_MM_TICKET_NOT_EXIST: -1003,
        E_MM_GAME_MONEY_OUT_OF_RANGE: -1004,
        E_MM_PLAYER_OVER: -1101,
        E_MM_PLAYER_EMPTY: -1102,
        E_MM_ALREADY_START: -1103,
        E_MM_NUMS_FULL: -1104,
        E_CY_LOCK_FAILED: -2000,
        E_CY_NOT_LOCKED: -2001,
        E_CY_LOCKED: -2002,
        E_CY_NOT_ENOUGH: -2003,
        E_TASK_NOT_EXISTS: -3000,
        E_TASK_ALREADY_ACCEPTED: -3001,
        E_AWARD_NOT_EXISTS: -4000,
        E_RELIEVE_TOO_MUCH_MONEY: -5000,
        E_RELIEVE_NOT_ENOUGH_TIMES: -5001,
        E_SIGNIN_HAS_SIGNINED_TODAY: -6001,
        E_SIGNIN_NOT_SIGNINED_TODAY: -6002,
        E_SIGNIN_CANT_PRESIGNIN_ON_SUNDAY: -6003,
        E_SIGNIN_ALREADY_PRESIGNINED: -6004,
        E_RANKING_GIFT_NOT_ENOUGH_SCORE: -7000,
        E_RANKING_GIFT_STILL_COOLDOWN: -7001,
        E_SHAKE_NOT_ENOUGH_SHAKE_TIMES: -9001,
        E_LOGIN_AWARD_NOT_EXIST_IN_CONFIG: -10001,
        E_LOGIN_AWARD_HAS_APPLYED: -10002,
        E_VIP_AWARD_HAS_BEEN_RECEIVED: -11001,
        E_VIP_LEVEL_NOT_ENOUGH: -11002,
        E_VIP_NO_DAILY_AWARD_FOR_CURRENT_LEVEL: -11003,
        E_VIP_BET_NOT_ENOUGH: -11004,
        E_TUTORIAL_ALREADY_COMPLETED: -12001,
        E_REDEEM_CODE_NOT_EXISTS: -12100,
        E_REDEEM_CODE_ALREADY_REDEEMED: -12101,
        E_REDEEM_CODE_ALREADY_USED: -12102,
        E_REDEEM_CODE_WRONG_SOURCE: -12103,
        E_REDEEM_CODE_ALREADY_TYPE: -12104,
        E_INVITE_NO_ID_CARD: -12200,
        E_INVITE_NOT_ENOUGH_LEVEL: -12201,
        E_INVITE_WRONG_CODE: -12202,
        E_INVITE_ALREADY_HAVE_INVITER: -12203,
        E_INVITE_CAN_NOT_INVITE_SELF: -12204,
        E_AD_REWARD_TIMES_LIMITED: -12300,
        E_REBATE_NONE_AWARD: -12401,
        E_EXCHANGE_LIMIT: -12501,
        E_EXCHANGE_PAY: -12502,
        E_EXCHANGE_UNMOTIFY: -12503,
        E_EXCHANGE_LESS: -12504,
        E_EXCHANGE_RENAME: -12505,
        E_EXCHANGE_BETLESS: -12506
    };
    proto.Common.CommonNotifyOpcode = {
        NOTIFY_UNKNOWN: 0,
        KICKOUT_NOTI: 1,
        LOGIN_NOTI: 2,
        IM_LOGIN_NOTI: 888,
        MM_MATCH_INFO_NOTI: 1000,
        MM_MATCH_RESULT_NOTI: 1001,
        MM_MATCH_OVER_NOTI: 1002,
        MM_MATCH_USER_NOTI: 1101,
        MM_MATCH_END_NOTI: 1102,
        MATCH_INFO_NOTI: 1200,
        MATCH_RESULT_NOTI: 1201,
        MATCH_OVER_NOTI: 1202,
        MATCH_USER_NOTI: 1203,
        MATCH_END_NOTI: 1204,
        CY_CURRENCY_CHANGE_NOTI: 2001,
        TASK_UPDATE_NOTI: 3000,
        TASK_COMPLETE_NOTI: 3001,
        RELIEVE_INFO_NOTI: 5001,
        SIGNIN_INFO_NOTI: 6001,
        MAIL_INFO_NOTI: 7001,
        ACHV_REPLACE_NOTI: 8001,
        CHARGE_GIFT_NOTI: 9001,
        SHAKE_SHAKE_NOTI: 10001,
        SOLICIT_WEALTH_NOTI: 11001,
        PAY_CHANGE_NOTI: 12001,
        ITEM_CHANGE_NOTI: 12002,
        PRIVILEGE_PAY_NOTI: 13001,
        PRIVILEGE_CARDS_INFO_NOTI: 13002,
        PRIVILEGE_WEEKLY_CARD_INFO_NOTI: 13003,
        PRIVILEGE_MONTHLY_CARD_INFO_NOTI: 13004,
        STORE_ORDER_COMPLETE: 14001,
        AWARD_INFO_NOTI: 15001,
        BULLETIN_NOTI: 16001,
        ROULETTE_INFO_NOTI: 17001,
        LOGIN_AWARD_INGO_NOTI: 18001,
        ITEM_USE_INFO_NOTI: 19001,
        DAILY_TASK_ACTIVITY_CONFIG_NOTI: 20001,
        VIP_INFO_NOTI: 20002,
        LUCKY_GIFT_INFO_NOTI: 20100,
        RANKING_NEW_SEASON_NOTI: 20200,
        TUTORIAL_STATUS_NOTI: 20300,
        TOURNAMENT_TABLE_NOTI: 20301,
        DAILY_FIRST_PATTERN_NOTI: 20400,
        DAILY_FIRST_PLAYER_NOTI: 20401,
        AD_REWARD_PLAYER_INFO: 20410,
        THIRD_LIST_REFRESH_NOTI: 20501,
        THIRD_ENTER_ACK_NOTI: 20502
    };
    goog.object.extend(exports, proto.Common);

    });
    var Common_pb_1 = Common_pb.ERROR;
    var Common_pb_2 = Common_pb.CommonNotifyOpcode;
    var Common_pb_3 = Common_pb.CommonResponse;
    var Common_pb_4 = Common_pb.CommonNoti;

    var Currency_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Common_pb);
    goog.exportSymbol('proto.Currency.AddCyRequest', null, global);
    goog.exportSymbol('proto.Currency.AddCyResponse', null, global);
    goog.exportSymbol('proto.Currency.BatchQueryCyRequest', null, global);
    goog.exportSymbol('proto.Currency.BatchQueryCyResponse', null, global);
    goog.exportSymbol('proto.Currency.CYChangeReason', null, global);
    goog.exportSymbol('proto.Currency.CYType', null, global);
    goog.exportSymbol('proto.Currency.CommitConsumeRequest', null, global);
    goog.exportSymbol('proto.Currency.CyChangeNoti', null, global);
    goog.exportSymbol('proto.Currency.CyRankAck', null, global);
    goog.exportSymbol('proto.Currency.CyRankGet', null, global);
    goog.exportSymbol('proto.Currency.CyRankItem', null, global);
    goog.exportSymbol('proto.Currency.ImediateConsumeRequest', null, global);
    goog.exportSymbol('proto.Currency.ImediateConsumeResponse', null, global);
    goog.exportSymbol('proto.Currency.LockCyRequest', null, global);
    goog.exportSymbol('proto.Currency.LockCyResponse', null, global);
    goog.exportSymbol('proto.Currency.PrepareConsumeRequest', null, global);
    goog.exportSymbol('proto.Currency.PrepareConsumeResponse', null, global);
    goog.exportSymbol('proto.Currency.QueryCyRequest', null, global);
    goog.exportSymbol('proto.Currency.QueryCyResponse', null, global);
    goog.exportSymbol('proto.Currency.RenewLockRequest', null, global);
    goog.exportSymbol('proto.Currency.RollbackConsumeRequest', null, global);
    goog.exportSymbol('proto.Currency.SafeAck', null, global);
    goog.exportSymbol('proto.Currency.SafeGet', null, global);
    goog.exportSymbol('proto.Currency.UnlockCyRequest', null, global);
    proto.Currency.QueryCyRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.QueryCyRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.QueryCyRequest.displayName = 'proto.Currency.QueryCyRequest';
    }
    proto.Currency.QueryCyResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.QueryCyResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.QueryCyResponse.displayName = 'proto.Currency.QueryCyResponse';
    }
    proto.Currency.BatchQueryCyRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Currency.BatchQueryCyRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Currency.BatchQueryCyRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.BatchQueryCyRequest.displayName = 'proto.Currency.BatchQueryCyRequest';
    }
    proto.Currency.BatchQueryCyResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.BatchQueryCyResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.BatchQueryCyResponse.displayName = 'proto.Currency.BatchQueryCyResponse';
    }
    proto.Currency.CyChangeNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.CyChangeNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.CyChangeNoti.displayName = 'proto.Currency.CyChangeNoti';
    }
    proto.Currency.AddCyRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.AddCyRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.AddCyRequest.displayName = 'proto.Currency.AddCyRequest';
    }
    proto.Currency.AddCyResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.AddCyResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.AddCyResponse.displayName = 'proto.Currency.AddCyResponse';
    }
    proto.Currency.LockCyRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.LockCyRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.LockCyRequest.displayName = 'proto.Currency.LockCyRequest';
    }
    proto.Currency.LockCyResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.LockCyResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.LockCyResponse.displayName = 'proto.Currency.LockCyResponse';
    }
    proto.Currency.RenewLockRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.RenewLockRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.RenewLockRequest.displayName = 'proto.Currency.RenewLockRequest';
    }
    proto.Currency.UnlockCyRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.UnlockCyRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.UnlockCyRequest.displayName = 'proto.Currency.UnlockCyRequest';
    }
    proto.Currency.ImediateConsumeRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.ImediateConsumeRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.ImediateConsumeRequest.displayName = 'proto.Currency.ImediateConsumeRequest';
    }
    proto.Currency.ImediateConsumeResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.ImediateConsumeResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.ImediateConsumeResponse.displayName = 'proto.Currency.ImediateConsumeResponse';
    }
    proto.Currency.PrepareConsumeRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.PrepareConsumeRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.PrepareConsumeRequest.displayName = 'proto.Currency.PrepareConsumeRequest';
    }
    proto.Currency.PrepareConsumeResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.PrepareConsumeResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.PrepareConsumeResponse.displayName = 'proto.Currency.PrepareConsumeResponse';
    }
    proto.Currency.CommitConsumeRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.CommitConsumeRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.CommitConsumeRequest.displayName = 'proto.Currency.CommitConsumeRequest';
    }
    proto.Currency.RollbackConsumeRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.RollbackConsumeRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.RollbackConsumeRequest.displayName = 'proto.Currency.RollbackConsumeRequest';
    }
    proto.Currency.CyRankItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.CyRankItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.CyRankItem.displayName = 'proto.Currency.CyRankItem';
    }
    proto.Currency.CyRankGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.CyRankGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.CyRankGet.displayName = 'proto.Currency.CyRankGet';
    }
    proto.Currency.CyRankAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Currency.CyRankAck.repeatedFields_, null);
    };
    goog.inherits(proto.Currency.CyRankAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.CyRankAck.displayName = 'proto.Currency.CyRankAck';
    }
    proto.Currency.SafeGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.SafeGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.SafeGet.displayName = 'proto.Currency.SafeGet';
    }
    proto.Currency.SafeAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Currency.SafeAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Currency.SafeAck.displayName = 'proto.Currency.SafeAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.QueryCyRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.QueryCyRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.QueryCyRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.QueryCyRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.QueryCyRequest;
        return proto.Currency.QueryCyRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.QueryCyRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readEnum());
                    msg.setNtype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.QueryCyRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.QueryCyRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.QueryCyRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0.0) {
            writer.writeEnum(2, f);
        }
    };
    proto.Currency.QueryCyRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.QueryCyRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Currency.QueryCyRequest.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.QueryCyRequest.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.QueryCyResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.QueryCyResponse.toObject(opt_includeInstance, this);
        };
        proto.Currency.QueryCyResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                ncy: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.QueryCyResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.QueryCyResponse;
        return proto.Currency.QueryCyResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.QueryCyResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint64());
                    msg.setNcy(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.QueryCyResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.QueryCyResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.QueryCyResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNcy();
        if (f !== 0) {
            writer.writeUint64(1, f);
        }
    };
    proto.Currency.QueryCyResponse.prototype.getNcy = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.QueryCyResponse.prototype.setNcy = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Currency.BatchQueryCyRequest.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.BatchQueryCyRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.BatchQueryCyRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.BatchQueryCyRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                arrpidsList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.BatchQueryCyRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.BatchQueryCyRequest;
        return proto.Currency.BatchQueryCyRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.BatchQueryCyRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readPackedUint32());
                    msg.setArrpidsList(value);
                    break;
                case 2:
                    var value = (reader.readEnum());
                    msg.setNtype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.BatchQueryCyRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.BatchQueryCyRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.BatchQueryCyRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getArrpidsList();
        if (f.length > 0) {
            writer.writePackedUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0.0) {
            writer.writeEnum(2, f);
        }
    };
    proto.Currency.BatchQueryCyRequest.prototype.getArrpidsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Currency.BatchQueryCyRequest.prototype.setArrpidsList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Currency.BatchQueryCyRequest.prototype.addArrpids = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Currency.BatchQueryCyRequest.prototype.clearArrpidsList = function () {
        return this.setArrpidsList([]);
    };
    proto.Currency.BatchQueryCyRequest.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.BatchQueryCyRequest.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.BatchQueryCyResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.BatchQueryCyResponse.toObject(opt_includeInstance, this);
        };
        proto.Currency.BatchQueryCyResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                mapcysMap: (f = msg.getMapcysMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.BatchQueryCyResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.BatchQueryCyResponse;
        return proto.Currency.BatchQueryCyResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.BatchQueryCyResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = msg.getMapcysMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readUint64, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.BatchQueryCyResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.BatchQueryCyResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.BatchQueryCyResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getMapcysMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeUint64);
        }
    };
    proto.Currency.BatchQueryCyResponse.prototype.getMapcysMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate, null));
    };
    proto.Currency.BatchQueryCyResponse.prototype.clearMapcysMap = function () {
        this.getMapcysMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.CyChangeNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.CyChangeNoti.toObject(opt_includeInstance, this);
        };
        proto.Currency.CyChangeNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                namount: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nchange: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                nreason: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.CyChangeNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.CyChangeNoti;
        return proto.Currency.CyChangeNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.CyChangeNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readEnum());
                    msg.setNtype(value);
                    break;
                case 3:
                    var value = (reader.readUint64());
                    msg.setNamount(value);
                    break;
                case 4:
                    var value = (reader.readInt64());
                    msg.setNchange(value);
                    break;
                case 5:
                    var value = (reader.readEnum());
                    msg.setNreason(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.CyChangeNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.CyChangeNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.CyChangeNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0.0) {
            writer.writeEnum(2, f);
        }
        f = message.getNamount();
        if (f !== 0) {
            writer.writeUint64(3, f);
        }
        f = message.getNchange();
        if (f !== 0) {
            writer.writeInt64(4, f);
        }
        f = message.getNreason();
        if (f !== 0.0) {
            writer.writeEnum(5, f);
        }
    };
    proto.Currency.CyChangeNoti.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.CyChangeNoti.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Currency.CyChangeNoti.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.CyChangeNoti.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 2, value);
    };
    proto.Currency.CyChangeNoti.prototype.getNamount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Currency.CyChangeNoti.prototype.setNamount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Currency.CyChangeNoti.prototype.getNchange = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Currency.CyChangeNoti.prototype.setNchange = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Currency.CyChangeNoti.prototype.getNreason = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Currency.CyChangeNoti.prototype.setNreason = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.AddCyRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.AddCyRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.AddCyRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                namount: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nreason: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                gameid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.AddCyRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.AddCyRequest;
        return proto.Currency.AddCyRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.AddCyRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readEnum());
                    msg.setNtype(value);
                    break;
                case 3:
                    var value = (reader.readUint64());
                    msg.setNamount(value);
                    break;
                case 4:
                    var value = (reader.readEnum());
                    msg.setNreason(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setGameid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.AddCyRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.AddCyRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.AddCyRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0.0) {
            writer.writeEnum(2, f);
        }
        f = message.getNamount();
        if (f !== 0) {
            writer.writeUint64(3, f);
        }
        f = message.getNreason();
        if (f !== 0.0) {
            writer.writeEnum(4, f);
        }
        f = message.getGameid();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
    };
    proto.Currency.AddCyRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.AddCyRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Currency.AddCyRequest.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.AddCyRequest.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 2, value);
    };
    proto.Currency.AddCyRequest.prototype.getNamount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Currency.AddCyRequest.prototype.setNamount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Currency.AddCyRequest.prototype.getNreason = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Currency.AddCyRequest.prototype.setNreason = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 4, value);
    };
    proto.Currency.AddCyRequest.prototype.getGameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Currency.AddCyRequest.prototype.setGameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.AddCyResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.AddCyResponse.toObject(opt_includeInstance, this);
        };
        proto.Currency.AddCyResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                namount: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nchange: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.AddCyResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.AddCyResponse;
        return proto.Currency.AddCyResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.AddCyResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint64());
                    msg.setNamount(value);
                    break;
                case 3:
                    var value = (reader.readInt64());
                    msg.setNchange(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.AddCyResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.AddCyResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.AddCyResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getNamount();
        if (f !== 0) {
            writer.writeUint64(2, f);
        }
        f = message.getNchange();
        if (f !== 0) {
            writer.writeInt64(3, f);
        }
    };
    proto.Currency.AddCyResponse.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.AddCyResponse.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Currency.AddCyResponse.prototype.getNamount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.AddCyResponse.prototype.setNamount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Currency.AddCyResponse.prototype.getNchange = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Currency.AddCyResponse.prototype.setNchange = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.LockCyRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.LockCyRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.LockCyRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nexpire: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.LockCyRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.LockCyRequest;
        return proto.Currency.LockCyRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.LockCyRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readEnum());
                    msg.setNtype(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNexpire(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.LockCyRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.LockCyRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.LockCyRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0.0) {
            writer.writeEnum(2, f);
        }
        f = message.getNexpire();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
    };
    proto.Currency.LockCyRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.LockCyRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Currency.LockCyRequest.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.LockCyRequest.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 2, value);
    };
    proto.Currency.LockCyRequest.prototype.getNexpire = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Currency.LockCyRequest.prototype.setNexpire = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.LockCyResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.LockCyResponse.toObject(opt_includeInstance, this);
        };
        proto.Currency.LockCyResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strkey: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.LockCyResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.LockCyResponse;
        return proto.Currency.LockCyResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.LockCyResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrkey(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.LockCyResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.LockCyResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.LockCyResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getStrkey();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Currency.LockCyResponse.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.LockCyResponse.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Currency.LockCyResponse.prototype.getStrkey = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Currency.LockCyResponse.prototype.setStrkey = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.RenewLockRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.RenewLockRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.RenewLockRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                strkey: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                nexpire: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.RenewLockRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.RenewLockRequest;
        return proto.Currency.RenewLockRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.RenewLockRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrkey(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNexpire(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.RenewLockRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.RenewLockRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.RenewLockRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrkey();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNexpire();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Currency.RenewLockRequest.prototype.getStrkey = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Currency.RenewLockRequest.prototype.setStrkey = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Currency.RenewLockRequest.prototype.getNexpire = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.RenewLockRequest.prototype.setNexpire = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.UnlockCyRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.UnlockCyRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.UnlockCyRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                strkey: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.UnlockCyRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.UnlockCyRequest;
        return proto.Currency.UnlockCyRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.UnlockCyRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrkey(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.UnlockCyRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.UnlockCyRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.UnlockCyRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrkey();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Currency.UnlockCyRequest.prototype.getStrkey = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Currency.UnlockCyRequest.prototype.setStrkey = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.ImediateConsumeRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.ImediateConsumeRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.ImediateConsumeRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                namount: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strkey: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                nreason: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                nmin: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                gameid: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                rate: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.ImediateConsumeRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.ImediateConsumeRequest;
        return proto.Currency.ImediateConsumeRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.ImediateConsumeRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readEnum());
                    msg.setNtype(value);
                    break;
                case 3:
                    var value = (reader.readUint64());
                    msg.setNamount(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrkey(value);
                    break;
                case 5:
                    var value = (reader.readEnum());
                    msg.setNreason(value);
                    break;
                case 6:
                    var value = (reader.readUint64());
                    msg.setNmin(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setGameid(value);
                    break;
                case 8:
                    var value = (reader.readSint64());
                    msg.setRate(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.ImediateConsumeRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.ImediateConsumeRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.ImediateConsumeRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0.0) {
            writer.writeEnum(2, f);
        }
        f = message.getNamount();
        if (f !== 0) {
            writer.writeUint64(3, f);
        }
        f = message.getStrkey();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNreason();
        if (f !== 0.0) {
            writer.writeEnum(5, f);
        }
        f = message.getNmin();
        if (f !== 0) {
            writer.writeUint64(6, f);
        }
        f = message.getGameid();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getRate();
        if (f !== 0) {
            writer.writeSint64(8, f);
        }
    };
    proto.Currency.ImediateConsumeRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.ImediateConsumeRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Currency.ImediateConsumeRequest.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.ImediateConsumeRequest.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 2, value);
    };
    proto.Currency.ImediateConsumeRequest.prototype.getNamount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Currency.ImediateConsumeRequest.prototype.setNamount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Currency.ImediateConsumeRequest.prototype.getStrkey = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Currency.ImediateConsumeRequest.prototype.setStrkey = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Currency.ImediateConsumeRequest.prototype.getNreason = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Currency.ImediateConsumeRequest.prototype.setNreason = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 5, value);
    };
    proto.Currency.ImediateConsumeRequest.prototype.getNmin = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Currency.ImediateConsumeRequest.prototype.setNmin = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Currency.ImediateConsumeRequest.prototype.getGameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Currency.ImediateConsumeRequest.prototype.setGameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Currency.ImediateConsumeRequest.prototype.getRate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Currency.ImediateConsumeRequest.prototype.setRate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.ImediateConsumeResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.ImediateConsumeResponse.toObject(opt_includeInstance, this);
        };
        proto.Currency.ImediateConsumeResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                namount: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nchange: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.ImediateConsumeResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.ImediateConsumeResponse;
        return proto.Currency.ImediateConsumeResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.ImediateConsumeResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint64());
                    msg.setNamount(value);
                    break;
                case 3:
                    var value = (reader.readInt64());
                    msg.setNchange(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.ImediateConsumeResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.ImediateConsumeResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.ImediateConsumeResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getNamount();
        if (f !== 0) {
            writer.writeUint64(2, f);
        }
        f = message.getNchange();
        if (f !== 0) {
            writer.writeInt64(3, f);
        }
    };
    proto.Currency.ImediateConsumeResponse.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.ImediateConsumeResponse.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Currency.ImediateConsumeResponse.prototype.getNamount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.ImediateConsumeResponse.prototype.setNamount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Currency.ImediateConsumeResponse.prototype.getNchange = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Currency.ImediateConsumeResponse.prototype.setNchange = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.PrepareConsumeRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.PrepareConsumeRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.PrepareConsumeRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                namount: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nreason: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.PrepareConsumeRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.PrepareConsumeRequest;
        return proto.Currency.PrepareConsumeRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.PrepareConsumeRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readEnum());
                    msg.setNtype(value);
                    break;
                case 3:
                    var value = (reader.readUint64());
                    msg.setNamount(value);
                    break;
                case 4:
                    var value = (reader.readEnum());
                    msg.setNreason(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.PrepareConsumeRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.PrepareConsumeRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.PrepareConsumeRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0.0) {
            writer.writeEnum(2, f);
        }
        f = message.getNamount();
        if (f !== 0) {
            writer.writeUint64(3, f);
        }
        f = message.getNreason();
        if (f !== 0.0) {
            writer.writeEnum(4, f);
        }
    };
    proto.Currency.PrepareConsumeRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.PrepareConsumeRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Currency.PrepareConsumeRequest.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.PrepareConsumeRequest.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 2, value);
    };
    proto.Currency.PrepareConsumeRequest.prototype.getNamount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Currency.PrepareConsumeRequest.prototype.setNamount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Currency.PrepareConsumeRequest.prototype.getNreason = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Currency.PrepareConsumeRequest.prototype.setNreason = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.PrepareConsumeResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.PrepareConsumeResponse.toObject(opt_includeInstance, this);
        };
        proto.Currency.PrepareConsumeResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strtransid: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.PrepareConsumeResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.PrepareConsumeResponse;
        return proto.Currency.PrepareConsumeResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.PrepareConsumeResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrtransid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.PrepareConsumeResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.PrepareConsumeResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.PrepareConsumeResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getStrtransid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Currency.PrepareConsumeResponse.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.PrepareConsumeResponse.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Currency.PrepareConsumeResponse.prototype.getStrtransid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Currency.PrepareConsumeResponse.prototype.setStrtransid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.CommitConsumeRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.CommitConsumeRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.CommitConsumeRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtransid: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.CommitConsumeRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.CommitConsumeRequest;
        return proto.Currency.CommitConsumeRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.CommitConsumeRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtransid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.CommitConsumeRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.CommitConsumeRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.CommitConsumeRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtransid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Currency.CommitConsumeRequest.prototype.getStrtransid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Currency.CommitConsumeRequest.prototype.setStrtransid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.RollbackConsumeRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.RollbackConsumeRequest.toObject(opt_includeInstance, this);
        };
        proto.Currency.RollbackConsumeRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtransid: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.RollbackConsumeRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.RollbackConsumeRequest;
        return proto.Currency.RollbackConsumeRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.RollbackConsumeRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtransid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.RollbackConsumeRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.RollbackConsumeRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.RollbackConsumeRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtransid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Currency.RollbackConsumeRequest.prototype.getStrtransid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Currency.RollbackConsumeRequest.prototype.setStrtransid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.CyRankItem.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.CyRankItem.toObject(opt_includeInstance, this);
        };
        proto.Currency.CyRankItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                amount: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.CyRankItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.CyRankItem;
        return proto.Currency.CyRankItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.CyRankItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readUint64());
                    msg.setAmount(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.CyRankItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.CyRankItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.CyRankItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getAmount();
        if (f !== 0) {
            writer.writeUint64(2, f);
        }
    };
    proto.Currency.CyRankItem.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.CyRankItem.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Currency.CyRankItem.prototype.getAmount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.CyRankItem.prototype.setAmount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.CyRankGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.CyRankGet.toObject(opt_includeInstance, this);
        };
        proto.Currency.CyRankGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                type: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                num: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.CyRankGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.CyRankGet;
        return proto.Currency.CyRankGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.CyRankGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setType(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.CyRankGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.CyRankGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.CyRankGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getType();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getNum();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Currency.CyRankGet.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.CyRankGet.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Currency.CyRankGet.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.CyRankGet.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Currency.CyRankAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.CyRankAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.CyRankAck.toObject(opt_includeInstance, this);
        };
        proto.Currency.CyRankAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ranksList: googleProtobuf.Message.toObjectList(msg.getRanksList(), proto.Currency.CyRankItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.CyRankAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.CyRankAck;
        return proto.Currency.CyRankAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.CyRankAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Currency.CyRankItem;
                    reader.readMessage(value, proto.Currency.CyRankItem.deserializeBinaryFromReader);
                    msg.addRanks(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.CyRankAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.CyRankAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.CyRankAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getRanksList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Currency.CyRankItem.serializeBinaryToWriter);
        }
    };
    proto.Currency.CyRankAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.CyRankAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Currency.CyRankAck.prototype.getRanksList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Currency.CyRankItem, 2));
    };
    proto.Currency.CyRankAck.prototype.setRanksList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Currency.CyRankAck.prototype.addRanks = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Currency.CyRankItem, opt_index);
    };
    proto.Currency.CyRankAck.prototype.clearRanksList = function () {
        return this.setRanksList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.SafeGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.SafeGet.toObject(opt_includeInstance, this);
        };
        proto.Currency.SafeGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                type: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                num: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.SafeGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.SafeGet;
        return proto.Currency.SafeGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.SafeGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setNum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.SafeGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.SafeGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.SafeGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNum();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
    };
    proto.Currency.SafeGet.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.SafeGet.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Currency.SafeGet.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.SafeGet.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Currency.SafeAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Currency.SafeAck.toObject(opt_includeInstance, this);
        };
        proto.Currency.SafeAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                cynum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                sfnum: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Currency.SafeAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Currency.SafeAck;
        return proto.Currency.SafeAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Currency.SafeAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setCynum(value);
                    break;
                case 3:
                    var value = (reader.readSint64());
                    msg.setSfnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Currency.SafeAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Currency.SafeAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Currency.SafeAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getCynum();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
        f = message.getSfnum();
        if (f !== 0) {
            writer.writeSint64(3, f);
        }
    };
    proto.Currency.SafeAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Currency.SafeAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Currency.SafeAck.prototype.getCynum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Currency.SafeAck.prototype.setCynum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Currency.SafeAck.prototype.getSfnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Currency.SafeAck.prototype.setSfnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Currency.CYType = {
        GAMEMONEY: 0,
        GOLDBEAN: 1,
        ORB: 2,
        ACHVPOINT: 3,
        UNKONWN: 88,
        SAFEBOX: 888,
        CYTRAIN: 999,
        SFSCORE: -1
    };
    proto.Currency.CYChangeReason = {
        UNKNOWN: 0,
        ROLLBACK: 1,
        GAME: 2,
        ROBOT: 3,
        TASK: 4,
        RELIEVE: 5,
        SIGNIN: 6,
        STORE: 7,
        GAMETAX: 8,
        ITEM: 9,
        PRIVILEGECARD: 10,
        LOGINAWARD: 11,
        LUCKYROULETTE: 12,
        RANKING: 13,
        REDEEMCODE: 14,
        VIP: 15,
        REBATE: 201,
        INVITE: 202,
        EXCHANGE: 203,
        GIVEUP: 204,
        VIPMONTH: 205,
        VIPBET: 206,
        GIFTS: 207,
        SAFEBOX: 208,
        TRAIN: 209,
        JACKPOT: 210
    };
    goog.object.extend(exports, proto.Currency);

    });
    var Currency_pb_1 = Currency_pb.QueryCyRequest;
    var Currency_pb_2 = Currency_pb.QueryCyResponse;
    var Currency_pb_3 = Currency_pb.SafeGet;
    var Currency_pb_4 = Currency_pb.SafeAck;
    var Currency_pb_5 = Currency_pb.BatchQueryCyRequest;
    var Currency_pb_6 = Currency_pb.BatchQueryCyResponse;
    var Currency_pb_7 = Currency_pb.CYChangeReason;
    var Currency_pb_8 = Currency_pb.AddCyRequest;
    var Currency_pb_9 = Currency_pb.CyChangeNoti;
    var Currency_pb_10 = Currency_pb.CYType;

    var Third_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Currency_pb);
    goog.exportSymbol('proto.Third.CyRankAck', null, global);
    goog.exportSymbol('proto.Third.CyRankGet', null, global);
    goog.exportSymbol('proto.Third.EnterAck', null, global);
    goog.exportSymbol('proto.Third.EnterGet', null, global);
    goog.exportSymbol('proto.Third.Game', null, global);
    goog.exportSymbol('proto.Third.HistoryNoti', null, global);
    goog.exportSymbol('proto.Third.ListsNoti', null, global);
    goog.exportSymbol('proto.Third.QueryAck', null, global);
    goog.exportSymbol('proto.Third.QueryGet', null, global);
    goog.exportSymbol('proto.Third.RefreshAck', null, global);
    goog.exportSymbol('proto.Third.RefreshGet', null, global);
    goog.exportSymbol('proto.Third.ResultNoti', null, global);
    goog.exportSymbol('proto.Third.Tag', null, global);
    goog.exportSymbol('proto.Third.ValidAck', null, global);
    goog.exportSymbol('proto.Third.ValidGet', null, global);
    proto.Third.Game = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.Game, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.Game.displayName = 'proto.Third.Game';
    }
    proto.Third.QueryGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.QueryGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.QueryGet.displayName = 'proto.Third.QueryGet';
    }
    proto.Third.QueryAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Third.QueryAck.repeatedFields_, null);
    };
    goog.inherits(proto.Third.QueryAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.QueryAck.displayName = 'proto.Third.QueryAck';
    }
    proto.Third.EnterGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.EnterGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.EnterGet.displayName = 'proto.Third.EnterGet';
    }
    proto.Third.EnterAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.EnterAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.EnterAck.displayName = 'proto.Third.EnterAck';
    }
    proto.Third.RefreshGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.RefreshGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.RefreshGet.displayName = 'proto.Third.RefreshGet';
    }
    proto.Third.RefreshAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.RefreshAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.RefreshAck.displayName = 'proto.Third.RefreshAck';
    }
    proto.Third.ListsNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.ListsNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.ListsNoti.displayName = 'proto.Third.ListsNoti';
    }
    proto.Third.ValidGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.ValidGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.ValidGet.displayName = 'proto.Third.ValidGet';
    }
    proto.Third.ValidAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.ValidAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.ValidAck.displayName = 'proto.Third.ValidAck';
    }
    proto.Third.CyRankGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.CyRankGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.CyRankGet.displayName = 'proto.Third.CyRankGet';
    }
    proto.Third.CyRankAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Third.CyRankAck.repeatedFields_, null);
    };
    goog.inherits(proto.Third.CyRankAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.CyRankAck.displayName = 'proto.Third.CyRankAck';
    }
    proto.Third.HistoryNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.HistoryNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.HistoryNoti.displayName = 'proto.Third.HistoryNoti';
    }
    proto.Third.ResultNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Third.ResultNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Third.ResultNoti.displayName = 'proto.Third.ResultNoti';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.Game.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.Game.toObject(opt_includeInstance, this);
        };
        proto.Third.Game.toObject = function (includeInstance, msg) {
            var f, obj = {
                gameid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                icon: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                min: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                max: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                mode: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
                viplv: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                big: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                anim: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                rate: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                tag: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.Game.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.Game;
        return proto.Third.Game.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.Game.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setGameid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setIcon(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 4:
                    var value = (reader.readInt64());
                    msg.setMin(value);
                    break;
                case 5:
                    var value = (reader.readInt64());
                    msg.setMax(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setMode(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setViplv(value);
                    break;
                case 9:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 10:
                    var value = (reader.readSint32());
                    msg.setBig(value);
                    break;
                case 11:
                    var value = (reader.readSint32());
                    msg.setAnim(value);
                    break;
                case 12:
                    var value = (reader.readSint32());
                    msg.setRate(value);
                    break;
                case 13:
                    var value = (reader.readSint32());
                    msg.setTag(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.Game.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.Game.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.Game.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getGameid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getIcon();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getMin();
        if (f !== 0) {
            writer.writeInt64(4, f);
        }
        f = message.getMax();
        if (f !== 0) {
            writer.writeInt64(5, f);
        }
        f = message.getMode();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
        f = message.getViplv();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(9, f);
        }
        f = message.getBig();
        if (f !== 0) {
            writer.writeSint32(10, f);
        }
        f = message.getAnim();
        if (f !== 0) {
            writer.writeSint32(11, f);
        }
        f = message.getRate();
        if (f !== 0) {
            writer.writeSint32(12, f);
        }
        f = message.getTag();
        if (f !== 0) {
            writer.writeSint32(13, f);
        }
    };
    proto.Third.Game.prototype.getGameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.Game.prototype.setGameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.Game.prototype.getIcon = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Third.Game.prototype.setIcon = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Third.Game.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Third.Game.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Third.Game.prototype.getMin = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Third.Game.prototype.setMin = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Third.Game.prototype.getMax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Third.Game.prototype.setMax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Third.Game.prototype.getMode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Third.Game.prototype.setMode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Third.Game.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Third.Game.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Third.Game.prototype.getViplv = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Third.Game.prototype.setViplv = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Third.Game.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Third.Game.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Third.Game.prototype.getBig = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Third.Game.prototype.setBig = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Third.Game.prototype.getAnim = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Third.Game.prototype.setAnim = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Third.Game.prototype.getRate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Third.Game.prototype.setRate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.Third.Game.prototype.getTag = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
    };
    proto.Third.Game.prototype.setTag = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 13, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.QueryGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.QueryGet.toObject(opt_includeInstance, this);
        };
        proto.Third.QueryGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                type: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.QueryGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.QueryGet;
        return proto.Third.QueryGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.QueryGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.QueryGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.QueryGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.QueryGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Third.QueryGet.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.QueryGet.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.QueryGet.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Third.QueryGet.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Third.QueryAck.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.QueryAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.QueryAck.toObject(opt_includeInstance, this);
        };
        proto.Third.QueryAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                gamesList: googleProtobuf.Message.toObjectList(msg.getGamesList(), proto.Third.Game.toObject, includeInstance),
                taxrate: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                listsMap: (f = msg.getListsMap()) ? f.toObject(includeInstance, proto.Third.QueryAck.toObject) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.QueryAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.QueryAck;
        return proto.Third.QueryAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.QueryAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 3:
                    var value = new proto.Third.Game;
                    reader.readMessage(value, proto.Third.Game.deserializeBinaryFromReader);
                    msg.addGames(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setTaxrate(value);
                    break;
                case 11:
                    var value = msg.getListsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Third.QueryAck.deserializeBinaryFromReader, 0, new proto.Third.QueryAck());
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.QueryAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.QueryAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.QueryAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getGamesList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(3, f, proto.Third.Game.serializeBinaryToWriter);
        }
        f = message.getTaxrate();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getListsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Third.QueryAck.serializeBinaryToWriter);
        }
    };
    proto.Third.QueryAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.QueryAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.QueryAck.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Third.QueryAck.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Third.QueryAck.prototype.getGamesList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Third.Game, 3));
    };
    proto.Third.QueryAck.prototype.setGamesList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.Third.QueryAck.prototype.addGames = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Third.Game, opt_index);
    };
    proto.Third.QueryAck.prototype.clearGamesList = function () {
        return this.setGamesList([]);
    };
    proto.Third.QueryAck.prototype.getTaxrate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Third.QueryAck.prototype.setTaxrate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Third.QueryAck.prototype.getListsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, proto.Third.QueryAck));
    };
    proto.Third.QueryAck.prototype.clearListsMap = function () {
        this.getListsMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.EnterGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.EnterGet.toObject(opt_includeInstance, this);
        };
        proto.Third.EnterGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                gameid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                ip: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                lang: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.EnterGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.EnterGet;
        return proto.Third.EnterGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.EnterGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setGameid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setIp(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setLang(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.EnterGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.EnterGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.EnterGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getGameid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getIp();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getLang();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
    };
    proto.Third.EnterGet.prototype.getGameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.EnterGet.prototype.setGameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.EnterGet.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Third.EnterGet.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Third.EnterGet.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Third.EnterGet.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Third.EnterGet.prototype.getIp = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Third.EnterGet.prototype.setIp = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Third.EnterGet.prototype.getLang = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Third.EnterGet.prototype.setLang = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.EnterAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.EnterAck.toObject(opt_includeInstance, this);
        };
        proto.Third.EnterAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                gameid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                entry: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                code: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.EnterAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.EnterAck;
        return proto.Third.EnterAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.EnterAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setGameid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setEntry(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setCode(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.EnterAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.EnterAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.EnterAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getGameid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getEntry();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getCode();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
    };
    proto.Third.EnterAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.EnterAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.EnterAck.prototype.getGameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Third.EnterAck.prototype.setGameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Third.EnterAck.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Third.EnterAck.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Third.EnterAck.prototype.getEntry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Third.EnterAck.prototype.setEntry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Third.EnterAck.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Third.EnterAck.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.RefreshGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.RefreshGet.toObject(opt_includeInstance, this);
        };
        proto.Third.RefreshGet.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.RefreshGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.RefreshGet;
        return proto.Third.RefreshGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.RefreshGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.RefreshGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.RefreshGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.RefreshGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.RefreshAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.RefreshAck.toObject(opt_includeInstance, this);
        };
        proto.Third.RefreshAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                code: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.RefreshAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.RefreshAck;
        return proto.Third.RefreshAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.RefreshAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setCode(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.RefreshAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.RefreshAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.RefreshAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getCode();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Third.RefreshAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.RefreshAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.RefreshAck.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Third.RefreshAck.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.ListsNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.ListsNoti.toObject(opt_includeInstance, this);
        };
        proto.Third.ListsNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                listsMap: (f = msg.getListsMap()) ? f.toObject(includeInstance, proto.Third.QueryAck.toObject) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.ListsNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.ListsNoti;
        return proto.Third.ListsNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.ListsNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = msg.getListsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Third.QueryAck.deserializeBinaryFromReader, 0, new proto.Third.QueryAck());
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.ListsNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.ListsNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.ListsNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getListsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Third.QueryAck.serializeBinaryToWriter);
        }
    };
    proto.Third.ListsNoti.prototype.getListsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate, proto.Third.QueryAck));
    };
    proto.Third.ListsNoti.prototype.clearListsMap = function () {
        this.getListsMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.ValidGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.ValidGet.toObject(opt_includeInstance, this);
        };
        proto.Third.ValidGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.ValidGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.ValidGet;
        return proto.Third.ValidGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.ValidGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.ValidGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.ValidGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.ValidGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.Third.ValidGet.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.ValidGet.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.ValidAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.ValidAck.toObject(opt_includeInstance, this);
        };
        proto.Third.ValidAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                standing: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                standsMap: (f = msg.getStandsMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.ValidAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.ValidAck;
        return proto.Third.ValidAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.ValidAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 3:
                    var value = (reader.readSint64());
                    msg.setStanding(value);
                    break;
                case 11:
                    var value = msg.getStandsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readSint64, null, "", 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.ValidAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.ValidAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.ValidAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStanding();
        if (f !== 0) {
            writer.writeSint64(3, f);
        }
        f = message.getStandsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeSint64);
        }
    };
    proto.Third.ValidAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.ValidAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.ValidAck.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Third.ValidAck.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Third.ValidAck.prototype.getStanding = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Third.ValidAck.prototype.setStanding = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Third.ValidAck.prototype.getStandsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, null));
    };
    proto.Third.ValidAck.prototype.clearStandsMap = function () {
        this.getStandsMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.CyRankGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.CyRankGet.toObject(opt_includeInstance, this);
        };
        proto.Third.CyRankGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                num: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.CyRankGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.CyRankGet;
        return proto.Third.CyRankGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.CyRankGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.CyRankGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.CyRankGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.CyRankGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNum();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Third.CyRankGet.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.CyRankGet.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.CyRankAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.CyRankAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.CyRankAck.toObject(opt_includeInstance, this);
        };
        proto.Third.CyRankAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ranksList: googleProtobuf.Message.toObjectList(msg.getRanksList(), Currency_pb.CyRankItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.CyRankAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.CyRankAck;
        return proto.Third.CyRankAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.CyRankAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new Currency_pb.CyRankItem;
                    reader.readMessage(value, Currency_pb.CyRankItem.deserializeBinaryFromReader);
                    msg.addRanks(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.CyRankAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.CyRankAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.CyRankAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getRanksList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, Currency_pb.CyRankItem.serializeBinaryToWriter);
        }
    };
    proto.Third.CyRankAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.CyRankAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.CyRankAck.prototype.getRanksList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, Currency_pb.CyRankItem, 2));
    };
    proto.Third.CyRankAck.prototype.setRanksList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Third.CyRankAck.prototype.addRanks = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Currency.CyRankItem, opt_index);
    };
    proto.Third.CyRankAck.prototype.clearRanksList = function () {
        return this.setRanksList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.HistoryNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.HistoryNoti.toObject(opt_includeInstance, this);
        };
        proto.Third.HistoryNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                gameid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.HistoryNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.HistoryNoti;
        return proto.Third.HistoryNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.HistoryNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setGameid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.HistoryNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.HistoryNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.HistoryNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getGameid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Third.HistoryNoti.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.HistoryNoti.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.HistoryNoti.prototype.getGameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Third.HistoryNoti.prototype.setGameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Third.HistoryNoti.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Third.HistoryNoti.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Third.ResultNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Third.ResultNoti.toObject(opt_includeInstance, this);
        };
        proto.Third.ResultNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                gameid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                roomid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                trainid: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                resultsMap: (f = msg.getResultsMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Third.ResultNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Third.ResultNoti;
        return proto.Third.ResultNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Third.ResultNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setGameid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setRoomid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setTrainid(value);
                    break;
                case 11:
                    var value = msg.getResultsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readSint64, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Third.ResultNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Third.ResultNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Third.ResultNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getGameid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getRoomid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getTrainid();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getResultsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeSint64);
        }
    };
    proto.Third.ResultNoti.prototype.getGameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Third.ResultNoti.prototype.setGameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Third.ResultNoti.prototype.getRoomid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Third.ResultNoti.prototype.setRoomid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Third.ResultNoti.prototype.getTrainid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Third.ResultNoti.prototype.setTrainid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Third.ResultNoti.prototype.getResultsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, null));
    };
    proto.Third.ResultNoti.prototype.clearResultsMap = function () {
        this.getResultsMap().clear();
        return this;
    };
    proto.Third.Tag = {
        NONE: 0,
        GAOHUIBAO: 1,
        GAOBEISHU: 2,
        YIHUOSHENG: 4,
        HAOYUN: 8,
        TIYU: 16,
        PUKE: 32,
        MOFA: 64,
        DONGWU: 128
    };
    goog.object.extend(exports, proto.Third);

    });
    var Third_pb_1 = Third_pb.Game;
    var Third_pb_2 = Third_pb.QueryGet;
    var Third_pb_3 = Third_pb.QueryAck;
    var Third_pb_4 = Third_pb.EnterGet;
    var Third_pb_5 = Third_pb.EnterAck;
    var Third_pb_6 = Third_pb.RefreshGet;
    var Third_pb_7 = Third_pb.RefreshAck;
    var Third_pb_8 = Third_pb.ListsNoti;
    var Third_pb_9 = Third_pb.ValidGet;
    var Third_pb_10 = Third_pb.ValidAck;
    var Third_pb_11 = Third_pb.Tag;

    var Opcode;
    (function (Opcode) {
        Opcode[Opcode["MatchUpdateNoti"] = 1200] = "MatchUpdateNoti";
        Opcode[Opcode["MatchTableNotify"] = 1201] = "MatchTableNotify";
        Opcode[Opcode["MatchOverNoti"] = 1202] = "MatchOverNoti";
        Opcode[Opcode["MatchUserNoti"] = 1203] = "MatchUserNoti";
        Opcode[Opcode["MatchEndNoti"] = 1204] = "MatchEndNoti";
        Opcode[Opcode["ThirdListRefreshNoti"] = 20501] = "ThirdListRefreshNoti";
    })(Opcode || (Opcode = {}));
    var WARNING = {
        SEND_FAIL: "Falha ao enviar a mensagem de solicitação",
        GAME_OVER: "Trò chơi đã kết thúc, vui lòng quay lại sảnh chính",
        GAME_CANCEL: "Phòng đã giải tán, vui lòng quay lại sảnh chính",
        GAME_DISSOLVE: "Có nên giải tán phòng không?",
        GAME_GIVEIN: "Sau khi nhận thua hãy chuyển cho đối phương toàn bộ tiền vàng đem theo, bạn có nhận thua không?",
        NOT_ENOUGH: "Tiền vàng của bạn không đủ",
        NOT_ENOUGH_1: "Số tiền của bạn cần phải lớn hơn số tiền đã thiết lập",
        NOT_ENOUGH_2: "KMoedas de ouro insuficientes, ir para recargar ou não",
        GIVE_IN_LIMIT: "Số tiền đầu hàng được thiết lập phải lớn hơn 50K.",
        OVER_LIMIT: "Đồng xu của bạn quá nhiều, chơi phòng cao cấp hơn đi.",
        NO_FIT_ROOM: "Không có sảnh chơi phù hợp, hãy nạp tiền hoặc nâng cấp VIP để chơi.",
        AUTO_EXIT: "Cuộc trò chuyện sẽ tự động thoát khi kết thúc.",
        NET_RECONNECT_SUC: "Conectado com sucesso",
        NET_DISCONNECT: "A sua rede está em mau estado. Está a ligar...",
        NET_SERVER_FAIL: "A conexão à internet falhou, por favor faça login novamente",
        NET_SERVER_FIX: "Servidor em manutenção",
        NET_WAIT: "Por favor aguarde",
        DOWNLOAD_FAIL: "Falha ao carregar o recurso, provavelmente devido à instabilidade da sua rede. Por favor, saia e faça login novamente",
        LOGIN_ERROR: "Conta anormal, por favor faça login novamente",
        LOGIN_NO_PLYINFO: "Falha ao obter informações pessoais. Por favor, faça login novamente",
        LOGIN_ERR_ASK_SERVICE: "Login falhou, entre em contato com o atendimento ao cliente",
        LOGIN_BAD_PHONE_NO: "Por favor, insira o número de telefone correto",
        LOGIN_NULL_CODE: "Captcha não pode estar vazio",
        LOGIN_TOO_FAST: "A frequência de aquisição é muito rápida. Por favor, insira o último captcha",
        LOGIN_FAIL_GET_CODE: "Falha na obtenção do captcha",
        LOGIN_ERR_CODE: "Por favor, insira o captcha correto",
        LOGIN_LOGINING: "Fazendo login...",
        LOGIN_FAIL_LOGIN: "Login falhou",
        LOGIN_NULL_KEY: "Login senha está vazia",
        LOGIN_BAD_KEY: "Login senha incorreta",
        LOGIN_BAD_CODE: "Código de verificação incorreto",
        LOGIN_OUT_CODE: "Código de verificação desativado",
        LOGIN_NO_USER: "O usuário não existe",
        LOGIN_IP_BAND: "Este IP foi desativado",
        LOGIN_DEVICE_BAND: "Este dispositivo foi desativado",
        LOGIN_ACCOUNT_BAND: "Esta conta foi desativada",
        LOGIN_ACCOUNT_DESTROY: "Esta conta foi cancelada",
        LOGIN_BAD_CHANNEL: "Este canal não é suportado",
        LOGIN_NET_DOWN_RETRY: "Exceção de rede, atualize a página e tente novamente",
        LOGIN_LOADRES_FAIL: "Falha ao carregar o recurso, provavelmente devido à instabilidade da sua rede. Por favor, saia e faça login novamente",
        LOGIN_FAIL_BIND: "Falha de ligação, entre em contato com o serviço ao cliente",
        LOGIN_HAS_BOUND: "A conta está ligada ao telefone",
        LOGIN_HAS_SINGED: "O telefone já está registrado",
        LOGIN_AUTH_DEVICE_LIMITED: "O limite de contas registradas para este dispositivo foi atingido",
        LOGIN_NEW_PHONE_IN_OLD: "O telefone já está registrado. Registre-se novamente com um novo número de telefone",
        NETWORK_EXCEPTION: "Anomalias na rede, verifique a rede",
        BIND_ALREADY: "A conta foi vinculada",
        BIND_SUCC: "Ligação com sucesso",
        BIND_FIRST: "Por favor, ligue o número do telefone primeiro",
        COPY_SHARE: "O conteúdo foi copiado. Por favor, vá para compartilhar",
        COPY_TO_CLIPBOARD: "Tenha sido copiado",
        REQUEST_FAIL: "Pedido falhou",
        SERVER_BUSY: "Servidor ocupado, tente novamente mais tarde",
        SERVER_MAINTAIN: "Servidor em manutenção, tente novamente mais tarde",
        GET_CODE: "Código",
        NICKNAME_REPET: "Repetição do apelido",
        NICKNAME_ILLEGAL: "Não conformidade do apelido",
        NICKNAME_NOT_EMPTY: "O apelido não pode estar vazio",
        NICKNAME_MODIFY_CASH: "Se custa R$0.4 de ouro para alterar o apelido",
        REFRESH_SUCCESS: "Atualizar com sucesso",
        SIGN_NOT_EMPTY: "A assinatura não pode estar em branco",
        LOADING: "Carregando em",
        AWARD_LOSE: "Expiração da recompensa",
        DELETE_SUCCESS: "Remoção bem sucedida",
        DELETE_FAIL: "Exclusão falhou",
        NO_TIMES: "Falta de frequência",
        RECHARGE_SUCC: "Recarregado com sucesso",
        RECHARGE_FAIL: "Falha na recarga",
        RECHARGE_LIMIT_DAY: "Đã đạt đến giới hạn nạp tiền tối đa hàng ngày",
        RECHARGE_LIMIT_WEEK: "Đã đạt đến giới hạn nạp tiền tối đa hàng tuần",
        RECHARGE_LIMIT_MONTH: "Đã đạt đến giới hạn nạp tiền tối đa hàng tháng",
        RECHARGE_LIMIT_AGE: "Không cho phép người dưới 8 tuổi nạp tiền",
        WITHDRAW_SUCCESS: "Retirada bem sucedida",
        WITHDRAW_VIP_LIMIT: "Seu nível VIP não é suficiente. Atualize para VIP1 para usar este recurso",
        WITHDRAW_NOT_ENOUGH: "Limite de resgate diário insuficiente. Eleve seu nível vip",
        WITHDRAW_NEED_BET: "Aplace novamente {0} gold para continuar com a retirada",
        BANK_NAME_NOT_EMPTY: "Nome do cartão não pode estar vazio",
        BANK_CARD_NOT_EMPTY: "O número do cartão bancário não pode estar vazio",
        BANK_TYPE_NOT_EMPTY: "Por favor selecione cartão bancário",
        WITHDRAW_FAIL: "Retirada falhada",
        WITHDRAW_ACCOUNT_EXCEPTION: "Conta anormal, o levantamento foi limitado",
        WITHDRAW_VIP_LIMIT1: "Đạt VIP1 có thể rút tiền\nNạp 50000 có thể đạt được VIP1",
        SAFE_IN_SUCC: "Depositado com sucesso",
        SAFE_BAD_INPUT: "Por favor insira um valor válido",
        SAFE_OVER_GOLD: "Excedeu o seu ouro existente",
        INVITE_USER_LEVEL_1: "Người dùng cấp 1",
        INVITE_USER_LEVEL_2: "Người dùng cấp 2",
        INVITE_USER_LEVEL_ALL: "Tất cả các loại",
        INVITE_BIND_ID_NOT_EMPTY: "ID do convite não pode estar vazio",
        INVITE_BIND_ID_COMFIRM: "É certo vincular o ID {0}",
        RANK_SIGN_MODIFY_VIP: "Seu nível VIP não é suficiente. Atualize para VIP{0} para usar este recurso",
        RANK_NOT_TOP: "Não listado",
        TURN_TABLE_TIMES: "Número de sorteios: {0}",
        CUR_VERSION: "Phiên bản hiện tại：",
        CHANGE_ACCOUNT_CONFIRM: "Por favor, confirme se mudar de conta",
        CHANGE_AREA: "Depois de alternar o idioma você vai jogar com a conta da região selecionada, se alternar",
        VIP_TIME_UNIT: "lần",
        VIP_HELP_MONTH: "Lưu ý: Bạn có thể yêu cầu nó sau khi đặt cược XX đồng tiền vàng trong tháng hiện tại (chỉ một lần)",
        VIP_HELP_FANLI: "Hoa hồng vàng hoàn trả {0} số tiền đổ thua vào trận đấu của ngày hôm trước",
        VIP_MONTH_AWARD: "Pagamento do Prêmio Mensal VIP",
        VIP_LOCK_INFO: "Você não tem nível VIP suficiente e precisa de VIP1 para desbloquear o jogo. Você recarrega para aumentar o nível VIP?",
        VIP_LOCK_LEVEL: "Vip{0} chơi được",
        VIP_DAY_AWARD: "Recompensa diária de login VIP",
        TIME_AGO: "há",
        TIME_YEAR: "ano",
        TIME_MON: "mês",
        TIME_DAY: "dia",
        TIME_HOUR: "hora",
        TIME_MIN: "min",
        TIME_SEC: "s",
        TIME_JUST: "agora",
        TIME_SEEU: "Até amanhã",
        DEL_ACC_TIPS: "O cancelamento da conta é uma operação irrecuperável. Você confirma o cancelamento?",
        DEL_ACC_SUCC: "Sair com sucesso",
        DEL_ACC_FAIL: "Falha no logout",
        DEL_ACC_TIK_ERR: "Lỗi tài khoản, vui lòng đăng nhập lại",
        DEL_ACC_TIK_OUT: "Tài khoản không hợp lệ, vui lòng đăng nhập lại",
        DEL_ACC_NOT_EXIST: "A conta não existe, por favor faça login novamente",
        SHOP_AWARD: "Tặng thêm",
        BULL_EXC: " realizou um saque bem-sucedido de",
        BULL_GET: " obter",
        LUCKY_NO_VIP: "Nível vip insuficiente para sorteio. Por favor, aumente o nível vip",
        LUCKY_NO_COUNT: "Número insuficiente de sorteios",
        LUCKY_NO_TIME: "O tempo do sorteio não chegou, o sorteio pode ser feito após a contagem regressiva terminar",
        LUCKY_BET_INFO: "Qualquer valor de aposta de jogo chega a {0}",
        LUCKY_TURN_COUNT: "Missões do dia {0}",
        WALLET_GUILDE: "Làm thế nào để đổi, vui lòng xem hướng dẫn.",
        WALLET_UPGRADE_VIP: "Limite insuficiente. Por favor, eleve VIP",
        GUIDE_ROUND_LIMIT: "Chơi 2 ván để mở khóa thêm trò chơi",
        GUIDE_END: "Tất cả các trò chơi đều đã được mở cho bạn, bạn có thể rút tiền sau khi số xu đạt đến 10000.",
        SERIAL_TIP1: "Compre qualquer pacote de presente e aproveite um bônus maior no dia seguinte",
        SERIAL_TIP2: "O bônus de {0} foi ativado, pode ser aproveitado na compra do dia seguinte",
        SERIAL_TIP3: "O bônus será redefinido após a contagem regressiva",
        SERIAL_RULE: "-",
        NO_AWARD: "Atualmente não há recompensas",
        VIP_NEED: "Nível VIP não alcançado, por favor, atualize seu status VIP",
        AWARD_ONCE_DAY: "O bônus de convite pode ser retirado apenas uma vez por dia",
        GOLD_NOT_ENOUGH: "Valor do saque insuficiente    ",
        TIMES_NOT_ENOUGH: "Número de saques insuficiente",
        WITHDRAW_SUCCESS_AUDIT: "Saque bem-sucedido, em análise",
        NEED_BIND_BANK: "Saque requer vinculação de um cartão de crédito. Deseja vincular agora?",
        BANK_CPF: "CPF obrigatório",
        BANK_NAME_REPECT: "Nome duplicado",
        BANK_MODIFY_LIMIT: "Só pode ser alterado uma vez por mês",
        WITHDRAW_NEED_RIGHT: "O valor de retirada deve estar dentro de um intervalo razoável. O valor mínimo de retirada: {0}",
        WITHDRAW_NEED_VIP1: "Retirada só é possível depois de se tornar VIP1",
        BET_NOT_ENOUGH: "Limite de aposta insuficiente",
        BET_NEED: "Você também precisa apostar {0} para retirar",
        BET_NEED2: "Valor da aposta insuficiente, após apostar {0}, pode ser resgatado.",
        [Common_pb_1.SUCCESS]: "Pedido bem sucedido",
        [Common_pb_1.E_FAIL]: "Pedido falhou",
        [Common_pb_1.E_TABLE_NOT_EXISTS]: "Phòng không tồn tại",
        [Common_pb_1.E_GAME_PLAYING]: "Người chơi đang trong trận đấu",
        [Common_pb_1.E_ALLOCATE_NO_TABLE]: "Tạo thất bại",
        [Common_pb_1.E_PLAYER_NO_PLAYING_TABLE]: "Không có trò chơi đang chơi",
        [Common_pb_1.E_GATE_KICK_SERVER_CLOSED]: "Đang bảo trì máy chủ",
        [Common_pb_1.E_GATE_KICK_DUPLICATE_LOGIN]: "Đăng nhập trùng lặp",
        [Common_pb_1.E_ANTI_ADDICTION_NO_REALNAME]: "",
        [Common_pb_1.E_ANTI_ADDICTION_NOT_PLAY_TIME]: "",
        [Common_pb_1.E_GATE_KICK_BANNED]: "Conta foi banida",
        [Common_pb_1.E_MM_ALREADY_HAVE_TICKET]: "Chưa bắt đầu ghép đôi",
        [Common_pb_1.E_MM_HAS_TABLE_TO_PLAY]: "Có bàn chưa chơi xong.",
        [Common_pb_1.E_MM_STILL_MATCHING]: "Chưa ghép đôi được đủ người",
        [Common_pb_1.E_MM_TICKET_NOT_EXIST]: "Chưa bắt đầu ghép đôi",
        [Common_pb_1.E_MM_GAME_MONEY_OUT_OF_RANGE]: "Tiền vàng vượt quá giới hạn cho phép",
        [Common_pb_1.E_MM_PLAYER_OVER]: "Số lượng người chơi đã đầy",
        [Common_pb_1.E_MM_PLAYER_EMPTY]: "Số lượng người chơi chưa đầy",
        [Common_pb_1.E_MM_ALREADY_START]: "Trò chơi đã bắt đầu",
        [Common_pb_1.E_CY_LOCK_FAILED]: "Không thành công trong việc khóa tiền tệ",
        [Common_pb_1.E_CY_NOT_LOCKED]: "Tiền tệ không được khóa",
        [Common_pb_1.E_CY_LOCKED]: "Tiền tệ đã được khóa",
        [Common_pb_1.E_CY_NOT_ENOUGH]: "Không đủ tiền tệ",
        [Common_pb_1.E_TASK_NOT_EXISTS]: "Nhiệm vụ không tồn tại",
        [Common_pb_1.E_TASK_ALREADY_ACCEPTED]: "Nhiệm vụ đã được nhận",
        [Common_pb_1.E_AWARD_NOT_EXISTS]: "Phần thưởng không tồn tại",
        [Common_pb_1.E_LOGIN_AWARD_NOT_EXIST_IN_CONFIG]: "Không có phần thưởng tương ứng",
        [Common_pb_1.E_LOGIN_AWARD_HAS_APPLYED]: "Hôm nay đã nhận phần thưởng cho khoảng thời gian này rồi.",
        [Common_pb_1.E_VIP_AWARD_HAS_BEEN_RECEIVED]: "Phần thưởng đã được nhận.",
        [Common_pb_1.E_VIP_LEVEL_NOT_ENOUGH]: "Cấp độ VIP chưa đủ.",
        [Common_pb_1.E_VIP_NO_DAILY_AWARD_FOR_CURRENT_LEVEL]: "Cấp độ VIP hiện tại không có phần thưởng hàng ngày.",
        [Common_pb_1.E_VIP_BET_NOT_ENOUGH]: "Apostas atuais insuficientes",
        REDEEM_FAIL: "Troca falhou",
        REDEEM_SUCC: "A troca foi bem sucedida",
        REDEEM_NULL: "Por favor insira o código do pacote de presente",
        [Common_pb_1.E_REDEEM_CODE_NOT_EXISTS]: "O código de troca não existe",
        [Common_pb_1.E_REDEEM_CODE_ALREADY_REDEEMED]: "O jogador já resgatou a hora de resgatar o código",
        [Common_pb_1.E_REDEEM_CODE_ALREADY_USED]: "Este código de resgate já foi usado",
        [Common_pb_1.E_REDEEM_CODE_WRONG_SOURCE]: "Código de resgate inconsistente com o canal do jogador",
        [Common_pb_1.E_REDEEM_CODE_ALREADY_TYPE]: "Já trocou o mesmo tipo de código de troca",
        [Common_pb_1.E_AD_REWARD_TIMES_LIMITED]: "",
        [Common_pb_1.E_REBATE_NONE_AWARD]: "Không có phần thưởng.",
        ACT_TITLE_1: "Bạn sẽ nhanh chóng nhận được phần thưởng",
        ACT_TITLE_2: "Tiếp tục nhận lợi ích",
        ACT_GIVE_10TON: "Siêu lợi ích, gửi thêm ",
        ACT_FIRST_INVITE: "Lời mời thành công đầu tiên, xin chúc mừng ",
        ACT_PROGRESS_DESC: "Chỉ cần {0} là bạn có thể nhận phần thưởng",
        ACT_DETAIL_DESC: "Chỉ cần thêm {0} nữa là bạn có thể nhận {1}",
        ACT_BTN_1: "Mời bạn bè và nhận ngay lập tức {0}",
        ACT_HELP: "1.Khi tiến độ tích lũy đầy, bạn có thể nhận thưởng.\n2.Bạn sẽ nhận được số tiền thưởng ngẫu nhiên sau khi bạn mời bạn bè của bạn tham gia trò chơi.\n3.Khi bạn bè của bạn nạp tiền, bạn có thể nhận thêm số tiền thưởng ngẫu nhiên (chỉ một lần).\nLưu ý: Chỉ khi bạn mời người dùng mới và đăng ký trên thiết bị mới thì mới có hiệu lực.",
        ACT_NOTICE_1: "đã mời bạn bè và thành công nhận {0} {1}",
        ACT_NOTICE_2: "đã mời bạn bè và thành công nhận {0} {1} làm phần thưởng",
        ACT_CHARGE_CODE: "Parabéns pelo código do pacote, por favor verifique seu e-mail",
        ACT_TX_ING: "Đang xử lý",
        ACT_TX_CAN: "Có thể đổi rồi",
        SHARE_DES: "Um jogo de entretenimento escolhido por milhões de jogadores! Venha jogar e receber benefícios!",
        ITEM_7001: "một chút vàng",
        ITEM_7002: "Rất nhiều vàng",
        ITEM_7003: "những viên gạch vàng",
        ITEM_7005: "một chút vàng",
        ITEM_7006: "Rất nhiều vàng",
        ITEM_7007: "những viên gạch vàng",
        ITEM_7008: "một chút vàng",
        ITEM_7009: "Rất nhiều vàng",
        ITEM_7010: "những viên gạch vàng",
        SIGN_IN: 'Entrar',
        SING_UP: 'Inscrever-se',
        AGREE_PRTCL: "Please read and agree to User Agreement before Sign Up",
        HAS_BUY: 'Já foi\ncomprado',
        UPDATE_NULL_KEY: "Senha está vazia",
        UPDATE_DIF_KEY: "Senha de confirmação não coincide",
        UPDATE_KEY_FAIL: "Falha ao modificar a senha.",
        UPDATE_KEY_SUCC: "Alteração de senha bem-sucedida",
        UPDATE_BAD_OLD_KEY: "A senha antiga está incorreta",
        TOM_GET: "Receber amanhã",
        TUS_BEGIN: "Começa na segunda-feira",
    };
    class LobbyDefine$1 {
        static isMiniGame(gamid) {
            if (gamid == GlobalVariables.GAME_ID_MINI_BET || gamid == GlobalVariables.GAME_ID_MINI_YXX) {
                return true;
            }
            return false;
        }
    }
    var ITEM_TYPE = {
        7001: { name: WARNING.ITEM_7005, price: 100000, icon: "2d/icon/items/icon_item_7005.png", },
        7002: { name: WARNING.ITEM_7006, price: 500000, icon: "2d/icon/items/icon_item_7006.png", },
        7003: { name: WARNING.ITEM_7007, price: 800000, icon: "2d/icon/items/icon_item_7007.png", },
        7005: { name: WARNING.ITEM_7005, price: 100000, icon: "2d/icon/items/icon_item_7005.png", },
        7006: { name: WARNING.ITEM_7006, price: 500000, icon: "2d/icon/items/icon_item_7006.png", },
        7007: { name: WARNING.ITEM_7007, price: 800000, icon: "2d/icon/items/icon_item_7007.png", },
        7008: { name: WARNING.ITEM_7005, price: 100000, icon: "2d/icon/items/icon_item_7005.png", },
        7009: { name: WARNING.ITEM_7006, price: 500000, icon: "2d/icon/items/icon_item_7006.png", },
        7010: { name: WARNING.ITEM_7010, price: 800000, icon: "2d/icon/items/icon_item_7007.png", },
    };
    var GAME_THEME = {
        [Third_pb_11.GAOHUIBAO]: "Alto Retorno",
        [Third_pb_11.GAOBEISHU]: "Múltiplo Alto",
        [Third_pb_11.YIHUOSHENG]: "Vitória Fácil",
        [Third_pb_11.HAOYUN]: "Fortune",
        [Third_pb_11.TIYU]: "Esporte",
        [Third_pb_11.PUKE]: "Pôquer",
        [Third_pb_11.MOFA]: "Mágica",
        [Third_pb_11.DONGWU]: "Animais",
    };
    var THEME_ARR = [
        "Alto Retorno",
        "Múltiplo Alto",
        "Vitória Fácil",
        "Fortune",
        "Esporte",
        "Pôquer",
        "Mágica",
        "Animais",
    ];
    var GAME_SOURCE = [
        { index: 0, source: "tada", name: "Tada", range: [1, 999], img: "2d/icon/gameSource/img_source0" },
        { index: 1, source: "pg", name: "PG Soft", range: [10000000, 19999999], range1: [107000, 107999], img: "2d/icon/gameSource/img_source1" },
        { index: 2, source: "mg", name: "Microgaming", range: [1100, 1199], img: "2d/icon/gameSource/img_source2" },
        { index: 3, source: "evo", name: "Evolution", range: [1000, 1099], img: "2d/icon/gameSource/img_source3" },
        { index: 4, source: "oneai", name: "Pragmatic Play", range: [101000, 101999], img: "2d/icon/gameSource/img_source4" },
        { index: 5, source: "oneai", name: "BGaming", range: [102000, 102999], img: "2d/icon/gameSource/img_source5" },
        { index: 6, source: "oneai", name: "CQ9", range: [103000, 103999], img: "2d/icon/gameSource/img_source6" },
        { index: 7, source: "oneai", name: "EvoPlay", range: [104000, 104999], img: "2d/icon/gameSource/img_source7" },
        { index: 8, source: "oneai", name: "JDB", range: [105000, 105999], img: "2d/icon/gameSource/img_source8" },
        { index: 9, source: "oneai", name: "Red Tiger", range: [106000, 106999], img: "2d/icon/gameSource/img_source9" },
        { index: 10, source: "oneai", name: "SPB", range: [108000, 108999], img: "2d/icon/gameSource/img_source10" },
        { index: 11, source: "oneai", name: "ALG", range: [109000, 109999], img: "2d/icon/gameSource/img_source11" },
    ];
    var MARK_LOG;
    (function (MARK_LOG) {
        MARK_LOG[MARK_LOG["LOG_1001"] = 1001] = "LOG_1001";
        MARK_LOG[MARK_LOG["LOG_1002"] = 1002] = "LOG_1002";
        MARK_LOG[MARK_LOG["LOG_1003"] = 1003] = "LOG_1003";
        MARK_LOG[MARK_LOG["LOG_1004"] = 1004] = "LOG_1004";
        MARK_LOG[MARK_LOG["LOG_1005"] = 1005] = "LOG_1005";
        MARK_LOG[MARK_LOG["LOG_1006"] = 1006] = "LOG_1006";
        MARK_LOG[MARK_LOG["LOG_1007"] = 1007] = "LOG_1007";
        MARK_LOG[MARK_LOG["LOG_1008"] = 1008] = "LOG_1008";
        MARK_LOG[MARK_LOG["LOG_1009"] = 1009] = "LOG_1009";
        MARK_LOG[MARK_LOG["LOG_1010"] = 1010] = "LOG_1010";
        MARK_LOG[MARK_LOG["LOG_1011"] = 1011] = "LOG_1011";
        MARK_LOG[MARK_LOG["LOG_1012"] = 1012] = "LOG_1012";
        MARK_LOG[MARK_LOG["LOG_1013"] = 1013] = "LOG_1013";
        MARK_LOG[MARK_LOG["LOG_1014"] = 1014] = "LOG_1014";
        MARK_LOG[MARK_LOG["LOG_1015"] = 1015] = "LOG_1015";
        MARK_LOG[MARK_LOG["LOG_1016"] = 1016] = "LOG_1016";
        MARK_LOG[MARK_LOG["LOG_1017"] = 1017] = "LOG_1017";
        MARK_LOG[MARK_LOG["LOG_1018"] = 1018] = "LOG_1018";
        MARK_LOG[MARK_LOG["LOG_1019"] = 1019] = "LOG_1019";
        MARK_LOG[MARK_LOG["LOG_1020"] = 1020] = "LOG_1020";
        MARK_LOG[MARK_LOG["LOG_1021"] = 1021] = "LOG_1021";
        MARK_LOG[MARK_LOG["LOG_1022"] = 1022] = "LOG_1022";
        MARK_LOG[MARK_LOG["LOG_1023"] = 1023] = "LOG_1023";
        MARK_LOG[MARK_LOG["LOG_1024"] = 1024] = "LOG_1024";
        MARK_LOG[MARK_LOG["LOG_1025"] = 1025] = "LOG_1025";
        MARK_LOG[MARK_LOG["LOG_1026"] = 1026] = "LOG_1026";
        MARK_LOG[MARK_LOG["LOG_1027"] = 1027] = "LOG_1027";
        MARK_LOG[MARK_LOG["LOG_1028"] = 1028] = "LOG_1028";
        MARK_LOG[MARK_LOG["LOG_1029"] = 1029] = "LOG_1029";
        MARK_LOG[MARK_LOG["LOG_1030"] = 1030] = "LOG_1030";
    })(MARK_LOG || (MARK_LOG = {}));
    var PAY_CHANNEL$1;
    (function (PAY_CHANNEL) {
        PAY_CHANNEL["APPLE_PAY"] = "APPLE_PAY";
        PAY_CHANNEL["W_PAY"] = "1001";
        PAY_CHANNEL["A_PAY"] = "1000";
        PAY_CHANNEL["HW_PAY"] = "1008";
    })(PAY_CHANNEL$1 || (PAY_CHANNEL$1 = {}));
    var STAGE_Z_ORDER$1;
    (function (STAGE_Z_ORDER) {
        STAGE_Z_ORDER[STAGE_Z_ORDER["NORMAL"] = 0] = "NORMAL";
        STAGE_Z_ORDER[STAGE_Z_ORDER["BATTLE"] = 50] = "BATTLE";
        STAGE_Z_ORDER[STAGE_Z_ORDER["SHARE"] = 51] = "SHARE";
        STAGE_Z_ORDER[STAGE_Z_ORDER["BULLETIN"] = 100] = "BULLETIN";
        STAGE_Z_ORDER[STAGE_Z_ORDER["POPUP"] = 200] = "POPUP";
        STAGE_Z_ORDER[STAGE_Z_ORDER["TIPS"] = 400] = "TIPS";
        STAGE_Z_ORDER[STAGE_Z_ORDER["LOADING"] = 500] = "LOADING";
    })(STAGE_Z_ORDER$1 || (STAGE_Z_ORDER$1 = {}));
    var FBPixelStandardType;
    (function (FBPixelStandardType) {
        FBPixelStandardType["COMPLETE_REGISTRATION"] = "CompleteRegistration";
        FBPixelStandardType["PURCHASE_START"] = "InitiateCheckout";
        FBPixelStandardType["PURCHASE"] = "Purchase";
    })(FBPixelStandardType || (FBPixelStandardType = {}));
    var FBPixelParamName;
    (function (FBPixelParamName) {
        FBPixelParamName["CONT_CATEGORY"] = "content_category";
        FBPixelParamName["CONT_IDS"] = "content_ids";
        FBPixelParamName["CONT_NAME"] = "content_name";
        FBPixelParamName["CONT_TYPE"] = "content_type";
        FBPixelParamName["CONT_OBJS"] = "contents";
        FBPixelParamName["CURRENCY"] = "currency";
        FBPixelParamName["NUM_ITEMS"] = "num_items";
        FBPixelParamName["STATUS"] = "status";
        FBPixelParamName["VALUE"] = "value";
    })(FBPixelParamName || (FBPixelParamName = {}));
    var FBInAppEventType;
    (function (FBInAppEventType) {
        FBInAppEventType["COMPLETE_REGISTRATION"] = "fb_mobile_complete_registration";
    })(FBInAppEventType || (FBInAppEventType = {}));
    var FBInAppEventParamName;
    (function (FBInAppEventParamName) {
        FBInAppEventParamName["REGISTRATION_METHOD"] = "fb_registration_method";
    })(FBInAppEventParamName || (FBInAppEventParamName = {}));
    var FBCustomEventType;
    (function (FBCustomEventType) {
        FBCustomEventType["FIRST_OPEN"] = "tl_fb_first_open";
        FBCustomEventType["LOGIN"] = "tl_fb_login";
        FBCustomEventType["LOGIN_PAGE"] = "tl_fb_login_page";
        FBCustomEventType["REGIST_ALL"] = "tl_fb_regist_all";
        FBCustomEventType["REGIST_PHONE"] = "tl_fb_regist_phone";
        FBCustomEventType["REGIST_VISITOR"] = "tl_fb_regist_visitor";
        FBCustomEventType["REGIST_APPLE"] = "tl_fb_regist_apple";
        FBCustomEventType["VIPLV_0"] = "tl_fb_viplv_0";
        FBCustomEventType["VIPLV_1TO4"] = "tl_fb_viplv_1to4";
        FBCustomEventType["VIPLV_5TO8"] = "tl_fb_viplv_5to8";
        FBCustomEventType["VIPLV_9TO12"] = "tl_fb_viplv_9to12";
        FBCustomEventType["VIPLV_13TO16"] = "tl_fb_viplv_13to16";
        FBCustomEventType["INVITE_0"] = "tl_fb_invite_0";
        FBCustomEventType["INVITE_1TO5"] = "tl_fb_invite_1to5";
        FBCustomEventType["INVITE_6TO10"] = "tl_fb_invite_6to10";
        FBCustomEventType["INVITE_11TO20"] = "tl_fb_invite_11to20";
        FBCustomEventType["INVITE_20UP"] = "tl_fb_invite_20up";
        FBCustomEventType["PURCHASE_START"] = "tl_fb_purchase_start";
        FBCustomEventType["PURCHASE_FINISH"] = "tl_fb_purchase_finish";
        FBCustomEventType["PURCHASE_TIMES"] = "tl_fb_purchase_times";
        FBCustomEventType["PURCHASE_MEMBERS"] = "tl_fb_purchase_members";
        FBCustomEventType["FD_PURCHASE_TIMES"] = "tl_fb_firstday_purchase_count";
        FBCustomEventType["FD_PURCHASE_MEMBERS"] = "tl_fb_firstday_purchase_members";
    })(FBCustomEventType || (FBCustomEventType = {}));
    var AFInAppEventType;
    (function (AFInAppEventType) {
        AFInAppEventType["LOGIN"] = "af_login";
        AFInAppEventType["PURCHASE"] = "af_purchase";
        AFInAppEventType["COMPLETE_REGISTRATION"] = "af_complete_registration";
        AFInAppEventType["FIRST_OPEN"] = "af_first_open";
    })(AFInAppEventType || (AFInAppEventType = {}));
    var AFInAppEventParamName;
    (function (AFInAppEventParamName) {
        AFInAppEventParamName["CUSTOMER_USER_ID"] = "af_customer_user_id";
        AFInAppEventParamName["REVENUE"] = "af_revenue";
        AFInAppEventParamName["CURRENCY"] = "af_currency";
        AFInAppEventParamName["QUANTITY"] = "af_quantity";
        AFInAppEventParamName["CONTENT_ID"] = "af_content_id";
        AFInAppEventParamName["ORDER_ID"] = "af_order_id";
        AFInAppEventParamName["RECEIPT_ID"] = "af_receipt_id";
        AFInAppEventParamName["REGISTRATION_METHOD"] = "af_registration_method";
    })(AFInAppEventParamName || (AFInAppEventParamName = {}));
    var AFCustomEventType;
    (function (AFCustomEventType) {
        AFCustomEventType["LOGIN_PAGE"] = "tl_login_page";
        AFCustomEventType["REGIST_ALL"] = "tl_regist_all";
        AFCustomEventType["REGIST_PHONE"] = "tl_regist_phone";
        AFCustomEventType["REGIST_VISITOR"] = "tl_regist_visitor";
        AFCustomEventType["REGIST_APPLE"] = "tl_regist_apple";
        AFCustomEventType["ARRIVE_RESULT"] = "tl_arrive_result";
        AFCustomEventType["VIPLV_0"] = "tl_viplv_0";
        AFCustomEventType["VIPLV_1TO4"] = "tl_viplv_1to4";
        AFCustomEventType["VIPLV_5TO8"] = "tl_viplv_5to8";
        AFCustomEventType["VIPLV_9TO12"] = "tl_viplv_9to12";
        AFCustomEventType["VIPLV_13TO16"] = "tl_viplv_13to16";
        AFCustomEventType["PAY_0"] = "tl_pay_0";
        AFCustomEventType["PAY_50KTO200K"] = "tl_pay_50kto200k";
        AFCustomEventType["PAY_200KTO300K"] = "tl_pay_200kto300k";
        AFCustomEventType["PAY_300KTO700K"] = "tl_pay_300kto700k";
        AFCustomEventType["PAY_700KUP"] = "tl_pay_700kup";
        AFCustomEventType["INVITE_0"] = "tl_invite_0";
        AFCustomEventType["INVITE_1TO5"] = "tl_invite_1to5";
        AFCustomEventType["INVITE_6TO10"] = "tl_invite_6to10";
        AFCustomEventType["INVITE_11TO20"] = "tl_invite_11to20";
        AFCustomEventType["INVITE_20UP"] = "tl_invite_20up";
        AFCustomEventType["PURCHASE_FIRST"] = "tl_purchase_first";
        AFCustomEventType["PURCHASE_50K"] = "tl_purchase_50k";
        AFCustomEventType["PURCHASE_100K"] = "tl_purchase_100k";
        AFCustomEventType["PURCHASE_200K"] = "tl_purchase_200k";
        AFCustomEventType["PURCHASE_500K"] = "tl_purchase_500k";
        AFCustomEventType["PURCHASE_1M"] = "tl_purchase_1m";
        AFCustomEventType["PURCHASE_5M"] = "tl_purchase_5m";
        AFCustomEventType["PURCHASE_10M"] = "tl_purchase_10m";
        AFCustomEventType["PURCHASE_20M"] = "tl_purchase_20m";
        AFCustomEventType["PURCHASE_30M"] = "tl_purchase_30m";
        AFCustomEventType["PURCHASE_50M"] = "tl_purchase_50m";
        AFCustomEventType["GAME_TYPE_CASINO"] = "tl_gametype_casino";
        AFCustomEventType["GAME_TYPE_SOLT"] = "tl_gametype_slot";
        AFCustomEventType["GAME_TYPE_TIEN_LEN"] = "tl_gametype_tienlen";
        AFCustomEventType["GAME_TYPE_FISH"] = "tl_gametype_fish";
        AFCustomEventType["GOLD_0TO2K"] = "tl_gold_0to2k";
        AFCustomEventType["GOLD_2KTO5K"] = "tl_gold_2kto5k";
        AFCustomEventType["GOLD_5KTO50K"] = "tl_gold_5kto50k";
        AFCustomEventType["GOLD_50KTO1M"] = "tl_gold_50kto1m";
        AFCustomEventType["GOLD_1MTO10M"] = "tl_gold_1mto10m";
        AFCustomEventType["GOLD_10MTO50M"] = "tl_gold_10mto50m";
        AFCustomEventType["GOLD_50MTO100M"] = "tl_gold_50mto100m";
        AFCustomEventType["GOLD_100MUP"] = "tl_gold_100mup";
        AFCustomEventType["BET_5K"] = "af_bet5k";
        AFCustomEventType["BET_10K"] = "af_bet10k";
        AFCustomEventType["BET_20K"] = "af_bet20k";
        AFCustomEventType["BET_30K"] = "af_bet30k";
        AFCustomEventType["BET_40K"] = "af_bet40k";
        AFCustomEventType["BET_50K"] = "af_bet50k";
        AFCustomEventType["BET_100K"] = "af_bet100k";
        AFCustomEventType["BET_500K"] = "af_bet500k";
        AFCustomEventType["BET_1M"] = "af_bet1m";
        AFCustomEventType["CHARGE_20K"] = "af_purchase20k";
        AFCustomEventType["CHARGE_50K"] = "af_pruchase50k";
        AFCustomEventType["CHARGE_100K"] = "af_purchase100k";
        AFCustomEventType["CHARGE_200K"] = "af_purchase200k";
        AFCustomEventType["CHARGE_500K"] = "af_purchase500k";
        AFCustomEventType["CHARGE_1M"] = "af_purchase1m";
        AFCustomEventType["PURCHASE"] = "tl_purchase";
        AFCustomEventType["PURCHASE_TIMES"] = "tl_purchase_times";
        AFCustomEventType["PURCHASE_MEMBERS"] = "tl_purchase_members";
        AFCustomEventType["FD_PURCHASE_TIMES"] = "tl_firstday_purchase_count";
        AFCustomEventType["FD_PURCHASE_MEMBERS"] = "tl_firstday_purchase_members";
    })(AFCustomEventType || (AFCustomEventType = {}));
    var AFCustomEventParamName;
    (function (AFCustomEventParamName) {
    })(AFCustomEventParamName || (AFCustomEventParamName = {}));

    class PopupManager {
        static ShowWithQueue(prefabName, parameter, parent, zOrder) {
            if (!this.popQueue) {
                this.popQueue = [];
                this.Show(prefabName, parameter, parent, zOrder);
            }
            else {
                this.popQueue.push([prefabName, parameter, parent, zOrder]);
            }
        }
        static Show(prefabName, parameter, parent, zOrder) {
            if (parent == null) {
                parent = Laya.stage;
            }
            if (this.popupTable.get(prefabName) == null) {
                let self = this;
                let itemPrefab = new Laya.Prefab();
                itemPrefab.json = Laya.loader.getRes(prefabName);
                if (itemPrefab.json) {
                    if (zOrder == null) {
                        zOrder = STAGE_Z_ORDER.NORMAL;
                    }
                    let node = Laya.Pool.getItemByCreateFun(prefabName, itemPrefab.create, itemPrefab);
                    node.zOrder = zOrder;
                    this.popupTable.set(prefabName, node);
                    self._Show(prefabName, parameter, parent);
                    return;
                }
                else {
                    GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
                    Laya.loader.load(prefabName, Laya.Handler.create(this, function (pref) {
                        GlobalData.getInstance().loadingAni.Close();
                        if (pref) {
                            let pre = new Laya.Prefab();
                            pre.json = pref;
                            if (zOrder == null) {
                                zOrder = STAGE_Z_ORDER.NORMAL;
                            }
                            let node = Laya.Pool.getItemByCreateFun(prefabName, pre.create, pre);
                            node.zOrder = zOrder;
                            this.popupTable.set(prefabName, node);
                            self._Show(prefabName, parameter, parent);
                            return;
                        }
                        else {
                            Laya.loader.clearRes(prefabName);
                            EventManager.getInstance().emit(LoadManager.LOAD_NETERROR);
                            return;
                        }
                    }));
                }
            }
            this._Show(prefabName, parameter, parent);
        }
        static _Show(prefabName, parameter, parent) {
            let pref = this.popupTable.get(prefabName);
            if (pref != null) {
                pref.getComponents(Laya.Component).forEach((e) => e.Show && e.Show(parameter));
                parent.addChild(this.popupTable.get(prefabName));
                if (pref.Show) {
                    pref.Show(parameter);
                }
                else {
                    this.popupTable.get(prefabName).visible = true;
                }
            }
        }
        static Hide(prefabName) {
            if (this.popQueue) {
                let popObject = this.popQueue.shift();
                if (popObject) {
                    this.Show(popObject[0], popObject[1], popObject[2], popObject[3]);
                }
                if (this.popQueue.length == 0) {
                    this.popQueue = null;
                }
            }
            if (this.popupTable.get(prefabName) != null) {
                Laya.timer.clearAll(this.popupTable.get(prefabName));
                EventManager.getInstance().offAll(this.popupTable.get(prefabName));
                this.popupTable.get(prefabName).offAll();
                this.popupTable.get(prefabName).visible = false;
                this.popupTable.get(prefabName).destroy();
                this.popupTable.set(prefabName, null);
            }
        }
        static removeChildWith(prefabName) {
            if (this.popupTable.get(prefabName) != null) {
                (this.popupTable.get(prefabName).parent.removeChild(this.popupTable.get(prefabName)));
                this.popupTable.set(prefabName, null);
            }
        }
        static isHomeScene() {
            let l_isOnHomeScene = true;
            this.popupTable.forEach((value, index) => {
                if (index != PREFAB_LOBBY.RECEIVE_SUCCESS) {
                    if (value != null) {
                        if (value.visible == true) {
                            l_isOnHomeScene = false;
                        }
                    }
                }
            });
            return l_isOnHomeScene;
        }
        static isLayerExist(__prefName) {
            let l_value = this.popupTable.get(__prefName);
            if (l_value != null) {
                if (l_value.visible == true) {
                    return l_value;
                }
            }
            return false;
        }
        static Destory(prefabName) {
            if (this.popupTable.get(prefabName) != null) {
                this.popupTable.get(prefabName).destroy();
                this.popupTable.set(prefabName, null);
            }
            if (this.popQueue) {
                let popObject = this.popQueue.shift();
                if (popObject) {
                    this.Show(popObject[0], popObject[1], popObject[2], popObject[3]);
                }
                if (this.popQueue.length == 0) {
                    this.popQueue = null;
                }
            }
        }
        static clear(prefabName) {
            this.popupTable.set(prefabName, null);
        }
        static destroyAllLayers() {
            this.popupTable.forEach((value, key) => {
                if (value != null) {
                    Laya.timer.clearAll(value);
                    EventManager.getInstance().offAll(value);
                    value.offAll();
                    value.visible = false;
                    value.destroy();
                    this.popupTable.set(key, null);
                    Laya.Resource.destroyUnusedResources();
                }
            });
            this.popQueue = null;
        }
        static addSingleNode(parent, node) {
            let child = parent.getChildByName(node.name);
            if (child) {
                parent.replaceChild(node, child);
            }
            else {
                parent.addChild(node);
            }
        }
    }
    PopupManager.popupTable = new Map();
    PopupManager.popQueue = null;

    class BasicInfo {
        constructor() {
            this.nPid = null;
            this.nExp = 0;
            this.isMonthUser = false;
            this.nickname = '学徒';
            this.nGender = 0;
            this.nFrame = LobbyRes.NORMAL_FRAME;
            this.nFaceid = null;
            this.strAvatar = null;
            this.nBirthday = null;
            this.email = null;
            this.address = null;
            this.postcode = null;
            this.strIDname = null;
            this.strIDcard = null;
            this.phoneNum = null;
            this.bean = 0;
            this.gold = 0;
            this.pearl = 0;
            this.diamond = 0;
            this.safeBox = 0;
        }
    }
    class RecordData {
        constructor() {
            this.totalRound = 0;
            this.winRate = 0;
            this.maxFan = 0;
            this.maxPtn = '';
            this.fanHandCards = new Array();
            this.fanHuCard = null;
            this.maxHuFan = 0;
            this.huHandCards = new Array();
            this.huHuCard = null;
        }
    }
    class History {
        constructor() {
            this.mode = 0;
            this.gameName = null;
            this.time = null;
            this.isWin = false;
            this.isRank = false;
            this.money = 0;
            this.score = 0;
            this.isGold = true;
            this.rule = null;
            this.tableId = null;
        }
    }
    class PlayerResult {
        constructor() {
            this.name = null;
            this.image = null;
            this.frame = null;
            this.isBankruptcy = false;
            this.changedScore = 0;
            this.pos = null;
            this.isSelf = false;
            this.exp = 0;
        }
    }
    class PlayerHistory {
        constructor() {
            this.content = null;
            this.multiple = 0;
            this.changedScore = 0;
            this.usedItemIcon = '';
            this.isPercent = false;
        }
    }
    class ArrangedResult {
        constructor() {
            this.isWin = false;
            this.players = new Array();
            this.historys = new Array();
            this.level = "";
            this.levelExp = 1000;
            this.levelMaxExp = 1000;
            this.isDouble = false;
            this.isInsurance = false;
            this.oldExp = 0;
            this.oldLevel = "";
            this.newLevel = "";
            this.rankHistorys = new Array();
        }
    }
    class TingCardInfo {
        constructor() {
            this.nFan = 0;
            this.card = null;
            this.num = 0;
        }
    }
    class HuTingData {
        constructor() {
            this.maxFan = 0;
            this.huNum = 0;
            this.cardArr = new Array();
            this.totalFan = 0;
            this.totalIncome = 0;
            this.isPreview = false;
        }
    }
    class UseCardCountData {
        constructor() {
            this.id = 0;
            this.count = 0;
            this.max = 0;
        }
    }
    class ChatVoice {
        constructor() {
            this.id = 0;
            this.text = "";
            this.sound = "";
            this.isFree = true;
            this.isMonthCard = false;
        }
    }
    class EmojiData {
        constructor() {
            this.id = 0;
            this.skin = "";
            this.sound = "";
            this.isFree = true;
            this.isMonthCard = false;
            this.interactiveId = 0;
            this.tenInteractiveId = 0;
            this.shopId = 0;
            this.tenShopId = 0;
            this.spine = "";
            this.isTen = false;
        }
    }
    class PlayerMatchData {
        constructor() {
            this.totalWins = 0;
            this.totalNum = 0;
        }
    }
    class PlayerLevelData {
    }
    class PlayerScoreChange {
    }
    class MatchPlayerMonthCard {
    }
    class MatchZhanData {
    }
    class VipData {
        constructor() {
            this.describeList = [];
        }
    }
    class PlayerVipData {
    }
    class PlayerAccessoryData {
        constructor() {
            this.accessoryDataList = [];
        }
    }
    class AccessoryData {
        constructor() {
            this.arrOwn = [];
        }
    }
    class AccessoryJsonData {
        constructor() {
            this.tabList = [];
        }
    }
    class AccessoryTabData {
        constructor() {
            this.dataList = [];
        }
    }
    class AccessoryLevelInfo {
    }
    class LeagueLevelData {
    }
    class LeagueRankRewardData {
    }
    class LeagueTypeData {
    }
    class RankTitleData {
    }
    class RankScoreChange {
    }
    class RankMatchinfoData {
    }
    class GameRecordFrameData {
    }
    class GameRecordFontData {
    }
    class GameRecordStepData {
        constructor() {
            this.cardNum = 0;
            this.wallMainNumber = 0;
            this.wallTailNumber = 0;
            this.relativechair = 0;
            this.playerMoneyList = [];
            this.playerHandCardList = [[], [], [], []];
            this.playerFontCardList = [[], [], [], []];
            this.playerRiverCardList = [[], [], [], []];
            this.playerHuCardList = [[], [], [], []];
            this.playerLoseList = [];
            this.playerMingCard = [];
            this.playerHuTips = [];
        }
    }
    class HuCardRankGameData {
        constructor() {
            this.list = [];
        }
    }
    class HuCardRankData {
        constructor() {
            this.nFirstPID = 0;
            this.nMostPID = 0;
            this.nMostTimes = 0;
        }
    }

    class PREFAB_GAME {
    }
    PREFAB_GAME.CARD_L = 'prefab/gameScene/gameLayers/Card_L.json';
    PREFAB_GAME.CARD_S = 'prefab/gameScene/gameLayers/Card_S.json';
    PREFAB_GAME.CARD_B = 'prefab/gameScene/gameLayers/Card_B.json';
    PREFAB_GAME.CARD_OUTLINE = 'prefab/gameScene/gameLayers/OutLineAnim.json';
    PREFAB_GAME.COIN_FLY = 'prefab/gameScene/gameLayers/CoinFly.json';
    PREFAB_GAME.GAME_DISSOLVE = 'prefab/gameScene/GameDissolve.json';
    PREFAB_GAME.GAME_CHAT = 'prefab/gameScene/chat.json';
    PREFAB_GAME.GAME_OVER = 'prefab/gameScene/GameOver.json';
    class GameRes {
    }
    GameRes.CONFIGS = 'json/configs.json';
    GameRes.GAME_FONT = "font/SourceHanSansCN-Medium.ttf";
    GameRes.MJGAME_SCENE = "views/MJGame.scene";
    GameRes.GAME_LOGIC = "prefab/gameScene/gameLayers/GameLogicLayer.json";
    GameRes.ATLAS_CARD = "res/atlas/2d/ui/gameLayers/gameCard.atlas";
    GameRes.ATLAS_UI = "res/atlas/2d/ui/gameLayers/gameUI.atlas";
    GameRes.ATLAS_RESULT = "res/atlas/2d/ui/gameLayers/gameResult.atlas";
    GameRes.ATLAS_GROUP = "res/atlas/2d/ui/gameLayers/gameGroup.atlas";
    GameRes.DEFAULT_MAN = '2d/ui/gamebase/head_1.png';
    GameRes.DEFAULT_WOMAN = '2d/ui/gamebase/head_2.png';
    GameRes.ATLAS_GAMEBASE_UI = "res/atlas/2d/ui/gamebase.atlas";
    GameRes.ATLAS_SECOND_UI = "res/atlas/2d/ui/secondary.atlas";
    GameRes.ATLAS_WIN = "res/atlas/2d/animation/huosheng.atlas";
    GameRes.ATLAS_OUTLINE = "res/atlas/2d/animation/paixing.atlas";
    GameRes.ATLAS_BOMB = "res/atlas/2d/animation/bomb.atlas";
    GameRes.ATLAS_ALARM = "res/atlas/2d/animation/alarm.atlas";
    GameRes.ATLAS_BAOZHA = "res/atlas/2d/animation/baozha.atlas";
    GameRes.ATLAS_GOLD = "res/atlas/2d/animation/goldTurn.atlas";
    GameRes.GAMECHAT = "table/chat.json";
    GameRes.FINISHFANNAME = "font/finishFanName.png";
    GameRes.GAMERESARR = [
        GameRes.ATLAS_GAMEBASE_UI,
        GameRes.GAME_LOGIC,
        GameRes.ATLAS_CARD,
        GameRes.ATLAS_UI,
        GameRes.ATLAS_RESULT,
        GameRes.ATLAS_GROUP,
        GameRes.ATLAS_WIN,
        GameRes.ATLAS_OUTLINE,
        GameRes.ATLAS_BOMB,
        GameRes.ATLAS_ALARM,
        GameRes.ATLAS_BAOZHA,
        GameRes.ATLAS_GOLD,
        PREFAB_GAME.CARD_L,
        PREFAB_GAME.CARD_S,
        PREFAB_GAME.CARD_B,
        PREFAB_GAME.GAME_DISSOLVE,
        PREFAB_GAME.CARD_OUTLINE,
        PREFAB_GAME.COIN_FLY,
        PREFAB_GAME.GAME_OVER,
        "2d/accessory/table/bg_youxibeijing.jpg",
        "2d/ui/gameLayers/gameUI/bg_zhongjiandi.png",
        "2d/ui/gameLayers/gameOver/bg_jiesuan_di.png",
        "2d/ui/gameLayers/gameOver/wz_paijujiesuan.png",
    ];

    var n;
    function aa(a) { var b = 0; return function () { return b < a.length ? { done: !1, value: a[b++] } : { done: !0 }; }; }
    var ba = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) { a != Array.prototype && a != Object.prototype && (a[b] = c.value); };
    function ca(a) { a = ["object" == typeof window && window, "object" == typeof self && self, "object" == typeof commonjsGlobal && commonjsGlobal, a]; for (var b = 0; b < a.length; ++b) {
        var c = a[b];
        if (c && c.Math == Math)
            return c;
    } throw Error("Cannot find global object"); }
    var r = ca(commonjsGlobal);
    function t() { t = function () { }; r.Symbol || (r.Symbol = da); }
    function ea(a, b) { this.a = a; ba(this, "description", { configurable: !0, writable: !0, value: b }); }
    ea.prototype.toString = function () { return this.a; };
    var da = function () { function a(c) { if (this instanceof a)
        throw new TypeError("Symbol is not a constructor"); return new ea("jscomp_symbol_" + (c || "") + "_" + b++, c); } var b = 0; return a; }();
    function u() { t(); var a = r.Symbol.iterator; a || (a = r.Symbol.iterator = r.Symbol("Symbol.iterator")); "function" != typeof Array.prototype[a] && ba(Array.prototype, a, { configurable: !0, writable: !0, value: function () { return fa(aa(this)); } }); u = function () { }; }
    function fa(a) { u(); a = { next: a }; a[r.Symbol.iterator] = function () { return this; }; return a; }
    function ha(a) { var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator]; return b ? b.call(a) : { next: aa(a) }; }
    var ia = "function" == typeof Object.create ? Object.create : function (a) { function b() { } b.prototype = a; return new b; }, ja;
    if ("function" == typeof Object.setPrototypeOf)
        ja = Object.setPrototypeOf;
    else {
        var ka;
        a: {
            var la = { V: !0 }, ma = {};
            try {
                ma.__proto__ = la;
                ka = ma.V;
                break a;
            }
            catch (a) { }
            ka = !1;
        }
        ja = ka ? function (a, b) { a.__proto__ = b; if (a.__proto__ !== b)
            throw new TypeError(a + " is not extensible"); return a; } : null;
    }
    var na = ja;
    function oa(a, b) { a.prototype = ia(b.prototype); a.prototype.constructor = a; if (na)
        na(a, b);
    else
        for (var c in b)
            if ("prototype" != c)
                if (Object.defineProperties) {
                    var d = Object.getOwnPropertyDescriptor(b, c);
                    d && Object.defineProperty(a, c, d);
                }
                else
                    a[c] = b[c]; a.O = b.prototype; }
    function pa(a, b) { u(); a instanceof String && (a += ""); var c = 0, d = { next: function () { if (c < a.length) {
            var f = c++;
            return { value: b(f, a[f]), done: !1 };
        } d.next = function () { return { done: !0, value: void 0 }; }; return d.next(); } }; d[Symbol.iterator] = function () { return d; }; return d; }
    function v(a, b) { if (b) {
        var c = r;
        a = a.split(".");
        for (var d = 0; d < a.length - 1; d++) {
            var f = a[d];
            f in c || (c[f] = {});
            c = c[f];
        }
        a = a[a.length - 1];
        d = c[a];
        b = b(d);
        b != d && null != b && ba(c, a, { configurable: !0, writable: !0, value: b });
    } }
    v("Array.prototype.keys", function (a) { return a ? a : function () { return pa(this, function (b) { return b; }); }; });
    v("Array.prototype.find", function (a) { return a ? a : function (b, c) { a: {
        var d = this;
        d instanceof String && (d = String(d));
        for (var f = d.length, g = 0; g < f; g++) {
            var e = d[g];
            if (b.call(c, e, g, d)) {
                b = e;
                break a;
            }
        }
        b = void 0;
    } return b; }; });
    v("Object.is", function (a) { return a ? a : function (b, c) { return b === c ? 0 !== b || 1 / b === 1 / c : b !== b && c !== c; }; });
    v("Array.prototype.includes", function (a) { return a ? a : function (b, c) { var d = this; d instanceof String && (d = String(d)); var f = d.length; c = c || 0; for (0 > c && (c = Math.max(c + f, 0)); c < f; c++) {
        var g = d[c];
        if (g === b || Object.is(g, b))
            return !0;
    } return !1; }; });
    v("Promise", function (a) {
        function b(e) { this.b = 0; this.c = void 0; this.a = []; var h = this.f(); try {
            e(h.resolve, h.reject);
        }
        catch (k) {
            h.reject(k);
        } }
        function c() { this.a = null; }
        function d(e) { return e instanceof b ? e : new b(function (h) { h(e); }); }
        if (a)
            return a;
        c.prototype.b = function (e) { if (null == this.a) {
            this.a = [];
            var h = this;
            this.c(function () { h.g(); });
        } this.a.push(e); };
        var f = r.setTimeout;
        c.prototype.c = function (e) { f(e, 0); };
        c.prototype.g = function () {
            for (; this.a && this.a.length;) {
                var e = this.a;
                this.a = [];
                for (var h = 0; h < e.length; ++h) {
                    var k = e[h];
                    e[h] = null;
                    try {
                        k();
                    }
                    catch (l) {
                        this.f(l);
                    }
                }
            }
            this.a = null;
        };
        c.prototype.f = function (e) { this.c(function () { throw e; }); };
        b.prototype.f = function () { function e(l) { return function (m) { k || (k = !0, l.call(h, m)); }; } var h = this, k = !1; return { resolve: e(this.s), reject: e(this.g) }; };
        b.prototype.s = function (e) { if (e === this)
            this.g(new TypeError("A Promise cannot resolve to itself"));
        else if (e instanceof b)
            this.v(e);
        else {
            a: switch (typeof e) {
                case "object":
                    var h = null != e;
                    break a;
                case "function":
                    h = !0;
                    break a;
                default: h = !1;
            }
            h ? this.m(e) : this.h(e);
        } };
        b.prototype.m = function (e) { var h = void 0; try {
            h = e.then;
        }
        catch (k) {
            this.g(k);
            return;
        } "function" == typeof h ? this.w(h, e) : this.h(e); };
        b.prototype.g = function (e) { this.i(2, e); };
        b.prototype.h = function (e) { this.i(1, e); };
        b.prototype.i = function (e, h) { if (0 != this.b)
            throw Error("Cannot settle(" + e + ", " + h + "): Promise already settled in state" + this.b); this.b = e; this.c = h; this.l(); };
        b.prototype.l = function () { if (null != this.a) {
            for (var e = 0; e < this.a.length; ++e)
                g.b(this.a[e]);
            this.a = null;
        } };
        var g = new c;
        b.prototype.v = function (e) {
            var h = this.f();
            e.F(h.resolve, h.reject);
        };
        b.prototype.w = function (e, h) { var k = this.f(); try {
            e.call(h, k.resolve, k.reject);
        }
        catch (l) {
            k.reject(l);
        } };
        b.prototype.then = function (e, h) { function k(q, w) { return "function" == typeof q ? function (A) { try {
            l(q(A));
        }
        catch (L) {
            m(L);
        } } : w; } var l, m, p = new b(function (q, w) { l = q; m = w; }); this.F(k(e, l), k(h, m)); return p; };
        b.prototype.catch = function (e) { return this.then(void 0, e); };
        b.prototype.F = function (e, h) {
            function k() {
                switch (l.b) {
                    case 1:
                        e(l.c);
                        break;
                    case 2:
                        h(l.c);
                        break;
                    default: throw Error("Unexpected state: " +
                        l.b);
                }
            }
            var l = this;
            null == this.a ? g.b(k) : this.a.push(k);
        };
        b.resolve = d;
        b.reject = function (e) { return new b(function (h, k) { k(e); }); };
        b.race = function (e) { return new b(function (h, k) { for (var l = ha(e), m = l.next(); !m.done; m = l.next())
            d(m.value).F(h, k); }); };
        b.all = function (e) { var h = ha(e), k = h.next(); return k.done ? d([]) : new b(function (l, m) { function p(A) { return function (L) { q[A] = L; w--; 0 == w && l(q); }; } var q = [], w = 0; do
            q.push(void 0), w++, d(k.value).F(p(q.length - 1), m), k = h.next();
        while (!k.done); }); };
        return b;
    });
    var qa = qa || {}, x = commonjsGlobal || self;
    function y(a, b) { a = a.split("."); b = b || x; for (var c = 0; c < a.length; c++)
        if (b = b[a[c]], null == b)
            return null; return b; }
    function ra() { }
    function sa(a) { var b = typeof a; return "object" == b && null != a || "function" == b; }
    var ta = "closure_uid_" + (1E9 * Math.random() >>> 0), ua = 0;
    function va(a, b, c) { return a.call.apply(a.bind, arguments); }
    function wa(a, b, c) { if (!a)
        throw Error(); if (2 < arguments.length) {
        var d = Array.prototype.slice.call(arguments, 2);
        return function () { var f = Array.prototype.slice.call(arguments); Array.prototype.unshift.apply(f, d); return a.apply(b, f); };
    } return function () { return a.apply(b, arguments); }; }
    function z(a, b, c) { Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? z = va : z = wa; return z.apply(null, arguments); }
    function B(a, b) { function c() { } c.prototype = b.prototype; a.O = b.prototype; a.prototype = new c; a.prototype.constructor = a; }
    ;
    function xa(a) { this.a = a || {}; }
    xa.prototype.get = function (a) { return this.a[a]; };
    xa.prototype.G = function () { return Object.keys(this.a); };
    function C(a, b, c, d) { this.f = a; this.c = b; this.b = c; this.a = d; }
    C.prototype.getRequestMessage = function () { return this.f; };
    C.prototype.getMethodDescriptor = function () { return this.c; };
    C.prototype.getMetadata = function () { return this.b; };
    C.prototype.getCallOptions = function () { return this.a; };
    function D(a, b, c, d) { c = void 0 === c ? {} : c; this.c = a; this.a = c; this.b = b; this.f = void 0 === d ? null : d; }
    D.prototype.getResponseMessage = function () { return this.c; };
    D.prototype.getMetadata = function () { return this.a; };
    D.prototype.getMethodDescriptor = function () { return this.b; };
    D.prototype.getStatus = function () { return this.f; };
    function ya(a, b, c, d, f, g) { this.name = a; this.a = f; this.b = g; }
    function za(a, b, c) { c = void 0 === c ? {} : c; var d = void 0 === d ? new xa : d; return new C(b, a, c, d); }
    ya.prototype.getName = function () { return this.name; };
    ya.prototype.getName = ya.prototype.getName;
    function Aa(a) { switch (a) {
        case 200: return 0;
        case 400: return 3;
        case 401: return 16;
        case 403: return 7;
        case 404: return 5;
        case 409: return 10;
        case 412: return 9;
        case 429: return 8;
        case 499: return 1;
        case 500: return 2;
        case 501: return 12;
        case 503: return 14;
        case 504: return 4;
        default: return 2;
    } }
    function Ba(a) {
        switch (a) {
            case 0: return "OK";
            case 1: return "CANCELLED";
            case 2: return "UNKNOWN";
            case 3: return "INVALID_ARGUMENT";
            case 4: return "DEADLINE_EXCEEDED";
            case 5: return "NOT_FOUND";
            case 6: return "ALREADY_EXISTS";
            case 7: return "PERMISSION_DENIED";
            case 16: return "UNAUTHENTICATED";
            case 8: return "RESOURCE_EXHAUSTED";
            case 9: return "FAILED_PRECONDITION";
            case 10: return "ABORTED";
            case 11: return "OUT_OF_RANGE";
            case 12: return "UNIMPLEMENTED";
            case 13: return "INTERNAL";
            case 14: return "UNAVAILABLE";
            case 15: return "DATA_LOSS";
            default: return "";
        }
    }
    ;
    function E(a, b, c) { c = void 0 === c ? {} : c; b = Error.call(this, b); this.message = b.message; "stack" in b && (this.stack = b.stack); this.code = a; this.metadata = c; }
    oa(E, Error);
    E.prototype.toString = function () { var a = "RpcError(" + (Ba(this.code) || String(this.code)) + ")"; this.message && (a += ": " + this.message); return a; };
    E.prototype.name = "RpcError";
    function Ca(a) { this.a = a; }
    Ca.prototype.on = function (a, b) { return "data" == a || "error" == a ? this : this.a.on(a, b); };
    Ca.prototype.removeListener = function (a, b) { return this.a.removeListener(a, b); };
    Ca.prototype.cancel = function () { this.a.cancel(); };
    function Da(a) { switch (a) {
        case 0: return "No Error";
        case 1: return "Access denied to content document";
        case 2: return "File not found";
        case 3: return "Firefox silently errored";
        case 4: return "Application custom error";
        case 5: return "An exception occurred";
        case 6: return "Http response at 400 or 500 level";
        case 7: return "Request was aborted";
        case 8: return "Request timed out";
        case 9: return "The resource is not available offline";
        default: return "Unrecognized error code";
    } }
    ;
    function F(a) { if (Error.captureStackTrace)
        Error.captureStackTrace(this, F);
    else {
        var b = Error().stack;
        b && (this.stack = b);
    } a && (this.message = String(a)); }
    B(F, Error);
    F.prototype.name = "CustomError";
    function Ea(a, b) { a = a.split("%s"); for (var c = "", d = a.length - 1, f = 0; f < d; f++)
        c += a[f] + (f < b.length ? b[f] : "%s"); F.call(this, c + a[d]); }
    B(Ea, F);
    Ea.prototype.name = "AssertionError";
    function Fa(a, b) { throw new Ea("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1)); }
    ;
    function Ga() { this.l = null; this.i = []; this.m = 0; this.b = Ha; this.f = this.a = this.h = 0; this.c = null; this.g = 0; }
    function Ia(a, b) {
        function c(l) { l == Ja ? e.h = l : l == G ? e.h = l : Ka(e, h, k, "invalid frame byte"); e.b = La; e.a = 0; e.f = 0; }
        function d(l) { e.f++; e.a = (e.a << 8) + l; 4 == e.f && (e.b = Ma, e.g = 0, "undefined" !== typeof Uint8Array ? e.c = new Uint8Array(e.a) : e.c = Array(e.a), 0 == e.a && g()); }
        function f(l) { e.c[e.g++] = l; e.g == e.a && g(); }
        function g() { var l = {}; l[e.h] = e.c; e.i.push(l); e.b = Ha; }
        var e = a, h, k = 0;
        for (b instanceof Uint8Array || b instanceof Array ? h = b : h = new Uint8Array(b); k < h.length;) {
            switch (e.b) {
                case Na:
                    Ka(e, h, k, "stream already broken");
                    break;
                case Ha:
                    c(h[k]);
                    break;
                case La:
                    d(h[k]);
                    break;
                case Ma:
                    f(h[k]);
                    break;
                default: throw Error("unexpected parser state: " + e.b);
            }
            e.m++;
            k++;
        }
        a = e.i;
        e.i = [];
        return 0 < a.length ? a : null;
    }
    var Ha = 0, La = 1, Ma = 2, Na = 3, Ja = 0, G = 128;
    function Ka(a, b, c, d) { a.b = Na; a.l = "The stream is broken @" + a.m + "/" + c + ". Error: " + d + ". With input:\n" + b; throw Error(a.l); }
    ;
    var Oa = Array.prototype.indexOf ? function (a, b) { return Array.prototype.indexOf.call(a, b, void 0); } : function (a, b) { if ("string" === typeof a)
        return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0); for (var c = 0; c < a.length; c++)
        if (c in a && a[c] === b)
            return c; return -1; };
    var Pa = String.prototype.trim ? function (a) { return a.trim(); } : function (a) { return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]; };
    function H(a, b) { return -1 != a.indexOf(b); }
    function Qa(a, b) { return a < b ? -1 : a > b ? 1 : 0; }
    ;
    var I;
    a: {
        var Ra = x.navigator;
        if (Ra) {
            var Sa = Ra.userAgent;
            if (Sa) {
                I = Sa;
                break a;
            }
        }
        I = "";
    }
    ;
    function Ta(a, b) { for (var c in a)
        b.call(void 0, a[c], c, a); }
    function Ua(a, b) { var c = {}, d; for (d in a)
        c[d] = b.call(void 0, a[d], d, a); return c; }
    var Va = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
    function Wa(a, b) { for (var c, d, f = 1; f < arguments.length; f++) {
        d = arguments[f];
        for (c in d)
            a[c] = d[c];
        for (var g = 0; g < Va.length; g++)
            c = Va[g], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    } }
    ;
    function Xa(a) { var b = 1; a = a.split(":"); for (var c = []; 0 < b && a.length;)
        c.push(a.shift()), b--; a.length && c.push(a.join(":")); return c; }
    ;
    function Ya(a) { Ya[" "](a); return a; }
    Ya[" "] = ra;
    function Za(a) { var b = $a; return Object.prototype.hasOwnProperty.call(b, 9) ? b[9] : b[9] = a(9); }
    ;
    var ab = H(I, "Opera"), bb = H(I, "Trident") || H(I, "MSIE"), cb = H(I, "Edge"), db = H(I, "Gecko") && !(H(I.toLowerCase(), "webkit") && !H(I, "Edge")) && !(H(I, "Trident") || H(I, "MSIE")) && !H(I, "Edge"), eb = H(I.toLowerCase(), "webkit") && !H(I, "Edge"), fb;
    a: {
        var gb = "", hb = function () { var a = I; if (db)
            return /rv:([^\);]+)(\)|;)/.exec(a); if (cb)
            return /Edge\/([\d\.]+)/.exec(a); if (bb)
            return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a); if (eb)
            return /WebKit\/(\S+)/.exec(a); if (ab)
            return /(?:Version)[ \/]?(\S+)/.exec(a); }();
        hb && (gb = hb ? hb[1] : "");
        if (bb) {
            var ib, jb = x.document;
            ib = jb ? jb.documentMode : void 0;
            if (null != ib && ib > parseFloat(gb)) {
                fb = String(ib);
                break a;
            }
        }
        fb = gb;
    }
    var $a = {};
    function kb() { return Za(function () { for (var a = 0, b = Pa(String(fb)).split("."), c = Pa("9").split("."), d = Math.max(b.length, c.length), f = 0; 0 == a && f < d; f++) {
        var g = b[f] || "", e = c[f] || "";
        do {
            g = /(\d*)(\D*)(.*)/.exec(g) || ["", "", "", ""];
            e = /(\d*)(\D*)(.*)/.exec(e) || ["", "", "", ""];
            if (0 == g[0].length && 0 == e[0].length)
                break;
            a = Qa(0 == g[1].length ? 0 : parseInt(g[1], 10), 0 == e[1].length ? 0 : parseInt(e[1], 10)) || Qa(0 == g[2].length, 0 == e[2].length) || Qa(g[2], e[2]);
            g = g[3];
            e = e[3];
        } while (0 == a);
    } return 0 <= a; }); }
    ;
    function lb() { 0 != mb && (Object.prototype.hasOwnProperty.call(this, ta) && this[ta] || (this[ta] = ++ua)); this.K = this.K; }
    var mb = 0;
    lb.prototype.K = !1;
    var nb = Object.freeze || function (a) { return a; };
    function J(a, b) { this.type = a; this.a = this.target = b; this.defaultPrevented = !1; }
    J.prototype.b = function () { this.defaultPrevented = !0; };
    var ob = function () { if (!x.addEventListener || !Object.defineProperty)
        return !1; var a = !1, b = Object.defineProperty({}, "passive", { get: function () { a = !0; } }); try {
        x.addEventListener("test", ra, b), x.removeEventListener("test", ra, b);
    }
    catch (c) { } return a; }();
    function K(a, b) {
        J.call(this, a ? a.type : "");
        this.relatedTarget = this.a = this.target = null;
        this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;
        this.key = "";
        this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
        this.pointerId = 0;
        this.pointerType = "";
        this.c = null;
        if (a) {
            var c = this.type = a.type, d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;
            this.target = a.target || a.srcElement;
            this.a = b;
            if (b = a.relatedTarget) {
                if (db) {
                    a: {
                        try {
                            Ya(b.nodeName);
                            var f = !0;
                            break a;
                        }
                        catch (g) { }
                        f = !1;
                    }
                    f || (b = null);
                }
            }
            else
                "mouseover" ==
                    c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);
            this.relatedTarget = b;
            d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);
            this.button = a.button;
            this.key = a.key || "";
            this.ctrlKey = a.ctrlKey;
            this.altKey = a.altKey;
            this.shiftKey = a.shiftKey;
            this.metaKey =
                a.metaKey;
            this.pointerId = a.pointerId || 0;
            this.pointerType = "string" === typeof a.pointerType ? a.pointerType : pb[a.pointerType] || "";
            this.c = a;
            a.defaultPrevented && K.O.b.call(this);
        }
    }
    B(K, J);
    var pb = nb({ 2: "touch", 3: "pen", 4: "mouse" });
    K.prototype.b = function () { K.O.b.call(this); var a = this.c; a.preventDefault ? a.preventDefault() : a.returnValue = !1; };
    var M = "closure_listenable_" + (1E6 * Math.random() | 0);
    var qb = 0;
    function rb(a, b, c, d, f) { this.listener = a; this.proxy = null; this.src = b; this.type = c; this.capture = !!d; this.H = f; this.key = ++qb; this.A = this.D = !1; }
    function sb(a) { a.A = !0; a.listener = null; a.proxy = null; a.src = null; a.H = null; }
    ;
    function tb(a) { this.src = a; this.a = {}; this.b = 0; }
    tb.prototype.add = function (a, b, c, d, f) { var g = a.toString(); a = this.a[g]; a || (a = this.a[g] = [], this.b++); var e = ub(a, b, d, f); -1 < e ? (b = a[e], c || (b.D = !1)) : (b = new rb(b, this.src, g, !!d, f), b.D = c, a.push(b)); return b; };
    tb.prototype.remove = function (a, b, c, d) { a = a.toString(); if (!(a in this.a))
        return !1; var f = this.a[a]; b = ub(f, b, c, d); return -1 < b ? (sb(f[b]), Array.prototype.splice.call(f, b, 1), 0 == f.length && (delete this.a[a], this.b--), !0) : !1; };
    function vb(a, b) { var c = b.type; if (c in a.a) {
        var d = a.a[c], f = Oa(d, b), g;
        (g = 0 <= f) && Array.prototype.splice.call(d, f, 1);
        g && (sb(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
    } }
    function ub(a, b, c, d) { for (var f = 0; f < a.length; ++f) {
        var g = a[f];
        if (!g.A && g.listener == b && g.capture == !!c && g.H == d)
            return f;
    } return -1; }
    ;
    var wb = "closure_lm_" + (1E6 * Math.random() | 0), xb = {}, yb = 0;
    function zb(a, b, c, d, f) { if (d && d.once)
        Ab(a, b, c, d, f);
    else if (Array.isArray(b))
        for (var g = 0; g < b.length; g++)
            zb(a, b[g], c, d, f);
    else
        c = Bb(c), a && a[M] ? a.f.add(String(b), c, !1, sa(d) ? !!d.capture : !!d, f) : Cb(a, b, c, !1, d, f); }
    function Cb(a, b, c, d, f, g) { if (!b)
        throw Error("Invalid event type"); var e = sa(f) ? !!f.capture : !!f, h = Db(a); h || (a[wb] = h = new tb(a)); c = h.add(b, c, d, e, g); if (!c.proxy) {
        d = Eb();
        c.proxy = d;
        d.src = a;
        d.listener = c;
        if (a.addEventListener)
            ob || (f = e), void 0 === f && (f = !1), a.addEventListener(b.toString(), d, f);
        else if (a.attachEvent)
            a.attachEvent(Fb(b.toString()), d);
        else if (a.addListener && a.removeListener)
            a.addListener(d);
        else
            throw Error("addEventListener and attachEvent are unavailable.");
        yb++;
    } }
    function Eb() { function a(c) { return b.call(a.src, a.listener, c); } var b = Gb; return a; }
    function Ab(a, b, c, d, f) { if (Array.isArray(b))
        for (var g = 0; g < b.length; g++)
            Ab(a, b[g], c, d, f);
    else
        c = Bb(c), a && a[M] ? a.f.add(String(b), c, !0, sa(d) ? !!d.capture : !!d, f) : Cb(a, b, c, !0, d, f); }
    function Hb(a, b, c, d, f) { if (Array.isArray(b))
        for (var g = 0; g < b.length; g++)
            Hb(a, b[g], c, d, f);
    else
        (d = sa(d) ? !!d.capture : !!d, c = Bb(c), a && a[M]) ? a.f.remove(String(b), c, d, f) : a && (a = Db(a)) && (b = a.a[b.toString()], a = -1, b && (a = ub(b, c, d, f)), (c = -1 < a ? b[a] : null) && Ib(c)); }
    function Ib(a) { if ("number" !== typeof a && a && !a.A) {
        var b = a.src;
        if (b && b[M])
            vb(b.f, a);
        else {
            var c = a.type, d = a.proxy;
            b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(Fb(c), d) : b.addListener && b.removeListener && b.removeListener(d);
            yb--;
            (c = Db(b)) ? (vb(c, a), 0 == c.b && (c.src = null, b[wb] = null)) : sb(a);
        }
    } }
    function Fb(a) { return a in xb ? xb[a] : xb[a] = "on" + a; }
    function Gb(a, b) { if (a.A)
        a = !0;
    else {
        b = new K(b, this);
        var c = a.listener, d = a.H || a.src;
        a.D && Ib(a);
        a = c.call(d, b);
    } return a; }
    function Db(a) { a = a[wb]; return a instanceof tb ? a : null; }
    var Jb = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);
    function Bb(a) { if ("function" === typeof a)
        return a; a[Jb] || (a[Jb] = function (b) { return a.handleEvent(b); }); return a[Jb]; }
    ;
    function N() { lb.call(this); this.f = new tb(this); this.U = this; }
    B(N, lb);
    N.prototype[M] = !0;
    N.prototype.addEventListener = function (a, b, c, d) { zb(this, a, b, c, d); };
    N.prototype.removeEventListener = function (a, b, c, d) { Hb(this, a, b, c, d); };
    function O(a, b) { a = a.U; var c = b.type || b; if ("string" === typeof b)
        b = new J(b, a);
    else if (b instanceof J)
        b.target = b.target || a;
    else {
        var d = b;
        b = new J(c, a);
        Wa(b, d);
    } a = b.a = a; Kb(a, c, !0, b); Kb(a, c, !1, b); }
    function Kb(a, b, c, d) { if (b = a.f.a[String(b)]) {
        b = b.concat();
        for (var f = !0, g = 0; g < b.length; ++g) {
            var e = b[g];
            if (e && !e.A && e.capture == c) {
                var h = e.listener, k = e.H || e.src;
                e.D && vb(a.f, e);
                f = !1 !== h.call(k, d) && f;
            }
        }
    } }
    ;
    var Lb = x;
    function Mb(a, b, c) { if ("function" === typeof a)
        c && (a = z(a, c));
    else if (a && "function" == typeof a.handleEvent)
        a = z(a.handleEvent, a);
    else
        throw Error("Invalid listener argument"); return 2147483647 < Number(b) ? -1 : Lb.setTimeout(a, b || 0); }
    ;
    function Nb(a, b) { this.name = a; this.value = b; }
    Nb.prototype.toString = function () { return this.name; };
    var Ob = new Nb("OFF", Infinity), Pb = new Nb("SEVERE", 1E3), Qb = new Nb("CONFIG", 700), Rb = new Nb("FINE", 500);
    function Tb() { this.clear(); }
    var Ub;
    Tb.prototype.clear = function () { };
    function Vb(a, b, c) { this.reset(a || Ob, b, c, void 0, void 0); }
    Vb.prototype.reset = function () { };
    function Wb(a, b) { this.a = null; this.f = []; this.b = (void 0 === b ? null : b) || null; this.c = []; this.g = { getName: function () { return a; } }; }
    function Xb(a) { if (a.a)
        return a.a; if (a.b)
        return Xb(a.b); Fa("Root logger has no level set."); return Ob; }
    function Yb(a, b) { for (; a;)
        a.f.forEach(function (c) { c(b); }), a = a.b; }
    function Zb() { this.entries = {}; var a = new Wb(""); a.a = Qb; this.entries[""] = a; }
    var $b;
    function ac(a, b, c) { var d = a.entries[b]; if (d)
        return void 0 !== c && (d.a = c), d; d = ac(a, b.substr(0, b.lastIndexOf("."))); var f = new Wb(b, d); a.entries[b] = f; d.c.push(f); void 0 !== c && (f.a = c); return f; }
    function bc() { $b || ($b = new Zb); return $b; }
    function cc(a, b, c) { var d; if (d = a)
        if (d = a && b) {
            d = b.value;
            var f = a ? Xb(ac(bc(), a.getName())) : Ob;
            d = d >= f.value;
        } d && (b = b || Ob, d = ac(bc(), a.getName()), "function" === typeof c && (c = c()), Ub || (Ub = new Tb), a = a.getName(), a = new Vb(b, c, a), Yb(d, a)); }
    function P(a, b) { a && cc(a, Rb, b); }
    ;
    function dc() { }
    dc.prototype.a = null;
    function ec(a) { var b; (b = a.a) || (b = {}, fc(a) && (b[0] = !0, b[1] = !0), b = a.a = b); return b; }
    ;
    var gc;
    function hc() { }
    B(hc, dc);
    function ic(a) { return (a = fc(a)) ? new ActiveXObject(a) : new XMLHttpRequest; }
    function fc(a) { if (!a.b && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
        for (var b = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], c = 0; c < b.length; c++) {
            var d = b[c];
            try {
                return new ActiveXObject(d), a.b = d;
            }
            catch (f) { }
        }
        throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
    } return a.b; }
    gc = new hc;
    t();
    u();
    function jc(a, b) { this.b = a[x.Symbol.iterator](); this.c = b; this.f = 0; }
    jc.prototype[Symbol.iterator] = function () { return this; };
    jc.prototype.next = function () { var a = this.b.next(); return { value: a.done ? void 0 : this.c.call(void 0, a.value, this.f++), done: a.done }; };
    function kc(a, b) { return new jc(a, b); }
    t();
    u();
    t();
    u();
    var lc = "StopIteration" in x ? x.StopIteration : { message: "StopIteration", stack: "" };
    function Q() { }
    Q.prototype.next = function () { return Q.prototype.a.call(this); };
    Q.prototype.a = function () { throw lc; };
    Q.prototype.u = function () { return this; };
    function mc(a) { if (a instanceof R || a instanceof S || a instanceof T)
        return a; if ("function" == typeof a.next)
        return new R(function () { return nc(a); }); t(); u(); if ("function" == typeof a[Symbol.iterator])
        return t(), u(), new R(function () { return a[Symbol.iterator](); }); if ("function" == typeof a.u)
        return new R(function () { return nc(a.u()); }); throw Error("Not an iterator or iterable."); }
    function nc(a) { if (!(a instanceof Q))
        return a; var b = !1; return { next: function () { for (var c; !b;)
            try {
                c = a.a();
                break;
            }
            catch (d) {
                if (d !== lc)
                    throw d;
                b = !0;
            } return { value: c, done: b }; } }; }
    t();
    u();
    function R(a) { this.b = a; }
    R.prototype.u = function () { return new S(this.b()); };
    R.prototype[Symbol.iterator] = function () { return new T(this.b()); };
    R.prototype.c = function () { return new T(this.b()); };
    t();
    u();
    function S(a) { this.b = a; }
    oa(S, Q);
    S.prototype.a = function () { var a = this.b.next(); if (a.done)
        throw lc; return a.value; };
    S.prototype.next = function () { return S.prototype.a.call(this); };
    S.prototype[Symbol.iterator] = function () { return new T(this.b); };
    S.prototype.c = function () { return new T(this.b); };
    function T(a) { R.call(this, function () { return a; }); this.f = a; }
    oa(T, R);
    T.prototype.next = function () { return this.f.next(); };
    function oc(a, b) { this.o = {}; this.j = []; this.B = this.size = 0; var c = arguments.length; if (1 < c) {
        if (c % 2)
            throw Error("Uneven number of arguments");
        for (var d = 0; d < c; d += 2)
            this.set(arguments[d], arguments[d + 1]);
    }
    else
        a && this.addAll(a); }
    n = oc.prototype;
    n.G = function () { pc(this); return this.j.concat(); };
    n.has = function (a) { return U(this.o, a); };
    n.clear = function () { this.o = {}; this.B = this.size = this.j.length = 0; };
    n.remove = function (a) { return this.delete(a); };
    n.delete = function (a) { return U(this.o, a) ? (delete this.o[a], --this.size, this.B++, this.j.length > 2 * this.size && pc(this), !0) : !1; };
    function pc(a) { if (a.size != a.j.length) {
        for (var b = 0, c = 0; b < a.j.length;) {
            var d = a.j[b];
            U(a.o, d) && (a.j[c++] = d);
            b++;
        }
        a.j.length = c;
    } if (a.size != a.j.length) {
        var f = {};
        for (c = b = 0; b < a.j.length;)
            d = a.j[b], U(f, d) || (a.j[c++] = d, f[d] = 1), b++;
        a.j.length = c;
    } }
    n.get = function (a, b) { return U(this.o, a) ? this.o[a] : b; };
    n.set = function (a, b) { U(this.o, a) || (this.size += 1, this.j.push(a), this.B++); this.o[a] = b; };
    n.addAll = function (a) { if (a instanceof oc)
        for (var b = a.G(), c = 0; c < b.length; c++)
            this.set(b[c], a.get(b[c]));
    else
        for (b in a)
            this.set(b, a[b]); };
    n.forEach = function (a, b) { for (var c = this.G(), d = 0; d < c.length; d++) {
        var f = c[d], g = this.get(f);
        a.call(b, g, f, this);
    } };
    n.clone = function () { return new oc(this); };
    n.keys = function () { return mc(this.u(!0)).c(); };
    n.values = function () { return mc(this.u(!1)).c(); };
    n.entries = function () { var a = this; return kc(this.keys(), function (b) { return [b, a.get(b)]; }); };
    n.u = function (a) { pc(this); var b = 0, c = this.B, d = this, f = new Q; f.a = function () { if (c != d.B)
        throw Error("The map has changed since the iterator was created"); if (b >= d.j.length)
        throw lc; var g = d.j[b++]; return a ? g : d.o[g]; }; f.next = f.a.bind(f); return f; };
    function U(a, b) { return Object.prototype.hasOwnProperty.call(a, b); }
    ;
    var qc = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
    function rc(a) { N.call(this); this.headers = new oc; this.C = a || null; this.c = !1; this.J = this.a = null; this.P = this.v = ""; this.g = 0; this.l = ""; this.i = this.N = this.s = this.L = !1; this.h = 0; this.w = null; this.m = sc; this.I = this.M = !1; }
    B(rc, N);
    var sc = "";
    rc.prototype.b = ac(bc(), "goog.net.XhrIo", void 0).g;
    var tc = /^https?$/i, uc = ["POST", "PUT"];
    function vc(a, b, c) {
        if (a.a)
            throw Error("[goog.net.XhrIo] Object is active with another request=" + a.v + "; newUri=" + b);
        a.v = b;
        a.l = "";
        a.g = 0;
        a.P = "POST";
        a.L = !1;
        a.c = !0;
        a.a = a.C ? ic(a.C) : ic(gc);
        a.J = a.C ? ec(a.C) : ec(gc);
        a.a.onreadystatechange = z(a.R, a);
        try {
            P(a.b, V(a, "Opening Xhr")), a.N = !0, a.a.open("POST", String(b), !0), a.N = !1;
        }
        catch (g) {
            P(a.b, V(a, "Error opening Xhr: " + g.message));
            wc(a, g);
            return;
        }
        b = c || "";
        c = a.headers.clone();
        var d = c.G().find(function (g) { return "content-type" == g.toLowerCase(); }), f = x.FormData && b instanceof
            x.FormData;
        !(0 <= Oa(uc, "POST")) || d || f || c.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
        c.forEach(function (g, e) { this.a.setRequestHeader(e, g); }, a);
        a.m && (a.a.responseType = a.m);
        "withCredentials" in a.a && a.a.withCredentials !== a.M && (a.a.withCredentials = a.M);
        try {
            xc(a), 0 < a.h && (a.I = yc(a.a), P(a.b, V(a, "Will abort after " + a.h + "ms if incomplete, xhr2 " + a.I)), a.I ? (a.a.timeout = a.h, a.a.ontimeout = z(a.T, a)) : a.w = Mb(a.T, a.h, a)), P(a.b, V(a, "Sending request")), a.s = !0, a.a.send(b), a.s = !1;
        }
        catch (g) {
            P(a.b, V(a, "Send error: " + g.message)), wc(a, g);
        }
    }
    function yc(a) { return bb && kb() && "number" === typeof a.timeout && void 0 !== a.ontimeout; }
    n = rc.prototype;
    n.T = function () { "undefined" != typeof qa && this.a && (this.l = "Timed out after " + this.h + "ms, aborting", this.g = 8, P(this.b, V(this, this.l)), O(this, "timeout"), this.abort(8)); };
    function wc(a, b) { a.c = !1; a.a && (a.i = !0, a.a.abort(), a.i = !1); a.l = b; a.g = 5; zc(a); Ac(a); }
    function zc(a) { a.L || (a.L = !0, O(a, "complete"), O(a, "error")); }
    n.abort = function (a) { this.a && this.c && (P(this.b, V(this, "Aborting")), this.c = !1, this.i = !0, this.a.abort(), this.i = !1, this.g = a || 7, O(this, "complete"), O(this, "abort"), Ac(this)); };
    n.R = function () { this.K || (this.N || this.s || this.i ? Bc(this) : this.W()); };
    n.W = function () { Bc(this); };
    function Bc(a) {
        if (a.c && "undefined" != typeof qa)
            if (a.J[1] && 4 == W(a) && 2 == a.getStatus())
                P(a.b, V(a, "Local request error detected and ignored"));
            else if (a.s && 4 == W(a))
                Mb(a.R, 0, a);
            else if (O(a, "readystatechange"), 4 == W(a)) {
                P(a.b, V(a, "Request complete"));
                a.c = !1;
                try {
                    var b = a.getStatus();
                    a: switch (b) {
                        case 200:
                        case 201:
                        case 202:
                        case 204:
                        case 206:
                        case 304:
                        case 1223:
                            var c = !0;
                            break a;
                        default: c = !1;
                    }
                    var d;
                    if (!(d = c)) {
                        var f;
                        if (f = 0 === b) {
                            var g = String(a.v).match(qc)[1] || null;
                            if (!g && x.self && x.self.location) {
                                var e = x.self.location.protocol;
                                g = e.substr(0, e.length - 1);
                            }
                            f = !tc.test(g ? g.toLowerCase() : "");
                        }
                        d = f;
                    }
                    if (d)
                        O(a, "complete"), O(a, "success");
                    else {
                        a.g = 6;
                        try {
                            var h = 2 < W(a) ? a.a.statusText : "";
                        }
                        catch (k) {
                            P(a.b, "Can not get status: " + k.message), h = "";
                        }
                        a.l = h + " [" + a.getStatus() + "]";
                        zc(a);
                    }
                }
                finally {
                    Ac(a);
                }
            }
    }
    function Ac(a) { if (a.a) {
        xc(a);
        var b = a.a, c = a.J[0] ? ra : null;
        a.a = null;
        a.J = null;
        O(a, "ready");
        try {
            b.onreadystatechange = c;
        }
        catch (d) {
            (a = a.b) && cc(a, Pb, "Problem encountered resetting onreadystatechange: " + d.message);
        }
    } }
    function xc(a) { a.a && a.I && (a.a.ontimeout = null); a.w && (Lb.clearTimeout(a.w), a.w = null); }
    function W(a) { return a.a ? a.a.readyState : 0; }
    n.getStatus = function () { try {
        return 2 < W(this) ? this.a.status : -1;
    }
    catch (a) {
        return -1;
    } };
    function Cc(a) { try {
        if (!a.a)
            return null;
        if ("response" in a.a)
            return a.a.response;
        switch (a.m) {
            case sc:
            case "text": return a.a.responseText;
            case "arraybuffer": if ("mozResponseArrayBuffer" in a.a)
                return a.a.mozResponseArrayBuffer;
        }
        var b = a.b;
        b && cc(b, Pb, "Response type " + a.m + " is not supported on this browser");
        return null;
    }
    catch (c) {
        return P(a.b, "Can not get response: " + c.message), null;
    } }
    function Dc(a) { var b = {}; a = (a.a && 4 == W(a) ? a.a.getAllResponseHeaders() || "" : "").split("\r\n"); for (var c = 0; c < a.length; c++)
        if (!/^[\s\xa0]*$/.test(a[c])) {
            var d = Xa(a[c]), f = d[0];
            d = d[1];
            if ("string" === typeof d) {
                d = d.trim();
                var g = b[f] || [];
                b[f] = g;
                g.push(d);
            }
        } return Ua(b, function (e) { return e.join(", "); }); }
    function V(a, b) { return b + " [" + a.P + " " + a.v + " " + a.getStatus() + "]"; }
    ;
    var Ec = {}, Fc = null;
    function Gc(a) { var b = a.length, c = 3 * b / 4; c % 3 ? c = Math.floor(c) : H("=.", a[b - 1]) && (c = H("=.", a[b - 2]) ? c - 2 : c - 1); var d = new Uint8Array(c), f = 0; Hc(a, function (g) { d[f++] = g; }); return d.subarray(0, f); }
    function Hc(a, b) { function c(k) { for (; d < a.length;) {
        var l = a.charAt(d++), m = Fc[l];
        if (null != m)
            return m;
        if (!/^[\s\xa0]*$/.test(l))
            throw Error("Unknown base64 encoding at char: " + l);
    } return k; } Ic(); for (var d = 0;;) {
        var f = c(-1), g = c(0), e = c(64), h = c(64);
        if (64 === h && -1 === f)
            break;
        b(f << 2 | g >> 4);
        64 != e && (b(g << 4 & 240 | e >> 2), 64 != h && b(e << 6 & 192 | h));
    } }
    function Ic() { if (!Fc) {
        Fc = {};
        for (var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), b = ["+/=", "+/", "-_=", "-_.", "-_"], c = 0; 5 > c; c++) {
            var d = a.concat(b[c].split(""));
            Ec[c] = d;
            for (var f = 0; f < d.length; f++) {
                var g = d[f];
                void 0 === Fc[g] && (Fc[g] = f);
            }
        }
    } }
    ;
    var Jc = ["content-type", "grpc-status", "grpc-message"];
    function X(a) {
        this.a = a.Z;
        this.m = null;
        this.b = [];
        this.h = [];
        this.g = [];
        this.f = [];
        this.c = [];
        this.l = !1;
        this.i = 0;
        this.s = new Ga;
        var b = this;
        zb(this.a, "readystatechange", function () {
            var c = b.a;
            if (c = c.a ? c.a.getResponseHeader("Content-Type") : null) {
                c = c.toLowerCase();
                if (0 == c.lastIndexOf("application/grpc-web-text", 0)) {
                    c = b.a;
                    try {
                        var d = c.a ? c.a.responseText : "";
                    }
                    catch (k) {
                        P(c.b, "Can not get responseText: " + k.message), d = "";
                    }
                    c = d || "";
                    d = c.length - c.length % 4;
                    c = c.substr(b.i, d - b.i);
                    if (0 == c.length)
                        return;
                    b.i = d;
                    c = Gc(c);
                }
                else if (0 ==
                    c.lastIndexOf("application/grpc", 0))
                    c = new Uint8Array(Cc(b.a));
                else {
                    Y(b, new E(2, "Unknown Content-type received."));
                    return;
                }
                d = null;
                try {
                    d = Ia(b.s, c);
                }
                catch (k) {
                    Y(b, new E(2, "Error in parsing response body"));
                }
                if (d)
                    for (c = 0; c < d.length; c++) {
                        if (Ja in d[c]) {
                            var f = d[c][Ja];
                            if (f) {
                                var g = !1, e = void 0;
                                try {
                                    e = b.m(f), g = !0;
                                }
                                catch (k) {
                                    Y(b, new E(13, "Error when deserializing response data; error: " + k + (", response: " + e)));
                                }
                                if (g)
                                    for (f = e, g = 0; g < b.b.length; g++)
                                        b.b[g](f);
                            }
                        }
                        if (G in d[c] && 0 < d[c][G].length) {
                            f = "";
                            for (g = 0; g < d[c][G].length; g++)
                                f +=
                                    String.fromCharCode(d[c][G][g]);
                            f = f.trim().split("\r\n");
                            g = {};
                            for (e = 0; e < f.length; e++) {
                                var h = f[e].indexOf(":");
                                g[f[e].substring(0, h).trim()] = f[e].substring(h + 1).trim();
                            }
                            f = g;
                            g = 0;
                            e = "";
                            "grpc-status" in f && (g = Number(f["grpc-status"]), delete f["grpc-status"]);
                            "grpc-message" in f && (e = f["grpc-message"], delete f["grpc-message"]);
                            Y(b, new E(g, e, f));
                        }
                    }
            }
        });
        zb(this.a, "complete", function () {
            var c = b.a.g, d = 2, f = "", g = {};
            d = Dc(b.a);
            var e = {};
            for (h in d)
                d.hasOwnProperty(h) && (e[h.toLowerCase()] = d[h]);
            Object.keys(e).forEach(function (k) {
                Jc.includes(k) ||
                    (g[k] = e[k]);
            });
            Kc(b, g);
            var h = -1;
            if (0 != c) {
                switch (c) {
                    case 7:
                        d = 10;
                        break;
                    case 8:
                        d = 4;
                        break;
                    case 6:
                        h = b.a.getStatus();
                        d = Aa(h);
                        break;
                    default: d = 14;
                }
                10 == d && b.l || (f = Da(c), -1 != h && (f += ", http status code: " + h), Y(b, new E(d, f)));
            }
            else
                c = !1, "grpc-status" in e && (d = Number(e["grpc-status"]), "grpc-message" in e && (f = e["grpc-message"]), 0 != d && (Y(b, new E(d, f || "", e)), c = !0)), c || Lc(b);
        });
    }
    X.prototype.on = function (a, b) { "data" == a ? this.b.push(b) : "status" == a ? this.h.push(b) : "metadata" == a ? this.g.push(b) : "end" == a ? this.c.push(b) : "error" == a && this.f.push(b); return this; };
    function Mc(a, b) { b = a.indexOf(b); -1 < b && a.splice(b, 1); }
    X.prototype.removeListener = function (a, b) { "data" == a ? Mc(this.b, b) : "status" == a ? Mc(this.h, b) : "metadata" == a ? Mc(this.g, b) : "end" == a ? Mc(this.c, b) : "error" == a && Mc(this.f, b); return this; };
    X.prototype.cancel = function () { this.l = !0; this.a.abort(); };
    function Y(a, b) { if (0 != b.code)
        for (var c = new E(b.code, decodeURIComponent(b.message || ""), b.metadata), d = 0; d < a.f.length; d++)
            a.f[d](c); b = { code: b.code, details: decodeURIComponent(b.message || ""), metadata: b.metadata }; for (c = 0; c < a.h.length; c++)
        a.h[c](b); }
    function Kc(a, b) { for (var c = 0; c < a.g.length; c++)
        a.g[c](b); }
    function Lc(a) { for (var b = 0; b < a.c.length; b++)
        a.c[b](); }
    X.prototype.cancel = X.prototype.cancel;
    X.prototype.removeListener = X.prototype.removeListener;
    X.prototype.on = X.prototype.on;
    function Nc(a) { var b = ""; Ta(a, function (c, d) { b += d; b += ":"; b += c; b += "\r\n"; }); return b; }
    ;
    function Z(a, b) { a = void 0 === a ? {} : a; this.a = a.format || y("format", a) || "text"; this.g = a.aa || y("suppressCorsPreflight", a) || !1; this.f = a.withCredentials || y("withCredentials", a) || !1; this.b = a.$ || y("streamInterceptors", a) || []; this.h = a.ba || y("unaryInterceptors", a) || []; this.c = b || null; }
    Z.prototype.X = function (a, b, c, d, f) { var g = this, e = a.substr(0, a.length - d.name.length); a = Oc(function (h) { return Pc(g, h, e); }, this.b).call(this, za(d, b, c)); Qc(a, f, !1); return new Ca(a); };
    Z.prototype.S = function (a, b, c, d) { var f = this, g = a.substr(0, a.length - d.name.length); return Oc(function (e) { return new Promise(function (h, k) { var l = Pc(f, e, g), m, p, q; Qc(l, function (w, A, L, Sb, Rc) { w ? k(w) : Rc ? q = A : L ? p = L : Sb ? m = Sb : (w = e.getMethodDescriptor(), A = m, A = void 0 === A ? {} : A, h(new D(q, w, A, void 0 === p ? null : p))); }, !0); }); }, this.h).call(this, za(d, b, c)).then(function (e) { return e.getResponseMessage(); }); };
    Z.prototype.unaryCall = function (a, b, c, d) { return this.S(a, b, c, d); };
    Z.prototype.Y = function (a, b, c, d) { var f = this, g = a.substr(0, a.length - d.name.length); return Oc(function (e) { return Pc(f, e, g); }, this.b).call(this, za(d, b, c)); };
    function Pc(a, b, c) {
        var d = b.getMethodDescriptor(), f = c + d.getName();
        c = a.c ? a.c : new rc;
        c.M = a.f;
        var g = new X({ Z: c });
        g.m = d.b;
        var e = b.getMetadata();
        for (h in e)
            c.headers.set(h, e[h]);
        "text" == a.a ? (c.headers.set("Content-Type", "application/grpc-web-text"), c.headers.set("Accept", "application/grpc-web-text")) : c.headers.set("Content-Type", "application/grpc-web+proto");
        c.headers.set("X-User-Agent", "grpc-web-javascript/0.1");
        c.headers.set("X-Grpc-Web", "1");
        if (c.headers.has("deadline")) {
            var h = Number(c.headers.get("deadline"));
            h = Math.ceil(h - (new Date).getTime());
            c.headers.delete("deadline");
            Infinity === h && (h = 0);
            0 < h && (c.headers.set("grpc-timeout", h + "m"), c.h = Math.max(0, Math.max(1E3, Math.ceil(1.1 * h))));
        }
        if (a.g) {
            e = c.headers;
            h = {};
            for (var k = ha(e.keys()), l = k.next(); !l.done; l = k.next())
                l = l.value, h[l] = e.get(l);
            c.headers.clear();
            b: {
                for (m in h) {
                    var m = !1;
                    break b;
                }
                m = !0;
            }
            if (!m)
                if (h = Nc(h), "string" === typeof f) {
                    if (m = encodeURIComponent("$httpHeaders"), h = null != h ? "=" + encodeURIComponent(String(h)) : "", m += h)
                        h = f.indexOf("#"), 0 > h && (h = f.length), e = f.indexOf("?"),
                            0 > e || e > h ? (e = h, k = "") : k = f.substring(e + 1, h), f = [f.substr(0, e), k, f.substr(h)], h = f[1], f[1] = m ? h ? h + "&" + m : m : h, f = f[0] + (f[1] ? "?" + f[1] : "") + f[2];
                }
                else
                    f.a("$httpHeaders", h);
        }
        b = (0, d.a)(b.getRequestMessage());
        d = b.length;
        m = [0, 0, 0, 0];
        h = new Uint8Array(5 + d);
        for (e = 3; 0 <= e; e--)
            m[e] = d % 256, d >>>= 8;
        h.set(new Uint8Array(m), 1);
        h.set(b, 5);
        b = h;
        if ("text" == a.a) {
            a = b;
            var p;
            void 0 === p && (p = 0);
            Ic();
            p = Ec[p];
            b = Array(Math.floor(a.length / 3));
            d = p[64] || "";
            for (m = h = 0; h < a.length - 2; h += 3) {
                l = a[h];
                var q = a[h + 1];
                k = a[h + 2];
                e = p[l >> 2];
                l = p[(l & 3) << 4 | q >> 4];
                q = p[(q & 15) << 2 | k >> 6];
                k = p[k & 63];
                b[m++] = e + l + q + k;
            }
            e = 0;
            k = d;
            switch (a.length - h) {
                case 2: e = a[h + 1], k = p[(e & 15) << 2] || d;
                case 1: a = a[h], b[m] = p[a >> 2] + p[(a & 3) << 4 | e >> 4] + k + d;
            }
            b = b.join("");
        }
        else
            "binary" == a.a && (c.m = "arraybuffer");
        vc(c, f, b);
        return g;
    }
    function Qc(a, b, c) { var d = !1, f = null, g = !1; a.on("data", function (e) { d = !0; f = e; }); a.on("error", function (e) { 0 == e.code || g || (g = !0, b(e, null)); }); a.on("status", function (e) { 0 == e.code || g ? c && b(null, null, e) : (g = !0, b({ code: e.code, message: e.details, metadata: e.metadata }, null)); }); if (c)
        a.on("metadata", function (e) { b(null, null, null, e); }); a.on("end", function () { g || (d ? c ? b(null, f, null, null, !0) : b(null, f) : b({ code: 2, message: "Incomplete response" })); c && b(null, null); }); }
    function Oc(a, b) { var c = a; b.forEach(function (d) { var f = c; c = function (g) { return d.intercept(g, f); }; }); return c; }
    Z.prototype.serverStreaming = Z.prototype.Y;
    Z.prototype.unaryCall = Z.prototype.unaryCall;
    Z.prototype.thenableCall = Z.prototype.S;
    Z.prototype.rpcCall = Z.prototype.X;
    var CallOptions = xa;
    var MethodDescriptor = ya;
    var GrpcWebClientBase = Z;
    var RpcError = E;
    var StatusCode = { OK: 0, CANCELLED: 1, UNKNOWN: 2, INVALID_ARGUMENT: 3, DEADLINE_EXCEEDED: 4, NOT_FOUND: 5, ALREADY_EXISTS: 6, PERMISSION_DENIED: 7, UNAUTHENTICATED: 16, RESOURCE_EXHAUSTED: 8, FAILED_PRECONDITION: 9, ABORTED: 10, OUT_OF_RANGE: 11, UNIMPLEMENTED: 12, INTERNAL: 13, UNAVAILABLE: 14, DATA_LOSS: 15 };
    var MethodType = { UNARY: "unary", SERVER_STREAMING: "server_streaming", BIDI_STREAMING: "bidi_streaming" };
    Lb = "undefined" !== typeof globalThis && globalThis || self;


    var grpcWeb = {
    	CallOptions: CallOptions,
    	MethodDescriptor: MethodDescriptor,
    	GrpcWebClientBase: GrpcWebClientBase,
    	RpcError: RpcError,
    	StatusCode: StatusCode,
    	MethodType: MethodType
    };

    var any_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = (typeof globalThis !== 'undefined' && globalThis) ||
        (typeof window !== 'undefined' && window) ||
        (typeof global !== 'undefined' && global) ||
        (typeof self !== 'undefined' && self) ||
        (function () { return this; }).call(null) ||
        Function('return this')();
    goog.exportSymbol('proto.google.protobuf.Any', null, global);
    proto.google.protobuf.Any = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.google.protobuf.Any, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.google.protobuf.Any.displayName = 'proto.google.protobuf.Any';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.google.protobuf.Any.prototype.toObject = function (opt_includeInstance) {
            return proto.google.protobuf.Any.toObject(opt_includeInstance, this);
        };
        proto.google.protobuf.Any.toObject = function (includeInstance, msg) {
            var f, obj = {
                typeUrl: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                value: msg.getValue_asB64()
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.google.protobuf.Any.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.google.protobuf.Any;
        return proto.google.protobuf.Any.deserializeBinaryFromReader(msg, reader);
    };
    proto.google.protobuf.Any.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setTypeUrl(value);
                    break;
                case 2:
                    var value = (reader.readBytes());
                    msg.setValue(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.google.protobuf.Any.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.google.protobuf.Any.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.google.protobuf.Any.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getTypeUrl();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getValue_asU8();
        if (f.length > 0) {
            writer.writeBytes(2, f);
        }
    };
    proto.google.protobuf.Any.prototype.getTypeUrl = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.google.protobuf.Any.prototype.setTypeUrl = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.google.protobuf.Any.prototype.getValue = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.google.protobuf.Any.prototype.getValue_asB64 = function () {
        return (googleProtobuf.Message.bytesAsB64(this.getValue()));
    };
    proto.google.protobuf.Any.prototype.getValue_asU8 = function () {
        return (googleProtobuf.Message.bytesAsU8(this.getValue()));
    };
    proto.google.protobuf.Any.prototype.setValue = function (value) {
        return googleProtobuf.Message.setProto3BytesField(this, 2, value);
    };
    goog.object.extend(exports, proto.google.protobuf);
    proto.google.protobuf.Any.prototype.getTypeName = function () {
        return this.getTypeUrl().split('/').pop();
    };
    proto.google.protobuf.Any.prototype.pack = function (serialized, name, opt_typeUrlPrefix) {
        if (!opt_typeUrlPrefix) {
            opt_typeUrlPrefix = 'type.googleapis.com/';
        }
        if (opt_typeUrlPrefix.substr(-1) != '/') {
            this.setTypeUrl(opt_typeUrlPrefix + '/' + name);
        }
        else {
            this.setTypeUrl(opt_typeUrlPrefix + name);
        }
        this.setValue(serialized);
    };
    proto.google.protobuf.Any.prototype.unpack = function (deserialize, name) {
        if (this.getTypeName() == name) {
            return deserialize(this.getValue_asU8());
        }
        else {
            return null;
        }
    };

    });
    var any_pb_1 = any_pb.Any;

    var GameFramework_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, any_pb);

    goog.object.extend(proto, Common_pb);
    goog.exportSymbol('proto.GameFramework.ChatNoti', null, global);
    goog.exportSymbol('proto.GameFramework.ChatReq', null, global);
    goog.exportSymbol('proto.GameFramework.CommonAck', null, global);
    goog.exportSymbol('proto.GameFramework.DisconnectNoti', null, global);
    goog.exportSymbol('proto.GameFramework.GameEffectNoti', null, global);
    goog.exportSymbol('proto.GameFramework.GameInteractiveNoti', null, global);
    goog.exportSymbol('proto.GameFramework.GameMessage', null, global);
    goog.exportSymbol('proto.GameFramework.InteractiveNoti', null, global);
    goog.exportSymbol('proto.GameFramework.InteractiveReq', null, global);
    goog.exportSymbol('proto.GameFramework.JoinTableAck', null, global);
    goog.exportSymbol('proto.GameFramework.JoinTableNoti', null, global);
    goog.exportSymbol('proto.GameFramework.JoinTableReq', null, global);
    goog.exportSymbol('proto.GameFramework.LoginAck', null, global);
    goog.exportSymbol('proto.GameFramework.LoginReq', null, global);
    goog.exportSymbol('proto.GameFramework.LogoutNoti', null, global);
    goog.exportSymbol('proto.GameFramework.LogoutNoti.Reason', null, global);
    goog.exportSymbol('proto.GameFramework.Opcode', null, global);
    goog.exportSymbol('proto.GameFramework.PlayerLeaveNoti', null, global);
    goog.exportSymbol('proto.GameFramework.TableAllocateAck', null, global);
    goog.exportSymbol('proto.GameFramework.TableAllocateReq', null, global);
    goog.exportSymbol('proto.GameFramework.TableDismissAck', null, global);
    goog.exportSymbol('proto.GameFramework.TableDismissNoti', null, global);
    goog.exportSymbol('proto.GameFramework.TableDismissReq', null, global);
    proto.GameFramework.LoginReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.LoginReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.LoginReq.displayName = 'proto.GameFramework.LoginReq';
    }
    proto.GameFramework.TableAllocateReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.GameFramework.TableAllocateReq.repeatedFields_, null);
    };
    goog.inherits(proto.GameFramework.TableAllocateReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.TableAllocateReq.displayName = 'proto.GameFramework.TableAllocateReq';
    }
    proto.GameFramework.TableAllocateAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.TableAllocateAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.TableAllocateAck.displayName = 'proto.GameFramework.TableAllocateAck';
    }
    proto.GameFramework.TableDismissReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.TableDismissReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.TableDismissReq.displayName = 'proto.GameFramework.TableDismissReq';
    }
    proto.GameFramework.TableDismissAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.TableDismissAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.TableDismissAck.displayName = 'proto.GameFramework.TableDismissAck';
    }
    proto.GameFramework.LoginAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.LoginAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.LoginAck.displayName = 'proto.GameFramework.LoginAck';
    }
    proto.GameFramework.LogoutNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.LogoutNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.LogoutNoti.displayName = 'proto.GameFramework.LogoutNoti';
    }
    proto.GameFramework.GameMessage = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.GameMessage, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.GameMessage.displayName = 'proto.GameFramework.GameMessage';
    }
    proto.GameFramework.JoinTableReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.JoinTableReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.JoinTableReq.displayName = 'proto.GameFramework.JoinTableReq';
    }
    proto.GameFramework.JoinTableAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.JoinTableAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.JoinTableAck.displayName = 'proto.GameFramework.JoinTableAck';
    }
    proto.GameFramework.JoinTableNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.JoinTableNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.JoinTableNoti.displayName = 'proto.GameFramework.JoinTableNoti';
    }
    proto.GameFramework.DisconnectNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.DisconnectNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.DisconnectNoti.displayName = 'proto.GameFramework.DisconnectNoti';
    }
    proto.GameFramework.TableDismissNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.TableDismissNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.TableDismissNoti.displayName = 'proto.GameFramework.TableDismissNoti';
    }
    proto.GameFramework.PlayerLeaveNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.PlayerLeaveNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.PlayerLeaveNoti.displayName = 'proto.GameFramework.PlayerLeaveNoti';
    }
    proto.GameFramework.CommonAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.CommonAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.CommonAck.displayName = 'proto.GameFramework.CommonAck';
    }
    proto.GameFramework.ChatReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.ChatReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.ChatReq.displayName = 'proto.GameFramework.ChatReq';
    }
    proto.GameFramework.ChatNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.ChatNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.ChatNoti.displayName = 'proto.GameFramework.ChatNoti';
    }
    proto.GameFramework.InteractiveReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.InteractiveReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.InteractiveReq.displayName = 'proto.GameFramework.InteractiveReq';
    }
    proto.GameFramework.InteractiveNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.InteractiveNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.InteractiveNoti.displayName = 'proto.GameFramework.InteractiveNoti';
    }
    proto.GameFramework.GameInteractiveNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.GameInteractiveNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.GameInteractiveNoti.displayName = 'proto.GameFramework.GameInteractiveNoti';
    }
    proto.GameFramework.GameEffectNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GameFramework.GameEffectNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GameFramework.GameEffectNoti.displayName = 'proto.GameFramework.GameEffectNoti';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.LoginReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.LoginReq.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.LoginReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.LoginReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.LoginReq;
        return proto.GameFramework.LoginReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.LoginReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.LoginReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.LoginReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.LoginReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.GameFramework.LoginReq.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GameFramework.LoginReq.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.GameFramework.TableAllocateReq.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.TableAllocateReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.TableAllocateReq.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.TableAllocateReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                vecplayersList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
                strrule: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                strextra: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.TableAllocateReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.TableAllocateReq;
        return proto.GameFramework.TableAllocateReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.TableAllocateReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                case 2:
                    var value = (reader.readPackedUint32());
                    msg.setVecplayersList(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrrule(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrextra(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.TableAllocateReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.TableAllocateReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.TableAllocateReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getVecplayersList();
        if (f.length > 0) {
            writer.writePackedUint32(2, f);
        }
        f = message.getStrrule();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStrextra();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.GameFramework.TableAllocateReq.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GameFramework.TableAllocateReq.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.GameFramework.TableAllocateReq.prototype.getVecplayersList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 2));
    };
    proto.GameFramework.TableAllocateReq.prototype.setVecplayersList = function (value) {
        return googleProtobuf.Message.setField(this, 2, value || []);
    };
    proto.GameFramework.TableAllocateReq.prototype.addVecplayers = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.GameFramework.TableAllocateReq.prototype.clearVecplayersList = function () {
        return this.setVecplayersList([]);
    };
    proto.GameFramework.TableAllocateReq.prototype.getStrrule = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.GameFramework.TableAllocateReq.prototype.setStrrule = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.GameFramework.TableAllocateReq.prototype.getStrextra = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.GameFramework.TableAllocateReq.prototype.setStrextra = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.TableAllocateAck.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.TableAllocateAck.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.TableAllocateAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                ret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.TableAllocateAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.TableAllocateAck;
        return proto.GameFramework.TableAllocateAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.TableAllocateAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setRet(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.TableAllocateAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.TableAllocateAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.TableAllocateAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRet();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.GameFramework.TableAllocateAck.prototype.getRet = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.TableAllocateAck.prototype.setRet = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.TableDismissReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.TableDismissReq.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.TableDismissReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.TableDismissReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.TableDismissReq;
        return proto.GameFramework.TableDismissReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.TableDismissReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.TableDismissReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.TableDismissReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.TableDismissReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.GameFramework.TableDismissReq.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GameFramework.TableDismissReq.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.TableDismissAck.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.TableDismissAck.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.TableDismissAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                ret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.TableDismissAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.TableDismissAck;
        return proto.GameFramework.TableDismissAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.TableDismissAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setRet(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.TableDismissAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.TableDismissAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.TableDismissAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRet();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.GameFramework.TableDismissAck.prototype.getRet = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.TableDismissAck.prototype.setRet = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.LoginAck.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.LoginAck.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.LoginAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                ret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.LoginAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.LoginAck;
        return proto.GameFramework.LoginAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.LoginAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setRet(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.LoginAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.LoginAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.LoginAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRet();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.GameFramework.LoginAck.prototype.getRet = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.LoginAck.prototype.setRet = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.LogoutNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.LogoutNoti.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.LogoutNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                reason: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.LogoutNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.LogoutNoti;
        return proto.GameFramework.LogoutNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.LogoutNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setReason(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.LogoutNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.LogoutNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.LogoutNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getReason();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.GameFramework.LogoutNoti.Reason = {
        NONE: 0,
        SERVER_STOP: 1,
        DUP_LOGIN: 2
    };
    proto.GameFramework.LogoutNoti.prototype.getReason = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.LogoutNoti.prototype.setReason = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.GameMessage.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.GameMessage.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.GameMessage.toObject = function (includeInstance, msg) {
            var f, obj = {
                nopcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                msg: (f = msg.getMsg()) && any_pb.Any.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.GameMessage.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.GameMessage;
        return proto.GameFramework.GameMessage.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.GameMessage.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNopcode(value);
                    break;
                case 2:
                    var value = new any_pb.Any;
                    reader.readMessage(value, any_pb.Any.deserializeBinaryFromReader);
                    msg.setMsg(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.GameMessage.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.GameMessage.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.GameMessage.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNopcode();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getMsg();
        if (f != null) {
            writer.writeMessage(2, f, any_pb.Any.serializeBinaryToWriter);
        }
    };
    proto.GameFramework.GameMessage.prototype.getNopcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.GameMessage.prototype.setNopcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GameFramework.GameMessage.prototype.getMsg = function () {
        return (googleProtobuf.Message.getWrapperField(this, any_pb.Any, 2));
    };
    proto.GameFramework.GameMessage.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.GameFramework.GameMessage.prototype.clearMsg = function () {
        return this.setMsg(undefined);
    };
    proto.GameFramework.GameMessage.prototype.hasMsg = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.JoinTableReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.JoinTableReq.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.JoinTableReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.JoinTableReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.JoinTableReq;
        return proto.GameFramework.JoinTableReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.JoinTableReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 3:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.JoinTableReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.JoinTableReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.JoinTableReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.GameFramework.JoinTableReq.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.GameFramework.JoinTableReq.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.JoinTableAck.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.JoinTableAck.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.JoinTableAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                ret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.JoinTableAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.JoinTableAck;
        return proto.GameFramework.JoinTableAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.JoinTableAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setRet(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.JoinTableAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.JoinTableAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.JoinTableAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRet();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.GameFramework.JoinTableAck.prototype.getRet = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.JoinTableAck.prototype.setRet = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.JoinTableNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.JoinTableNoti.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.JoinTableNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.JoinTableNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.JoinTableNoti;
        return proto.GameFramework.JoinTableNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.JoinTableNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.JoinTableNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.JoinTableNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.JoinTableNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.GameFramework.JoinTableNoti.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.JoinTableNoti.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GameFramework.JoinTableNoti.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.GameFramework.JoinTableNoti.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.DisconnectNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.DisconnectNoti.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.DisconnectNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.DisconnectNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.DisconnectNoti;
        return proto.GameFramework.DisconnectNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.DisconnectNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.DisconnectNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.DisconnectNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.DisconnectNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.GameFramework.DisconnectNoti.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.DisconnectNoti.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GameFramework.DisconnectNoti.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.GameFramework.DisconnectNoti.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.TableDismissNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.TableDismissNoti.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.TableDismissNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.TableDismissNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.TableDismissNoti;
        return proto.GameFramework.TableDismissNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.TableDismissNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.TableDismissNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.TableDismissNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.TableDismissNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.GameFramework.TableDismissNoti.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GameFramework.TableDismissNoti.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.PlayerLeaveNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.PlayerLeaveNoti.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.PlayerLeaveNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.PlayerLeaveNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.PlayerLeaveNoti;
        return proto.GameFramework.PlayerLeaveNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.PlayerLeaveNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.PlayerLeaveNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.PlayerLeaveNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.PlayerLeaveNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.GameFramework.PlayerLeaveNoti.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.PlayerLeaveNoti.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GameFramework.PlayerLeaveNoti.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.GameFramework.PlayerLeaveNoti.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.CommonAck.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.CommonAck.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.CommonAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.CommonAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.CommonAck;
        return proto.GameFramework.CommonAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.CommonAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.CommonAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.CommonAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.CommonAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.GameFramework.CommonAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.CommonAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.ChatReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.ChatReq.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.ChatReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strcontent: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.ChatReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.ChatReq;
        return proto.GameFramework.ChatReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.ChatReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrcontent(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.ChatReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.ChatReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.ChatReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrcontent();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.GameFramework.ChatReq.prototype.getStrcontent = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GameFramework.ChatReq.prototype.setStrcontent = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.ChatNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.ChatNoti.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.ChatNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strcontent: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.ChatNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.ChatNoti;
        return proto.GameFramework.ChatNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.ChatNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrcontent(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.ChatNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.ChatNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.ChatNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrcontent();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.GameFramework.ChatNoti.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.ChatNoti.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GameFramework.ChatNoti.prototype.getStrcontent = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.GameFramework.ChatNoti.prototype.setStrcontent = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.InteractiveReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.InteractiveReq.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.InteractiveReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                ntargetpid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ninteractiveid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.InteractiveReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.InteractiveReq;
        return proto.GameFramework.InteractiveReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.InteractiveReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNtargetpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNinteractiveid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.InteractiveReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.InteractiveReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.InteractiveReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNtargetpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNinteractiveid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.GameFramework.InteractiveReq.prototype.getNtargetpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.InteractiveReq.prototype.setNtargetpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GameFramework.InteractiveReq.prototype.getNinteractiveid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.GameFramework.InteractiveReq.prototype.setNinteractiveid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.InteractiveNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.InteractiveNoti.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.InteractiveNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntargetpid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ninteractiveid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.InteractiveNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.InteractiveNoti;
        return proto.GameFramework.InteractiveNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.InteractiveNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNtargetpid(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNinteractiveid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.InteractiveNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.InteractiveNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.InteractiveNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtargetpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNinteractiveid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
    };
    proto.GameFramework.InteractiveNoti.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.InteractiveNoti.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GameFramework.InteractiveNoti.prototype.getNtargetpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.GameFramework.InteractiveNoti.prototype.setNtargetpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.GameFramework.InteractiveNoti.prototype.getNinteractiveid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.GameFramework.InteractiveNoti.prototype.setNinteractiveid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.GameInteractiveNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.GameInteractiveNoti.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.GameInteractiveNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                ninteractiveid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ncount: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.GameInteractiveNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.GameInteractiveNoti;
        return proto.GameFramework.GameInteractiveNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.GameInteractiveNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNinteractiveid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNcount(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.GameInteractiveNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.GameInteractiveNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.GameInteractiveNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNinteractiveid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNcount();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.GameFramework.GameInteractiveNoti.prototype.getNinteractiveid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.GameInteractiveNoti.prototype.setNinteractiveid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GameFramework.GameInteractiveNoti.prototype.getNcount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.GameFramework.GameInteractiveNoti.prototype.setNcount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GameFramework.GameEffectNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GameFramework.GameEffectNoti.toObject(opt_includeInstance, this);
        };
        proto.GameFramework.GameEffectNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                neffectid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ncount: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GameFramework.GameEffectNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GameFramework.GameEffectNoti;
        return proto.GameFramework.GameEffectNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GameFramework.GameEffectNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNeffectid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNcount(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GameFramework.GameEffectNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GameFramework.GameEffectNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GameFramework.GameEffectNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNeffectid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNcount();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.GameFramework.GameEffectNoti.prototype.getNeffectid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GameFramework.GameEffectNoti.prototype.setNeffectid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GameFramework.GameEffectNoti.prototype.getNcount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.GameFramework.GameEffectNoti.prototype.setNcount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.GameFramework.Opcode = {
        LOGIN_ACK: 0,
        LOGOUT_NOT: 1,
        JOIN_TABLE_REQ: 2,
        JOIN_TABLE_ACK: 3,
        JOIN_TABLE_NOT: 4,
        DISCONNECT_NOT: 5,
        TABLE_DISMISS_NOT: 6,
        CHAT_REQ: 7,
        CHAT_ACK: 8,
        CHAT_NOT: 9,
        INTERACTIVE_REQ: 10,
        INTERACTIVE_ACK: 11,
        INTERACTIVE_NOT: 12,
        FRAMEWORK_MAX: 1000
    };
    goog.object.extend(exports, proto.GameFramework);

    });
    var GameFramework_pb_1 = GameFramework_pb.GameMessage;
    var GameFramework_pb_2 = GameFramework_pb.InteractiveReq;
    var GameFramework_pb_3 = GameFramework_pb.InteractiveNoti;
    var GameFramework_pb_4 = GameFramework_pb.ChatNoti;
    var GameFramework_pb_5 = GameFramework_pb.LoginReq;
    var GameFramework_pb_6 = GameFramework_pb.TableAllocateReq;
    var GameFramework_pb_7 = GameFramework_pb.JoinTableReq;
    var GameFramework_pb_8 = GameFramework_pb.LoginAck;
    var GameFramework_pb_9 = GameFramework_pb.Opcode;
    var GameFramework_pb_10 = GameFramework_pb.ChatReq;

    const grpc = {};
    grpc.web = grpcWeb;


    const proto$1 = {};
    proto$1.GameFramework = GameFramework_pb;
    proto$1.GameFramework.GameServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$1.GameFramework.GameServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_GameService_DismissTable = new grpc.web.MethodDescriptor('/GameFramework.GameService/DismissTable', grpc.web.MethodType.UNARY, proto$1.GameFramework.TableDismissReq, proto$1.GameFramework.TableDismissAck, function (request) {
        return request.serializeBinary();
    }, proto$1.GameFramework.TableDismissAck.deserializeBinary);
    proto$1.GameFramework.GameServiceClient.prototype.dismissTable =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/GameFramework.GameService/DismissTable', request, metadata || {}, methodDescriptor_GameService_DismissTable, callback);
        };
    proto$1.GameFramework.GameServicePromiseClient.prototype.dismissTable =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/GameFramework.GameService/DismissTable', request, metadata || {}, methodDescriptor_GameService_DismissTable);
        };
    const methodDescriptor_GameService_AllocateTable = new grpc.web.MethodDescriptor('/GameFramework.GameService/AllocateTable', grpc.web.MethodType.UNARY, proto$1.GameFramework.TableAllocateReq, proto$1.GameFramework.TableAllocateAck, function (request) {
        return request.serializeBinary();
    }, proto$1.GameFramework.TableAllocateAck.deserializeBinary);
    proto$1.GameFramework.GameServiceClient.prototype.allocateTable =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/GameFramework.GameService/AllocateTable', request, metadata || {}, methodDescriptor_GameService_AllocateTable, callback);
        };
    proto$1.GameFramework.GameServicePromiseClient.prototype.allocateTable =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/GameFramework.GameService/AllocateTable', request, metadata || {}, methodDescriptor_GameService_AllocateTable);
        };
    const methodDescriptor_GameService_Login = new grpc.web.MethodDescriptor('/GameFramework.GameService/Login', grpc.web.MethodType.SERVER_STREAMING, proto$1.GameFramework.LoginReq, proto$1.GameFramework.GameMessage, function (request) {
        return request.serializeBinary();
    }, proto$1.GameFramework.GameMessage.deserializeBinary);
    proto$1.GameFramework.GameServiceClient.prototype.login =
        function (request, metadata) {
            return this.client_.serverStreaming(this.hostname_ +
                '/GameFramework.GameService/Login', request, metadata || {}, methodDescriptor_GameService_Login);
        };
    proto$1.GameFramework.GameServicePromiseClient.prototype.login =
        function (request, metadata) {
            return this.client_.serverStreaming(this.hostname_ +
                '/GameFramework.GameService/Login', request, metadata || {}, methodDescriptor_GameService_Login);
        };
    const methodDescriptor_GameService_CallGameMethod = new grpc.web.MethodDescriptor('/GameFramework.GameService/CallGameMethod', grpc.web.MethodType.UNARY, proto$1.GameFramework.GameMessage, proto$1.GameFramework.GameMessage, function (request) {
        return request.serializeBinary();
    }, proto$1.GameFramework.GameMessage.deserializeBinary);
    proto$1.GameFramework.GameServiceClient.prototype.callGameMethod =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/GameFramework.GameService/CallGameMethod', request, metadata || {}, methodDescriptor_GameService_CallGameMethod, callback);
        };
    proto$1.GameFramework.GameServicePromiseClient.prototype.callGameMethod =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/GameFramework.GameService/CallGameMethod', request, metadata || {}, methodDescriptor_GameService_CallGameMethod);
        };
    var GameFramework_grpc_web_pb = proto$1.GameFramework;
    var GameFramework_grpc_web_pb_1 = GameFramework_grpc_web_pb.GameServiceClient;

    var Health_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.grpc.health.v1.HealthCheckRequest', null, global);
    goog.exportSymbol('proto.grpc.health.v1.HealthCheckResponse', null, global);
    goog.exportSymbol('proto.grpc.health.v1.HealthCheckResponse.ServingStatus', null, global);
    proto.grpc.health.v1.HealthCheckRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.grpc.health.v1.HealthCheckRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.grpc.health.v1.HealthCheckRequest.displayName = 'proto.grpc.health.v1.HealthCheckRequest';
    }
    proto.grpc.health.v1.HealthCheckResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.grpc.health.v1.HealthCheckResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.grpc.health.v1.HealthCheckResponse.displayName = 'proto.grpc.health.v1.HealthCheckResponse';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.grpc.health.v1.HealthCheckRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.grpc.health.v1.HealthCheckRequest.toObject(opt_includeInstance, this);
        };
        proto.grpc.health.v1.HealthCheckRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                service: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.grpc.health.v1.HealthCheckRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.grpc.health.v1.HealthCheckRequest;
        return proto.grpc.health.v1.HealthCheckRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.grpc.health.v1.HealthCheckRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setService(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.grpc.health.v1.HealthCheckRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.grpc.health.v1.HealthCheckRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.grpc.health.v1.HealthCheckRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getService();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.grpc.health.v1.HealthCheckRequest.prototype.getService = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.grpc.health.v1.HealthCheckRequest.prototype.setService = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.grpc.health.v1.HealthCheckResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.grpc.health.v1.HealthCheckResponse.toObject(opt_includeInstance, this);
        };
        proto.grpc.health.v1.HealthCheckResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                status: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.grpc.health.v1.HealthCheckResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.grpc.health.v1.HealthCheckResponse;
        return proto.grpc.health.v1.HealthCheckResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.grpc.health.v1.HealthCheckResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setStatus(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.grpc.health.v1.HealthCheckResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.grpc.health.v1.HealthCheckResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.grpc.health.v1.HealthCheckResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStatus();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.grpc.health.v1.HealthCheckResponse.ServingStatus = {
        UNKNOWN: 0,
        SERVING: 1,
        NOT_SERVING: 2,
        SERVICE_UNKNOWN: 3
    };
    proto.grpc.health.v1.HealthCheckResponse.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.grpc.health.v1.HealthCheckResponse.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    goog.object.extend(exports, proto.grpc.health.v1);

    });
    var Health_pb_1 = Health_pb.HealthCheckRequest;
    var Health_pb_2 = Health_pb.HealthCheckResponse;

    const grpc$1 = {};
    grpc$1.web = grpcWeb;
    const proto$2 = {};
    proto$2.grpc = {};
    proto$2.grpc.health = {};
    proto$2.grpc.health.v1 = Health_pb;
    proto$2.grpc.health.v1.HealthClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$1.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$2.grpc.health.v1.HealthPromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$1.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_Health_Check = new grpc$1.web.MethodDescriptor('/grpc.health.v1.Health/Check', grpc$1.web.MethodType.UNARY, proto$2.grpc.health.v1.HealthCheckRequest, proto$2.grpc.health.v1.HealthCheckResponse, function (request) {
        return request.serializeBinary();
    }, proto$2.grpc.health.v1.HealthCheckResponse.deserializeBinary);
    proto$2.grpc.health.v1.HealthClient.prototype.check =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/grpc.health.v1.Health/Check', request, metadata || {}, methodDescriptor_Health_Check, callback);
        };
    proto$2.grpc.health.v1.HealthPromiseClient.prototype.check =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/grpc.health.v1.Health/Check', request, metadata || {}, methodDescriptor_Health_Check);
        };
    const methodDescriptor_Health_Watch = new grpc$1.web.MethodDescriptor('/grpc.health.v1.Health/Watch', grpc$1.web.MethodType.SERVER_STREAMING, proto$2.grpc.health.v1.HealthCheckRequest, proto$2.grpc.health.v1.HealthCheckResponse, function (request) {
        return request.serializeBinary();
    }, proto$2.grpc.health.v1.HealthCheckResponse.deserializeBinary);
    proto$2.grpc.health.v1.HealthClient.prototype.watch =
        function (request, metadata) {
            return this.client_.serverStreaming(this.hostname_ +
                '/grpc.health.v1.Health/Watch', request, metadata || {}, methodDescriptor_Health_Watch);
        };
    proto$2.grpc.health.v1.HealthPromiseClient.prototype.watch =
        function (request, metadata) {
            return this.client_.serverStreaming(this.hostname_ +
                '/grpc.health.v1.Health/Watch', request, metadata || {}, methodDescriptor_Health_Watch);
        };
    var Health_grpc_web_pb = proto$2.grpc.health.v1;
    var Health_grpc_web_pb_1 = Health_grpc_web_pb.HealthClient;

    class HeartInterceptStream {
        constructor(stream) {
            this.stream = stream;
        }
        on(eventType, callback) {
            if (eventType == "error") {
                const newCallback = (err) => {
                    if (err != null && (err.code === StatusCode.UNKNOWN || err.code === StatusCode.UNAVAILABLE || err.code === StatusCode.NOT_FOUND)) {
                        HeartManager.getInstance().check();
                    }
                    callback(err);
                };
                this.stream.on(eventType, newCallback);
            }
            else {
                this.stream.on(eventType, callback);
            }
            return this;
        }
        removeListener(eventType, callback) {
            this.stream.removeListener(eventType, callback);
        }
        cancel() {
            this.stream.cancel();
        }
    }
    ;
    class HeartManager extends Singleton {
        constructor() {
            super();
            this._isHeartReconnect = false;
            this.heartService = new Health_grpc_web_pb_1(GlobalVariables.SERVER_URL);
        }
        static streamInterceptor() {
            return {
                intercept(request, invoker) {
                    return new HeartInterceptStream(invoker(request));
                }
            };
        }
        static unaryInterceptor() {
            return {
                intercept(request, invoker) {
                    return invoker(request).then((response) => {
                        CC.Log(response.getMetadata());
                        let status = response.getStatus();
                        if (status.code == StatusCode.UNKNOWN ||
                            status.code == StatusCode.UNAVAILABLE ||
                            status.code == StatusCode.NOT_FOUND) {
                            HeartManager.getInstance().check();
                        }
                        CC.Log("heartmanager intercept status: " + status);
                        return response;
                    });
                }
            };
        }
        resetHeartTimer() {
            this.stopHeartTimer();
            Laya.timer.once(30000, this, this.check);
        }
        stopHeartTimer() {
            Laya.timer.clear(this, this.check);
        }
        check() {
            CC.Log("check health");
            let req = new Health_pb_1();
            this.heartService.check(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err == null && res.getStatus() == Health_pb_2.ServingStatus.SERVING) {
                    this.resetHeartTimer();
                    return;
                }
                CC.Log("heart check failed err:", err, " res:", res);
                if (GlobalData.getInstance().lobbySocket == null) {
                    PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [WARNING.NETWORK_EXCEPTION], Laya.stage, STAGE_Z_ORDER.POPUP);
                }
                else {
                    GlobalData.getInstance().lobbySocket.onConnectErr(true);
                }
            });
        }
    }

    class UploadManager extends Singleton {
        constructor() {
            super();
        }
        installGame() {
        }
        startGame() {
        }
        hwStart() {
        }
        hwAgreeBf() {
        }
        hwAgreeAfter() {
        }
        hwLoginBf() {
        }
        hwLoginAfter() {
        }
        userInfo() {
        }
        pageAction(pageName, location, actionName) {
        }
        uploadError(msg, type) {
        }
        getSign(keyArr, data) {
        }
    }

    class GameEvent {
    }
    GameEvent.GAME_START_NOTI = "GAME_START_NOTI";
    GameEvent.UPDATE_CARD_NOTI = "UPDATE_CARD_NOTI";
    GameEvent.TIAN_HU_NOTI = "TIAN_HU_NOTI";
    GameEvent.DEAL_CARD_NOTI = "deal_card_noti";
    GameEvent.PLAYER_OP_BROADCAST_NOTI = "PLAYER_OP_BROADCAST_NOTI";
    GameEvent.PLAYER_OPERATION_NOTI = "PLAYER_OPERATION_NOTI";
    GameEvent.USER_MAJIANG_AUTO_NOT = "user_majiang_auto_not";
    GameEvent.USER_MAJIANG_RECONECT = "user_majiang_reconect";
    GameEvent.CLOSE_SECONDWIN = "CLOSE_SECONDWIN";
    GameEvent.USER_MAJIANG_GAME_END = "user_majiang_game_end";
    GameEvent.GAME_MONEY_CHANGE = "game_money_change";
    GameEvent.PLAYERGIVEUP = "PLAYERGIVEUP";
    GameEvent.HAND_SELECT_CARD_EVENT = "hand_select_card_event";
    GameEvent.HAND_PLAY_CARD_EVENT = "hand_play_card_event";
    GameEvent.IS_PLAY_DAQUE = "IS_PLAY_DAQUE";
    GameEvent.IS_PLAY_COUQINGYISE = "IS_PLAY_COUQINGYISE";
    GameEvent.PLAY_PENG_GANG = "PLAY_PENG_GANG";
    GameEvent.PLAY_CHUPAI = "PLAY_CHUPAI";
    GameEvent.SHOW_SELECTGANG = "SHOW_SELECTGANG";
    GameEvent.PLAY_YIPAODUOX = "PLAY_YIPAODUOX";
    GameEvent.PLAY_HUCARDLIGHTEFFECT = "PLAY_HUCARDLIGHTEFFECT";
    GameEvent.GAME_COOLDOWN = "GAME_COOLDOWN";
    GameEvent.HAND_PLAY_CARD_HONGZHONG_EVENT = "HAND_PLAY_CARD_HONGZHONG_EVENT";
    GameEvent.ISSHOW_PLAYERINPUT = "ISSHOW_PLAYERINPUT";
    GameEvent.PLAY_PENGCARD = "PLAY_PENGCARD";
    GameEvent.PLAYER_HUCARD_ARROWHIDE = "PLAYER_HUCARD_ARROWHIDE";
    GameEvent.PLAYER_CHU_PAI = "PLAYER_CHU_PAI";
    GameEvent.PLAYER_SORT_CARD = "PLAYER_SORT_CARD";
    GameEvent.PLAYER_TIP_CARD = "PLAYER_TIP_CARD";
    GameEvent.GAME_MONEY_CHANGE_EFFECT = "GAME_MONEY_CHANGE_EFFECT";
    GameEvent.GAME_MONEY_ANIM_NOTI = "GAME_MONEY_ANIM_NOTI";
    GameEvent.PLAYERSEND_CHATNOTI = "PLAYERSEND_CHATNOTI";
    GameEvent.PLAYERSEND_INTERACTIVENOTI = "PLAYERSEND_INTERACTIVENOTI";

    class BaseSocket {
        constructor() {
            this.m_saveDatas = [];
            this.initData();
        }
        initData() {
            CC.Log("BaseSocket initData");
            this.notiMap = new Map();
            this.msgNames = new Map();
            this.registerNotify(GameFramework_pb_9.LOGIN_ACK, GameFramework_pb_8, (data) => {
                CC.Log("BaseSocket loginAck = " + JSON.stringify(data.toObject()));
                let response = data.getRet();
                if (response === Common_pb_1.E_PLAYER_NO_PLAYING_TABLE && window.G_GameScene) {
                    window.G_GameScene.onGameOverExit();
                }
            });
            this.registerNotify(GameFramework_pb_9.CHAT_NOT, GameFramework_pb_4, this.chatNotiHandler);
            this.registerNotify(GameFramework_pb_9.INTERACTIVE_NOT, GameFramework_pb_3, this.interactiveHandler);
            this.setMsgName(GameFramework_pb_9.CHAT_REQ, "GameFramework.ChatReq");
            this.setMsgName(GameFramework_pb_9.INTERACTIVE_REQ, "GameFramework.InteractiveReq");
        }
        sendMessage(opcode, request, callback) {
            if (this.msgNames.get(opcode) == null) {
                CC.Loge("opcode %d msgname not set", opcode);
                return;
            }
            let msg = new GameFramework_pb_1();
            msg.setNopcode(opcode);
            let anyPb = new any_pb_1();
            anyPb.pack(request.serializeBinary(), this.msgNames.get(opcode));
            CC.Log("anypb type url", anyPb.getTypeName());
            msg.setMsg(anyPb);
            if (this.client) {
                this.client.callGameMethod(msg, this.meta, callback);
            }
        }
        registerNotify(opcode, classType, callback) {
            if (this.notiMap.has(opcode)) {
                CC.Loge("opcode %d duplicate register", opcode);
                return;
            }
            this.notiMap.set(opcode, (msg) => {
                CC.Log("msg type url", msg.getTypeUrl());
                callback(msg.unpack(classType.deserializeBinary, msg.getTypeName()));
            });
        }
        setMsgName(opcode, name) {
            this.msgNames.set(opcode, name);
        }
        startConnect(_service, table, callback) {
            if (window.G_GameSocket == null || window.G_GameSocket == undefined) {
                return false;
            }
            this.meta = { "service-name": table.getStserverinfo().getStraddr(), "ticket": GlobalData.getInstance().myPid + "_" + GlobalData.getInstance().myTicket };
            this.client = new GameFramework_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            callback();
            return true;
        }
        gotoLogin(__tableID) {
            CC.Log("登录游服11111111111111111111111:" + Date.now());
            let loginReq = new GameFramework_pb_5();
            if (__tableID) {
                loginReq.setStrtableid(__tableID);
            }
            let self = this;
            this.stream = this.client.login(loginReq, this.meta);
            this.stream.on('data', function (response) {
                self.onReceviedData(response.getNopcode(), response.getMsg());
            });
            this.stream.on('status', function (status) {
                CC.Log('gameService status = ' + JSON.stringify(status));
            });
            this.stream.on('error', function (error) {
                CC.Log('gameService error = ' + error);
                UploadManager.getInstance().uploadError(JSON.stringify(error), "错误");
                self.OnGameServerUnConnected();
            });
            this.stream.on('end', function () {
                CC.Log('gameService end');
            });
        }
        closeSocket(_end) {
            CC.Log("关闭游戏服111111111111111111111111");
            if (this.stream) {
                this.stream.cancel();
            }
            this.removeGameProtocol();
        }
        OnGameServerUnConnected() {
        }
        onReceviedData(opcode, data) {
            CC.Log("游戏服务器收到消息 _opcode = " + opcode);
            if (this.notiMap.has(opcode)) {
                this.notiMap.get(opcode)(data);
            }
            if (opcode == OpcodeGame.GameStartNoti ||
                opcode == OpcodeGame.DealCardNoti ||
                opcode == OpcodeGame.PlayerOpNoti ||
                opcode == OpcodeGame.GameResultNoti ||
                opcode == OpcodeGame.ReconnectNoti ||
                opcode == OpcodeGame.TianHuNoti ||
                opcode == OpcodeGame.UpdateCardNoti ||
                opcode == OpcodeGame.PlayerOpGet) {
                this.saveGameDatas(opcode, data);
            }
        }
        cleanSaveDatas() {
            this.m_saveDatas = [];
        }
        saveGameDatas(opcode, data) {
            if (!window.G_GameScene || !window.G_GameScene.m_gameLogic) {
                this.m_saveDatas[this.m_saveDatas.length] = [opcode, data];
            }
        }
        onReSendSaveDatas() {
            for (let i = 0; i < this.m_saveDatas.length; i++) {
                let elem = this.m_saveDatas[i];
                let opcode = elem[0];
                let data = elem[1];
                if (this.notiMap.has(opcode)) {
                    this.notiMap.get(opcode)(data);
                }
            }
        }
        sendChat(p_str) {
            let l_chatReq = new GameFramework_pb_10();
            l_chatReq.setStrcontent(p_str);
            this.sendMessage(GameFramework_pb_9.CHAT_REQ, l_chatReq, (err) => {
                if (err != null) {
                    CC.Log(err);
                }
            });
        }
        sendInteractive(p_itemId, p_pos) {
            let l_req = new GameFramework_pb_2();
            l_req.setNtargetpid(p_pos);
            l_req.setNinteractiveid(p_itemId);
            this.sendMessage(GameFramework_pb_9.INTERACTIVE_REQ, l_req, (err) => {
                if (err != null) {
                    CC.Log(err);
                }
            });
        }
        chatNotiHandler(p_data) {
            EventManager.getInstance().emit(GameEvent.PLAYERSEND_CHATNOTI, [p_data]);
        }
        interactiveHandler(p_data) {
            EventManager.getInstance().emit(GameEvent.PLAYERSEND_INTERACTIVENOTI, [p_data]);
        }
        removeGameProtocol() {
        }
        onReceivedDatasChild(_opcode, _data) {
        }
    }

    const grpc$2 = {};
    grpc$2.web = grpcWeb;

    const proto$3 = {};
    proto$3.Currency = Currency_pb;
    proto$3.Currency.CurrencyServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$2.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$3.Currency.CurrencyServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$2.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_CurrencyService_QueryCy = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/QueryCy', grpc$2.web.MethodType.UNARY, proto$3.Currency.QueryCyRequest, proto$3.Currency.QueryCyResponse, function (request) {
        return request.serializeBinary();
    }, proto$3.Currency.QueryCyResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.queryCy =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/QueryCy', request, metadata || {}, methodDescriptor_CurrencyService_QueryCy, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.queryCy =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/QueryCy', request, metadata || {}, methodDescriptor_CurrencyService_QueryCy);
        };
    const methodDescriptor_CurrencyService_BatchQueryCy = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/BatchQueryCy', grpc$2.web.MethodType.UNARY, proto$3.Currency.BatchQueryCyRequest, proto$3.Currency.BatchQueryCyResponse, function (request) {
        return request.serializeBinary();
    }, proto$3.Currency.BatchQueryCyResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.batchQueryCy =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/BatchQueryCy', request, metadata || {}, methodDescriptor_CurrencyService_BatchQueryCy, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.batchQueryCy =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/BatchQueryCy', request, metadata || {}, methodDescriptor_CurrencyService_BatchQueryCy);
        };
    const methodDescriptor_CurrencyService_AddCy = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/AddCy', grpc$2.web.MethodType.UNARY, proto$3.Currency.AddCyRequest, proto$3.Currency.AddCyResponse, function (request) {
        return request.serializeBinary();
    }, proto$3.Currency.AddCyResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.addCy =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/AddCy', request, metadata || {}, methodDescriptor_CurrencyService_AddCy, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.addCy =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/AddCy', request, metadata || {}, methodDescriptor_CurrencyService_AddCy);
        };
    const methodDescriptor_CurrencyService_LockCy = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/LockCy', grpc$2.web.MethodType.UNARY, proto$3.Currency.LockCyRequest, proto$3.Currency.LockCyResponse, function (request) {
        return request.serializeBinary();
    }, proto$3.Currency.LockCyResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.lockCy =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/LockCy', request, metadata || {}, methodDescriptor_CurrencyService_LockCy, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.lockCy =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/LockCy', request, metadata || {}, methodDescriptor_CurrencyService_LockCy);
        };
    const methodDescriptor_CurrencyService_RenewLock = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/RenewLock', grpc$2.web.MethodType.UNARY, proto$3.Currency.RenewLockRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.renewLock =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/RenewLock', request, metadata || {}, methodDescriptor_CurrencyService_RenewLock, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.renewLock =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/RenewLock', request, metadata || {}, methodDescriptor_CurrencyService_RenewLock);
        };
    const methodDescriptor_CurrencyService_UnlockCy = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/UnlockCy', grpc$2.web.MethodType.UNARY, proto$3.Currency.UnlockCyRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.unlockCy =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/UnlockCy', request, metadata || {}, methodDescriptor_CurrencyService_UnlockCy, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.unlockCy =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/UnlockCy', request, metadata || {}, methodDescriptor_CurrencyService_UnlockCy);
        };
    const methodDescriptor_CurrencyService_ImmediateConsume = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/ImmediateConsume', grpc$2.web.MethodType.UNARY, proto$3.Currency.ImediateConsumeRequest, proto$3.Currency.ImediateConsumeResponse, function (request) {
        return request.serializeBinary();
    }, proto$3.Currency.ImediateConsumeResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.immediateConsume =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/ImmediateConsume', request, metadata || {}, methodDescriptor_CurrencyService_ImmediateConsume, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.immediateConsume =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/ImmediateConsume', request, metadata || {}, methodDescriptor_CurrencyService_ImmediateConsume);
        };
    const methodDescriptor_CurrencyService_PrepareConsume = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/PrepareConsume', grpc$2.web.MethodType.UNARY, proto$3.Currency.PrepareConsumeRequest, proto$3.Currency.PrepareConsumeResponse, function (request) {
        return request.serializeBinary();
    }, proto$3.Currency.PrepareConsumeResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.prepareConsume =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/PrepareConsume', request, metadata || {}, methodDescriptor_CurrencyService_PrepareConsume, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.prepareConsume =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/PrepareConsume', request, metadata || {}, methodDescriptor_CurrencyService_PrepareConsume);
        };
    const methodDescriptor_CurrencyService_CommitConsume = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/CommitConsume', grpc$2.web.MethodType.UNARY, proto$3.Currency.CommitConsumeRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.commitConsume =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/CommitConsume', request, metadata || {}, methodDescriptor_CurrencyService_CommitConsume, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.commitConsume =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/CommitConsume', request, metadata || {}, methodDescriptor_CurrencyService_CommitConsume);
        };
    const methodDescriptor_CurrencyService_RollbackConsume = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/RollbackConsume', grpc$2.web.MethodType.UNARY, proto$3.Currency.RollbackConsumeRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.rollbackConsume =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/RollbackConsume', request, metadata || {}, methodDescriptor_CurrencyService_RollbackConsume, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.rollbackConsume =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/RollbackConsume', request, metadata || {}, methodDescriptor_CurrencyService_RollbackConsume);
        };
    const methodDescriptor_CurrencyService_CyRank = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/CyRank', grpc$2.web.MethodType.UNARY, proto$3.Currency.CyRankGet, proto$3.Currency.CyRankAck, function (request) {
        return request.serializeBinary();
    }, proto$3.Currency.CyRankAck.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.cyRank =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/CyRank', request, metadata || {}, methodDescriptor_CurrencyService_CyRank, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.cyRank =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/CyRank', request, metadata || {}, methodDescriptor_CurrencyService_CyRank);
        };
    const methodDescriptor_CurrencyService_Safe = new grpc$2.web.MethodDescriptor('/Currency.CurrencyService/Safe', grpc$2.web.MethodType.UNARY, proto$3.Currency.SafeGet, proto$3.Currency.SafeAck, function (request) {
        return request.serializeBinary();
    }, proto$3.Currency.SafeAck.deserializeBinary);
    proto$3.Currency.CurrencyServiceClient.prototype.safe =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Currency.CurrencyService/Safe', request, metadata || {}, methodDescriptor_CurrencyService_Safe, callback);
        };
    proto$3.Currency.CurrencyServicePromiseClient.prototype.safe =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Currency.CurrencyService/Safe', request, metadata || {}, methodDescriptor_CurrencyService_Safe);
        };
    var Currency_grpc_web_pb = proto$3.Currency;
    var Currency_grpc_web_pb_1 = Currency_grpc_web_pb.CurrencyServiceClient;
    var Currency_grpc_web_pb_2 = Currency_grpc_web_pb.CurrencyServicePromiseClient;

    class TopTipDlg extends Laya.Script {
        show(txt) {
            this.txtTip.text = txt;
            this.main.visible = true;
            Laya.Tween.to(this, { x: 0, y: 0 }, 500, Laya.Ease.strongInOut, Laya.Handler.create(this, () => {
                Laya.Tween.to(this, { x: 0, y: -100 }, 500, Laya.Ease.strongInOut, Laya.Handler.create(this, () => {
                    this.txtTip.text = "";
                    this.main.visible = false;
                }), 1000);
            }), 0);
        }
    }

    class TopTipsManager extends Singleton {
        constructor() {
            super();
            this.topTipDlg = null;
        }
        init() {
            if (this.topTipDlg == null) {
                let prefab = new Laya.Prefab();
                prefab.json = Laya.loader.getRes(PREFAB_LOBBY.TOPTIPS);
                let node = prefab.create();
                this.topTipDlg = node.getComponent(TopTipDlg);
                node.zOrder = STAGE_Z_ORDER.TIPS;
                Laya.stage.addChild(node);
            }
        }
        showTopTips(p_text) {
            this.init();
            this.topTipDlg.show(p_text);
        }
    }

    class DataCurrency extends Singleton {
        constructor() {
            super();
            this.currencyServiceClient = new Currency_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.cyServiceClientPromise = new Currency_grpc_web_pb_2(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        waitForLobbyTip(msg) {
            let lobbyScene = GlobalData.getInstance().lobbyScene;
            if (lobbyScene != undefined && lobbyScene != null) {
                TopTipsManager.getInstance().showTopTips(msg);
            }
            else {
                Laya.timer.once(1000, this, this.waitForLobbyTip, [msg]);
            }
        }
        queryBean(pid, callback) {
            let req = new Currency_pb_1();
            req.setNpid(pid);
            req.setNtype(Currency_pb_10.GOLDBEAN);
            this.currencyServiceClient.queryCy(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err) {
                    callback(0);
                    return;
                }
                let money = ack.getNcy();
                CC.Log('查询到的金豆 = ' + money);
                callback(money);
            });
        }
        queryGold(pid, callback) {
            let req = new Currency_pb_1();
            req.setNpid(pid);
            req.setNtype(Currency_pb_10.GAMEMONEY);
            this.currencyServiceClient.queryCy(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err) {
                    callback(0);
                    return;
                }
                let money = ack.getNcy();
                CC.Log('查询到的金币 = ' + money);
                callback(money);
            });
        }
        queryPearl(pid, callback) {
            let req = new Currency_pb_1();
            req.setNpid(pid);
            req.setNtype(Currency_pb_10.SAFEBOX);
            this.currencyServiceClient.queryCy(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err) {
                    callback(0);
                    return;
                }
                let money = ack.getNcy();
                CC.Log('查询保险箱 = ' + money);
                callback(money);
            });
        }
        queryDiamond(callback) {
        }
        safeBoxOpe(type, count, callback) {
            let req = new Currency_pb_3();
            req.setType(type);
            req.setNum(count);
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
            this.currencyServiceClient.safe(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                GlobalData.getInstance().loadingAni.Close();
                let msg = WARNING.REQUEST_FAIL;
                if (err) {
                    TopTipsManager.getInstance().showTopTips(msg);
                    callback(null);
                    return;
                }
                let ret = ack.getNret();
                if (ret == 0) {
                    if (type == 1) {
                        msg = WARNING.SAFE_IN_SUCC;
                    }
                    else if (type == 2) {
                        msg = WARNING.WITHDRAW_SUCCESS;
                    }
                    callback(ack);
                }
                else {
                    callback(null);
                }
                TopTipsManager.getInstance().showTopTips(msg);
            });
        }
        batchQueryCy(pids, ptype = 0, callback) {
            let req = new Currency_pb_5();
            req.setArrpidsList(pids);
            req.setNtype(ptype);
            this.currencyServiceClient.batchQueryCy(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                let batchQuery = ack.getMapcysMap();
                callback(batchQuery);
            });
        }
        batchQueryCyPromise(pids, p_useArr) {
            return __awaiter(this, void 0, void 0, function* () {
                let req = new Currency_pb_5();
                req.setArrpidsList(pids);
                req.setNtype(Currency_pb_10.GAMEMONEY);
                let ack = yield this.cyServiceClientPromise.batchQueryCy(req, GlobalData.getInstance().baseMeta);
                if (ack && ack.getMapcysMap()) {
                    let batchQuery = ack.getMapcysMap();
                    batchQuery.forEach((money, pid) => {
                        let user = p_useArr[pid];
                        if (user) {
                            user.gold = money;
                        }
                    });
                }
            });
        }
        addCy(pid, amount) {
            let req = new Currency_pb_8();
            req.setNpid(pid);
            req.setNtype(0);
            req.setNamount(amount);
        }
    }

    var Info_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Info.BindSafeMobileAck', null, global);
    goog.exportSymbol('proto.Info.BindSafeMobileReq', null, global);
    goog.exportSymbol('proto.Info.ClearUserLocationAck', null, global);
    goog.exportSymbol('proto.Info.ClearUserLocationReq', null, global);
    goog.exportSymbol('proto.Info.GetBaseInfoAck', null, global);
    goog.exportSymbol('proto.Info.GetBaseInfoReq', null, global);
    goog.exportSymbol('proto.Info.GetCodeAck', null, global);
    goog.exportSymbol('proto.Info.GetCodeReq', null, global);
    goog.exportSymbol('proto.Info.GetMultiUserInfoAck', null, global);
    goog.exportSymbol('proto.Info.GetMultiUserInfoReq', null, global);
    goog.exportSymbol('proto.Info.GetSafeMobileAck', null, global);
    goog.exportSymbol('proto.Info.GetSafeMobileReq', null, global);
    goog.exportSymbol('proto.Info.GetUserInfoAck', null, global);
    goog.exportSymbol('proto.Info.GetUserInfoReq', null, global);
    goog.exportSymbol('proto.Info.InfoChangeNotify', null, global);
    goog.exportSymbol('proto.Info.NearBySearchAck', null, global);
    goog.exportSymbol('proto.Info.NearBySearchReq', null, global);
    goog.exportSymbol('proto.Info.QueryByIdCardAck', null, global);
    goog.exportSymbol('proto.Info.QueryByIdCardReq', null, global);
    goog.exportSymbol('proto.Info.QueryByNicknameAck', null, global);
    goog.exportSymbol('proto.Info.QueryByNicknameReq', null, global);
    goog.exportSymbol('proto.Info.SetUserLocationAck', null, global);
    goog.exportSymbol('proto.Info.SetUserLocationReq', null, global);
    goog.exportSymbol('proto.Info.UnBindSafeMobileAck', null, global);
    goog.exportSymbol('proto.Info.UnBindSafeMobileReq', null, global);
    goog.exportSymbol('proto.Info.UpdateAvatarAck', null, global);
    goog.exportSymbol('proto.Info.UpdateAvatarReq', null, global);
    goog.exportSymbol('proto.Info.UpdateBaseInfoAck', null, global);
    goog.exportSymbol('proto.Info.UpdateBaseInfoReq', null, global);
    goog.exportSymbol('proto.Info.UpdateFaceAck', null, global);
    goog.exportSymbol('proto.Info.UpdateFaceReq', null, global);
    goog.exportSymbol('proto.Info.UpdateNicknameAck', null, global);
    goog.exportSymbol('proto.Info.UpdateNicknameReq', null, global);
    goog.exportSymbol('proto.Info.UpdateUserInfoAck', null, global);
    goog.exportSymbol('proto.Info.UpdateUserInfoReq', null, global);
    goog.exportSymbol('proto.Info.UserDistance', null, global);
    goog.exportSymbol('proto.Info.UserInfo', null, global);
    goog.exportSymbol('proto.Info.VerifyRealNameAck', null, global);
    goog.exportSymbol('proto.Info.VerifyRealNameReq', null, global);
    proto.Info.UserInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UserInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UserInfo.displayName = 'proto.Info.UserInfo';
    }
    proto.Info.GetUserInfoReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.GetUserInfoReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetUserInfoReq.displayName = 'proto.Info.GetUserInfoReq';
    }
    proto.Info.GetUserInfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.GetUserInfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetUserInfoAck.displayName = 'proto.Info.GetUserInfoAck';
    }
    proto.Info.GetBaseInfoReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.GetBaseInfoReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetBaseInfoReq.displayName = 'proto.Info.GetBaseInfoReq';
    }
    proto.Info.GetBaseInfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.GetBaseInfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetBaseInfoAck.displayName = 'proto.Info.GetBaseInfoAck';
    }
    proto.Info.UpdateUserInfoReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateUserInfoReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateUserInfoReq.displayName = 'proto.Info.UpdateUserInfoReq';
    }
    proto.Info.UpdateUserInfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateUserInfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateUserInfoAck.displayName = 'proto.Info.UpdateUserInfoAck';
    }
    proto.Info.UpdateBaseInfoReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateBaseInfoReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateBaseInfoReq.displayName = 'proto.Info.UpdateBaseInfoReq';
    }
    proto.Info.UpdateBaseInfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateBaseInfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateBaseInfoAck.displayName = 'proto.Info.UpdateBaseInfoAck';
    }
    proto.Info.QueryByNicknameReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.QueryByNicknameReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.QueryByNicknameReq.displayName = 'proto.Info.QueryByNicknameReq';
    }
    proto.Info.QueryByNicknameAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Info.QueryByNicknameAck.repeatedFields_, null);
    };
    goog.inherits(proto.Info.QueryByNicknameAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.QueryByNicknameAck.displayName = 'proto.Info.QueryByNicknameAck';
    }
    proto.Info.QueryByIdCardReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.QueryByIdCardReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.QueryByIdCardReq.displayName = 'proto.Info.QueryByIdCardReq';
    }
    proto.Info.QueryByIdCardAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Info.QueryByIdCardAck.repeatedFields_, null);
    };
    goog.inherits(proto.Info.QueryByIdCardAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.QueryByIdCardAck.displayName = 'proto.Info.QueryByIdCardAck';
    }
    proto.Info.VerifyRealNameReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.VerifyRealNameReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.VerifyRealNameReq.displayName = 'proto.Info.VerifyRealNameReq';
    }
    proto.Info.VerifyRealNameAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.VerifyRealNameAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.VerifyRealNameAck.displayName = 'proto.Info.VerifyRealNameAck';
    }
    proto.Info.UpdateFaceReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateFaceReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateFaceReq.displayName = 'proto.Info.UpdateFaceReq';
    }
    proto.Info.UpdateFaceAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateFaceAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateFaceAck.displayName = 'proto.Info.UpdateFaceAck';
    }
    proto.Info.UpdateNicknameReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateNicknameReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateNicknameReq.displayName = 'proto.Info.UpdateNicknameReq';
    }
    proto.Info.UpdateNicknameAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateNicknameAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateNicknameAck.displayName = 'proto.Info.UpdateNicknameAck';
    }
    proto.Info.UpdateAvatarReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateAvatarReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateAvatarReq.displayName = 'proto.Info.UpdateAvatarReq';
    }
    proto.Info.UpdateAvatarAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UpdateAvatarAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UpdateAvatarAck.displayName = 'proto.Info.UpdateAvatarAck';
    }
    proto.Info.GetMultiUserInfoReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Info.GetMultiUserInfoReq.repeatedFields_, null);
    };
    goog.inherits(proto.Info.GetMultiUserInfoReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetMultiUserInfoReq.displayName = 'proto.Info.GetMultiUserInfoReq';
    }
    proto.Info.GetMultiUserInfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Info.GetMultiUserInfoAck.repeatedFields_, null);
    };
    goog.inherits(proto.Info.GetMultiUserInfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetMultiUserInfoAck.displayName = 'proto.Info.GetMultiUserInfoAck';
    }
    proto.Info.GetSafeMobileReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.GetSafeMobileReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetSafeMobileReq.displayName = 'proto.Info.GetSafeMobileReq';
    }
    proto.Info.GetSafeMobileAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.GetSafeMobileAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetSafeMobileAck.displayName = 'proto.Info.GetSafeMobileAck';
    }
    proto.Info.GetCodeReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.GetCodeReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetCodeReq.displayName = 'proto.Info.GetCodeReq';
    }
    proto.Info.GetCodeAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.GetCodeAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.GetCodeAck.displayName = 'proto.Info.GetCodeAck';
    }
    proto.Info.BindSafeMobileReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.BindSafeMobileReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.BindSafeMobileReq.displayName = 'proto.Info.BindSafeMobileReq';
    }
    proto.Info.BindSafeMobileAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.BindSafeMobileAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.BindSafeMobileAck.displayName = 'proto.Info.BindSafeMobileAck';
    }
    proto.Info.UnBindSafeMobileReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UnBindSafeMobileReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UnBindSafeMobileReq.displayName = 'proto.Info.UnBindSafeMobileReq';
    }
    proto.Info.UnBindSafeMobileAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UnBindSafeMobileAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UnBindSafeMobileAck.displayName = 'proto.Info.UnBindSafeMobileAck';
    }
    proto.Info.InfoChangeNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.InfoChangeNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.InfoChangeNotify.displayName = 'proto.Info.InfoChangeNotify';
    }
    proto.Info.SetUserLocationReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.SetUserLocationReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.SetUserLocationReq.displayName = 'proto.Info.SetUserLocationReq';
    }
    proto.Info.SetUserLocationAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.SetUserLocationAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.SetUserLocationAck.displayName = 'proto.Info.SetUserLocationAck';
    }
    proto.Info.ClearUserLocationReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.ClearUserLocationReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.ClearUserLocationReq.displayName = 'proto.Info.ClearUserLocationReq';
    }
    proto.Info.ClearUserLocationAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.ClearUserLocationAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.ClearUserLocationAck.displayName = 'proto.Info.ClearUserLocationAck';
    }
    proto.Info.NearBySearchReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.NearBySearchReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.NearBySearchReq.displayName = 'proto.Info.NearBySearchReq';
    }
    proto.Info.UserDistance = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Info.UserDistance, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.UserDistance.displayName = 'proto.Info.UserDistance';
    }
    proto.Info.NearBySearchAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Info.NearBySearchAck.repeatedFields_, null);
    };
    goog.inherits(proto.Info.NearBySearchAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Info.NearBySearchAck.displayName = 'proto.Info.NearBySearchAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UserInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UserInfo.toObject(opt_includeInstance, this);
        };
        proto.Info.UserInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strnickname: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                ngender: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nfaceid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                stravatar: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                nbirthday: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                stremail: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
                strcountry: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
                strprovince: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
                strcity: googleProtobuf.Message.getFieldWithDefault(msg, 10, ""),
                npostcode: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                stridname: googleProtobuf.Message.getFieldWithDefault(msg, 12, ""),
                stridcard: googleProtobuf.Message.getFieldWithDefault(msg, 13, ""),
                stridphone: googleProtobuf.Message.getFieldWithDefault(msg, 14, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UserInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UserInfo;
        return proto.Info.UserInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UserInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrnickname(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNgender(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setNfaceid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStravatar(value);
                    break;
                case 6:
                    var value = (reader.readUint32());
                    msg.setNbirthday(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setStremail(value);
                    break;
                case 8:
                    var value = (reader.readString());
                    msg.setStrcountry(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setStrprovince(value);
                    break;
                case 10:
                    var value = (reader.readString());
                    msg.setStrcity(value);
                    break;
                case 11:
                    var value = (reader.readUint32());
                    msg.setNpostcode(value);
                    break;
                case 12:
                    var value = (reader.readString());
                    msg.setStridname(value);
                    break;
                case 13:
                    var value = (reader.readString());
                    msg.setStridcard(value);
                    break;
                case 14:
                    var value = (reader.readString());
                    msg.setStridphone(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UserInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UserInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UserInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrnickname();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNgender();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNfaceid();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getStravatar();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getNbirthday();
        if (f !== 0) {
            writer.writeUint32(6, f);
        }
        f = message.getStremail();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
        f = message.getStrcountry();
        if (f.length > 0) {
            writer.writeString(8, f);
        }
        f = message.getStrprovince();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
        f = message.getStrcity();
        if (f.length > 0) {
            writer.writeString(10, f);
        }
        f = message.getNpostcode();
        if (f !== 0) {
            writer.writeUint32(11, f);
        }
        f = message.getStridname();
        if (f.length > 0) {
            writer.writeString(12, f);
        }
        f = message.getStridcard();
        if (f.length > 0) {
            writer.writeString(13, f);
        }
        f = message.getStridphone();
        if (f.length > 0) {
            writer.writeString(14, f);
        }
    };
    proto.Info.UserInfo.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UserInfo.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UserInfo.prototype.getStrnickname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.UserInfo.prototype.setStrnickname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.UserInfo.prototype.getNgender = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Info.UserInfo.prototype.setNgender = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Info.UserInfo.prototype.getNfaceid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Info.UserInfo.prototype.setNfaceid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Info.UserInfo.prototype.getStravatar = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Info.UserInfo.prototype.setStravatar = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Info.UserInfo.prototype.getNbirthday = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Info.UserInfo.prototype.setNbirthday = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Info.UserInfo.prototype.getStremail = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Info.UserInfo.prototype.setStremail = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Info.UserInfo.prototype.getStrcountry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
    };
    proto.Info.UserInfo.prototype.setStrcountry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 8, value);
    };
    proto.Info.UserInfo.prototype.getStrprovince = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Info.UserInfo.prototype.setStrprovince = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    proto.Info.UserInfo.prototype.getStrcity = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
    };
    proto.Info.UserInfo.prototype.setStrcity = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 10, value);
    };
    proto.Info.UserInfo.prototype.getNpostcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Info.UserInfo.prototype.setNpostcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Info.UserInfo.prototype.getStridname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, ""));
    };
    proto.Info.UserInfo.prototype.setStridname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 12, value);
    };
    proto.Info.UserInfo.prototype.getStridcard = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, ""));
    };
    proto.Info.UserInfo.prototype.setStridcard = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 13, value);
    };
    proto.Info.UserInfo.prototype.getStridphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 14, ""));
    };
    proto.Info.UserInfo.prototype.setStridphone = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 14, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetUserInfoReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetUserInfoReq.toObject(opt_includeInstance, this);
        };
        proto.Info.GetUserInfoReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetUserInfoReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetUserInfoReq;
        return proto.Info.GetUserInfoReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetUserInfoReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetUserInfoReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetUserInfoReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetUserInfoReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Info.GetUserInfoReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.GetUserInfoReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.GetUserInfoReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.GetUserInfoReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.GetUserInfoReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Info.GetUserInfoReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Info.GetUserInfoReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Info.GetUserInfoReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetUserInfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetUserInfoAck.toObject(opt_includeInstance, this);
        };
        proto.Info.GetUserInfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                user: (f = msg.getUser()) && proto.Info.UserInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetUserInfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetUserInfoAck;
        return proto.Info.GetUserInfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetUserInfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Info.UserInfo;
                    reader.readMessage(value, proto.Info.UserInfo.deserializeBinaryFromReader);
                    msg.setUser(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetUserInfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetUserInfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetUserInfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getUser();
        if (f != null) {
            writer.writeMessage(2, f, proto.Info.UserInfo.serializeBinaryToWriter);
        }
    };
    proto.Info.GetUserInfoAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.GetUserInfoAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.GetUserInfoAck.prototype.getUser = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Info.UserInfo, 2));
    };
    proto.Info.GetUserInfoAck.prototype.setUser = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Info.GetUserInfoAck.prototype.clearUser = function () {
        return this.setUser(undefined);
    };
    proto.Info.GetUserInfoAck.prototype.hasUser = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetBaseInfoReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetBaseInfoReq.toObject(opt_includeInstance, this);
        };
        proto.Info.GetBaseInfoReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetBaseInfoReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetBaseInfoReq;
        return proto.Info.GetBaseInfoReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetBaseInfoReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetBaseInfoReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetBaseInfoReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetBaseInfoReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Info.GetBaseInfoReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.GetBaseInfoReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.GetBaseInfoReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.GetBaseInfoReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.GetBaseInfoReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Info.GetBaseInfoReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Info.GetBaseInfoReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Info.GetBaseInfoReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetBaseInfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetBaseInfoAck.toObject(opt_includeInstance, this);
        };
        proto.Info.GetBaseInfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                user: (f = msg.getUser()) && proto.Info.UserInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetBaseInfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetBaseInfoAck;
        return proto.Info.GetBaseInfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetBaseInfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Info.UserInfo;
                    reader.readMessage(value, proto.Info.UserInfo.deserializeBinaryFromReader);
                    msg.setUser(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetBaseInfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetBaseInfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetBaseInfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getUser();
        if (f != null) {
            writer.writeMessage(2, f, proto.Info.UserInfo.serializeBinaryToWriter);
        }
    };
    proto.Info.GetBaseInfoAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.GetBaseInfoAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.GetBaseInfoAck.prototype.getUser = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Info.UserInfo, 2));
    };
    proto.Info.GetBaseInfoAck.prototype.setUser = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Info.GetBaseInfoAck.prototype.clearUser = function () {
        return this.setUser(undefined);
    };
    proto.Info.GetBaseInfoAck.prototype.hasUser = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateUserInfoReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateUserInfoReq.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateUserInfoReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                newinfo: (f = msg.getNewinfo()) && proto.Info.UserInfo.toObject(includeInstance, f),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateUserInfoReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateUserInfoReq;
        return proto.Info.UpdateUserInfoReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateUserInfoReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 2:
                    var value = new proto.Info.UserInfo;
                    reader.readMessage(value, proto.Info.UserInfo.deserializeBinaryFromReader);
                    msg.setNewinfo(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateUserInfoReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateUserInfoReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateUserInfoReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNewinfo();
        if (f != null) {
            writer.writeMessage(2, f, proto.Info.UserInfo.serializeBinaryToWriter);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Info.UpdateUserInfoReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Info.UpdateUserInfoReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Info.UpdateUserInfoReq.prototype.getNewinfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Info.UserInfo, 2));
    };
    proto.Info.UpdateUserInfoReq.prototype.setNewinfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Info.UpdateUserInfoReq.prototype.clearNewinfo = function () {
        return this.setNewinfo(undefined);
    };
    proto.Info.UpdateUserInfoReq.prototype.hasNewinfo = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Info.UpdateUserInfoReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Info.UpdateUserInfoReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Info.UpdateUserInfoReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Info.UpdateUserInfoReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateUserInfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateUserInfoAck.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateUserInfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateUserInfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateUserInfoAck;
        return proto.Info.UpdateUserInfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateUserInfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateUserInfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateUserInfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateUserInfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Info.UpdateUserInfoAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UpdateUserInfoAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UpdateUserInfoAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.UpdateUserInfoAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateBaseInfoReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateBaseInfoReq.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateBaseInfoReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                newinfo: (f = msg.getNewinfo()) && proto.Info.UserInfo.toObject(includeInstance, f),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateBaseInfoReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateBaseInfoReq;
        return proto.Info.UpdateBaseInfoReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateBaseInfoReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 2:
                    var value = new proto.Info.UserInfo;
                    reader.readMessage(value, proto.Info.UserInfo.deserializeBinaryFromReader);
                    msg.setNewinfo(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateBaseInfoReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateBaseInfoReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateBaseInfoReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNewinfo();
        if (f != null) {
            writer.writeMessage(2, f, proto.Info.UserInfo.serializeBinaryToWriter);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Info.UpdateBaseInfoReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Info.UpdateBaseInfoReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Info.UpdateBaseInfoReq.prototype.getNewinfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Info.UserInfo, 2));
    };
    proto.Info.UpdateBaseInfoReq.prototype.setNewinfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Info.UpdateBaseInfoReq.prototype.clearNewinfo = function () {
        return this.setNewinfo(undefined);
    };
    proto.Info.UpdateBaseInfoReq.prototype.hasNewinfo = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Info.UpdateBaseInfoReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Info.UpdateBaseInfoReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Info.UpdateBaseInfoReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Info.UpdateBaseInfoReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateBaseInfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateBaseInfoAck.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateBaseInfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateBaseInfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateBaseInfoAck;
        return proto.Info.UpdateBaseInfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateBaseInfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateBaseInfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateBaseInfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateBaseInfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Info.UpdateBaseInfoAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UpdateBaseInfoAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UpdateBaseInfoAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.UpdateBaseInfoAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.QueryByNicknameReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.QueryByNicknameReq.toObject(opt_includeInstance, this);
        };
        proto.Info.QueryByNicknameReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strnickname: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.QueryByNicknameReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.QueryByNicknameReq;
        return proto.Info.QueryByNicknameReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.QueryByNicknameReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrnickname(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.QueryByNicknameReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.QueryByNicknameReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.QueryByNicknameReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrnickname();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Info.QueryByNicknameReq.prototype.getStrnickname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Info.QueryByNicknameReq.prototype.setStrnickname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Info.QueryByNicknameAck.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.QueryByNicknameAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.QueryByNicknameAck.toObject(opt_includeInstance, this);
        };
        proto.Info.QueryByNicknameAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                vecpidList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.QueryByNicknameAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.QueryByNicknameAck;
        return proto.Info.QueryByNicknameAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.QueryByNicknameAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addVecpid(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.QueryByNicknameAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.QueryByNicknameAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.QueryByNicknameAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getVecpidList();
        if (f.length > 0) {
            writer.writePackedUint32(1, f);
        }
    };
    proto.Info.QueryByNicknameAck.prototype.getVecpidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Info.QueryByNicknameAck.prototype.setVecpidList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Info.QueryByNicknameAck.prototype.addVecpid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Info.QueryByNicknameAck.prototype.clearVecpidList = function () {
        return this.setVecpidList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.QueryByIdCardReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.QueryByIdCardReq.toObject(opt_includeInstance, this);
        };
        proto.Info.QueryByIdCardReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                stridcard: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.QueryByIdCardReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.QueryByIdCardReq;
        return proto.Info.QueryByIdCardReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.QueryByIdCardReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStridcard(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.QueryByIdCardReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.QueryByIdCardReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.QueryByIdCardReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStridcard();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Info.QueryByIdCardReq.prototype.getStridcard = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Info.QueryByIdCardReq.prototype.setStridcard = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Info.QueryByIdCardAck.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.QueryByIdCardAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.QueryByIdCardAck.toObject(opt_includeInstance, this);
        };
        proto.Info.QueryByIdCardAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                vecpidList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.QueryByIdCardAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.QueryByIdCardAck;
        return proto.Info.QueryByIdCardAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.QueryByIdCardAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addVecpid(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.QueryByIdCardAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.QueryByIdCardAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.QueryByIdCardAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getVecpidList();
        if (f.length > 0) {
            writer.writePackedUint32(1, f);
        }
    };
    proto.Info.QueryByIdCardAck.prototype.getVecpidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Info.QueryByIdCardAck.prototype.setVecpidList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Info.QueryByIdCardAck.prototype.addVecpid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Info.QueryByIdCardAck.prototype.clearVecpidList = function () {
        return this.setVecpidList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.VerifyRealNameReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.VerifyRealNameReq.toObject(opt_includeInstance, this);
        };
        proto.Info.VerifyRealNameReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                strname: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                stridcard: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                strphone: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.VerifyRealNameReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.VerifyRealNameReq;
        return proto.Info.VerifyRealNameReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.VerifyRealNameReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrname(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStridcard(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrphone(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.VerifyRealNameReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.VerifyRealNameReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.VerifyRealNameReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStrname();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStridcard();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getStrphone();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
    };
    proto.Info.VerifyRealNameReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.VerifyRealNameReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.VerifyRealNameReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.VerifyRealNameReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.VerifyRealNameReq.prototype.getStrname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Info.VerifyRealNameReq.prototype.setStrname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Info.VerifyRealNameReq.prototype.getStridcard = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Info.VerifyRealNameReq.prototype.setStridcard = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Info.VerifyRealNameReq.prototype.getStrphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Info.VerifyRealNameReq.prototype.setStrphone = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.VerifyRealNameAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.VerifyRealNameAck.toObject(opt_includeInstance, this);
        };
        proto.Info.VerifyRealNameAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.VerifyRealNameAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.VerifyRealNameAck;
        return proto.Info.VerifyRealNameAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.VerifyRealNameAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.VerifyRealNameAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.VerifyRealNameAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.VerifyRealNameAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Info.VerifyRealNameAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.VerifyRealNameAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.VerifyRealNameAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.VerifyRealNameAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateFaceReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateFaceReq.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateFaceReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nface: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateFaceReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateFaceReq;
        return proto.Info.UpdateFaceReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateFaceReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setNface(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateFaceReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateFaceReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateFaceReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNface();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
    };
    proto.Info.UpdateFaceReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UpdateFaceReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UpdateFaceReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.UpdateFaceReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.UpdateFaceReq.prototype.getNface = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Info.UpdateFaceReq.prototype.setNface = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateFaceAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateFaceAck.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateFaceAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateFaceAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateFaceAck;
        return proto.Info.UpdateFaceAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateFaceAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateFaceAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateFaceAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateFaceAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Info.UpdateFaceAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UpdateFaceAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UpdateFaceAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.UpdateFaceAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateNicknameReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateNicknameReq.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateNicknameReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                strnickname: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateNicknameReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateNicknameReq;
        return proto.Info.UpdateNicknameReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateNicknameReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrnickname(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateNicknameReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateNicknameReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateNicknameReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStrnickname();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Info.UpdateNicknameReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UpdateNicknameReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UpdateNicknameReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.UpdateNicknameReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.UpdateNicknameReq.prototype.getStrnickname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Info.UpdateNicknameReq.prototype.setStrnickname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateNicknameAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateNicknameAck.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateNicknameAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateNicknameAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateNicknameAck;
        return proto.Info.UpdateNicknameAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateNicknameAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateNicknameAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateNicknameAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateNicknameAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Info.UpdateNicknameAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UpdateNicknameAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UpdateNicknameAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.UpdateNicknameAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateAvatarReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateAvatarReq.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateAvatarReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                stravatar: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateAvatarReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateAvatarReq;
        return proto.Info.UpdateAvatarReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateAvatarReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStravatar(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateAvatarReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateAvatarReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateAvatarReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStravatar();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Info.UpdateAvatarReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UpdateAvatarReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UpdateAvatarReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.UpdateAvatarReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.UpdateAvatarReq.prototype.getStravatar = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Info.UpdateAvatarReq.prototype.setStravatar = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UpdateAvatarAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UpdateAvatarAck.toObject(opt_includeInstance, this);
        };
        proto.Info.UpdateAvatarAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UpdateAvatarAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UpdateAvatarAck;
        return proto.Info.UpdateAvatarAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UpdateAvatarAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UpdateAvatarAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UpdateAvatarAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UpdateAvatarAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Info.UpdateAvatarAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UpdateAvatarAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UpdateAvatarAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.UpdateAvatarAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Info.GetMultiUserInfoReq.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetMultiUserInfoReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetMultiUserInfoReq.toObject(opt_includeInstance, this);
        };
        proto.Info.GetMultiUserInfoReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                vecpidList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetMultiUserInfoReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetMultiUserInfoReq;
        return proto.Info.GetMultiUserInfoReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetMultiUserInfoReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addVecpid(values[i]);
                    }
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetMultiUserInfoReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetMultiUserInfoReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetMultiUserInfoReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getVecpidList();
        if (f.length > 0) {
            writer.writePackedUint32(3, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
    };
    proto.Info.GetMultiUserInfoReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.GetMultiUserInfoReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.GetMultiUserInfoReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.GetMultiUserInfoReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.GetMultiUserInfoReq.prototype.getVecpidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 3));
    };
    proto.Info.GetMultiUserInfoReq.prototype.setVecpidList = function (value) {
        return googleProtobuf.Message.setField(this, 3, value || []);
    };
    proto.Info.GetMultiUserInfoReq.prototype.addVecpid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
    };
    proto.Info.GetMultiUserInfoReq.prototype.clearVecpidList = function () {
        return this.setVecpidList([]);
    };
    proto.Info.GetMultiUserInfoReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Info.GetMultiUserInfoReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Info.GetMultiUserInfoReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Info.GetMultiUserInfoReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Info.GetMultiUserInfoAck.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetMultiUserInfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetMultiUserInfoAck.toObject(opt_includeInstance, this);
        };
        proto.Info.GetMultiUserInfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                vecusersList: googleProtobuf.Message.toObjectList(msg.getVecusersList(), proto.Info.UserInfo.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetMultiUserInfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetMultiUserInfoAck;
        return proto.Info.GetMultiUserInfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetMultiUserInfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 3:
                    var value = new proto.Info.UserInfo;
                    reader.readMessage(value, proto.Info.UserInfo.deserializeBinaryFromReader);
                    msg.addVecusers(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetMultiUserInfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetMultiUserInfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetMultiUserInfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getVecusersList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(3, f, proto.Info.UserInfo.serializeBinaryToWriter);
        }
    };
    proto.Info.GetMultiUserInfoAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.GetMultiUserInfoAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.GetMultiUserInfoAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.GetMultiUserInfoAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Info.GetMultiUserInfoAck.prototype.getVecusersList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Info.UserInfo, 3));
    };
    proto.Info.GetMultiUserInfoAck.prototype.setVecusersList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.Info.GetMultiUserInfoAck.prototype.addVecusers = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Info.UserInfo, opt_index);
    };
    proto.Info.GetMultiUserInfoAck.prototype.clearVecusersList = function () {
        return this.setVecusersList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetSafeMobileReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetSafeMobileReq.toObject(opt_includeInstance, this);
        };
        proto.Info.GetSafeMobileReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetSafeMobileReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetSafeMobileReq;
        return proto.Info.GetSafeMobileReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetSafeMobileReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetSafeMobileReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetSafeMobileReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetSafeMobileReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Info.GetSafeMobileReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.GetSafeMobileReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.GetSafeMobileReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.GetSafeMobileReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.GetSafeMobileReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Info.GetSafeMobileReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Info.GetSafeMobileReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Info.GetSafeMobileReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetSafeMobileAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetSafeMobileAck.toObject(opt_includeInstance, this);
        };
        proto.Info.GetSafeMobileAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strmobilenum: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetSafeMobileAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetSafeMobileAck;
        return proto.Info.GetSafeMobileAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetSafeMobileAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrmobilenum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetSafeMobileAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetSafeMobileAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetSafeMobileAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrmobilenum();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Info.GetSafeMobileAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.GetSafeMobileAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.GetSafeMobileAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.GetSafeMobileAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Info.GetSafeMobileAck.prototype.getStrmobilenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Info.GetSafeMobileAck.prototype.setStrmobilenum = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetCodeReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetCodeReq.toObject(opt_includeInstance, this);
        };
        proto.Info.GetCodeReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strcodetype: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                strphonenum: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetCodeReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetCodeReq;
        return proto.Info.GetCodeReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetCodeReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrcodetype(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrphonenum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetCodeReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetCodeReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetCodeReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrcodetype();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getStrphonenum();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Info.GetCodeReq.prototype.getStrcodetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Info.GetCodeReq.prototype.setStrcodetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Info.GetCodeReq.prototype.getStrphonenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.GetCodeReq.prototype.setStrphonenum = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.GetCodeAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.GetCodeAck.toObject(opt_includeInstance, this);
        };
        proto.Info.GetCodeAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strcodetype: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.GetCodeAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.GetCodeAck;
        return proto.Info.GetCodeAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.GetCodeAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrcodetype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.GetCodeAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.GetCodeAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.GetCodeAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getStrcodetype();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Info.GetCodeAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.GetCodeAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.GetCodeAck.prototype.getStrcodetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.GetCodeAck.prototype.setStrcodetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.BindSafeMobileReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.BindSafeMobileReq.toObject(opt_includeInstance, this);
        };
        proto.Info.BindSafeMobileReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                strmobilenum: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                ncode: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                strcodetype: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.BindSafeMobileReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.BindSafeMobileReq;
        return proto.Info.BindSafeMobileReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.BindSafeMobileReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrmobilenum(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNcode(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrcodetype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.BindSafeMobileReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.BindSafeMobileReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.BindSafeMobileReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStrmobilenum();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getNcode();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getStrcodetype();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
    };
    proto.Info.BindSafeMobileReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.BindSafeMobileReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.BindSafeMobileReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.BindSafeMobileReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.BindSafeMobileReq.prototype.getStrmobilenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Info.BindSafeMobileReq.prototype.setStrmobilenum = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Info.BindSafeMobileReq.prototype.getNcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Info.BindSafeMobileReq.prototype.setNcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Info.BindSafeMobileReq.prototype.getStrcodetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Info.BindSafeMobileReq.prototype.setStrcodetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.BindSafeMobileAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.BindSafeMobileAck.toObject(opt_includeInstance, this);
        };
        proto.Info.BindSafeMobileAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strmobilenum: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.BindSafeMobileAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.BindSafeMobileAck;
        return proto.Info.BindSafeMobileAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.BindSafeMobileAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrmobilenum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.BindSafeMobileAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.BindSafeMobileAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.BindSafeMobileAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrmobilenum();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Info.BindSafeMobileAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.BindSafeMobileAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.BindSafeMobileAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.BindSafeMobileAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Info.BindSafeMobileAck.prototype.getStrmobilenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Info.BindSafeMobileAck.prototype.setStrmobilenum = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UnBindSafeMobileReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UnBindSafeMobileReq.toObject(opt_includeInstance, this);
        };
        proto.Info.UnBindSafeMobileReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UnBindSafeMobileReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UnBindSafeMobileReq;
        return proto.Info.UnBindSafeMobileReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UnBindSafeMobileReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UnBindSafeMobileReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UnBindSafeMobileReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UnBindSafeMobileReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Info.UnBindSafeMobileReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UnBindSafeMobileReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UnBindSafeMobileReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.UnBindSafeMobileReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UnBindSafeMobileAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UnBindSafeMobileAck.toObject(opt_includeInstance, this);
        };
        proto.Info.UnBindSafeMobileAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UnBindSafeMobileAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UnBindSafeMobileAck;
        return proto.Info.UnBindSafeMobileAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UnBindSafeMobileAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UnBindSafeMobileAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UnBindSafeMobileAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UnBindSafeMobileAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Info.UnBindSafeMobileAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UnBindSafeMobileAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UnBindSafeMobileAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.UnBindSafeMobileAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.InfoChangeNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.InfoChangeNotify.toObject(opt_includeInstance, this);
        };
        proto.Info.InfoChangeNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                stroldinfo: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                ntime: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.InfoChangeNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.InfoChangeNotify;
        return proto.Info.InfoChangeNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.InfoChangeNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNtype(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStroldinfo(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNtime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.InfoChangeNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.InfoChangeNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.InfoChangeNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStroldinfo();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getNtime();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
    };
    proto.Info.InfoChangeNotify.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.InfoChangeNotify.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.InfoChangeNotify.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.InfoChangeNotify.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Info.InfoChangeNotify.prototype.getStroldinfo = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Info.InfoChangeNotify.prototype.setStroldinfo = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Info.InfoChangeNotify.prototype.getNtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Info.InfoChangeNotify.prototype.setNtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.SetUserLocationReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.SetUserLocationReq.toObject(opt_includeInstance, this);
        };
        proto.Info.SetUserLocationReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                flat: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
                flng: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.SetUserLocationReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.SetUserLocationReq;
        return proto.Info.SetUserLocationReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.SetUserLocationReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readDouble());
                    msg.setFlat(value);
                    break;
                case 4:
                    var value = (reader.readDouble());
                    msg.setFlng(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.SetUserLocationReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.SetUserLocationReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.SetUserLocationReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getFlat();
        if (f !== 0.0) {
            writer.writeDouble(3, f);
        }
        f = message.getFlng();
        if (f !== 0.0) {
            writer.writeDouble(4, f);
        }
    };
    proto.Info.SetUserLocationReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.SetUserLocationReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.SetUserLocationReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.SetUserLocationReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.SetUserLocationReq.prototype.getFlat = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
    };
    proto.Info.SetUserLocationReq.prototype.setFlat = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 3, value);
    };
    proto.Info.SetUserLocationReq.prototype.getFlng = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
    };
    proto.Info.SetUserLocationReq.prototype.setFlng = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.SetUserLocationAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.SetUserLocationAck.toObject(opt_includeInstance, this);
        };
        proto.Info.SetUserLocationAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.SetUserLocationAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.SetUserLocationAck;
        return proto.Info.SetUserLocationAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.SetUserLocationAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.SetUserLocationAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.SetUserLocationAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.SetUserLocationAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Info.SetUserLocationAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.SetUserLocationAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.SetUserLocationAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.SetUserLocationAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.ClearUserLocationReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.ClearUserLocationReq.toObject(opt_includeInstance, this);
        };
        proto.Info.ClearUserLocationReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.ClearUserLocationReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.ClearUserLocationReq;
        return proto.Info.ClearUserLocationReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.ClearUserLocationReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.ClearUserLocationReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.ClearUserLocationReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.ClearUserLocationReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Info.ClearUserLocationReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.ClearUserLocationReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.ClearUserLocationReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.ClearUserLocationReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.ClearUserLocationAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.ClearUserLocationAck.toObject(opt_includeInstance, this);
        };
        proto.Info.ClearUserLocationAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.ClearUserLocationAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.ClearUserLocationAck;
        return proto.Info.ClearUserLocationAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.ClearUserLocationAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.ClearUserLocationAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.ClearUserLocationAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.ClearUserLocationAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Info.ClearUserLocationAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.ClearUserLocationAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.ClearUserLocationAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.ClearUserLocationAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.NearBySearchReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.NearBySearchReq.toObject(opt_includeInstance, this);
        };
        proto.Info.NearBySearchReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                flat: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
                flng: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
                nmaxdistance: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                nmaxuser: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.NearBySearchReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.NearBySearchReq;
        return proto.Info.NearBySearchReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.NearBySearchReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readDouble());
                    msg.setFlat(value);
                    break;
                case 4:
                    var value = (reader.readDouble());
                    msg.setFlng(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNmaxdistance(value);
                    break;
                case 6:
                    var value = (reader.readUint32());
                    msg.setNmaxuser(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.NearBySearchReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.NearBySearchReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.NearBySearchReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getFlat();
        if (f !== 0.0) {
            writer.writeDouble(3, f);
        }
        f = message.getFlng();
        if (f !== 0.0) {
            writer.writeDouble(4, f);
        }
        f = message.getNmaxdistance();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getNmaxuser();
        if (f !== 0) {
            writer.writeUint32(6, f);
        }
    };
    proto.Info.NearBySearchReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.NearBySearchReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.NearBySearchReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Info.NearBySearchReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Info.NearBySearchReq.prototype.getFlat = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
    };
    proto.Info.NearBySearchReq.prototype.setFlat = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 3, value);
    };
    proto.Info.NearBySearchReq.prototype.getFlng = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
    };
    proto.Info.NearBySearchReq.prototype.setFlng = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 4, value);
    };
    proto.Info.NearBySearchReq.prototype.getNmaxdistance = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Info.NearBySearchReq.prototype.setNmaxdistance = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Info.NearBySearchReq.prototype.getNmaxuser = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Info.NearBySearchReq.prototype.setNmaxuser = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.UserDistance.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.UserDistance.toObject(opt_includeInstance, this);
        };
        proto.Info.UserDistance.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ndistance: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.UserDistance.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.UserDistance;
        return proto.Info.UserDistance.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.UserDistance.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNdistance(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.UserDistance.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.UserDistance.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.UserDistance.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNdistance();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Info.UserDistance.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.UserDistance.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.UserDistance.prototype.getNdistance = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.UserDistance.prototype.setNdistance = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Info.NearBySearchAck.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Info.NearBySearchAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Info.NearBySearchAck.toObject(opt_includeInstance, this);
        };
        proto.Info.NearBySearchAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                usersList: googleProtobuf.Message.toObjectList(msg.getUsersList(), proto.Info.UserDistance.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Info.NearBySearchAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Info.NearBySearchAck;
        return proto.Info.NearBySearchAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Info.NearBySearchAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = new proto.Info.UserDistance;
                    reader.readMessage(value, proto.Info.UserDistance.deserializeBinaryFromReader);
                    msg.addUsers(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Info.NearBySearchAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Info.NearBySearchAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Info.NearBySearchAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getUsersList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(3, f, proto.Info.UserDistance.serializeBinaryToWriter);
        }
    };
    proto.Info.NearBySearchAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Info.NearBySearchAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Info.NearBySearchAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Info.NearBySearchAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Info.NearBySearchAck.prototype.getUsersList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Info.UserDistance, 3));
    };
    proto.Info.NearBySearchAck.prototype.setUsersList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.Info.NearBySearchAck.prototype.addUsers = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Info.UserDistance, opt_index);
    };
    proto.Info.NearBySearchAck.prototype.clearUsersList = function () {
        return this.setUsersList([]);
    };
    goog.object.extend(exports, proto.Info);

    });
    var Info_pb_1 = Info_pb.GetUserInfoReq;
    var Info_pb_2 = Info_pb.GetUserInfoAck;
    var Info_pb_3 = Info_pb.VerifyRealNameReq;
    var Info_pb_4 = Info_pb.VerifyRealNameAck;
    var Info_pb_5 = Info_pb.UpdateFaceReq;
    var Info_pb_6 = Info_pb.UpdateFaceAck;
    var Info_pb_7 = Info_pb.UpdateNicknameReq;
    var Info_pb_8 = Info_pb.UpdateNicknameAck;
    var Info_pb_9 = Info_pb.GetCodeReq;
    var Info_pb_10 = Info_pb.GetCodeAck;
    var Info_pb_11 = Info_pb.SetUserLocationReq;
    var Info_pb_12 = Info_pb.SetUserLocationAck;
    var Info_pb_13 = Info_pb.ClearUserLocationReq;
    var Info_pb_14 = Info_pb.ClearUserLocationAck;
    var Info_pb_15 = Info_pb.BindSafeMobileReq;
    var Info_pb_16 = Info_pb.BindSafeMobileAck;
    var Info_pb_17 = Info_pb.UnBindSafeMobileReq;
    var Info_pb_18 = Info_pb.UnBindSafeMobileAck;
    var Info_pb_19 = Info_pb.GetMultiUserInfoReq;
    var Info_pb_20 = Info_pb.GetMultiUserInfoAck;
    var Info_pb_21 = Info_pb.UpdateUserInfoReq;
    var Info_pb_22 = Info_pb.UpdateUserInfoAck;
    var Info_pb_23 = Info_pb.UserInfo;
    var Info_pb_24 = Info_pb.GetSafeMobileReq;
    var Info_pb_25 = Info_pb.GetSafeMobileAck;
    var Info_pb_26 = Info_pb.UpdateAvatarReq;
    var Info_pb_27 = Info_pb.UpdateAvatarAck;

    const grpc$3 = {};
    grpc$3.web = grpcWeb;
    const proto$4 = {};
    proto$4.Info = Info_pb;
    proto$4.Info.InfoServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$3.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$4.Info.InfoServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$3.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_InfoService_GetUserInfo = new grpc$3.web.MethodDescriptor('/Info.InfoService/GetUserInfo', grpc$3.web.MethodType.UNARY, proto$4.Info.GetUserInfoReq, proto$4.Info.GetUserInfoAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.GetUserInfoAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.getUserInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/GetUserInfo', request, metadata || {}, methodDescriptor_InfoService_GetUserInfo, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.getUserInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/GetUserInfo', request, metadata || {}, methodDescriptor_InfoService_GetUserInfo);
        };
    const methodDescriptor_InfoService_GetBaseInfo = new grpc$3.web.MethodDescriptor('/Info.InfoService/GetBaseInfo', grpc$3.web.MethodType.UNARY, proto$4.Info.GetBaseInfoReq, proto$4.Info.GetBaseInfoAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.GetBaseInfoAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.getBaseInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/GetBaseInfo', request, metadata || {}, methodDescriptor_InfoService_GetBaseInfo, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.getBaseInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/GetBaseInfo', request, metadata || {}, methodDescriptor_InfoService_GetBaseInfo);
        };
    const methodDescriptor_InfoService_UpdateUserInfo = new grpc$3.web.MethodDescriptor('/Info.InfoService/UpdateUserInfo', grpc$3.web.MethodType.UNARY, proto$4.Info.UpdateUserInfoReq, proto$4.Info.UpdateUserInfoAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.UpdateUserInfoAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.updateUserInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/UpdateUserInfo', request, metadata || {}, methodDescriptor_InfoService_UpdateUserInfo, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.updateUserInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/UpdateUserInfo', request, metadata || {}, methodDescriptor_InfoService_UpdateUserInfo);
        };
    const methodDescriptor_InfoService_UpdateBaseInfo = new grpc$3.web.MethodDescriptor('/Info.InfoService/UpdateBaseInfo', grpc$3.web.MethodType.UNARY, proto$4.Info.UpdateBaseInfoReq, proto$4.Info.UpdateBaseInfoAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.UpdateBaseInfoAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.updateBaseInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/UpdateBaseInfo', request, metadata || {}, methodDescriptor_InfoService_UpdateBaseInfo, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.updateBaseInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/UpdateBaseInfo', request, metadata || {}, methodDescriptor_InfoService_UpdateBaseInfo);
        };
    const methodDescriptor_InfoService_QueryByNickname = new grpc$3.web.MethodDescriptor('/Info.InfoService/QueryByNickname', grpc$3.web.MethodType.UNARY, proto$4.Info.QueryByNicknameReq, proto$4.Info.QueryByNicknameAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.QueryByNicknameAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.queryByNickname =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/QueryByNickname', request, metadata || {}, methodDescriptor_InfoService_QueryByNickname, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.queryByNickname =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/QueryByNickname', request, metadata || {}, methodDescriptor_InfoService_QueryByNickname);
        };
    const methodDescriptor_InfoService_QueryByIdCard = new grpc$3.web.MethodDescriptor('/Info.InfoService/QueryByIdCard', grpc$3.web.MethodType.UNARY, proto$4.Info.QueryByIdCardReq, proto$4.Info.QueryByIdCardAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.QueryByIdCardAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.queryByIdCard =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/QueryByIdCard', request, metadata || {}, methodDescriptor_InfoService_QueryByIdCard, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.queryByIdCard =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/QueryByIdCard', request, metadata || {}, methodDescriptor_InfoService_QueryByIdCard);
        };
    const methodDescriptor_InfoService_VerifyRealName = new grpc$3.web.MethodDescriptor('/Info.InfoService/VerifyRealName', grpc$3.web.MethodType.UNARY, proto$4.Info.VerifyRealNameReq, proto$4.Info.VerifyRealNameAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.VerifyRealNameAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.verifyRealName =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/VerifyRealName', request, metadata || {}, methodDescriptor_InfoService_VerifyRealName, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.verifyRealName =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/VerifyRealName', request, metadata || {}, methodDescriptor_InfoService_VerifyRealName);
        };
    const methodDescriptor_InfoService_UpdateFace = new grpc$3.web.MethodDescriptor('/Info.InfoService/UpdateFace', grpc$3.web.MethodType.UNARY, proto$4.Info.UpdateFaceReq, proto$4.Info.UpdateFaceAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.UpdateFaceAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.updateFace =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/UpdateFace', request, metadata || {}, methodDescriptor_InfoService_UpdateFace, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.updateFace =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/UpdateFace', request, metadata || {}, methodDescriptor_InfoService_UpdateFace);
        };
    const methodDescriptor_InfoService_UpdateNickname = new grpc$3.web.MethodDescriptor('/Info.InfoService/UpdateNickname', grpc$3.web.MethodType.UNARY, proto$4.Info.UpdateNicknameReq, proto$4.Info.UpdateNicknameAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.UpdateNicknameAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.updateNickname =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/UpdateNickname', request, metadata || {}, methodDescriptor_InfoService_UpdateNickname, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.updateNickname =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/UpdateNickname', request, metadata || {}, methodDescriptor_InfoService_UpdateNickname);
        };
    const methodDescriptor_InfoService_UpdateAvatar = new grpc$3.web.MethodDescriptor('/Info.InfoService/UpdateAvatar', grpc$3.web.MethodType.UNARY, proto$4.Info.UpdateAvatarReq, proto$4.Info.UpdateAvatarAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.UpdateAvatarAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.updateAvatar =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/UpdateAvatar', request, metadata || {}, methodDescriptor_InfoService_UpdateAvatar, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.updateAvatar =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/UpdateAvatar', request, metadata || {}, methodDescriptor_InfoService_UpdateAvatar);
        };
    const methodDescriptor_InfoService_GetMultiUserInfo = new grpc$3.web.MethodDescriptor('/Info.InfoService/GetMultiUserInfo', grpc$3.web.MethodType.UNARY, proto$4.Info.GetMultiUserInfoReq, proto$4.Info.GetMultiUserInfoAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.GetMultiUserInfoAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.getMultiUserInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/GetMultiUserInfo', request, metadata || {}, methodDescriptor_InfoService_GetMultiUserInfo, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.getMultiUserInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/GetMultiUserInfo', request, metadata || {}, methodDescriptor_InfoService_GetMultiUserInfo);
        };
    const methodDescriptor_InfoService_GetSafeMobile = new grpc$3.web.MethodDescriptor('/Info.InfoService/GetSafeMobile', grpc$3.web.MethodType.UNARY, proto$4.Info.GetSafeMobileReq, proto$4.Info.GetSafeMobileAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.GetSafeMobileAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.getSafeMobile =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/GetSafeMobile', request, metadata || {}, methodDescriptor_InfoService_GetSafeMobile, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.getSafeMobile =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/GetSafeMobile', request, metadata || {}, methodDescriptor_InfoService_GetSafeMobile);
        };
    const methodDescriptor_InfoService_GetCode = new grpc$3.web.MethodDescriptor('/Info.InfoService/GetCode', grpc$3.web.MethodType.UNARY, proto$4.Info.GetCodeReq, proto$4.Info.GetCodeAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.GetCodeAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.getCode =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/GetCode', request, metadata || {}, methodDescriptor_InfoService_GetCode, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.getCode =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/GetCode', request, metadata || {}, methodDescriptor_InfoService_GetCode);
        };
    const methodDescriptor_InfoService_BindSafeMobile = new grpc$3.web.MethodDescriptor('/Info.InfoService/BindSafeMobile', grpc$3.web.MethodType.UNARY, proto$4.Info.BindSafeMobileReq, proto$4.Info.BindSafeMobileAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.BindSafeMobileAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.bindSafeMobile =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/BindSafeMobile', request, metadata || {}, methodDescriptor_InfoService_BindSafeMobile, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.bindSafeMobile =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/BindSafeMobile', request, metadata || {}, methodDescriptor_InfoService_BindSafeMobile);
        };
    const methodDescriptor_InfoService_UnBindSafeMobile = new grpc$3.web.MethodDescriptor('/Info.InfoService/UnBindSafeMobile', grpc$3.web.MethodType.UNARY, proto$4.Info.UnBindSafeMobileReq, proto$4.Info.UnBindSafeMobileAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.UnBindSafeMobileAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.unBindSafeMobile =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/UnBindSafeMobile', request, metadata || {}, methodDescriptor_InfoService_UnBindSafeMobile, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.unBindSafeMobile =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/UnBindSafeMobile', request, metadata || {}, methodDescriptor_InfoService_UnBindSafeMobile);
        };
    const methodDescriptor_InfoService_SetUserLocation = new grpc$3.web.MethodDescriptor('/Info.InfoService/SetUserLocation', grpc$3.web.MethodType.UNARY, proto$4.Info.SetUserLocationReq, proto$4.Info.SetUserLocationAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.SetUserLocationAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.setUserLocation =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/SetUserLocation', request, metadata || {}, methodDescriptor_InfoService_SetUserLocation, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.setUserLocation =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/SetUserLocation', request, metadata || {}, methodDescriptor_InfoService_SetUserLocation);
        };
    const methodDescriptor_InfoService_ClearUserLocation = new grpc$3.web.MethodDescriptor('/Info.InfoService/ClearUserLocation', grpc$3.web.MethodType.UNARY, proto$4.Info.ClearUserLocationReq, proto$4.Info.ClearUserLocationAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.ClearUserLocationAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.clearUserLocation =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/ClearUserLocation', request, metadata || {}, methodDescriptor_InfoService_ClearUserLocation, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.clearUserLocation =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/ClearUserLocation', request, metadata || {}, methodDescriptor_InfoService_ClearUserLocation);
        };
    const methodDescriptor_InfoService_NearBySearch = new grpc$3.web.MethodDescriptor('/Info.InfoService/NearBySearch', grpc$3.web.MethodType.UNARY, proto$4.Info.NearBySearchReq, proto$4.Info.NearBySearchAck, function (request) {
        return request.serializeBinary();
    }, proto$4.Info.NearBySearchAck.deserializeBinary);
    proto$4.Info.InfoServiceClient.prototype.nearBySearch =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Info.InfoService/NearBySearch', request, metadata || {}, methodDescriptor_InfoService_NearBySearch, callback);
        };
    proto$4.Info.InfoServicePromiseClient.prototype.nearBySearch =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Info.InfoService/NearBySearch', request, metadata || {}, methodDescriptor_InfoService_NearBySearch);
        };
    var Info_grpc_web_pb = proto$4.Info;
    var Info_grpc_web_pb_1 = Info_grpc_web_pb.InfoServiceClient;
    var Info_grpc_web_pb_2 = Info_grpc_web_pb.InfoServicePromiseClient;

    class Md5 {
        constructor() {
            this.A = 0x67452301;
            this.B = 0xefcdab89;
            this.C = 0x98badcfe;
            this.D = 0x10325476;
            this.S = [
                7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,
                5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,
                4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,
                6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21
            ];
        }
        static get Instance() {
            return this._inst || (this._inst = new Md5());
        }
        get_md5(str) {
            return this.md5(str);
        }
        split(target, step, markString = typeof target === "string") {
            if (typeof target === "string")
                target = target.split("");
            let result = target.map((_, index) => index % step === 0
                ? Array.from(Array(step).keys()).map((x) => target[index + x])
                : [])
                .filter((x) => x.length > 0);
            if (markString)
                result = result.map((x) => x.join(""));
            return result;
        }
        padding(str, length, char, tail = true, isArray = Array.isArray(str)) {
            let arr;
            if (Array.isArray(str)) {
                arr = str;
            }
            else {
                arr = str.split("");
            }
            const paddingStr = this.range(length - str.length).map(() => char);
            const result = tail ? arr.concat(paddingStr) : paddingStr.concat(arr);
            return isArray ? result : result.join("");
        }
        little_endian(charCode) {
            return this.split(this.padding(charCode.toString(16), 8, "0", false), 2).reverse().join("");
        }
        range(...args) {
            const start = args.length === 1 ? 0 : args[0];
            const end = args.length === 2 ? args[1] : args[0] - 1;
            return Array.from(Array(end - start + 1).keys()).map((x) => x + start);
        }
        to_binary(code, bit = 8, max = Math.pow(2, bit) - 1) {
            if (code < 0)
                throw new Error("code should be greater than: 0");
            if (code > max)
                throw new Error("code should be less than: " + max);
            return this.padding(code.toString(2), bit, "0", false);
        }
        to_hex(code, bit = 8, max = Math.pow(16, bit) - 1) {
            if (code < 0)
                throw new Error("code should be greater than: 0");
            if (code > max)
                throw new Error("code should be less than: " + max);
            return this.padding(code.toString(16), bit, "0", false);
        }
        to_code(str) {
            if (str.substr(0, 2).toLowerCase() === "0b")
                return parseInt(str.substr(2, 8), 2);
            if (str.substr(0, 2).toLowerCase() === "0x")
                return parseInt(str.substr(2, 8), 16);
        }
        utf16_to_utf8(str) {
            return str.split("").map((char) => this.utf8_encode(char)).join("");
        }
        utf8_encode(char) {
            let utftext = "";
            const c = char.charCodeAt(0);
            if (c < 128) {
                utftext += String.fromCharCode(c);
            }
            else if ((c > 127) && (c < 2048)) {
                utftext += String.fromCharCode((c >> 6) | 0b11000000);
                utftext += String.fromCharCode((c & 0b00111111) | 0b10000000);
            }
            else {
                utftext += String.fromCharCode((c >> 12) | 0b11100000);
                utftext += String.fromCharCode(((c >> 6) & 0b00111111) | 0b10000000);
                utftext += String.fromCharCode((c & 0b00111111) | 0b10000000);
            }
            return utftext;
        }
        uint_add(...args) {
            const t = Uint32Array.from([0]);
            const x = Uint32Array.from(args);
            x.forEach(n => t[0] = t[0] + n);
            return t[0];
        }
        loop_shift_left(n, bits) {
            return (n << bits) | (n >>> (32 - bits));
        }
        F(b, c, d) {
            return (b & c) | (~b & d);
        }
        G(b, c, d) {
            return (b & d) | (c & ~d);
        }
        H(b, c, d) {
            return b ^ c ^ d;
        }
        I(b, c, d) {
            return c ^ (b | ~d);
        }
        T(i) {
            return Math.floor(Math.pow(2, 32) * Math.abs(Math.sin(i + 1)));
        }
        x_index(i) {
            if (i >= 0 && i <= 15)
                return i;
            if (i >= 16 && i <= 31)
                return (5 * i + 1) % 16;
            if (i >= 32 && i <= 47)
                return (3 * i + 5) % 16;
            if (i >= 48 && i <= 63)
                return (7 * i) % 16;
            return 0;
        }
        wrap(m) {
            return (a, b, c, d, x, s, t) => {
                return this.uint_add(this.loop_shift_left(this.uint_add(a, m(b, c, d), x, t), s), b);
            };
        }
        porcess_message(str) {
            const length = str.length;
            const length_of_zero = Math.ceil(length / 64) * 64 - length - 8 - 1;
            str += String.fromCharCode(0b10000000);
            const strArray = this.padding(str.split(""), length + 1 + length_of_zero, String.fromCharCode(0));
            const tail = this.split(this.padding(this.to_binary(length * 8 % Math.pow(2, 64)), 64, "0"), 8).map(x => parseInt(x, 2));
            const head = strArray.map(x => x.charCodeAt(0));
            return Uint32Array.from(this.split(head.concat(tail), 4)
                .map(x => x.map((t) => this.padding(t.toString(16), 2, "0", false)).join(""))
                .map(x => parseInt(x, 16))
                .map(x => parseInt(this.little_endian(x), 16)));
        }
        fghi(i) {
            if (i >= 0 && i <= 15)
                return this.F;
            if (i >= 16 && i <= 31)
                return this.G;
            if (i >= 32 && i <= 47)
                return this.H;
            if (i >= 48 && i <= 63)
                return this.I;
        }
        fghi_wrapped(i) {
            return this.wrap(this.fghi(i));
        }
        md5(str) {
            str = this.utf16_to_utf8(str);
            const uint32_array = this.porcess_message(str);
            const result = Uint32Array.from([this.A, this.B, this.C, this.D]);
            const chunks = this.split(Array.from(uint32_array), 16);
            for (const chunk of chunks) {
                const a = result[0];
                const b = result[1];
                const c = result[2];
                const d = result[3];
                for (let i = 0; i < 64; i++) {
                    result[(4 - i % 4) % 4] = this.fghi_wrapped(i)(result[(4 - i % 4) % 4], result[((4 - i % 4) + 1) % 4], result[((4 - i % 4) + 2) % 4], result[((4 - i % 4) + 3) % 4], chunk[this.x_index(i)], this.S[i], this.T(i));
                }
                result[0] = a + result[0];
                result[1] = b + result[1];
                result[2] = c + result[2];
                result[3] = d + result[3];
            }
            return Array.from(result).map(x => this.little_endian(x)).join("").toLowerCase();
        }
    }

    var Constants_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Constants.ERROR', null, global);
    goog.exportSymbol('proto.Constants.Item', null, global);
    goog.exportSymbol('proto.Constants.ItemType', null, global);
    goog.exportSymbol('proto.Constants.PayType', null, global);
    proto.Constants.Item = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Constants.Item, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Constants.Item.displayName = 'proto.Constants.Item';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Constants.Item.prototype.toObject = function (opt_includeInstance) {
            return proto.Constants.Item.toObject(opt_includeInstance, this);
        };
        proto.Constants.Item.toObject = function (includeInstance, msg) {
            var f, obj = {
                id: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                num: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Constants.Item.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Constants.Item;
        return proto.Constants.Item.deserializeBinaryFromReader(msg, reader);
    };
    proto.Constants.Item.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setId(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setNum(value);
                    break;
                case 3:
                    var value = (reader.readEnum());
                    msg.setType(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Constants.Item.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Constants.Item.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Constants.Item.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getId();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNum();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
        f = message.getType();
        if (f !== 0.0) {
            writer.writeEnum(3, f);
        }
    };
    proto.Constants.Item.prototype.getId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Constants.Item.prototype.setId = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Constants.Item.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Constants.Item.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Constants.Item.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Constants.Item.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 3, value);
    };
    proto.Constants.ItemType = {
        I_UNKNOWN: 0,
        GOLD: 1,
        ITEM: 2,
        CURRENCY: 3
    };
    proto.Constants.PayType = {
        P_UNKNOWN: 0,
        W_PAY: 52,
        A_PAY: 53,
        APPLE_PAY: 54,
        HW_PAY: 55,
        XG_PAY: 56,
        QUICK_PAY: 57,
        GOOGLE_PAY: 58,
        VN_PAY: 59,
        QG_PAY: 60,
        RAR_PAY: 61,
        STAN_PAY: 62,
        TP_PAY: 63,
        E_PAY: 64,
        LETS_PAY: 65,
        BULL_PAY: 66,
        HMS_PAY: 67,
        LENOVO_PAY: 68,
        QUICK_H5_PAY: 69,
        WALLET_PAY: 70,
        HELLO_PAY: 71,
        SUPER_PAY: 72,
        AI_PAY: 73,
        WAKA_PAY: 74,
        EQS_PAY: 75,
        ANCHOR_PRESENT: 408
    };
    proto.Constants.ERROR = {
        E_UNKNOWN: 0,
        SUCCESS: 1,
        FAIL: -1,
        E_ITEM_NOT_ENOUGH: -1000,
        E_ITEM_LOCKED: -1001,
        E_MCH_NOT_EXISTS: -2000,
        E_ILLEGAL_ARGUMENT: -2001,
        E_PAY_S: -3000,
        E_PAY_ORDER_EMPTY: -3003,
        E_PAY_ORDER_COMPLETED: -3004,
        E_PAYMENT_S: -4000
    };
    goog.object.extend(exports, proto.Constants);

    });
    var Constants_pb_1 = Constants_pb.ERROR;
    var Constants_pb_2 = Constants_pb.PayType;
    var Constants_pb_3 = Constants_pb.ItemType;

    const EVENT = {
        DEFAULT: "Default",
        BACK_LOBBY: "BackLobby",
    };
    class GameStorage {
        static saveUserPid(pid) {
            Laya.LocalStorage.setItem("userPid", pid.toString());
        }
        static getUserPid() {
            let pid = Laya.LocalStorage.getItem("userPid");
            if (!pid || pid == 'false') {
                return -1;
            }
            else {
                return Number(pid);
            }
        }
        static savePhoneUserPid(pid) {
            Laya.LocalStorage.setItem("phoneUserPid", pid.toString());
        }
        static getPhoneUserPid() {
            let pid = Laya.LocalStorage.getItem("phoneUserPid");
            if (!pid || pid == 'false') {
                return -1;
            }
            else {
                return Number(pid);
            }
        }
        static saveVKUserPid(pid) {
            Laya.LocalStorage.setItem("VKuserPid", pid.toString());
        }
        static getVKUserPid() {
            let pid = Laya.LocalStorage.getItem("VKuserPid");
            if (!pid || pid == 'false') {
                return -1;
            }
            else {
                return Number(pid);
            }
        }
        static saveTGUserPid(pid) {
            Laya.LocalStorage.setItem("TGuserPid", pid.toString());
        }
        static getTGUserPid() {
            let pid = Laya.LocalStorage.getItem("TGuserPid");
            if (!pid || pid == 'false') {
                return -1;
            }
            else {
                return Number(pid);
            }
        }
        static saveUserTicket(ticket) {
            Laya.LocalStorage.setItem("userTicket", ticket);
        }
        static getUserTicket() {
            let ticket = Laya.LocalStorage.getItem("userTicket");
            if (!ticket || ticket == 'false') {
                return "-1";
            }
            else {
                return ticket;
            }
        }
        static savePhoneUserTicket(ticket) {
            Laya.LocalStorage.setItem("phoneUserTicket", ticket);
        }
        static getPhoneUserTicket() {
            let ticket = Laya.LocalStorage.getItem("phoneUserTicket");
            if (!ticket || ticket == 'false') {
                return "-1";
            }
            else {
                return ticket;
            }
        }
        static saveVKUserTicket(ticket) {
            Laya.LocalStorage.setItem("VKuserTicket", ticket);
        }
        static getVKUserTicket() {
            let ticket = Laya.LocalStorage.getItem("VKuserTicket");
            if (!ticket || ticket == 'false') {
                return "-1";
            }
            else {
                return ticket;
            }
        }
        static saveTGUserTicket(ticket) {
            Laya.LocalStorage.setItem("TGuserTicket", ticket);
        }
        static getTGUserTicket() {
            let ticket = Laya.LocalStorage.getItem("TGuserTicket");
            if (!ticket || ticket == 'false') {
                return "-1";
            }
            else {
                return ticket;
            }
        }
        static saveLastLoginTime(date) {
            Laya.LocalStorage.setItem("lastLoginTime", date.toString());
        }
        static getLastLoginTime() {
            let value = Laya.LocalStorage.getItem("lastLoginTime");
            if (!value || value == 'false') {
                return -1;
            }
            else {
                return Number(value);
            }
        }
        static saveLastPhoneLoginTime(date) {
            Laya.LocalStorage.setItem("lastPhoneLoginTime", date.toString());
        }
        static getLastPhoneLoginTime() {
            let value = Laya.LocalStorage.getItem("lastPhoneLoginTime");
            if (!value || value == 'false') {
                return -1;
            }
            else {
                return Number(value);
            }
        }
        static saveLastVKLoginTime(date) {
            Laya.LocalStorage.setItem("VKlastLoginTime", date.toString());
        }
        static getLastVKLoginTime() {
            let value = Laya.LocalStorage.getItem("VKlastLoginTime");
            if (!value || value == 'false') {
                return -1;
            }
            else {
                return Number(value);
            }
        }
        static saveLastTGLoginTime(date) {
            Laya.LocalStorage.setItem("TGlastLoginTime", date.toString());
        }
        static getLastTGLoginTime() {
            let value = Laya.LocalStorage.getItem("TGlastLoginTime");
            if (!value || value == 'false') {
                return -1;
            }
            else {
                return Number(value);
            }
        }
        static setLastLoginType(type) {
            Laya.LocalStorage.setItem("LAST_LOGIN_TYPE", type.toString());
        }
        static getLastLoginType() {
            let value = Laya.LocalStorage.getItem("LAST_LOGIN_TYPE");
            if (!value || value == 'false') {
                return -1;
            }
            else {
                return Number(value);
            }
        }
        static saveIsFirstLogin(value) {
            let str = value === true ? "true" : "false";
            Laya.LocalStorage.setItem("isFirstLogin", str);
        }
        static getIsFirstLogin() {
            let value = Laya.LocalStorage.getItem("isFirstLogin");
            if (!value || value === "false") {
                return false;
            }
            else {
                return true;
            }
        }
        static setFirstLaunch(value) {
            let str = value === true ? "true" : "false";
            Laya.LocalStorage.setItem("FIRST_LAUNCH", str);
        }
        static getFirstLaunch() {
            let value = Laya.LocalStorage.getItem("FIRST_LAUNCH");
            if (!value || value === "false") {
                return false;
            }
            else {
                return true;
            }
        }
        static saveGuestAccount(value) {
            Laya.LocalStorage.setItem("guestAccount", value);
        }
        static getGuestAccount() {
            let value = Laya.LocalStorage.getItem("guestAccount");
            if (value == undefined || value == null) {
                return "";
            }
            else {
                return value;
            }
        }
        static saveAccount(value) {
            Laya.LocalStorage.setItem("account", value);
        }
        static getAccount() {
            let value = Laya.LocalStorage.getItem("account");
            if (value == undefined || value == null) {
                return "";
            }
            else {
                return value;
            }
        }
        static saveCanBgm(value) {
            let str = value === true ? "true" : "false";
            Laya.LocalStorage.setItem("canBgm", str);
        }
        static getCanBgm() {
            let value = Laya.LocalStorage.getItem("canBgm");
            if (value === "false") {
                return false;
            }
            else {
                return true;
            }
        }
        static saveCanEff(value) {
            let str = value === true ? "true" : "false";
            Laya.LocalStorage.setItem("canEff", str);
        }
        static getCanEff() {
            let value = Laya.LocalStorage.getItem("canEff");
            if (value === "false") {
                return false;
            }
            else {
                return true;
            }
        }
        static saveShake(value) {
            let str = value === true ? "true" : "false";
            Laya.LocalStorage.setItem("shake", str);
        }
        static getShake() {
            let value = Laya.LocalStorage.getItem("shake");
            if (value === "false") {
                return false;
            }
            else {
                return true;
            }
        }
        static saveIsOnceClickOpen(value) {
            let str = value === true ? "true" : "false";
            Laya.LocalStorage.setItem("isOnceClickOpen", str);
        }
        static getIsOnceClickOpen() {
            let value = Laya.LocalStorage.getItem("isOnceClickOpen");
            if (value === "true") {
                return true;
            }
            else {
                return false;
            }
        }
        static saveIsOpenHuCardEffect(value) {
            let str = value === true ? "true" : "false";
            Laya.LocalStorage.setItem("IsOpenHuCardEffect", str);
        }
        static getIsOpenHuCardEffect() {
            let value = Laya.LocalStorage.getItem("IsOpenHuCardEffect");
            if (value === "false") {
                return false;
            }
            else {
                return true;
            }
        }
        static saveIsScaleCardOpen(value) {
            let str = value === true ? "true" : "false";
            Laya.LocalStorage.setItem("isScaleCardOpen", str);
        }
        static getIsScaleCardOpen() {
            let value = Laya.LocalStorage.getItem("isScaleCardOpen");
            if (value === "false") {
                return false;
            }
            else {
                return true;
            }
        }
        static saveLastOrder(orderID) {
            Laya.LocalStorage.setItem('ORDER_ID', orderID);
        }
        static getLastOrder() {
            return Laya.LocalStorage.getItem('ORDER_ID');
        }
        static saveRefreshOrder(orderID) {
            Laya.LocalStorage.setItem('LIMIT_ORDER_ID', orderID);
        }
        static getRefreshOrder() {
            return Laya.LocalStorage.getItem('LIMIT_ORDER_ID');
        }
        static setGameMode(mode) {
            Laya.LocalStorage.setItem('GAME_MODE', mode.toString());
        }
        static getGameMode() {
            let mode = Laya.LocalStorage.getItem("GAME_MODE");
            if (mode == 'false') {
                return 0;
            }
            else {
                return Number(mode);
            }
        }
        static saveGameSelect(name) {
            Laya.LocalStorage.setItem('GAME_SELECT', name);
        }
        static getGameSelect() {
            let temp = Laya.LocalStorage.getItem('GAME_SELECT');
            let result = '请选择合适场次';
            if (temp != null && temp != undefined) {
                result = temp;
            }
            return result;
        }
        static saveRoomID(id) {
            Laya.LocalStorage.setItem('ROOM_ID', id);
        }
        static getRoomID() {
            let temp = Laya.LocalStorage.getItem('ROOM_ID');
            let result = 'none';
            if (temp != null && temp != undefined) {
                result = temp;
            }
            return result;
        }
        static setRankSelectMode(mode) {
            Laya.LocalStorage.setItem('RANK_SELECT_MODE', mode.toString());
        }
        static getRankSelectMode() {
            let mode = Laya.LocalStorage.getItem("RANK_SELECT_MODE");
            if (mode == 'false') {
                return 0;
            }
            else {
                return Number(mode);
            }
        }
        static setRankGameMode(mode) {
            Laya.LocalStorage.setItem('RANK_GAME_MODE', mode.toString());
        }
        static getRankGameMode() {
            let mode = Laya.LocalStorage.getItem("RANK_GAME_MODE");
            if (mode == 'false') {
                return 0;
            }
            else {
                return Number(mode);
            }
        }
        static saveRankInfo(info) {
            Laya.LocalStorage.setItem('RANK_MATCH_INFO', info);
        }
        static getRankInfo() {
            let temp = Laya.LocalStorage.getItem('RANK_MATCH_INFO');
            let result = '';
            if (temp != null && temp != undefined) {
                result = temp;
            }
            return result;
        }
        static saveRankGameSelect(name) {
            Laya.LocalStorage.setItem('RANK_GAME_SELECT', name);
        }
        static getRankGameSelect() {
            let temp = Laya.LocalStorage.getItem('RANK_GAME_SELECT');
            let result = '请选择合适场次';
            if (temp != null && temp != undefined) {
                result = temp;
            }
            return result;
        }
        static saveRankRoomID(id) {
            Laya.LocalStorage.setItem('RANK_ROOM_ID', id);
        }
        static getRankRoomID() {
            let temp = Laya.LocalStorage.getItem('RANK_ROOM_ID');
            let result = 'none';
            if (temp != null && temp != undefined) {
                result = temp;
            }
            return result;
        }
        static setSourceVersion(version) {
            Laya.LocalStorage.setItem('SOURCE_VERSION', version);
        }
        static getSourceVersion() {
            let temp = Laya.LocalStorage.getItem('SOURCE_VERSION');
            let result = '1.0.0';
            if (temp != null && temp != undefined) {
                result = temp;
            }
            return result;
        }
        static saveIsOpenBindBank(value) {
            let str = value === true ? "true" : "false";
            Laya.LocalStorage.setItem("IsOpenBindBank", str);
        }
        static getIsOpenBindBank() {
            let value = Laya.LocalStorage.getItem("IsOpenBindBank");
            if (value === "true") {
                return true;
            }
            else {
                return false;
            }
        }
        static setDoneGuide(mode) {
            Laya.LocalStorage.setItem('GUIDE_STATE', mode.toString());
        }
        static getDoneGuide() {
            let mode = Laya.LocalStorage.getItem("GUIDE_STATE");
            if (!mode || mode == 'false') {
                return 0;
            }
            else {
                return Number(mode);
            }
        }
        static saveRankAward(value) {
            let pid = GlobalData.getInstance().myPid;
            Laya.LocalStorage.setItem(pid + "rankAward", value ? "true" : "false");
        }
        static getRankAward() {
            let pid = GlobalData.getInstance().myPid;
            let value = Laya.LocalStorage.getItem(pid + "rankAward");
            if (!value || value === "false") {
                return false;
            }
            else {
                return true;
            }
        }
        static setWalletGuide(value) {
            let pid = GlobalData.getInstance().myPid;
            Laya.LocalStorage.setItem(pid + "walletGuide", value ? "true" : "false");
        }
        static getWalletGuide() {
            let pid = GlobalData.getInstance().myPid;
            let value = Laya.LocalStorage.getItem(pid + "walletGuide");
            if (!value || value === "false") {
                return false;
            }
            else {
                return true;
            }
        }
        static setExcCode(mode) {
            let pid = GlobalData.getInstance().myPid;
            Laya.LocalStorage.setItem(pid + 'EXCHANGE_CODE', mode.toString());
        }
        static getExcCode() {
            let pid = GlobalData.getInstance().myPid;
            let mode = Laya.LocalStorage.getItem(pid + "EXCHANGE_CODE");
            if (!mode || mode == 'false') {
                return 0;
            }
            else {
                return Number(mode);
            }
        }
        static setInvite(data) {
            let pid = GlobalData.getInstance().myPid;
            Laya.LocalStorage.setItem(pid + 'FIRST_INVITE', data);
        }
        static getInvite() {
            let pid = GlobalData.getInstance().myPid;
            let mode = Laya.LocalStorage.getItem(pid + "FIRST_INVITE");
            if (!mode || mode == 'false') {
                return null;
            }
            else {
                return mode;
            }
        }
        static setCountry(mode) {
            Laya.LocalStorage.setItem('COUNTRY_CODE', mode.toString());
        }
        static getCountry() {
            let mode = Laya.LocalStorage.getItem("COUNTRY_CODE");
            if (!mode || mode == 'false') {
                return -1;
            }
            else {
                return Number(mode);
            }
        }
        static getDailyEvent(event) {
            event = event || EVENT.DEFAULT;
            let today = new Date();
            let dateStr = today.getFullYear() + "-" + today.getMonth() + today.getDate();
            let localStr = Laya.LocalStorage.getItem('DAILY_EVENT' + event);
            if (dateStr == localStr) {
                return true;
            }
            return false;
        }
        static setDailyEvent(event) {
            event = event || EVENT.DEFAULT;
            let today = new Date();
            let dateStr = today.getFullYear() + "-" + today.getMonth() + today.getDate();
            Laya.LocalStorage.setItem('DAILY_EVENT' + event, dateStr);
        }
        static setGuideStep(mode) {
            let pid = GlobalData.getInstance().myPid;
            Laya.LocalStorage.setItem(pid + 'GUIDE_STEP', mode.toString());
        }
        static getGuideStep() {
            let pid = GlobalData.getInstance().myPid;
            let mode = Laya.LocalStorage.getItem(pid + "GUIDE_STEP");
            if (!mode || mode == 'false') {
                return -1;
            }
            else {
                return Number(mode);
            }
        }
        static setGameLike(gameid) {
            if (!gameid) {
                return;
            }
            let pid = GlobalData.getInstance().myPid;
            let gameStr = Laya.LocalStorage.getItem(pid + "GAME_LIKE");
            let gameArr = null;
            if (!gameStr) {
                gameArr = [];
            }
            else {
                gameArr = JSON.parse(gameStr);
            }
            if (gameArr.indexOf(gameid) > -1) {
                return;
            }
            gameArr.push(gameid);
            Laya.LocalStorage.setItem(pid + 'GAME_LIKE', JSON.stringify(gameArr));
        }
        static getGameLike() {
            let pid = GlobalData.getInstance().myPid;
            let gameArr = Laya.LocalStorage.getItem(pid + "GAME_LIKE");
            if (!gameArr) {
                return null;
            }
            else {
                return JSON.parse(gameArr);
            }
        }
        static removeGameLike(gameid) {
            let pid = GlobalData.getInstance().myPid;
            let gameStr = Laya.LocalStorage.getItem(pid + "GAME_LIKE");
            let gameArr = null;
            if (!gameStr) {
                return;
            }
            else {
                gameArr = JSON.parse(gameStr);
            }
            let index = gameArr.indexOf(gameid);
            if (index > -1) {
                gameArr.splice(index, 1);
            }
            Laya.LocalStorage.setItem(pid + 'GAME_LIKE', JSON.stringify(gameArr));
        }
        static isLike(gameid) {
            if (!gameid) {
                return false;
            }
            let pid = GlobalData.getInstance().myPid;
            let gameArr = Laya.LocalStorage.getItem(pid + "GAME_LIKE");
            if (!gameArr) {
                return false;
            }
            else {
                let gameList = JSON.parse(gameArr);
                return gameList.indexOf(gameid) > -1;
            }
        }
        static setGameRecent(gameid) {
            let pid = GlobalData.getInstance().myPid;
            let gameStr = Laya.LocalStorage.getItem(pid + "GAME_RECENT");
            let gameArr = null;
            if (!gameStr) {
                gameArr = [];
            }
            else {
                gameArr = JSON.parse(gameStr);
            }
            if (gameArr.indexOf(gameid) > -1) {
                return;
            }
            gameArr.push(gameid);
            Laya.LocalStorage.setItem(pid + 'GAME_RECENT', JSON.stringify(gameArr));
        }
        static getGameRecent() {
            let pid = GlobalData.getInstance().myPid;
            let gameArr = Laya.LocalStorage.getItem(pid + "GAME_RECENT");
            if (!gameArr) {
                return null;
            }
            else {
                return JSON.parse(gameArr);
            }
        }
    }

    class DeviceData extends Singleton {
        constructor() {
            super(...arguments);
            this._tsToNative = null;
            this.isIPhoneNotchScreen = false;
            this.isAndroidNotchScreen = false;
            this.isShowWButton = false;
            this._canUseLargerLoad = false;
            this._deviceID = null;
            this._deviceInfoArr = ["0", "web"];
            this._macAddr = "0";
            this._networkType = "none";
            this._packageChannel = CHANNELID.android;
            this._deviceToken = null;
            this._bootTime = 0;
            this._afUID = "";
            this._afCallBacks = {};
            this._afTimes = {};
        }
        get tsBridge() {
            return this._tsToNative;
        }
        set tsBridge(tsClass) {
            this._tsToNative = tsClass;
        }
        set canUseLargerLoad(canUse) {
            this._canUseLargerLoad = canUse;
        }
        get canUseLargerLoad() {
            return this._canUseLargerLoad;
        }
        get isIOS() {
            return Laya.Browser.window.conch && Laya.Browser.onIOS;
        }
        get isAndroid() {
            return Laya.Browser.window.conch && Laya.Browser.onAndroid;
        }
        get isNative() {
            return Laya.Browser.window.conch && (Laya.Browser.onIOS || Laya.Browser.onAndroid);
        }
        set deviceID(id) {
            this._deviceID = id;
        }
        get deviceID() {
            return this._deviceID;
        }
        set deviceInfoArr(arr) {
            this._deviceInfoArr = arr;
        }
        get deviceInfoArr() {
            return this._deviceInfoArr;
        }
        set macAddr(addr) {
            this._macAddr = addr;
        }
        get macAddr() {
            return this._macAddr;
        }
        set networkType(type) {
            this._networkType = type;
        }
        get networkType() {
            return this._networkType;
        }
        get packageChannel() {
            return this._packageChannel;
        }
        set packageChannel(channel) {
            this._packageChannel = channel;
        }
        get deviceToken() {
            return this._deviceToken;
        }
        set deviceToken(token) {
            this._deviceToken = token;
        }
        get afUID() {
            return this._afUID;
        }
        getBootTime(__callBack) {
            let curTime = new Date().getTime();
            if (this.isNative) {
                this.tsBridge.callWithBack((nativeTime) => {
                    __callBack(curTime - nativeTime);
                }, 'getBootTime');
            }
            else {
                __callBack(curTime - this._bootTime);
            }
        }
        getMyIP(__callBack) {
            if (this.isNative) {
                this.tsBridge.callWithBack((__ip) => {
                    if (__callBack) {
                        __callBack(__ip);
                    }
                }, 'getMyIP');
            }
            else {
                window.GetMyIP(__callBack);
            }
        }
        initDevice() {
            if (this.isIOS) {
                this.tsBridge.callWithBack((isNotchScreen) => {
                    this.isIPhoneNotchScreen = (isNotchScreen == 'true');
                }, 'isIPhoneNotchScreen');
                this.tsBridge.callWithBack((isIphoneOK) => {
                    this.canUseLargerLoad = (isIphoneOK == 'true');
                }, 'judgeIphoneType');
                this.tsBridge.callWithBack((token) => {
                    this.deviceToken = token;
                }, 'deviceToken');
                this.getAppAndPhoneInfo();
            }
            else if (this.isAndroid) {
                this.tsBridge.callWithBack((channel) => {
                    this.packageChannel = Number.parseInt(channel);
                    let isFirstLogin = GameStorage.getIsFirstLogin();
                    GlobalVariables.SOURCE_ID_ANDROID = this.packageChannel;
                    switch (GlobalVariables.SOURCE_ID_ANDROID) {
                        case 1102001:
                            GlobalVariables.INVITE_LINK = "http://www.winfun.love/";
                        default:
                            break;
                    }
                }, 'getChannel');
                this.tsBridge.callWithBack((isNotchScreen) => {
                    this.isAndroidNotchScreen = (isNotchScreen == 'true');
                }, 'isAndroidNotchScreen');
                setTimeout(() => {
                    if (this.packageChannel != CHANNELID.HW) {
                        this.getAppAndPhoneInfo();
                    }
                    else {
                        this.tsBridge.callWithBack((success) => {
                        }, 'initChannel');
                    }
                }, 1000);
            }
            else if (window["tienLen777"]) {
                this.getDeviceID((deviceID) => {
                    CC.Log('获取DeviceID: ' + deviceID);
                    this.deviceID = deviceID;
                });
            }
        }
        getSignal(__callBack) {
            if (this.isNative) {
                this.tsBridge.callWithBack((__strength) => {
                    if (__callBack) {
                        __callBack(__strength);
                    }
                }, 'getSignal');
            }
        }
        getAppAndPhoneInfo() {
            this.getDeviceID((deviceID) => {
                CC.Log('获取DeviceID: ' + deviceID);
                this.deviceID = deviceID;
            });
            if (this.isNative) {
                this.tsBridge.callWithBack((isShow) => {
                    this.isShowWButton = (isShow == 'true');
                }, 'isShowWButton');
                this.tsBridge.callWithBack((result) => {
                    if (result != "false") {
                        let arr = result.split("&");
                        this.deviceInfoArr = arr;
                    }
                }, 'getDeviceInfo');
                this.tsBridge.callWithBack((result) => {
                    if (result != "false") {
                        this.macAddr = result;
                    }
                }, 'getMacAddress');
                this.tsBridge.callWithBack((result) => {
                    if (result != "false") {
                        this.networkType = result;
                    }
                }, 'getNetworkType');
            }
        }
        GetDeviceID() {
            if (this.isNative || window["tienLen777"]) {
                if (this.deviceID) {
                    return this.deviceID;
                }
                else {
                    this.getDeviceID((deviceID) => {
                        this.deviceID = deviceID;
                        return deviceID;
                    });
                }
            }
            function insertStr(soure, start, newStr) {
                return soure.slice(0, start) + newStr + soure.slice(start);
            }
            let uniqueID = null;
            let document = Laya.Browser.window.document;
            if (document) {
                let params = document.URL.split("?");
                if (params[1]) {
                    let paramArr = params[1].split("&");
                    if (paramArr) {
                        for (let i = 0; i < paramArr.length; i++) {
                            let paramStr = paramArr[i];
                            let kv = paramStr.split("=");
                            if (kv && kv[0] && kv[0] == "uniqueId") {
                                uniqueID = kv[1];
                                break;
                            }
                        }
                    }
                }
            }
            if (!uniqueID) {
                let aplha = 'abcdefghigklmnopqrstuvwxyz_';
                let timestamp = '' + Date.parse(new Date().toString());
                for (let i = 0; i < 5; i++) {
                    let rand1 = Math.floor(Math.random() * timestamp.length);
                    let rand2 = Math.floor(Math.random() * aplha.length);
                    if (Math.round(Math.random())) {
                        timestamp = insertStr(timestamp, rand1, aplha[rand2]);
                    }
                    else {
                        timestamp = insertStr(timestamp, rand1, aplha[rand2].toUpperCase());
                    }
                }
                uniqueID = Md5.Instance.get_md5(timestamp);
            }
            return uniqueID;
        }
        getDeviceID(callback) {
            if (this.isAndroid) {
                this.tsBridge.callWithBack((deviceID) => {
                    callback(deviceID);
                }, 'getDeviceID');
            }
            else if (this.isIOS) {
                this.tsBridge.callWithBack((deviceID) => {
                    callback(deviceID);
                }, 'getDeviceID');
            }
            else {
                if (window["tienLen777"]) {
                    let deviceID = window["tienLen777"].getDeviceID();
                    this.JLog("window[tienLen777].getDeviceID = " + deviceID);
                    callback(deviceID);
                }
                else {
                    callback(null);
                }
            }
        }
        loadTSBridge() {
            var tsBridge = null;
            if (window["PlatformClass"]) {
                if (this.isAndroid) {
                    tsBridge = window["PlatformClass"].createClass("demo.TSBridge");
                }
                else if (this.isIOS) {
                    tsBridge = window["PlatformClass"].createClass("TSBridge");
                }
            }
            this.tsBridge = tsBridge;
            this._bootTime = new Date().getTime();
        }
        getChannelID() {
            let mChannelID = PAY_CHANNEL.W_PAY;
            if (this.isIOS) {
                mChannelID = PAY_CHANNEL.APPLE_PAY;
            }
            else if (this.isAndroid && this.packageChannel == CHANNELID.HW) {
                mChannelID = PAY_CHANNEL.HW_PAY;
            }
            return mChannelID;
        }
        getPayType() {
            let mPayType = Constants_pb_2.W_PAY;
            if (this.isIOS) {
                mPayType = Constants_pb_2.APPLE_PAY;
            }
            else if (this.isAndroid && this.packageChannel == CHANNELID.HW) {
                mPayType = Constants_pb_2.HW_PAY;
            }
            return mPayType;
        }
        getClipboard(callback) {
            return __awaiter(this, void 0, void 0, function* () {
                if (this.isNative) {
                    this.tsBridge.callWithBack((gameMsg) => __awaiter(this, void 0, void 0, function* () {
                        callback(gameMsg);
                    }), 'checkClipBoard');
                }
                else {
                    let tienLen777 = window["tienLen777"];
                    if (tienLen777) {
                        callback(tienLen777.getClipboard());
                    }
                    else {
                        return callback(yield this.getH5ClipboardText());
                    }
                }
            });
        }
        setClipboard(content) {
            if (this.isNative) {
                DeviceData.getInstance().tsBridge.callWithBack((ret) => { }, this.isAndroid ? 'copyToClipboard' : 'copyToClipboard:', content);
            }
            else {
                let tienLen777 = window["tienLen777"];
                if (tienLen777) {
                    tienLen777.setClipboard(content);
                }
                else {
                    this.setH5ClipboardText(content);
                }
            }
        }
        getScheme(callback) {
            return __awaiter(this, void 0, void 0, function* () {
                if (this.isNative) {
                    if (this.isIOS) {
                        this.tsBridge.callWithBack((scheme) => __awaiter(this, void 0, void 0, function* () {
                            callback(scheme);
                        }), 'getScheme');
                    }
                    else {
                        return callback(null);
                    }
                }
                else if (window["tienLen777"] && window["tienLen777"].getScheme) {
                    let scheme = window["tienLen777"].getScheme();
                    this.JLog("getScheme = " + scheme);
                    callback(null);
                }
                else {
                    return callback(null);
                }
            });
        }
        getH5ClipboardText() {
            return __awaiter(this, void 0, void 0, function* () {
                if (navigator.clipboard) {
                    try {
                        return yield navigator.clipboard.readText();
                    }
                    catch (err) {
                        return null;
                    }
                }
                else {
                    var input = document.createElement('input');
                    input.setAttribute('type', 'text');
                    input.style.position = 'fixed';
                    input.style.left = '-9999px';
                    document.body.appendChild(input);
                    input.focus();
                    document.execCommand('paste');
                    var text = input.value;
                    document.body.removeChild(input);
                    return text;
                }
            });
        }
        setH5ClipboardText(text) {
            return __awaiter(this, void 0, void 0, function* () {
                if (navigator.clipboard) {
                    try {
                        yield navigator.clipboard.writeText(text);
                        return text;
                    }
                    catch (err) {
                    }
                }
                else {
                    var input = document.createElement('input');
                    input.setAttribute('type', 'text');
                    input.style.position = 'fixed';
                    input.style.left = '-9999px';
                    input.value = text;
                    document.body.appendChild(input);
                    input.select();
                    var res = document.execCommand('copy');
                    document.body.removeChild(input);
                    if (res == true) {
                        return text;
                    }
                    else {
                    }
                }
            });
        }
        setAFCustomerID(__pid) {
            __pid = __pid + "";
            if (this.isNative) {
                if (this.isAndroid) {
                    this.tsBridge.call('setAFCustomerID', __pid);
                }
                else {
                    this.tsBridge.call('setAFCustomerID:', __pid);
                }
            }
        }
        getAFUID(__callBack) {
            if (this.isNative) {
                this.tsBridge.callWithBack((ret) => {
                    this._afUID = ret;
                    if (__callBack) {
                        __callBack(ret);
                    }
                }, 'getAFUID');
            }
        }
        sendAFLogEvent(__eventName, __eventParams, __callBack) {
            return;
            if (GlobalVariables.SERVICE_TYPE != SERVER_TYPE.RELEASE) {
                return;
            }
            if (this.isNative) {
                let self = this;
                let params = {
                    event_name: __eventName,
                    event_params: __eventParams
                };
                if (!this._afCallBacks[__eventName]) {
                    this._afCallBacks[__eventName] = __callBack;
                }
                if (isNaN(this._afTimes[__eventName])) {
                    this._afTimes[__eventName] = 0;
                }
                let paramStr = JSON.stringify(params);
                this.tsBridge.callWithBack((ret) => {
                    let errObj = JSON.parse(ret);
                    if (errObj) {
                        let tmpName = errObj.eventName;
                        if (errObj.state) {
                            if (this._afCallBacks[tmpName]) {
                                this._afCallBacks[tmpName](true);
                                this._afCallBacks[tmpName] = null;
                            }
                            if (tmpName == AFInAppEventType.PURCHASE) {
                                let channelStr = this.isIOS ? "tienlen-iOS" : "tienlen-android";
                                let logObj = {
                                    channel: channelStr,
                                    pid: GlobalData.getInstance().myPid,
                                    res: ret,
                                };
                            }
                        }
                        else {
                            this._afTimes[tmpName]++;
                            if (this._afTimes[tmpName] >= 3) {
                                this._afTimes[tmpName] = 0;
                                if (this._afCallBacks[tmpName]) {
                                    this._afCallBacks[tmpName](false, errObj);
                                    this._afCallBacks[tmpName] = null;
                                }
                            }
                            else {
                                self.sendAFLogEvent(tmpName, errObj.eventParam, self._afCallBacks[tmpName]);
                            }
                        }
                    }
                }, 'sendAFLogEvent', paramStr);
            }
            else if (window["tienLen777"]) {
                let params = {
                    event_name: __eventName,
                    event_params: __eventParams
                };
                let paramStr = JSON.stringify(params);
                window["tienLen777"].sendAFLogEvent(paramStr);
                setTimeout(() => {
                    window["tienLen777"].sendAFLogEvent(paramStr);
                }, 1000);
                setTimeout(() => {
                    window["tienLen777"].sendAFLogEvent(paramStr);
                }, 2000);
            }
        }
        JLog(__msg) {
            __msg = __msg || '';
            if (this.isNative) {
                if (this.isAndroid) {
                    this.tsBridge.call('JLog', __msg);
                }
                else {
                    this.tsBridge.call('JLog:', __msg);
                }
            }
            else if (window["tienLen777"]) {
                window["tienLen777"].JLog(__msg);
            }
            else {
                console.log(__msg);
            }
        }
        showWebView(params, callback, backDeg) {
            let url = params["h5Url"] || params["url"];
            if (this.isNative) {
                this.tsBridge.callWithBack((ret) => {
                    if (callback) {
                        callback(ret);
                    }
                }, this.isAndroid ? 'doWebView' : 'doWebView:', JSON.stringify(params));
            }
            else {
                window.openH5Url(url, "#FFFFFF", backDeg, callback);
            }
        }
        showWebViewNorm(params, callback, backDeg) {
            let url = params["h5Url"] || params["url"];
            if (this.isNative) {
                this.tsBridge.callWithBack((ret) => {
                    if (callback) {
                        callback(ret);
                    }
                }, this.isAndroid ? 'doWebView' : 'doWebView:', JSON.stringify(params));
            }
            else {
                window.openH5UrlNormal(url, "#FFFFFF");
            }
        }
        getLocalLanguage(callback) {
            if (this.isNative) {
                this.tsBridge.callWithBack((ret) => {
                    if (ret && ret != "") {
                        this.localLanguage = ret;
                        if (callback) {
                            callback(this.localLanguage);
                        }
                    }
                }, 'getLocalLanguage');
            }
        }
        log(msg) {
            if (this.isNative) {
                DeviceData.getInstance().tsBridge.call('JLog', msg);
            }
            else {
                console.log(msg);
            }
        }
        jumpBrowser(url) {
            if (this.isNative) {
                this.tsBridge.call(this.isAndroid ? 'jumpBrowser' : 'jumpBrowser:', url);
            }
            else if (window["tienLen777"] && window["tienLen777"].jumpBrowser) {
                window["tienLen777"].jumpBrowser(url);
            }
            else {
                console.log("Only supports native platforms");
                window.open(url);
            }
        }
        shareToSystem(content) {
            if (this.isNative) {
                if (this.isIOS) {
                    this.tsBridge.call(this.isAndroid ? 'shareToSystem' : 'shareToSystem:', content);
                }
            }
        }
        sendFBLogEvent(__eventName, __eventParams) {
            return;
            let self = this;
            if (!__eventParams) {
                __eventParams = {};
            }
            __eventParams.param1 = "param1";
            __eventParams.param2 = "param2";
            let params = {
                event_name: __eventName,
                event_params: __eventParams
            };
            let paramStr = JSON.stringify(params);
            if (this.isIOS) {
                this.tsBridge.callWithBack((ret) => {
                }, 'sendFBLogEvent:', paramStr);
            }
        }
        logPurchasedEvent(__price, __orderID, __itemNum) {
            return;
            let params = {
                itemNum: __itemNum,
                orderID: __orderID,
                currency: "VND",
                price: __price,
            };
            let paramStr = JSON.stringify(params);
            if (this.isIOS) {
                this.tsBridge.callWithBack((ret) => {
                }, 'logPurchasedEvent:', paramStr);
            }
        }
        sendFBPixel(__type, __eventName, __eventParams, __callBack) {
            if (GlobalVariables.SERVICE_TYPE != SERVER_TYPE.RELEASE) {
                return;
            }
            if (window["fbq"]) {
                let track = "trackCustom";
                if (__type == 0) {
                    track = "track";
                }
                if (!__eventParams) {
                    __eventParams = {};
                }
                __eventParams.param1 = "-";
                window["fbq"](track, __eventName, __eventParams);
                __callBack && __callBack(true);
            }
            else {
                this.JLog("fb pixel err = [no fbq function!!!!!]");
            }
        }
        checkVPN() {
            if (window["tienLen777"]) {
                let isVPN = window["tienLen777"].checkVPN();
                this.JLog("checkVPN = " + isVPN);
                return isVPN;
            }
        }
        checkAppEnv() {
            let webApp = window.navigator["standalone"];
            let bApp = matchMedia && matchMedia('(display-mode: standalone)').matches;
            return (window["tienLen777"] || webApp || bApp);
        }
    }

    class DataPlayer extends Singleton {
        constructor() {
            super();
            this.userInfo = null;
            this.queryNum = 0;
            this.userInfo = new BasicInfo();
            this.infoService = new Info_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.infoServicePromise = new Info_grpc_web_pb_2(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.dataCurrency = new DataCurrency();
            this.m_allUser = new Array();
        }
        getMyBean(callback) {
            this.dataCurrency.queryBean(GlobalData.getInstance().myPid, (num) => {
                this.userInfo.bean = num;
                this.queryNum++;
                if (this.queryNum == 3) {
                    this.queryNum = 0;
                    callback(true);
                    EventManager.getInstance().emit(LobbyDefine.LOADED_USERINFO);
                }
            });
        }
        getMySelfCurrency(callback) {
            this.dataCurrency.queryGold(GlobalData.getInstance().myPid, (num) => {
                this.userInfo.gold = num / 100;
                this.queryNum++;
                if (this.queryNum == 3) {
                    this.queryNum = 0;
                    callback(true);
                    EventManager.getInstance().emit(LobbyDefine.LOADED_USERINFO);
                }
            });
        }
        getMyPearl(callback) {
            this.dataCurrency.queryPearl(GlobalData.getInstance().myPid, (num) => {
                this.userInfo.safeBox = num;
                this.queryNum++;
                if (this.queryNum == 3) {
                    this.queryNum = 0;
                    callback(true);
                    EventManager.getInstance().emit(LobbyDefine.LOADED_USERINFO);
                }
            });
        }
        getUserInfo(callback) {
            let req = new Info_pb_1();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            this.infoService.getUserInfo(req, {}, (err, ack) => {
                if (err) {
                    callback(false);
                    return;
                }
                if (ack.getNret() == 0) {
                    let info = ack.getUser();
                    if (!info) {
                        callback(false);
                        return;
                    }
                    this.userInfo.nPid = info.getNpid();
                    this.userInfo.nickname = info.getStrnickname();
                    this.userInfo.nGender = info.getNgender();
                    this.userInfo.nFaceid = info.getNfaceid();
                    if (info.getStravatar() && info.getStravatar().length > 0) {
                        this.userInfo.strAvatar = info.getStravatar();
                    }
                    else {
                        this.userInfo.strAvatar = GlobalVariables.getRandomAvatar();
                        this.updateUserAvatar(this.userInfo.strAvatar, (suc) => {
                            console.log("updateUserInfo  ======>>  ", suc);
                        });
                    }
                    this.userInfo.nBirthday = info.getNbirthday();
                    this.userInfo.address = info.getStrcountry() + info.getStrprovince() + info.getStrcity();
                    this.userInfo.strIDcard = info.getStridcard();
                    this.userInfo.strIDname = info.getStridname();
                    this.userInfo.phoneNum = info.getStridphone();
                    this.getMyBean(callback);
                    this.getMySelfCurrency(callback);
                    this.getMyPearl(callback);
                    this.m_allUser[this.userInfo.nPid] = this.userInfo;
                }
                else if (ack.getNret() == -20001) {
                    CC.Log('用户信息不存在');
                    let info = new Info_pb_23();
                    info.setNpid(GlobalData.getInstance().myPid);
                    info.setNfaceid(1);
                    if (GlobalData.getInstance().wxJson) {
                        let methodStr = 'getWXUserInfoWithAccessToken:openId:';
                        if (DeviceData.getInstance().isAndroid) {
                            methodStr = 'getWXUserInfoWithTokenAndOpenId';
                        }
                        DeviceData.getInstance().tsBridge.callWithBack((data) => {
                            CC.Log("onWeChatInfo callWithBack: " + data);
                            if (data == 'false') {
                                info.setStrnickname('User' + GlobalData.getInstance().myPid);
                                info.setNgender(1);
                                this.verifyAndUpdateUserInfo(info, 'User' + GlobalData.getInstance().myPid, callback);
                            }
                            else {
                                let dataJSON = JSON.parse(data);
                                info.setStrnickname(dataJSON['nickname']);
                                let sexNum = dataJSON['sex'] == 2 ? 2 : 1;
                                info.setNgender(sexNum);
                                info.setStravatar(dataJSON['headimgurl']);
                                this.verifyAndUpdateUserInfo(info, dataJSON['nickname'], callback);
                            }
                        }, methodStr, GlobalData.getInstance().wxJson['access_token'], GlobalData.getInstance().wxJson['openid']);
                    }
                    else {
                        info.setStrnickname('User' + GlobalData.getInstance().myPid);
                        info.setNgender(1);
                        info.setStravatar(GlobalVariables.getRandomAvatar());
                        this.verifyAndUpdateUserInfo(info, 'User' + GlobalData.getInstance().myPid, callback);
                    }
                }
                else {
                    callback(false);
                    let retNum = ack && ack.getNret();
                    CC.Log('用户信息获取失败：' + retNum);
                }
            });
        }
        verifyAndUpdateUserInfo(info, nickName, callback) {
            this.updateUserInfo(info, (success, errCode) => {
                if (success) {
                    this.getMyBean(callback);
                    this.getMySelfCurrency(callback);
                    this.getMyPearl(callback);
                }
                else if (errCode == -20002) {
                    info.setStrnickname(nickName + GlobalData.getInstance().myPid);
                    this.updateUserInfo(info, (suc) => {
                        if (suc) {
                            this.getMyBean(callback);
                            this.getMySelfCurrency(callback);
                            this.getMyPearl(callback);
                        }
                        else {
                            callback(false);
                        }
                    });
                }
                else if (errCode == -20007) {
                    info.setStrnickname("User" + GlobalData.getInstance().myPid);
                    this.updateUserInfo(info, (suc) => {
                        if (suc) {
                            this.getMyBean(callback);
                            this.getMySelfCurrency(callback);
                            this.getMyPearl(callback);
                        }
                        else {
                            callback(false);
                        }
                    });
                }
                else {
                    callback(false);
                }
            }, true);
        }
        getOtherPlayerInfo(p_arr, p_useArr, callback) {
            let req = new Info_pb_19();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setVecpidList(p_arr);
            this.infoService.getMultiUserInfo(req, {}, (err, ack) => {
                if (err) {
                    return;
                }
                if (ack.getNret() == 0) {
                    for (let i = 0; i < ack.getVecusersList().length; i++) {
                        let info = ack.getVecusersList()[i];
                        let l_useInfo = new BasicInfo();
                        l_useInfo.nPid = info.getNpid();
                        l_useInfo.nickname = info.getStrnickname();
                        l_useInfo.nGender = info.getNgender();
                        l_useInfo.nFaceid = info.getNfaceid();
                        l_useInfo.strAvatar = info.getStravatar();
                        l_useInfo.nBirthday = info.getNbirthday();
                        l_useInfo.address = info.getStrcountry() + info.getStrprovince() + info.getStrcity();
                        l_useInfo.strIDcard = info.getStridcard();
                        l_useInfo.strIDname = info.getStridname();
                        l_useInfo.phoneNum = info.getStridphone();
                        p_useArr[l_useInfo.nPid] = l_useInfo;
                    }
                    callback && callback(true);
                }
                else {
                    CC.Log('用户信息获取失败');
                }
            });
        }
        getUsersInfo(p_arr, p_useArr) {
            return __awaiter(this, void 0, void 0, function* () {
                let tmpArr = [];
                let myPid = this.userInfo.nPid;
                this.m_allUser[myPid] = this.userInfo;
                p_arr.forEach((pid, index) => {
                    if (!this.m_allUser[pid]) {
                        tmpArr[tmpArr.length] = pid;
                    }
                    else {
                        p_useArr[pid] = this.m_allUser[pid];
                    }
                });
                if (tmpArr.length > 0) {
                    let req = new Info_pb_19();
                    req.setNpid(GlobalData.getInstance().myPid);
                    req.setStrticket(GlobalData.getInstance().myTicket);
                    req.setVecpidList(tmpArr);
                    let infoAck = yield this.infoServicePromise.getMultiUserInfo(req);
                    if (infoAck && infoAck.getNret() == 0) {
                        for (let i = 0; i < infoAck.getVecusersList().length; i++) {
                            let info = infoAck.getVecusersList()[i];
                            let l_useInfo = new BasicInfo();
                            l_useInfo.nPid = info.getNpid();
                            l_useInfo.nickname = info.getStrnickname();
                            l_useInfo.nGender = info.getNgender();
                            l_useInfo.nFaceid = info.getNfaceid();
                            l_useInfo.strAvatar = info.getStravatar();
                            l_useInfo.nBirthday = info.getNbirthday();
                            l_useInfo.address = info.getStrcountry() + info.getStrprovince() + info.getStrcity();
                            l_useInfo.strIDcard = info.getStridcard();
                            l_useInfo.strIDname = info.getStridname();
                            l_useInfo.phoneNum = info.getStridphone();
                            this.m_allUser[l_useInfo.nPid] = l_useInfo;
                            p_useArr[l_useInfo.nPid] = l_useInfo;
                        }
                    }
                    else {
                        CC.Log('用户信息获取失败');
                    }
                }
            });
        }
        verifyRealName(name, idcard, callback) {
            let req = new Info_pb_3();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setStrname(name);
            req.setStridcard(idcard);
            this.infoService.verifyRealName(req, {}, (err, ack) => {
                if (err || (ack && ack.getNret() !== 0 && ack.getNret() !== 1)) {
                    CC.Loge('实名认证失败, err: ' + JSON.stringify(err) + 'res: ' + JSON.stringify(ack));
                    callback(false);
                    return;
                }
                callback(true);
                CC.Log('实名认证成功');
            });
        }
        updateFace(faceid) {
            let req = new Info_pb_5();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setNface(faceid);
            this.infoService.updateFace(req, {}, (err, ack) => {
                if (err) {
                    return;
                }
                if (ack.getNret() == 0) {
                    CC.Log('更新头像成功');
                }
                else {
                    CC.Log('更新头像失败');
                }
            });
        }
        updateNickname(nickname, callback) {
            let req = new Info_pb_7();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setStrnickname(nickname);
            this.infoService.updateNickname(req, {}, (err, ack) => {
                if (err) {
                    TopTipsManager.getInstance().showTopTips('修改昵称失败');
                    return;
                }
                if (ack.getNret() == 0 || ack.getNret() == 1) {
                    TopTipsManager.getInstance().showTopTips('修改昵称成功');
                    this.userInfo.nickname = nickname;
                    callback();
                }
                else if (ack.getNret() == -20002) {
                    TopTipsManager.getInstance().showTopTips('昵称已存在');
                }
                else if (ack.getNret() == -20007) {
                    TopTipsManager.getInstance().showTopTips('昵称不合法');
                }
                else {
                    TopTipsManager.getInstance().showTopTips('修改昵称失败');
                }
            });
        }
        getCode(type, phone) {
            let req = new Info_pb_9();
            req.setStrcodetype(type);
            req.setStrphonenum(phone);
            this.infoService.getCode(req, {}, (err, ack) => {
                if (err) {
                    return;
                }
                if (ack.getNret() == 0) {
                    CC.Log('获取手机验证码成功');
                    let codeType = ack.getStrcodetype();
                }
                else {
                    CC.Log('获取手机验证码失败');
                }
            });
        }
        setUserLocation(fLat, fLng) {
            let req = new Info_pb_11();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setFlat(fLat);
            req.setFlng(fLng);
            this.infoService.setUserLocation(req, {}, (err, ack) => {
                if (err) {
                    return;
                }
                if (ack.getNret() == 0) {
                    CC.Log('设置用户的位置信息成功');
                }
                else {
                    CC.Log('设置用户的位置信息失败');
                }
            });
        }
        clearUserLocation() {
            let req = new Info_pb_13();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            this.infoService.clearUserLocation(req, {}, (err, ack) => {
                if (err) {
                    return;
                }
                if (ack.getNret() == 0) {
                    CC.Log('清除用户的位置信息成功');
                }
                else {
                    CC.Log('清除用户的位置信息失败');
                }
            });
        }
        bindSafeMobile(type, phone, code) {
            let req = new Info_pb_15();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setStrmobilenum(phone);
            req.setNcode(code);
            req.setStrcodetype(type);
            this.infoService.bindSafeMobile(req, {}, (err, ack) => {
                if (err) {
                    return;
                }
                if (ack.getNret() == 0) {
                    CC.Log('绑定安全手机号成功');
                    let mobileNum = ack.getStrmobilenum();
                }
                else {
                    CC.Log('绑定安全手机号失败');
                }
            });
        }
        unBindSafeMobile() {
            let req = new Info_pb_17();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            this.infoService.unBindSafeMobile(req, {}, (err, ack) => {
                if (err) {
                    return;
                }
                if (ack.getNret() == 0) {
                    CC.Log('解绑安全手机号成功');
                }
                else {
                    CC.Log('解绑安全手机号失败');
                }
            });
        }
        updateUserAvatar(avatar, callback) {
            let req = new Info_pb_26();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setStravatar(avatar);
            this.infoService.updateAvatar(req, {}, (err, ack) => {
                if (err) {
                    callback(false);
                    return;
                }
                if (ack.getNret() == 0 || ack.getNret() == 1) {
                    CC.Log('修改用户头像成功');
                    this.userInfo.strAvatar = avatar;
                    callback(true);
                }
            });
        }
        updateUserInfo(info, callback, isVerifyNickname = false) {
            let req = new Info_pb_21();
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setNewinfo(info);
            this.infoService.updateUserInfo(req, {}, (err, ack) => {
                if (err) {
                    callback(false);
                    return;
                }
                if (ack.getNret() == 0 || ack.getNret() == 1) {
                    CC.Log('修改用户基本信息成功');
                    this.userInfo.nPid = info.getNpid();
                    this.userInfo.nickname = info.getStrnickname();
                    this.userInfo.nGender = info.getNgender();
                    this.userInfo.nFaceid = info.getNfaceid();
                    this.userInfo.strAvatar = info.getStravatar();
                    callback(true);
                }
                else if (ack.getNret() == -20002) {
                    if (isVerifyNickname) {
                        callback(false, ack.getNret());
                    }
                    else {
                        callback(false);
                        TopTipsManager.getInstance().showTopTips('昵称已存在');
                    }
                }
                else if (ack.getNret() == -20007) {
                    if (isVerifyNickname) {
                        callback(false, ack.getNret());
                    }
                    else {
                        callback(false);
                    }
                    TopTipsManager.getInstance().showTopTips('昵称不合法');
                }
                else {
                    callback(false);
                    TopTipsManager.getInstance().showTopTips('更新用户信息失败');
                }
            });
        }
        getMultiUserInfo(vecPID, insertData) {
            let req = new Info_pb_19();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setVecpidList(vecPID);
            this.infoService.getMultiUserInfo(req, {}, (err, ack) => {
                if (err) {
                    return;
                }
                if (ack.getNret() == 0) {
                    CC.Log('批量查询玩家基础信息成功');
                    let vec = ack.getVecusersList();
                    for (let i = 0; i < vec.length; i++) {
                        let info = vec[i];
                        let item = {};
                        item['nPID'] = info.getNpid();
                        item['strNickname'] = info.getStrnickname();
                        item['nGender'] = info.getNgender();
                        item['nFaceID'] = info.getNfaceid();
                        insertData[info.getNpid()] = item;
                    }
                }
                else {
                    CC.Log('批量查询玩家基础信息失败');
                }
            });
        }
        queryOtherUserInfo(pid, callback) {
            let req = new Info_pb_19();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setVecpidList([pid]);
            this.infoService.getMultiUserInfo(req, {}, (err, ack) => {
                if (err) {
                    CC.Log('查询其他玩家基础信息失败');
                    return;
                }
                if (ack.getNret() == 0) {
                    CC.Log('查询其他玩家基础信息成功');
                    let vec = ack.getVecusersList();
                    if (vec && vec.length > 0) {
                        let info = vec[0];
                        let otherUser = new BasicInfo();
                        otherUser.nPid = info.getNpid();
                        otherUser.nickname = info.getStrnickname();
                        otherUser.nGender = info.getNgender();
                        otherUser.nFaceid = info.getNfaceid();
                        otherUser.strAvatar = info.getNgender() === 1 ? GameRes.DEFAULT_MAN : GameRes.DEFAULT_WOMAN;
                        if (info.getStravatar()) {
                            otherUser.strAvatar = info.getStravatar();
                        }
                        otherUser.nBirthday = info.getNbirthday();
                        otherUser.address = info.getStrcountry() + info.getStrprovince() + info.getStrcity();
                        otherUser.strIDcard = info.getStridcard();
                        otherUser.strIDname = info.getStridname();
                        otherUser.phoneNum = info.getStridphone();
                        callback(otherUser);
                    }
                }
                else {
                    CC.Log('查询其他玩家基础信息失败');
                }
            });
        }
    }

    var GSMgr_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Common_pb);
    goog.exportSymbol('proto.GSMgr.AllocateTableAck', null, global);
    goog.exportSymbol('proto.GSMgr.AllocateTableReq', null, global);
    goog.exportSymbol('proto.GSMgr.DismissTableAck', null, global);
    goog.exportSymbol('proto.GSMgr.DismissTableReq', null, global);
    goog.exportSymbol('proto.GSMgr.RegisterGSAck', null, global);
    goog.exportSymbol('proto.GSMgr.RegisterGSReq', null, global);
    goog.exportSymbol('proto.GSMgr.ServerInfo', null, global);
    goog.exportSymbol('proto.GSMgr.TableInfo', null, global);
    goog.exportSymbol('proto.GSMgr.TableInfoReq', null, global);
    goog.exportSymbol('proto.GSMgr.TableNumNoti', null, global);
    goog.exportSymbol('proto.GSMgr.TableNumReq', null, global);
    goog.exportSymbol('proto.GSMgr.TableOverAck', null, global);
    goog.exportSymbol('proto.GSMgr.TableOverReq', null, global);
    goog.exportSymbol('proto.GSMgr.TableStatus', null, global);
    goog.exportSymbol('proto.GSMgr.TableStatusChangeNoti', null, global);
    proto.GSMgr.AllocateTableReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.GSMgr.AllocateTableReq.repeatedFields_, null);
    };
    goog.inherits(proto.GSMgr.AllocateTableReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.AllocateTableReq.displayName = 'proto.GSMgr.AllocateTableReq';
    }
    proto.GSMgr.ServerInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.ServerInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.ServerInfo.displayName = 'proto.GSMgr.ServerInfo';
    }
    proto.GSMgr.TableInfoReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.TableInfoReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.TableInfoReq.displayName = 'proto.GSMgr.TableInfoReq';
    }
    proto.GSMgr.TableInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.GSMgr.TableInfo.repeatedFields_, null);
    };
    goog.inherits(proto.GSMgr.TableInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.TableInfo.displayName = 'proto.GSMgr.TableInfo';
    }
    proto.GSMgr.AllocateTableAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.AllocateTableAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.AllocateTableAck.displayName = 'proto.GSMgr.AllocateTableAck';
    }
    proto.GSMgr.RegisterGSReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.RegisterGSReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.RegisterGSReq.displayName = 'proto.GSMgr.RegisterGSReq';
    }
    proto.GSMgr.RegisterGSAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.RegisterGSAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.RegisterGSAck.displayName = 'proto.GSMgr.RegisterGSAck';
    }
    proto.GSMgr.TableOverReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.TableOverReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.TableOverReq.displayName = 'proto.GSMgr.TableOverReq';
    }
    proto.GSMgr.TableOverAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.TableOverAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.TableOverAck.displayName = 'proto.GSMgr.TableOverAck';
    }
    proto.GSMgr.TableStatusChangeNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.TableStatusChangeNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.TableStatusChangeNoti.displayName = 'proto.GSMgr.TableStatusChangeNoti';
    }
    proto.GSMgr.DismissTableReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.DismissTableReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.DismissTableReq.displayName = 'proto.GSMgr.DismissTableReq';
    }
    proto.GSMgr.DismissTableAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.DismissTableAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.DismissTableAck.displayName = 'proto.GSMgr.DismissTableAck';
    }
    proto.GSMgr.TableNumReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.TableNumReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.TableNumReq.displayName = 'proto.GSMgr.TableNumReq';
    }
    proto.GSMgr.TableNumNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.GSMgr.TableNumNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.GSMgr.TableNumNoti.displayName = 'proto.GSMgr.TableNumNoti';
    }
    proto.GSMgr.AllocateTableReq.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.AllocateTableReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.AllocateTableReq.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.AllocateTableReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                ngameid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                arrplayersList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
                strrule: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                strextra: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                mapplayerextraMap: (f = msg.getMapplayerextraMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.AllocateTableReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.AllocateTableReq;
        return proto.GSMgr.AllocateTableReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.AllocateTableReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNgameid(value);
                    break;
                case 2:
                    var value = (reader.readPackedUint32());
                    msg.setArrplayersList(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrrule(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrextra(value);
                    break;
                case 5:
                    var value = msg.getMapplayerextraMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readString, null, 0, "");
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.AllocateTableReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.AllocateTableReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.AllocateTableReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNgameid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getArrplayersList();
        if (f.length > 0) {
            writer.writePackedUint32(2, f);
        }
        f = message.getStrrule();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStrextra();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getMapplayerextraMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(5, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeString);
        }
    };
    proto.GSMgr.AllocateTableReq.prototype.getNgameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GSMgr.AllocateTableReq.prototype.setNgameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GSMgr.AllocateTableReq.prototype.getArrplayersList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 2));
    };
    proto.GSMgr.AllocateTableReq.prototype.setArrplayersList = function (value) {
        return googleProtobuf.Message.setField(this, 2, value || []);
    };
    proto.GSMgr.AllocateTableReq.prototype.addArrplayers = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.GSMgr.AllocateTableReq.prototype.clearArrplayersList = function () {
        return this.setArrplayersList([]);
    };
    proto.GSMgr.AllocateTableReq.prototype.getStrrule = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.GSMgr.AllocateTableReq.prototype.setStrrule = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.GSMgr.AllocateTableReq.prototype.getStrextra = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.GSMgr.AllocateTableReq.prototype.setStrextra = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.GSMgr.AllocateTableReq.prototype.getMapplayerextraMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 5, opt_noLazyCreate, null));
    };
    proto.GSMgr.AllocateTableReq.prototype.clearMapplayerextraMap = function () {
        this.getMapplayerextraMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.ServerInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.ServerInfo.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.ServerInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                ngameid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strservername: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                strserverid: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                straddr: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                nmaxtable: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.ServerInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.ServerInfo;
        return proto.GSMgr.ServerInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.ServerInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNgameid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrservername(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrserverid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStraddr(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNmaxtable(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.ServerInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.ServerInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.ServerInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNgameid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrservername();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStrserverid();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStraddr();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNmaxtable();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
    };
    proto.GSMgr.ServerInfo.prototype.getNgameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GSMgr.ServerInfo.prototype.setNgameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GSMgr.ServerInfo.prototype.getStrservername = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.GSMgr.ServerInfo.prototype.setStrservername = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.GSMgr.ServerInfo.prototype.getStrserverid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.GSMgr.ServerInfo.prototype.setStrserverid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.GSMgr.ServerInfo.prototype.getStraddr = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.GSMgr.ServerInfo.prototype.setStraddr = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.GSMgr.ServerInfo.prototype.getNmaxtable = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.GSMgr.ServerInfo.prototype.setNmaxtable = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.TableInfoReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.TableInfoReq.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.TableInfoReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.TableInfoReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.TableInfoReq;
        return proto.GSMgr.TableInfoReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.TableInfoReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.TableInfoReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.TableInfoReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.TableInfoReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.GSMgr.TableInfoReq.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GSMgr.TableInfoReq.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.GSMgr.TableInfo.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.TableInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.TableInfo.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.TableInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                arrplayersList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
                stserverinfo: (f = msg.getStserverinfo()) && proto.GSMgr.ServerInfo.toObject(includeInstance, f),
                strrule: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                strextra: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                nstatus: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                mapplayerextraMap: (f = msg.getMapplayerextraMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.TableInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.TableInfo;
        return proto.GSMgr.TableInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.TableInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                case 2:
                    var value = (reader.readPackedUint32());
                    msg.setArrplayersList(value);
                    break;
                case 3:
                    var value = new proto.GSMgr.ServerInfo;
                    reader.readMessage(value, proto.GSMgr.ServerInfo.deserializeBinaryFromReader);
                    msg.setStserverinfo(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrrule(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrextra(value);
                    break;
                case 6:
                    var value = (reader.readInt32());
                    msg.setNstatus(value);
                    break;
                case 7:
                    var value = msg.getMapplayerextraMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readString, null, 0, "");
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.TableInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.TableInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.TableInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getArrplayersList();
        if (f.length > 0) {
            writer.writePackedUint32(2, f);
        }
        f = message.getStserverinfo();
        if (f != null) {
            writer.writeMessage(3, f, proto.GSMgr.ServerInfo.serializeBinaryToWriter);
        }
        f = message.getStrrule();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getStrextra();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getNstatus();
        if (f !== 0) {
            writer.writeInt32(6, f);
        }
        f = message.getMapplayerextraMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(7, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeString);
        }
    };
    proto.GSMgr.TableInfo.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GSMgr.TableInfo.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.GSMgr.TableInfo.prototype.getArrplayersList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 2));
    };
    proto.GSMgr.TableInfo.prototype.setArrplayersList = function (value) {
        return googleProtobuf.Message.setField(this, 2, value || []);
    };
    proto.GSMgr.TableInfo.prototype.addArrplayers = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.GSMgr.TableInfo.prototype.clearArrplayersList = function () {
        return this.setArrplayersList([]);
    };
    proto.GSMgr.TableInfo.prototype.getStserverinfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.GSMgr.ServerInfo, 3));
    };
    proto.GSMgr.TableInfo.prototype.setStserverinfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.GSMgr.TableInfo.prototype.clearStserverinfo = function () {
        return this.setStserverinfo(undefined);
    };
    proto.GSMgr.TableInfo.prototype.hasStserverinfo = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    proto.GSMgr.TableInfo.prototype.getStrrule = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.GSMgr.TableInfo.prototype.setStrrule = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.GSMgr.TableInfo.prototype.getStrextra = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.GSMgr.TableInfo.prototype.setStrextra = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.GSMgr.TableInfo.prototype.getNstatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.GSMgr.TableInfo.prototype.setNstatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.GSMgr.TableInfo.prototype.getMapplayerextraMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 7, opt_noLazyCreate, null));
    };
    proto.GSMgr.TableInfo.prototype.clearMapplayerextraMap = function () {
        this.getMapplayerextraMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.AllocateTableAck.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.AllocateTableAck.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.AllocateTableAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                sttable: (f = msg.getSttable()) && proto.GSMgr.TableInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.AllocateTableAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.AllocateTableAck;
        return proto.GSMgr.AllocateTableAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.AllocateTableAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.GSMgr.TableInfo;
                    reader.readMessage(value, proto.GSMgr.TableInfo.deserializeBinaryFromReader);
                    msg.setSttable(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.AllocateTableAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.AllocateTableAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.AllocateTableAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getSttable();
        if (f != null) {
            writer.writeMessage(2, f, proto.GSMgr.TableInfo.serializeBinaryToWriter);
        }
    };
    proto.GSMgr.AllocateTableAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GSMgr.AllocateTableAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.GSMgr.AllocateTableAck.prototype.getSttable = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.GSMgr.TableInfo, 2));
    };
    proto.GSMgr.AllocateTableAck.prototype.setSttable = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.GSMgr.AllocateTableAck.prototype.clearSttable = function () {
        return this.setSttable(undefined);
    };
    proto.GSMgr.AllocateTableAck.prototype.hasSttable = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.RegisterGSReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.RegisterGSReq.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.RegisterGSReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                stserverinfo: (f = msg.getStserverinfo()) && proto.GSMgr.ServerInfo.toObject(includeInstance, f),
                breconnect: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 2, false)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.RegisterGSReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.RegisterGSReq;
        return proto.GSMgr.RegisterGSReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.RegisterGSReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.GSMgr.ServerInfo;
                    reader.readMessage(value, proto.GSMgr.ServerInfo.deserializeBinaryFromReader);
                    msg.setStserverinfo(value);
                    break;
                case 2:
                    var value = (reader.readBool());
                    msg.setBreconnect(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.RegisterGSReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.RegisterGSReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.RegisterGSReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStserverinfo();
        if (f != null) {
            writer.writeMessage(1, f, proto.GSMgr.ServerInfo.serializeBinaryToWriter);
        }
        f = message.getBreconnect();
        if (f) {
            writer.writeBool(2, f);
        }
    };
    proto.GSMgr.RegisterGSReq.prototype.getStserverinfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.GSMgr.ServerInfo, 1));
    };
    proto.GSMgr.RegisterGSReq.prototype.setStserverinfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 1, value);
    };
    proto.GSMgr.RegisterGSReq.prototype.clearStserverinfo = function () {
        return this.setStserverinfo(undefined);
    };
    proto.GSMgr.RegisterGSReq.prototype.hasStserverinfo = function () {
        return googleProtobuf.Message.getField(this, 1) != null;
    };
    proto.GSMgr.RegisterGSReq.prototype.getBreconnect = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 2, false));
    };
    proto.GSMgr.RegisterGSReq.prototype.setBreconnect = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.RegisterGSAck.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.RegisterGSAck.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.RegisterGSAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.RegisterGSAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.RegisterGSAck;
        return proto.GSMgr.RegisterGSAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.RegisterGSAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.RegisterGSAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.RegisterGSAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.RegisterGSAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.GSMgr.RegisterGSAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GSMgr.RegisterGSAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.TableOverReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.TableOverReq.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.TableOverReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.TableOverReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.TableOverReq;
        return proto.GSMgr.TableOverReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.TableOverReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.TableOverReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.TableOverReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.TableOverReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.GSMgr.TableOverReq.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GSMgr.TableOverReq.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.TableOverAck.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.TableOverAck.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.TableOverAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.TableOverAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.TableOverAck;
        return proto.GSMgr.TableOverAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.TableOverAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.TableOverAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.TableOverAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.TableOverAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.GSMgr.TableOverAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GSMgr.TableOverAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.TableStatusChangeNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.TableStatusChangeNoti.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.TableStatusChangeNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                nstatus: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.TableStatusChangeNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.TableStatusChangeNoti;
        return proto.GSMgr.TableStatusChangeNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.TableStatusChangeNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNstatus(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.TableStatusChangeNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.TableStatusChangeNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.TableStatusChangeNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNstatus();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
    };
    proto.GSMgr.TableStatusChangeNoti.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GSMgr.TableStatusChangeNoti.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.GSMgr.TableStatusChangeNoti.prototype.getNstatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.GSMgr.TableStatusChangeNoti.prototype.setNstatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.DismissTableReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.DismissTableReq.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.DismissTableReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.DismissTableReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.DismissTableReq;
        return proto.GSMgr.DismissTableReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.DismissTableReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.DismissTableReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.DismissTableReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.DismissTableReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.GSMgr.DismissTableReq.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.GSMgr.DismissTableReq.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.DismissTableAck.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.DismissTableAck.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.DismissTableAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.DismissTableAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.DismissTableAck;
        return proto.GSMgr.DismissTableAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.DismissTableAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.DismissTableAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.DismissTableAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.DismissTableAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.GSMgr.DismissTableAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GSMgr.DismissTableAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.TableNumReq.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.TableNumReq.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.TableNumReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                ngameid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.TableNumReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.TableNumReq;
        return proto.GSMgr.TableNumReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.TableNumReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNgameid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.TableNumReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.TableNumReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.TableNumReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNgameid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.GSMgr.TableNumReq.prototype.getNgameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GSMgr.TableNumReq.prototype.setNgameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.GSMgr.TableNumNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.GSMgr.TableNumNoti.toObject(opt_includeInstance, this);
        };
        proto.GSMgr.TableNumNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                ngameid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntable: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.GSMgr.TableNumNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.GSMgr.TableNumNoti;
        return proto.GSMgr.TableNumNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.GSMgr.TableNumNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNgameid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNtable(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.GSMgr.TableNumNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.GSMgr.TableNumNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.GSMgr.TableNumNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNgameid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtable();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.GSMgr.TableNumNoti.prototype.getNgameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.GSMgr.TableNumNoti.prototype.setNgameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.GSMgr.TableNumNoti.prototype.getNtable = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.GSMgr.TableNumNoti.prototype.setNtable = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.GSMgr.TableStatus = {
        INIT: 0,
        PLAY: 1,
        OVER: 2,
        CANCELED: 3
    };
    goog.object.extend(exports, proto.GSMgr);

    });
    var GSMgr_pb_1 = GSMgr_pb.TableInfo;
    var GSMgr_pb_2 = GSMgr_pb.ServerInfo;
    var GSMgr_pb_3 = GSMgr_pb.AllocateTableAck;
    var GSMgr_pb_4 = GSMgr_pb.AllocateTableReq;

    const grpc$4 = {};
    grpc$4.web = grpcWeb;

    const proto$5 = {};
    proto$5.GSMgr = GSMgr_pb;
    proto$5.GSMgr.GSMgrServerClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$4.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$5.GSMgr.GSMgrServerPromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$4.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_GSMgrServer_AllocateTable = new grpc$4.web.MethodDescriptor('/GSMgr.GSMgrServer/AllocateTable', grpc$4.web.MethodType.UNARY, proto$5.GSMgr.AllocateTableReq, proto$5.GSMgr.AllocateTableAck, function (request) {
        return request.serializeBinary();
    }, proto$5.GSMgr.AllocateTableAck.deserializeBinary);
    proto$5.GSMgr.GSMgrServerClient.prototype.allocateTable =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/GSMgr.GSMgrServer/AllocateTable', request, metadata || {}, methodDescriptor_GSMgrServer_AllocateTable, callback);
        };
    proto$5.GSMgr.GSMgrServerPromiseClient.prototype.allocateTable =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/GSMgr.GSMgrServer/AllocateTable', request, metadata || {}, methodDescriptor_GSMgrServer_AllocateTable);
        };
    const methodDescriptor_GSMgrServer_DismissTable = new grpc$4.web.MethodDescriptor('/GSMgr.GSMgrServer/DismissTable', grpc$4.web.MethodType.UNARY, proto$5.GSMgr.DismissTableReq, proto$5.GSMgr.DismissTableAck, function (request) {
        return request.serializeBinary();
    }, proto$5.GSMgr.DismissTableAck.deserializeBinary);
    proto$5.GSMgr.GSMgrServerClient.prototype.dismissTable =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/GSMgr.GSMgrServer/DismissTable', request, metadata || {}, methodDescriptor_GSMgrServer_DismissTable, callback);
        };
    proto$5.GSMgr.GSMgrServerPromiseClient.prototype.dismissTable =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/GSMgr.GSMgrServer/DismissTable', request, metadata || {}, methodDescriptor_GSMgrServer_DismissTable);
        };
    const methodDescriptor_GSMgrServer_GetTableInfo = new grpc$4.web.MethodDescriptor('/GSMgr.GSMgrServer/GetTableInfo', grpc$4.web.MethodType.UNARY, proto$5.GSMgr.TableInfoReq, proto$5.GSMgr.TableInfo, function (request) {
        return request.serializeBinary();
    }, proto$5.GSMgr.TableInfo.deserializeBinary);
    proto$5.GSMgr.GSMgrServerClient.prototype.getTableInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/GSMgr.GSMgrServer/GetTableInfo', request, metadata || {}, methodDescriptor_GSMgrServer_GetTableInfo, callback);
        };
    proto$5.GSMgr.GSMgrServerPromiseClient.prototype.getTableInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/GSMgr.GSMgrServer/GetTableInfo', request, metadata || {}, methodDescriptor_GSMgrServer_GetTableInfo);
        };
    const methodDescriptor_GSMgrServer_RegisterGS = new grpc$4.web.MethodDescriptor('/GSMgr.GSMgrServer/RegisterGS', grpc$4.web.MethodType.UNARY, proto$5.GSMgr.RegisterGSReq, proto$5.GSMgr.RegisterGSAck, function (request) {
        return request.serializeBinary();
    }, proto$5.GSMgr.RegisterGSAck.deserializeBinary);
    proto$5.GSMgr.GSMgrServerClient.prototype.registerGS =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/GSMgr.GSMgrServer/RegisterGS', request, metadata || {}, methodDescriptor_GSMgrServer_RegisterGS, callback);
        };
    proto$5.GSMgr.GSMgrServerPromiseClient.prototype.registerGS =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/GSMgr.GSMgrServer/RegisterGS', request, metadata || {}, methodDescriptor_GSMgrServer_RegisterGS);
        };
    const methodDescriptor_GSMgrServer_TableOver = new grpc$4.web.MethodDescriptor('/GSMgr.GSMgrServer/TableOver', grpc$4.web.MethodType.UNARY, proto$5.GSMgr.TableOverReq, proto$5.GSMgr.TableOverAck, function (request) {
        return request.serializeBinary();
    }, proto$5.GSMgr.TableOverAck.deserializeBinary);
    proto$5.GSMgr.GSMgrServerClient.prototype.tableOver =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/GSMgr.GSMgrServer/TableOver', request, metadata || {}, methodDescriptor_GSMgrServer_TableOver, callback);
        };
    proto$5.GSMgr.GSMgrServerPromiseClient.prototype.tableOver =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/GSMgr.GSMgrServer/TableOver', request, metadata || {}, methodDescriptor_GSMgrServer_TableOver);
        };
    const methodDescriptor_GSMgrServer_GetTableNum = new grpc$4.web.MethodDescriptor('/GSMgr.GSMgrServer/GetTableNum', grpc$4.web.MethodType.UNARY, proto$5.GSMgr.TableNumReq, proto$5.GSMgr.TableNumNoti, function (request) {
        return request.serializeBinary();
    }, proto$5.GSMgr.TableNumNoti.deserializeBinary);
    proto$5.GSMgr.GSMgrServerClient.prototype.getTableNum =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/GSMgr.GSMgrServer/GetTableNum', request, metadata || {}, methodDescriptor_GSMgrServer_GetTableNum, callback);
        };
    proto$5.GSMgr.GSMgrServerPromiseClient.prototype.getTableNum =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/GSMgr.GSMgrServer/GetTableNum', request, metadata || {}, methodDescriptor_GSMgrServer_GetTableNum);
        };
    var GSMgr_grpc_web_pb = proto$5.GSMgr;
    var GSMgr_grpc_web_pb_1 = GSMgr_grpc_web_pb.GSMgrServerClient;

    var Match_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, GSMgr_pb);

    goog.object.extend(proto, Common_pb);
    goog.exportSymbol('proto.Match.CancelAck', null, global);
    goog.exportSymbol('proto.Match.CancelGet', null, global);
    goog.exportSymbol('proto.Match.CreateAck', null, global);
    goog.exportSymbol('proto.Match.CreateGet', null, global);
    goog.exportSymbol('proto.Match.GiveUpAck', null, global);
    goog.exportSymbol('proto.Match.GiveUpGet', null, global);
    goog.exportSymbol('proto.Match.MatchAck', null, global);
    goog.exportSymbol('proto.Match.MatchGet', null, global);
    goog.exportSymbol('proto.Match.MatchOverNoti', null, global);
    goog.exportSymbol('proto.Match.MatchTableNotify', null, global);
    goog.exportSymbol('proto.Match.MatchUpdateNoti', null, global);
    goog.exportSymbol('proto.Match.MkRule', null, global);
    goog.exportSymbol('proto.Match.Player', null, global);
    goog.exportSymbol('proto.Match.PlyNumAck', null, global);
    goog.exportSymbol('proto.Match.PlyNumGet', null, global);
    goog.exportSymbol('proto.Match.StartAck', null, global);
    goog.exportSymbol('proto.Match.StartGet', null, global);
    goog.exportSymbol('proto.Match.Status', null, global);
    goog.exportSymbol('proto.Match.StatusAck', null, global);
    goog.exportSymbol('proto.Match.StatusGet', null, global);
    goog.exportSymbol('proto.Match.Table', null, global);
    goog.exportSymbol('proto.Match.Type', null, global);
    proto.Match.MkRule = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.MkRule, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.MkRule.displayName = 'proto.Match.MkRule';
    }
    proto.Match.Player = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.Player, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.Player.displayName = 'proto.Match.Player';
    }
    proto.Match.Table = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Match.Table.repeatedFields_, null);
    };
    goog.inherits(proto.Match.Table, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.Table.displayName = 'proto.Match.Table';
    }
    proto.Match.CreateGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.CreateGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.CreateGet.displayName = 'proto.Match.CreateGet';
    }
    proto.Match.CreateAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.CreateAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.CreateAck.displayName = 'proto.Match.CreateAck';
    }
    proto.Match.StartGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.StartGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.StartGet.displayName = 'proto.Match.StartGet';
    }
    proto.Match.StartAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.StartAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.StartAck.displayName = 'proto.Match.StartAck';
    }
    proto.Match.MatchGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.MatchGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.MatchGet.displayName = 'proto.Match.MatchGet';
    }
    proto.Match.MatchAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.MatchAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.MatchAck.displayName = 'proto.Match.MatchAck';
    }
    proto.Match.CancelGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.CancelGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.CancelGet.displayName = 'proto.Match.CancelGet';
    }
    proto.Match.CancelAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.CancelAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.CancelAck.displayName = 'proto.Match.CancelAck';
    }
    proto.Match.MatchUpdateNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.MatchUpdateNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.MatchUpdateNoti.displayName = 'proto.Match.MatchUpdateNoti';
    }
    proto.Match.MatchTableNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.MatchTableNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.MatchTableNotify.displayName = 'proto.Match.MatchTableNotify';
    }
    proto.Match.MatchOverNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.MatchOverNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.MatchOverNoti.displayName = 'proto.Match.MatchOverNoti';
    }
    proto.Match.GiveUpGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.GiveUpGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.GiveUpGet.displayName = 'proto.Match.GiveUpGet';
    }
    proto.Match.GiveUpAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.GiveUpAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.GiveUpAck.displayName = 'proto.Match.GiveUpAck';
    }
    proto.Match.StatusGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.StatusGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.StatusGet.displayName = 'proto.Match.StatusGet';
    }
    proto.Match.StatusAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.StatusAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.StatusAck.displayName = 'proto.Match.StatusAck';
    }
    proto.Match.PlyNumGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Match.PlyNumGet.repeatedFields_, null);
    };
    goog.inherits(proto.Match.PlyNumGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.PlyNumGet.displayName = 'proto.Match.PlyNumGet';
    }
    proto.Match.PlyNumAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Match.PlyNumAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Match.PlyNumAck.displayName = 'proto.Match.PlyNumAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.MkRule.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.MkRule.toObject(opt_includeInstance, this);
        };
        proto.Match.MkRule.toObject = function (includeInstance, msg) {
            var f, obj = {
                basescore: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                playernum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                minmoney: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                moneytype: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                taxratio: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                optionflags: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                nummax: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                kickmoney: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                banker: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                maxrate: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                roomid: googleProtobuf.Message.getFieldWithDefault(msg, 11, ""),
                maxmoney: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                viplv: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.MkRule.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.MkRule;
        return proto.Match.MkRule.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.MkRule.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setBasescore(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setPlayernum(value);
                    break;
                case 3:
                    var value = (reader.readSint64());
                    msg.setMinmoney(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setMoneytype(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setTaxratio(value);
                    break;
                case 6:
                    var value = (reader.readUint32());
                    msg.setOptionflags(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setNummax(value);
                    break;
                case 8:
                    var value = (reader.readSint64());
                    msg.setKickmoney(value);
                    break;
                case 9:
                    var value = (reader.readSint32());
                    msg.setBanker(value);
                    break;
                case 10:
                    var value = (reader.readSint64());
                    msg.setMaxrate(value);
                    break;
                case 11:
                    var value = (reader.readString());
                    msg.setRoomid(value);
                    break;
                case 12:
                    var value = (reader.readSint64());
                    msg.setMaxmoney(value);
                    break;
                case 13:
                    var value = (reader.readSint32());
                    msg.setViplv(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.MkRule.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.MkRule.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.MkRule.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getBasescore();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getPlayernum();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getMinmoney();
        if (f !== 0) {
            writer.writeSint64(3, f);
        }
        f = message.getMoneytype();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getTaxratio();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getOptionflags();
        if (f !== 0) {
            writer.writeUint32(6, f);
        }
        f = message.getNummax();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getKickmoney();
        if (f !== 0) {
            writer.writeSint64(8, f);
        }
        f = message.getBanker();
        if (f !== 0) {
            writer.writeSint32(9, f);
        }
        f = message.getMaxrate();
        if (f !== 0) {
            writer.writeSint64(10, f);
        }
        f = message.getRoomid();
        if (f.length > 0) {
            writer.writeString(11, f);
        }
        f = message.getMaxmoney();
        if (f !== 0) {
            writer.writeSint64(12, f);
        }
        f = message.getViplv();
        if (f !== 0) {
            writer.writeSint32(13, f);
        }
    };
    proto.Match.MkRule.prototype.getBasescore = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.MkRule.prototype.setBasescore = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Match.MkRule.prototype.getPlayernum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Match.MkRule.prototype.setPlayernum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Match.MkRule.prototype.getMinmoney = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Match.MkRule.prototype.setMinmoney = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Match.MkRule.prototype.getMoneytype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Match.MkRule.prototype.setMoneytype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Match.MkRule.prototype.getTaxratio = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Match.MkRule.prototype.setTaxratio = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Match.MkRule.prototype.getOptionflags = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Match.MkRule.prototype.setOptionflags = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Match.MkRule.prototype.getNummax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Match.MkRule.prototype.setNummax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Match.MkRule.prototype.getKickmoney = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Match.MkRule.prototype.setKickmoney = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Match.MkRule.prototype.getBanker = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Match.MkRule.prototype.setBanker = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Match.MkRule.prototype.getMaxrate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Match.MkRule.prototype.setMaxrate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Match.MkRule.prototype.getRoomid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, ""));
    };
    proto.Match.MkRule.prototype.setRoomid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 11, value);
    };
    proto.Match.MkRule.prototype.getMaxmoney = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Match.MkRule.prototype.setMaxmoney = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.Match.MkRule.prototype.getViplv = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
    };
    proto.Match.MkRule.prototype.setViplv = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 13, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.Player.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.Player.toObject(opt_includeInstance, this);
        };
        proto.Match.Player.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                change: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                pass: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                roomid: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                time: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.Player.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.Player;
        return proto.Match.Player.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.Player.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setChange(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setPass(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setRoomid(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setStatus(value);
                    break;
                case 6:
                    var value = (reader.readSint64());
                    msg.setTime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.Player.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.Player.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.Player.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getChange();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
        f = message.getPass();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getRoomid();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getStatus();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getTime();
        if (f !== 0) {
            writer.writeSint64(6, f);
        }
    };
    proto.Match.Player.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.Player.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Match.Player.prototype.getChange = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Match.Player.prototype.setChange = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Match.Player.prototype.getPass = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Match.Player.prototype.setPass = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Match.Player.prototype.getRoomid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Match.Player.prototype.setRoomid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Match.Player.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Match.Player.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Match.Player.prototype.getTime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Match.Player.prototype.setTime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Match.Table.repeatedFields_ = [20];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.Table.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.Table.toObject(opt_includeInstance, this);
        };
        proto.Match.Table.toObject = function (includeInstance, msg) {
            var f, obj = {
                owner: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                pass: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                time: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                rule: (f = msg.getRule()) && proto.Match.MkRule.toObject(includeInstance, f),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                gameid: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                tableid: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
                numcur: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                numply: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                roomid: googleProtobuf.Message.getFieldWithDefault(msg, 10, ""),
                count: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                newer: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                trainid: googleProtobuf.Message.getFieldWithDefault(msg, 13, ""),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 14, ""),
                unique: googleProtobuf.Message.getFieldWithDefault(msg, 15, ""),
                serveraddr: googleProtobuf.Message.getFieldWithDefault(msg, 16, ""),
                pidsList: (f = googleProtobuf.Message.getRepeatedField(msg, 20)) == null ? undefined : f,
                usersMap: (f = msg.getUsersMap()) ? f.toObject(includeInstance, undefined) : [],
                chargeMap: (f = msg.getChargeMap()) ? f.toObject(includeInstance, undefined) : [],
                cancelMap: (f = msg.getCancelMap()) ? f.toObject(includeInstance, undefined) : [],
                changeMap: (f = msg.getChangeMap()) ? f.toObject(includeInstance, undefined) : [],
                taxfeeMap: (f = msg.getTaxfeeMap()) ? f.toObject(includeInstance, undefined) : [],
                namesMap: (f = msg.getNamesMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.Table.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.Table;
        return proto.Match.Table.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.Table.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setOwner(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setPass(value);
                    break;
                case 3:
                    var value = (reader.readSint64());
                    msg.setTime(value);
                    break;
                case 4:
                    var value = new proto.Match.MkRule;
                    reader.readMessage(value, proto.Match.MkRule.deserializeBinaryFromReader);
                    msg.setRule(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setStatus(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setGameid(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setTableid(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setNumcur(value);
                    break;
                case 9:
                    var value = (reader.readSint32());
                    msg.setNumply(value);
                    break;
                case 10:
                    var value = (reader.readString());
                    msg.setRoomid(value);
                    break;
                case 11:
                    var value = (reader.readSint64());
                    msg.setCount(value);
                    break;
                case 12:
                    var value = (reader.readSint32());
                    msg.setNewer(value);
                    break;
                case 13:
                    var value = (reader.readString());
                    msg.setTrainid(value);
                    break;
                case 14:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 15:
                    var value = (reader.readString());
                    msg.setUnique(value);
                    break;
                case 16:
                    var value = (reader.readString());
                    msg.setServeraddr(value);
                    break;
                case 20:
                    var value = (reader.readPackedUint32());
                    msg.setPidsList(value);
                    break;
                case 21:
                    var value = msg.getUsersMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readInt32, googleProtobuf.BinaryReader.prototype.readUint32, null, 0, 0);
                    });
                    break;
                case 22:
                    var value = msg.getChargeMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readSint64, null, 0, 0);
                    });
                    break;
                case 23:
                    var value = msg.getCancelMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readSint64, null, 0, 0);
                    });
                    break;
                case 24:
                    var value = msg.getChangeMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readSint64, null, 0, 0);
                    });
                    break;
                case 25:
                    var value = msg.getTaxfeeMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readSint64, null, 0, 0);
                    });
                    break;
                case 26:
                    var value = msg.getNamesMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readString, null, 0, "");
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.Table.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.Table.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.Table.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getOwner();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getPass();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getTime();
        if (f !== 0) {
            writer.writeSint64(3, f);
        }
        f = message.getRule();
        if (f != null) {
            writer.writeMessage(4, f, proto.Match.MkRule.serializeBinaryToWriter);
        }
        f = message.getStatus();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getGameid();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getTableid();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
        f = message.getNumcur();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
        f = message.getNumply();
        if (f !== 0) {
            writer.writeSint32(9, f);
        }
        f = message.getRoomid();
        if (f.length > 0) {
            writer.writeString(10, f);
        }
        f = message.getCount();
        if (f !== 0) {
            writer.writeSint64(11, f);
        }
        f = message.getNewer();
        if (f !== 0) {
            writer.writeSint32(12, f);
        }
        f = message.getTrainid();
        if (f.length > 0) {
            writer.writeString(13, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(14, f);
        }
        f = message.getUnique();
        if (f.length > 0) {
            writer.writeString(15, f);
        }
        f = message.getServeraddr();
        if (f.length > 0) {
            writer.writeString(16, f);
        }
        f = message.getPidsList();
        if (f.length > 0) {
            writer.writePackedUint32(20, f);
        }
        f = message.getUsersMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(21, writer, googleProtobuf.BinaryWriter.prototype.writeInt32, googleProtobuf.BinaryWriter.prototype.writeUint32);
        }
        f = message.getChargeMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(22, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeSint64);
        }
        f = message.getCancelMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(23, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeSint64);
        }
        f = message.getChangeMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(24, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeSint64);
        }
        f = message.getTaxfeeMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(25, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeSint64);
        }
        f = message.getNamesMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(26, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeString);
        }
    };
    proto.Match.Table.prototype.getOwner = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.Table.prototype.setOwner = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Match.Table.prototype.getPass = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Match.Table.prototype.setPass = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Match.Table.prototype.getTime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Match.Table.prototype.setTime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Match.Table.prototype.getRule = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Match.MkRule, 4));
    };
    proto.Match.Table.prototype.setRule = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 4, value);
    };
    proto.Match.Table.prototype.clearRule = function () {
        return this.setRule(undefined);
    };
    proto.Match.Table.prototype.hasRule = function () {
        return googleProtobuf.Message.getField(this, 4) != null;
    };
    proto.Match.Table.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Match.Table.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Match.Table.prototype.getGameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Match.Table.prototype.setGameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Match.Table.prototype.getTableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Match.Table.prototype.setTableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Match.Table.prototype.getNumcur = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Match.Table.prototype.setNumcur = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Match.Table.prototype.getNumply = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Match.Table.prototype.setNumply = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Match.Table.prototype.getRoomid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
    };
    proto.Match.Table.prototype.setRoomid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 10, value);
    };
    proto.Match.Table.prototype.getCount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Match.Table.prototype.setCount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Match.Table.prototype.getNewer = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Match.Table.prototype.setNewer = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.Match.Table.prototype.getTrainid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, ""));
    };
    proto.Match.Table.prototype.setTrainid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 13, value);
    };
    proto.Match.Table.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 14, ""));
    };
    proto.Match.Table.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 14, value);
    };
    proto.Match.Table.prototype.getUnique = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 15, ""));
    };
    proto.Match.Table.prototype.setUnique = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 15, value);
    };
    proto.Match.Table.prototype.getServeraddr = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 16, ""));
    };
    proto.Match.Table.prototype.setServeraddr = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 16, value);
    };
    proto.Match.Table.prototype.getPidsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 20));
    };
    proto.Match.Table.prototype.setPidsList = function (value) {
        return googleProtobuf.Message.setField(this, 20, value || []);
    };
    proto.Match.Table.prototype.addPids = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 20, value, opt_index);
    };
    proto.Match.Table.prototype.clearPidsList = function () {
        return this.setPidsList([]);
    };
    proto.Match.Table.prototype.getUsersMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 21, opt_noLazyCreate, null));
    };
    proto.Match.Table.prototype.clearUsersMap = function () {
        this.getUsersMap().clear();
        return this;
    };
    proto.Match.Table.prototype.getChargeMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 22, opt_noLazyCreate, null));
    };
    proto.Match.Table.prototype.clearChargeMap = function () {
        this.getChargeMap().clear();
        return this;
    };
    proto.Match.Table.prototype.getCancelMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 23, opt_noLazyCreate, null));
    };
    proto.Match.Table.prototype.clearCancelMap = function () {
        this.getCancelMap().clear();
        return this;
    };
    proto.Match.Table.prototype.getChangeMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 24, opt_noLazyCreate, null));
    };
    proto.Match.Table.prototype.clearChangeMap = function () {
        this.getChangeMap().clear();
        return this;
    };
    proto.Match.Table.prototype.getTaxfeeMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 25, opt_noLazyCreate, null));
    };
    proto.Match.Table.prototype.clearTaxfeeMap = function () {
        this.getTaxfeeMap().clear();
        return this;
    };
    proto.Match.Table.prototype.getNamesMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 26, opt_noLazyCreate, null));
    };
    proto.Match.Table.prototype.clearNamesMap = function () {
        this.getNamesMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.CreateGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.CreateGet.toObject(opt_includeInstance, this);
        };
        proto.Match.CreateGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                rule: (f = msg.getRule()) && proto.Match.MkRule.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.CreateGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.CreateGet;
        return proto.Match.CreateGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.CreateGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Match.MkRule;
                    reader.readMessage(value, proto.Match.MkRule.deserializeBinaryFromReader);
                    msg.setRule(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.CreateGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.CreateGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.CreateGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRule();
        if (f != null) {
            writer.writeMessage(1, f, proto.Match.MkRule.serializeBinaryToWriter);
        }
    };
    proto.Match.CreateGet.prototype.getRule = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Match.MkRule, 1));
    };
    proto.Match.CreateGet.prototype.setRule = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 1, value);
    };
    proto.Match.CreateGet.prototype.clearRule = function () {
        return this.setRule(undefined);
    };
    proto.Match.CreateGet.prototype.hasRule = function () {
        return googleProtobuf.Message.getField(this, 1) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.CreateAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.CreateAck.toObject(opt_includeInstance, this);
        };
        proto.Match.CreateAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                table: (f = msg.getTable()) && proto.Match.Table.toObject(includeInstance, f),
                nvip: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.CreateAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.CreateAck;
        return proto.Match.CreateAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.CreateAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Match.Table;
                    reader.readMessage(value, proto.Match.Table.deserializeBinaryFromReader);
                    msg.setTable(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setNvip(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.CreateAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.CreateAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.CreateAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getTable();
        if (f != null) {
            writer.writeMessage(2, f, proto.Match.Table.serializeBinaryToWriter);
        }
        f = message.getNvip();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
    };
    proto.Match.CreateAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.CreateAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Match.CreateAck.prototype.getTable = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Match.Table, 2));
    };
    proto.Match.CreateAck.prototype.setTable = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Match.CreateAck.prototype.clearTable = function () {
        return this.setTable(undefined);
    };
    proto.Match.CreateAck.prototype.hasTable = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Match.CreateAck.prototype.getNvip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Match.CreateAck.prototype.setNvip = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.StartGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.StartGet.toObject(opt_includeInstance, this);
        };
        proto.Match.StartGet.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.StartGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.StartGet;
        return proto.Match.StartGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.StartGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.StartGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.StartGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.StartGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.StartAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.StartAck.toObject(opt_includeInstance, this);
        };
        proto.Match.StartAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.StartAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.StartAck;
        return proto.Match.StartAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.StartAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.StartAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.StartAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.StartAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
    };
    proto.Match.StartAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.StartAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.MatchGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.MatchGet.toObject(opt_includeInstance, this);
        };
        proto.Match.MatchGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                ip: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                pass: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                plynum: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                roomid: googleProtobuf.Message.getFieldWithDefault(msg, 11, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.MatchGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.MatchGet;
        return proto.Match.MatchGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.MatchGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setIp(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setPass(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setPlynum(value);
                    break;
                case 11:
                    var value = (reader.readString());
                    msg.setRoomid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.MatchGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.MatchGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.MatchGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getIp();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getPass();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getPlynum();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getRoomid();
        if (f.length > 0) {
            writer.writeString(11, f);
        }
    };
    proto.Match.MatchGet.prototype.getIp = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Match.MatchGet.prototype.setIp = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Match.MatchGet.prototype.getPass = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Match.MatchGet.prototype.setPass = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Match.MatchGet.prototype.getPlynum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Match.MatchGet.prototype.setPlynum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Match.MatchGet.prototype.getRoomid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, ""));
    };
    proto.Match.MatchGet.prototype.setRoomid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 11, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.MatchAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.MatchAck.toObject(opt_includeInstance, this);
        };
        proto.Match.MatchAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                table: (f = msg.getTable()) && proto.Match.Table.toObject(includeInstance, f),
                nvip: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.MatchAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.MatchAck;
        return proto.Match.MatchAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.MatchAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Match.Table;
                    reader.readMessage(value, proto.Match.Table.deserializeBinaryFromReader);
                    msg.setTable(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setNvip(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.MatchAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.MatchAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.MatchAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getTable();
        if (f != null) {
            writer.writeMessage(2, f, proto.Match.Table.serializeBinaryToWriter);
        }
        f = message.getNvip();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
    };
    proto.Match.MatchAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.MatchAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Match.MatchAck.prototype.getTable = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Match.Table, 2));
    };
    proto.Match.MatchAck.prototype.setTable = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Match.MatchAck.prototype.clearTable = function () {
        return this.setTable(undefined);
    };
    proto.Match.MatchAck.prototype.hasTable = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Match.MatchAck.prototype.getNvip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Match.MatchAck.prototype.setNvip = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.CancelGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.CancelGet.toObject(opt_includeInstance, this);
        };
        proto.Match.CancelGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                agree: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.CancelGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.CancelGet;
        return proto.Match.CancelGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.CancelGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAgree(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.CancelGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.CancelGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.CancelGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAgree();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Match.CancelGet.prototype.getAgree = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.CancelGet.prototype.setAgree = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.CancelAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.CancelAck.toObject(opt_includeInstance, this);
        };
        proto.Match.CancelAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                table: (f = msg.getTable()) && proto.Match.Table.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.CancelAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.CancelAck;
        return proto.Match.CancelAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.CancelAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Match.Table;
                    reader.readMessage(value, proto.Match.Table.deserializeBinaryFromReader);
                    msg.setTable(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.CancelAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.CancelAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.CancelAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getTable();
        if (f != null) {
            writer.writeMessage(2, f, proto.Match.Table.serializeBinaryToWriter);
        }
    };
    proto.Match.CancelAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.CancelAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Match.CancelAck.prototype.getTable = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Match.Table, 2));
    };
    proto.Match.CancelAck.prototype.setTable = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Match.CancelAck.prototype.clearTable = function () {
        return this.setTable(undefined);
    };
    proto.Match.CancelAck.prototype.hasTable = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.MatchUpdateNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.MatchUpdateNoti.toObject(opt_includeInstance, this);
        };
        proto.Match.MatchUpdateNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                type: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                table: (f = msg.getTable()) && proto.Match.Table.toObject(includeInstance, f),
                plymapMap: (f = msg.getPlymapMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.MatchUpdateNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.MatchUpdateNoti;
        return proto.Match.MatchUpdateNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.MatchUpdateNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setType(value);
                    break;
                case 11:
                    var value = new proto.Match.Table;
                    reader.readMessage(value, proto.Match.Table.deserializeBinaryFromReader);
                    msg.setTable(value);
                    break;
                case 12:
                    var value = msg.getPlymapMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readInt64, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.MatchUpdateNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.MatchUpdateNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.MatchUpdateNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getType();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getTable();
        if (f != null) {
            writer.writeMessage(11, f, proto.Match.Table.serializeBinaryToWriter);
        }
        f = message.getPlymapMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(12, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeInt64);
        }
    };
    proto.Match.MatchUpdateNoti.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.MatchUpdateNoti.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Match.MatchUpdateNoti.prototype.getTable = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Match.Table, 11));
    };
    proto.Match.MatchUpdateNoti.prototype.setTable = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.Match.MatchUpdateNoti.prototype.clearTable = function () {
        return this.setTable(undefined);
    };
    proto.Match.MatchUpdateNoti.prototype.hasTable = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    proto.Match.MatchUpdateNoti.prototype.getPlymapMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 12, opt_noLazyCreate, null));
    };
    proto.Match.MatchUpdateNoti.prototype.clearPlymapMap = function () {
        this.getPlymapMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.MatchTableNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.MatchTableNotify.toObject(opt_includeInstance, this);
        };
        proto.Match.MatchTableNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                table: (f = msg.getTable()) && proto.Match.Table.toObject(includeInstance, f),
                sttable: (f = msg.getSttable()) && GSMgr_pb.TableInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.MatchTableNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.MatchTableNotify;
        return proto.Match.MatchTableNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.MatchTableNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Match.Table;
                    reader.readMessage(value, proto.Match.Table.deserializeBinaryFromReader);
                    msg.setTable(value);
                    break;
                case 2:
                    var value = new GSMgr_pb.TableInfo;
                    reader.readMessage(value, GSMgr_pb.TableInfo.deserializeBinaryFromReader);
                    msg.setSttable(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.MatchTableNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.MatchTableNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.MatchTableNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getTable();
        if (f != null) {
            writer.writeMessage(1, f, proto.Match.Table.serializeBinaryToWriter);
        }
        f = message.getSttable();
        if (f != null) {
            writer.writeMessage(2, f, GSMgr_pb.TableInfo.serializeBinaryToWriter);
        }
    };
    proto.Match.MatchTableNotify.prototype.getTable = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Match.Table, 1));
    };
    proto.Match.MatchTableNotify.prototype.setTable = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 1, value);
    };
    proto.Match.MatchTableNotify.prototype.clearTable = function () {
        return this.setTable(undefined);
    };
    proto.Match.MatchTableNotify.prototype.hasTable = function () {
        return googleProtobuf.Message.getField(this, 1) != null;
    };
    proto.Match.MatchTableNotify.prototype.getSttable = function () {
        return (googleProtobuf.Message.getWrapperField(this, GSMgr_pb.TableInfo, 2));
    };
    proto.Match.MatchTableNotify.prototype.setSttable = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Match.MatchTableNotify.prototype.clearSttable = function () {
        return this.setSttable(undefined);
    };
    proto.Match.MatchTableNotify.prototype.hasSttable = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.MatchOverNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.MatchOverNoti.toObject(opt_includeInstance, this);
        };
        proto.Match.MatchOverNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                strtableid: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.MatchOverNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.MatchOverNoti;
        return proto.Match.MatchOverNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.MatchOverNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrtableid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.MatchOverNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.MatchOverNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.MatchOverNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrtableid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Match.MatchOverNoti.prototype.getStrtableid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Match.MatchOverNoti.prototype.setStrtableid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.GiveUpGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.GiveUpGet.toObject(opt_includeInstance, this);
        };
        proto.Match.GiveUpGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                pass: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.GiveUpGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.GiveUpGet;
        return proto.Match.GiveUpGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.GiveUpGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setPass(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.GiveUpGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.GiveUpGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.GiveUpGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPass();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Match.GiveUpGet.prototype.getPass = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Match.GiveUpGet.prototype.setPass = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.GiveUpAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.GiveUpAck.toObject(opt_includeInstance, this);
        };
        proto.Match.GiveUpAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                pass: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.GiveUpAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.GiveUpAck;
        return proto.Match.GiveUpAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.GiveUpAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setPass(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.GiveUpAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.GiveUpAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.GiveUpAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getPass();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Match.GiveUpAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.GiveUpAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Match.GiveUpAck.prototype.getPass = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Match.GiveUpAck.prototype.setPass = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.StatusGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.StatusGet.toObject(opt_includeInstance, this);
        };
        proto.Match.StatusGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.StatusGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.StatusGet;
        return proto.Match.StatusGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.StatusGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.StatusGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.StatusGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.StatusGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.Match.StatusGet.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.StatusGet.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.StatusAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.StatusAck.toObject(opt_includeInstance, this);
        };
        proto.Match.StatusAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                table: (f = msg.getTable()) && proto.Match.Table.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.StatusAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.StatusAck;
        return proto.Match.StatusAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.StatusAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readEnum());
                    msg.setStatus(value);
                    break;
                case 3:
                    var value = new proto.Match.Table;
                    reader.readMessage(value, proto.Match.Table.deserializeBinaryFromReader);
                    msg.setTable(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.StatusAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.StatusAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.StatusAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getStatus();
        if (f !== 0.0) {
            writer.writeEnum(2, f);
        }
        f = message.getTable();
        if (f != null) {
            writer.writeMessage(3, f, proto.Match.Table.serializeBinaryToWriter);
        }
    };
    proto.Match.StatusAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.StatusAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Match.StatusAck.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Match.StatusAck.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 2, value);
    };
    proto.Match.StatusAck.prototype.getTable = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Match.Table, 3));
    };
    proto.Match.StatusAck.prototype.setTable = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Match.StatusAck.prototype.clearTable = function () {
        return this.setTable(undefined);
    };
    proto.Match.StatusAck.prototype.hasTable = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    proto.Match.PlyNumGet.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.PlyNumGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.PlyNumGet.toObject(opt_includeInstance, this);
        };
        proto.Match.PlyNumGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                roomidsList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.PlyNumGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.PlyNumGet;
        return proto.Match.PlyNumGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.PlyNumGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.addRoomids(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.PlyNumGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.PlyNumGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.PlyNumGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRoomidsList();
        if (f.length > 0) {
            writer.writeRepeatedString(1, f);
        }
    };
    proto.Match.PlyNumGet.prototype.getRoomidsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Match.PlyNumGet.prototype.setRoomidsList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Match.PlyNumGet.prototype.addRoomids = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Match.PlyNumGet.prototype.clearRoomidsList = function () {
        return this.setRoomidsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Match.PlyNumAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Match.PlyNumAck.toObject(opt_includeInstance, this);
        };
        proto.Match.PlyNumAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                plynumsMap: (f = msg.getPlynumsMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Match.PlyNumAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Match.PlyNumAck;
        return proto.Match.PlyNumAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Match.PlyNumAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = msg.getPlynumsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readSint32, null, "", 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Match.PlyNumAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Match.PlyNumAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Match.PlyNumAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPlynumsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeSint32);
        }
    };
    proto.Match.PlyNumAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Match.PlyNumAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Match.PlyNumAck.prototype.getPlynumsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate, null));
    };
    proto.Match.PlyNumAck.prototype.clearPlynumsMap = function () {
        this.getPlynumsMap().clear();
        return this;
    };
    proto.Match.Status = {
        NONE: 0,
        MATCH: 1,
        WAIT: 2,
        PLAYING: 3,
        CANCEL: 4,
        OVER: 5
    };
    proto.Match.Type = {
        EMPTY: 0,
        PLYUP: 1,
        BUY: 2,
        BEND: 3,
        CONSULT: 4,
        GIVEUP: 5
    };
    goog.object.extend(exports, proto.Match);

    });
    var Match_pb_1 = Match_pb.MatchGet;
    var Match_pb_2 = Match_pb.MatchAck;
    var Match_pb_3 = Match_pb.CancelGet;
    var Match_pb_4 = Match_pb.CancelAck;
    var Match_pb_5 = Match_pb.MatchUpdateNoti;
    var Match_pb_6 = Match_pb.MatchTableNotify;
    var Match_pb_7 = Match_pb.MatchOverNoti;
    var Match_pb_8 = Match_pb.CreateAck;
    var Match_pb_9 = Match_pb.CreateGet;
    var Match_pb_10 = Match_pb.GiveUpGet;
    var Match_pb_11 = Match_pb.GiveUpAck;
    var Match_pb_12 = Match_pb.MkRule;
    var Match_pb_13 = Match_pb.StartAck;
    var Match_pb_14 = Match_pb.StartGet;
    var Match_pb_15 = Match_pb.Status;
    var Match_pb_16 = Match_pb.Table;
    var Match_pb_17 = Match_pb.PlyNumGet;
    var Match_pb_18 = Match_pb.PlyNumAck;

    class LobbyEvent {
    }
    LobbyEvent.APP_RESUME = "APP_RESUME";
    LobbyEvent.IM_LOGIN_NOTI = "IM_LOGIN_NOTI";
    LobbyEvent.HEART_BEART_NOTI = "heart_beat_noti";
    LobbyEvent.LOGIN_SUCCESS = "login_success";
    LobbyEvent.LOADED_USERINFO = "loaded_userinfo";
    LobbyEvent.UPDATE_PLAYER_INFO = "update_player_info";
    LobbyEvent.CURRENCY_CHANGE_NOTI = 'currency_change_noti';
    LobbyEvent.AMOUNT_CHANGE_NOTI = 'amount_change_noti';
    LobbyEvent.LOBBY_SERVER_DISCONNECT = 'lobby_server_disconnect';
    LobbyEvent.LOBBY_SERVER_CONNECT_FAILED = 'lobby_server_connect_failed';
    LobbyEvent.GAME_TO_LOBBY = 'game_back_to_lobby';
    LobbyEvent.RELIEVE_INFO_NOTI = 'relieve_info_noti';
    LobbyEvent.SIGNIN_INFO_NOTI = 'signin_info_noti';
    LobbyEvent.MAIL_INFO_NOTI = 'mail_info_noti';
    LobbyEvent.TASK_UPDATE_NOTI = 'task_update_noti';
    LobbyEvent.TASK_REPLACE_NOTI = 'task_replace_noti';
    LobbyEvent.VERSION_INIT = "VERSION_INIT";
    LobbyEvent.SHAKE_INFO_NOTI = 'shake_info_noti';
    LobbyEvent.KICK_OUT_NOTI = 'kick_out_noti';
    LobbyEvent.USER_ITEM_CHANGE = 'user_item_change';
    LobbyEvent.PRIVILEGE_NOTI = 'privilege_card_noti';
    LobbyEvent.WEEKLY_CARD_NOTI = 'week_card_success';
    LobbyEvent.MONTHLY_CARD_NOTI = 'month_card_success';
    LobbyEvent.STORE_ORDER_COMPLETE = 'store_order_complete';
    LobbyEvent.GET_AWARD_SUCCESS = 'get_award_success';
    LobbyEvent.COMPLETE_TASK_NOTI = 'complete_task_noti';
    LobbyEvent.ONLINE_AWARD_STATUS = 'online_award_status';
    LobbyEvent.TURN_TABLE_NOTI = 'turn_table_noti';
    LobbyEvent.LOGIN_AWARD_NOTI = 'login_award_noti';
    LobbyEvent.GIFT_INFO_NOTI = 'gift_info_noti';
    LobbyEvent.DAILY_TASK_ACTIVITY_CONFIG = 'dailytask_activity_config';
    LobbyEvent.VIP_INFO_NOTI = "VIP_INFO_NOTI";
    LobbyEvent.LUCKY_GIFT_INFO_NOTI = "LUCKY_GIFT_INFO_NOTI";
    LobbyEvent.Redeem_Code_ack = "Redeem_Code_ack";
    LobbyEvent.MATCH_UPDATE_NOTI = "MATCH_UPDATE_NOTI";
    LobbyEvent.MATCH_TABLE_NOTI = "MATCH_TABLE_NOTI";
    LobbyEvent.MATCH_USER_NOTI = "MATCH_USER_NOTI";
    LobbyEvent.MATCH_OVER_NOTI = "MATCH_OVER_NOTI";
    LobbyEvent.REFRESH_PLAYER_INFO = "REFRESH_PLAYER_INFO";
    LobbyEvent.SHOPSERVICE_UPDATE_COMPLETE = "SHOPSERVICE_UPDATE_COMPLETE";
    LobbyEvent.UPDATE_PLAYER_ACCESSORIES = "UPDATE_PLAYER_ACCESSORIES";
    LobbyEvent.UPDATE_BAGDATA = "UPDATE_BAGDATA";
    LobbyEvent.CLOSE_HISTORYLEGEND = "CLOSE_HISTORYLEGEND";
    LobbyEvent.CLOSE_LEGENDSTART = "CLOSE_LEGENDSTART";
    LobbyEvent.NEW_SEASONNOTI = "NEW_SEASONNOTI";
    LobbyEvent.RANK_GIFTINFO_UPDATE = "RANK_GIFTINFO_UPDATE";
    LobbyEvent.GAMEGUIDE_GOBACK_HOME = "GAMEGUIDE_GOBACK_HOME";
    LobbyEvent.CLOSE_RECEIVERUCCESS = "CLOSE_RECEIVERUCCESS";
    LobbyEvent.RANK_GUIDE_FINISH = "RANK_GUIDE_FINISH";
    LobbyEvent.AUTHENTICATE_SUCCESS = "AUTHENTICATE_SUCCESS";
    LobbyEvent.TUTORIAL_STATUS_NOTI = "TutorialStatusNoti";
    LobbyEvent.RANK_ITEM_NOTI = "RANK_ITEM_NOTI";
    LobbyEvent.NOVICE_TING_CARD = "NOVICE_TING_CARD";
    LobbyEvent.PRE_SIGNIN_DATA = "PRE_SIGNIN_DATA";
    LobbyEvent.DAILY_FIRST_PATTERN_NOTI = "DAILY_FIRST_PATTERN_NOTI";
    LobbyEvent.DAILY_FIRST_PLAYER_NOTI = "DAILY_FIRST_PLAYER_NOTI";
    LobbyEvent.WITHDRAW_HISTORY_NOTI = "WITHDRAW_HISTORY_NOTI";
    LobbyEvent.THIRD_LIST_REFRESH_NOTI = "THIRD_LIST_REFRESH_NOTI";
    LobbyEvent.INVITE_DIRECT_AWARD = 'invte_direct_award';
    LobbyEvent.ACT_AGGRG_EVENT = 'ACT_AGGRG_EVENT';
    LobbyEvent.INVITE_AWARD_EVENT = 'INVITE_AWARD_EVENT';

    var Store_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Constants_pb);
    goog.exportSymbol('proto.Store.Addition', null, global);
    goog.exportSymbol('proto.Store.Address', null, global);
    goog.exportSymbol('proto.Store.ApplePayNotifyAck', null, global);
    goog.exportSymbol('proto.Store.ApplePayNotifyReq', null, global);
    goog.exportSymbol('proto.Store.Area', null, global);
    goog.exportSymbol('proto.Store.CancelOrderRequest', null, global);
    goog.exportSymbol('proto.Store.CancelOrderResponse', null, global);
    goog.exportSymbol('proto.Store.City', null, global);
    goog.exportSymbol('proto.Store.DeleteUserConfirmOrderAck', null, global);
    goog.exportSymbol('proto.Store.DeleteUserConfirmOrderReq', null, global);
    goog.exportSymbol('proto.Store.ExchangeOrder', null, global);
    goog.exportSymbol('proto.Store.GetUserAddressAck', null, global);
    goog.exportSymbol('proto.Store.GetUserAddressReq', null, global);
    goog.exportSymbol('proto.Store.GooglePayNotifyAck', null, global);
    goog.exportSymbol('proto.Store.GooglePayNotifyReq', null, global);
    goog.exportSymbol('proto.Store.HWPayNotifyAck', null, global);
    goog.exportSymbol('proto.Store.HWPayNotifyReq', null, global);
    goog.exportSymbol('proto.Store.McCategory', null, global);
    goog.exportSymbol('proto.Store.Merchandise', null, global);
    goog.exportSymbol('proto.Store.Province', null, global);
    goog.exportSymbol('proto.Store.QueryAreaListAck', null, global);
    goog.exportSymbol('proto.Store.QueryAreaListReq', null, global);
    goog.exportSymbol('proto.Store.QueryCityListAck', null, global);
    goog.exportSymbol('proto.Store.QueryCityListReq', null, global);
    goog.exportSymbol('proto.Store.QueryExchangeOrderRequest', null, global);
    goog.exportSymbol('proto.Store.QueryExchangeOrderResponse', null, global);
    goog.exportSymbol('proto.Store.QueryMcCategoryListRequest', null, global);
    goog.exportSymbol('proto.Store.QueryMcCategoryListResponse', null, global);
    goog.exportSymbol('proto.Store.QueryMerchandiseListRequest', null, global);
    goog.exportSymbol('proto.Store.QueryMerchandiseListResponse', null, global);
    goog.exportSymbol('proto.Store.QueryProvinceListAck', null, global);
    goog.exportSymbol('proto.Store.QueryProvinceListReq', null, global);
    goog.exportSymbol('proto.Store.QueryTownListAck', null, global);
    goog.exportSymbol('proto.Store.QueryTownListReq', null, global);
    goog.exportSymbol('proto.Store.QueryUserConfirmOrderAck', null, global);
    goog.exportSymbol('proto.Store.QueryUserConfirmOrderReq', null, global);
    goog.exportSymbol('proto.Store.Town', null, global);
    goog.exportSymbol('proto.Store.UnifiedExchangeOrderRequest', null, global);
    goog.exportSymbol('proto.Store.UnifiedExchangeOrderResponse', null, global);
    goog.exportSymbol('proto.Store.UnifiedOrderRequest', null, global);
    goog.exportSymbol('proto.Store.UnifiedOrderResponse', null, global);
    goog.exportSymbol('proto.Store.UserConfirmOrder', null, global);
    proto.Store.UnifiedOrderRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.UnifiedOrderRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.UnifiedOrderRequest.displayName = 'proto.Store.UnifiedOrderRequest';
    }
    proto.Store.UnifiedOrderResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.UnifiedOrderResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.UnifiedOrderResponse.displayName = 'proto.Store.UnifiedOrderResponse';
    }
    proto.Store.UnifiedExchangeOrderRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.UnifiedExchangeOrderRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.UnifiedExchangeOrderRequest.displayName = 'proto.Store.UnifiedExchangeOrderRequest';
    }
    proto.Store.UnifiedExchangeOrderResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.UnifiedExchangeOrderResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.UnifiedExchangeOrderResponse.displayName = 'proto.Store.UnifiedExchangeOrderResponse';
    }
    proto.Store.CancelOrderRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.CancelOrderRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.CancelOrderRequest.displayName = 'proto.Store.CancelOrderRequest';
    }
    proto.Store.CancelOrderResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.CancelOrderResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.CancelOrderResponse.displayName = 'proto.Store.CancelOrderResponse';
    }
    proto.Store.Merchandise = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.Merchandise.repeatedFields_, null);
    };
    goog.inherits(proto.Store.Merchandise, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.Merchandise.displayName = 'proto.Store.Merchandise';
    }
    proto.Store.ExchangeOrder = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.ExchangeOrder.repeatedFields_, null);
    };
    goog.inherits(proto.Store.ExchangeOrder, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.ExchangeOrder.displayName = 'proto.Store.ExchangeOrder';
    }
    proto.Store.Addition = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.Addition, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.Addition.displayName = 'proto.Store.Addition';
    }
    proto.Store.McCategory = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.McCategory, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.McCategory.displayName = 'proto.Store.McCategory';
    }
    proto.Store.QueryExchangeOrderRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.QueryExchangeOrderRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryExchangeOrderRequest.displayName = 'proto.Store.QueryExchangeOrderRequest';
    }
    proto.Store.QueryExchangeOrderResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.QueryExchangeOrderResponse.repeatedFields_, null);
    };
    goog.inherits(proto.Store.QueryExchangeOrderResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryExchangeOrderResponse.displayName = 'proto.Store.QueryExchangeOrderResponse';
    }
    proto.Store.QueryMerchandiseListRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.QueryMerchandiseListRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Store.QueryMerchandiseListRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryMerchandiseListRequest.displayName = 'proto.Store.QueryMerchandiseListRequest';
    }
    proto.Store.QueryMerchandiseListResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.QueryMerchandiseListResponse.repeatedFields_, null);
    };
    goog.inherits(proto.Store.QueryMerchandiseListResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryMerchandiseListResponse.displayName = 'proto.Store.QueryMerchandiseListResponse';
    }
    proto.Store.QueryMcCategoryListRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.QueryMcCategoryListRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryMcCategoryListRequest.displayName = 'proto.Store.QueryMcCategoryListRequest';
    }
    proto.Store.QueryMcCategoryListResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.QueryMcCategoryListResponse.repeatedFields_, null);
    };
    goog.inherits(proto.Store.QueryMcCategoryListResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryMcCategoryListResponse.displayName = 'proto.Store.QueryMcCategoryListResponse';
    }
    proto.Store.ApplePayNotifyReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.ApplePayNotifyReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.ApplePayNotifyReq.displayName = 'proto.Store.ApplePayNotifyReq';
    }
    proto.Store.ApplePayNotifyAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.ApplePayNotifyAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.ApplePayNotifyAck.displayName = 'proto.Store.ApplePayNotifyAck';
    }
    proto.Store.HWPayNotifyReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.HWPayNotifyReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.HWPayNotifyReq.displayName = 'proto.Store.HWPayNotifyReq';
    }
    proto.Store.HWPayNotifyAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.HWPayNotifyAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.HWPayNotifyAck.displayName = 'proto.Store.HWPayNotifyAck';
    }
    proto.Store.GooglePayNotifyReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.GooglePayNotifyReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.GooglePayNotifyReq.displayName = 'proto.Store.GooglePayNotifyReq';
    }
    proto.Store.GooglePayNotifyAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.GooglePayNotifyAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.GooglePayNotifyAck.displayName = 'proto.Store.GooglePayNotifyAck';
    }
    proto.Store.QueryProvinceListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.QueryProvinceListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryProvinceListReq.displayName = 'proto.Store.QueryProvinceListReq';
    }
    proto.Store.QueryProvinceListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.QueryProvinceListAck.repeatedFields_, null);
    };
    goog.inherits(proto.Store.QueryProvinceListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryProvinceListAck.displayName = 'proto.Store.QueryProvinceListAck';
    }
    proto.Store.QueryCityListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.QueryCityListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryCityListReq.displayName = 'proto.Store.QueryCityListReq';
    }
    proto.Store.QueryCityListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.QueryCityListAck.repeatedFields_, null);
    };
    goog.inherits(proto.Store.QueryCityListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryCityListAck.displayName = 'proto.Store.QueryCityListAck';
    }
    proto.Store.QueryAreaListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.QueryAreaListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryAreaListReq.displayName = 'proto.Store.QueryAreaListReq';
    }
    proto.Store.QueryAreaListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.QueryAreaListAck.repeatedFields_, null);
    };
    goog.inherits(proto.Store.QueryAreaListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryAreaListAck.displayName = 'proto.Store.QueryAreaListAck';
    }
    proto.Store.QueryTownListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.QueryTownListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryTownListReq.displayName = 'proto.Store.QueryTownListReq';
    }
    proto.Store.QueryTownListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.QueryTownListAck.repeatedFields_, null);
    };
    goog.inherits(proto.Store.QueryTownListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryTownListAck.displayName = 'proto.Store.QueryTownListAck';
    }
    proto.Store.GetUserAddressReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.GetUserAddressReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.GetUserAddressReq.displayName = 'proto.Store.GetUserAddressReq';
    }
    proto.Store.GetUserAddressAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.GetUserAddressAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.GetUserAddressAck.displayName = 'proto.Store.GetUserAddressAck';
    }
    proto.Store.Province = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.Province, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.Province.displayName = 'proto.Store.Province';
    }
    proto.Store.City = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.City, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.City.displayName = 'proto.Store.City';
    }
    proto.Store.Area = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.Area, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.Area.displayName = 'proto.Store.Area';
    }
    proto.Store.Town = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.Town, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.Town.displayName = 'proto.Store.Town';
    }
    proto.Store.Address = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.Address, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.Address.displayName = 'proto.Store.Address';
    }
    proto.Store.UserConfirmOrder = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.UserConfirmOrder, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.UserConfirmOrder.displayName = 'proto.Store.UserConfirmOrder';
    }
    proto.Store.QueryUserConfirmOrderReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.QueryUserConfirmOrderReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryUserConfirmOrderReq.displayName = 'proto.Store.QueryUserConfirmOrderReq';
    }
    proto.Store.QueryUserConfirmOrderAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Store.QueryUserConfirmOrderAck.repeatedFields_, null);
    };
    goog.inherits(proto.Store.QueryUserConfirmOrderAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.QueryUserConfirmOrderAck.displayName = 'proto.Store.QueryUserConfirmOrderAck';
    }
    proto.Store.DeleteUserConfirmOrderReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.DeleteUserConfirmOrderReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.DeleteUserConfirmOrderReq.displayName = 'proto.Store.DeleteUserConfirmOrderReq';
    }
    proto.Store.DeleteUserConfirmOrderAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Store.DeleteUserConfirmOrderAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Store.DeleteUserConfirmOrderAck.displayName = 'proto.Store.DeleteUserConfirmOrderAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.UnifiedOrderRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.UnifiedOrderRequest.toObject(opt_includeInstance, this);
        };
        proto.Store.UnifiedOrderRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                channelid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                paytype: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                sign: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                buypid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                recivepid: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                clientip: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
                payamount: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                openid: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
                subject: googleProtobuf.Message.getFieldWithDefault(msg, 10, ""),
                attach: googleProtobuf.Message.getFieldWithDefault(msg, 11, ""),
                returnurl: googleProtobuf.Message.getFieldWithDefault(msg, 12, ""),
                receipt: googleProtobuf.Message.getFieldWithDefault(msg, 13, ""),
                sandbox: googleProtobuf.Message.getFieldWithDefault(msg, 14, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 15, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 16, ""),
                force: googleProtobuf.Message.getFieldWithDefault(msg, 17, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 18, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.UnifiedOrderRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.UnifiedOrderRequest;
        return proto.Store.UnifiedOrderRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.UnifiedOrderRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setChannelid(value);
                    break;
                case 3:
                    var value = (reader.readEnum());
                    msg.setPaytype(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setSign(value);
                    break;
                case 5:
                    var value = (reader.readSint64());
                    msg.setBuypid(value);
                    break;
                case 6:
                    var value = (reader.readSint64());
                    msg.setRecivepid(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setClientip(value);
                    break;
                case 8:
                    var value = (reader.readSint64());
                    msg.setPayamount(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setOpenid(value);
                    break;
                case 10:
                    var value = (reader.readString());
                    msg.setSubject(value);
                    break;
                case 11:
                    var value = (reader.readString());
                    msg.setAttach(value);
                    break;
                case 12:
                    var value = (reader.readString());
                    msg.setReturnurl(value);
                    break;
                case 13:
                    var value = (reader.readString());
                    msg.setReceipt(value);
                    break;
                case 14:
                    var value = (reader.readSint32());
                    msg.setSandbox(value);
                    break;
                case 15:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 16:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 17:
                    var value = (reader.readSint32());
                    msg.setForce(value);
                    break;
                case 18:
                    var value = (reader.readSint32());
                    msg.setSource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.UnifiedOrderRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.UnifiedOrderRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.UnifiedOrderRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getChannelid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getPaytype();
        if (f !== 0.0) {
            writer.writeEnum(3, f);
        }
        f = message.getSign();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getBuypid();
        if (f !== 0) {
            writer.writeSint64(5, f);
        }
        f = message.getRecivepid();
        if (f !== 0) {
            writer.writeSint64(6, f);
        }
        f = message.getClientip();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
        f = message.getPayamount();
        if (f !== 0) {
            writer.writeSint64(8, f);
        }
        f = message.getOpenid();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
        f = message.getSubject();
        if (f.length > 0) {
            writer.writeString(10, f);
        }
        f = message.getAttach();
        if (f.length > 0) {
            writer.writeString(11, f);
        }
        f = message.getReturnurl();
        if (f.length > 0) {
            writer.writeString(12, f);
        }
        f = message.getReceipt();
        if (f.length > 0) {
            writer.writeString(13, f);
        }
        f = message.getSandbox();
        if (f !== 0) {
            writer.writeSint32(14, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(15, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(16, f);
        }
        f = message.getForce();
        if (f !== 0) {
            writer.writeSint32(17, f);
        }
        f = message.getSource();
        if (f !== 0) {
            writer.writeSint32(18, f);
        }
    };
    proto.Store.UnifiedOrderRequest.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getChannelid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setChannelid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getPaytype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Store.UnifiedOrderRequest.prototype.setPaytype = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 3, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getSign = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setSign = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getBuypid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Store.UnifiedOrderRequest.prototype.setBuypid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getRecivepid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Store.UnifiedOrderRequest.prototype.setRecivepid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getClientip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setClientip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getPayamount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Store.UnifiedOrderRequest.prototype.setPayamount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getOpenid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setOpenid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getSubject = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setSubject = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 10, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getAttach = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setAttach = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 11, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getReturnurl = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setReturnurl = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 12, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getReceipt = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setReceipt = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 13, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getSandbox = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 14, 0));
    };
    proto.Store.UnifiedOrderRequest.prototype.setSandbox = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 14, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 15, 0));
    };
    proto.Store.UnifiedOrderRequest.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 15, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 16, ""));
    };
    proto.Store.UnifiedOrderRequest.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 16, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getForce = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 17, 0));
    };
    proto.Store.UnifiedOrderRequest.prototype.setForce = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 17, value);
    };
    proto.Store.UnifiedOrderRequest.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 18, 0));
    };
    proto.Store.UnifiedOrderRequest.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 18, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.UnifiedOrderResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.UnifiedOrderResponse.toObject(opt_includeInstance, this);
        };
        proto.Store.UnifiedOrderResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                code: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                sign: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                channelid: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                tradeno: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
                paytype: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
                tradetype: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
                credential: googleProtobuf.Message.getFieldWithDefault(msg, 10, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.UnifiedOrderResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.UnifiedOrderResponse;
        return proto.Store.UnifiedOrderResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.UnifiedOrderResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setCode(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMsg(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setSign(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setChannelid(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setTradeno(value);
                    break;
                case 8:
                    var value = (reader.readString());
                    msg.setPaytype(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setTradetype(value);
                    break;
                case 10:
                    var value = (reader.readString());
                    msg.setCredential(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.UnifiedOrderResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.UnifiedOrderResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.UnifiedOrderResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCode();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getMsg();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getSign();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getChannelid();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getTradeno();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
        f = message.getPaytype();
        if (f.length > 0) {
            writer.writeString(8, f);
        }
        f = message.getTradetype();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
        f = message.getCredential();
        if (f.length > 0) {
            writer.writeString(10, f);
        }
    };
    proto.Store.UnifiedOrderResponse.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.UnifiedOrderResponse.prototype.getMsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.UnifiedOrderResponse.prototype.getSign = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setSign = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.UnifiedOrderResponse.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.UnifiedOrderResponse.prototype.getChannelid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setChannelid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Store.UnifiedOrderResponse.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Store.UnifiedOrderResponse.prototype.getTradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setTradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Store.UnifiedOrderResponse.prototype.getPaytype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setPaytype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 8, value);
    };
    proto.Store.UnifiedOrderResponse.prototype.getTradetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setTradetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    proto.Store.UnifiedOrderResponse.prototype.getCredential = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
    };
    proto.Store.UnifiedOrderResponse.prototype.setCredential = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 10, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.UnifiedExchangeOrderRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.UnifiedExchangeOrderRequest.toObject(opt_includeInstance, this);
        };
        proto.Store.UnifiedExchangeOrderRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                sign: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                buypid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                recivepid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                clientip: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                remark: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                attach: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 9, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.UnifiedExchangeOrderRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.UnifiedExchangeOrderRequest;
        return proto.Store.UnifiedExchangeOrderRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.UnifiedExchangeOrderRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSign(value);
                    break;
                case 3:
                    var value = (reader.readSint64());
                    msg.setBuypid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setRecivepid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setClientip(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setRemark(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setAttach(value);
                    break;
                case 8:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.UnifiedExchangeOrderRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.UnifiedExchangeOrderRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getSign();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getBuypid();
        if (f !== 0) {
            writer.writeSint64(3, f);
        }
        f = message.getRecivepid();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getClientip();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getRemark();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getAttach();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(8, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.getSign = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.setSign = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.getBuypid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.setBuypid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.getRecivepid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.setRecivepid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.getClientip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.setClientip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.getRemark = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.setRemark = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.getAttach = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.setAttach = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Store.UnifiedExchangeOrderRequest.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.UnifiedExchangeOrderResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.UnifiedExchangeOrderResponse.toObject(opt_includeInstance, this);
        };
        proto.Store.UnifiedExchangeOrderResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                code: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                sign: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                credential: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.UnifiedExchangeOrderResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.UnifiedExchangeOrderResponse;
        return proto.Store.UnifiedExchangeOrderResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.UnifiedExchangeOrderResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCode(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMsg(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setSign(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setCredential(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.UnifiedExchangeOrderResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.UnifiedExchangeOrderResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCode();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getMsg();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getSign();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getCredential();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.getMsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.getSign = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.setSign = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.getCredential = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.UnifiedExchangeOrderResponse.prototype.setCredential = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.CancelOrderRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.CancelOrderRequest.toObject(opt_includeInstance, this);
        };
        proto.Store.CancelOrderRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.CancelOrderRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.CancelOrderRequest;
        return proto.Store.CancelOrderRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.CancelOrderRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.CancelOrderRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.CancelOrderRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.CancelOrderRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Store.CancelOrderRequest.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.CancelOrderRequest.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.CancelOrderRequest.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.CancelOrderRequest.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.CancelOrderRequest.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.CancelOrderRequest.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.CancelOrderResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.CancelOrderResponse.toObject(opt_includeInstance, this);
        };
        proto.Store.CancelOrderResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                code: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.CancelOrderResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.CancelOrderResponse;
        return proto.Store.CancelOrderResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.CancelOrderResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCode(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMsg(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.CancelOrderResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.CancelOrderResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.CancelOrderResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCode();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getMsg();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Store.CancelOrderResponse.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.CancelOrderResponse.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Store.CancelOrderResponse.prototype.getMsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.CancelOrderResponse.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.CancelOrderResponse.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.CancelOrderResponse.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.Merchandise.repeatedFields_ = [8, 15];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.Merchandise.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.Merchandise.toObject(opt_includeInstance, this);
        };
        proto.Store.Merchandise.toObject = function (includeInstance, msg) {
            var f, obj = {
                id: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                category: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                desc: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                vipagio: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
                stocks: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                imglistList: (f = googleProtobuf.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
                coverimg: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
                attribute: googleProtobuf.Message.getFieldWithDefault(msg, 10, ""),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                price: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0),
                gamemoney: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
                costsList: googleProtobuf.Message.toObjectList(msg.getCostsList(), Constants_pb.Item.toObject, includeInstance),
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 16, 0),
                endtime: googleProtobuf.Message.getFieldWithDefault(msg, 17, 0),
                createtime: googleProtobuf.Message.getFieldWithDefault(msg, 18, 0),
                addition: (f = msg.getAddition()) && proto.Store.Addition.toObject(includeInstance, f),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 20, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.Merchandise.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.Merchandise;
        return proto.Store.Merchandise.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.Merchandise.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setId(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setCategory(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setDesc(value);
                    break;
                case 6:
                    var value = (reader.readFloat());
                    msg.setVipagio(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setStocks(value);
                    break;
                case 8:
                    var value = (reader.readString());
                    msg.addImglist(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setCoverimg(value);
                    break;
                case 10:
                    var value = (reader.readString());
                    msg.setAttribute(value);
                    break;
                case 11:
                    var value = (reader.readSint32());
                    msg.setStatus(value);
                    break;
                case 12:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 13:
                    var value = (reader.readSint64());
                    msg.setPrice(value);
                    break;
                case 14:
                    var value = (reader.readDouble());
                    msg.setGamemoney(value);
                    break;
                case 15:
                    var value = new Constants_pb.Item;
                    reader.readMessage(value, Constants_pb.Item.deserializeBinaryFromReader);
                    msg.addCosts(value);
                    break;
                case 16:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 17:
                    var value = (reader.readSint64());
                    msg.setEndtime(value);
                    break;
                case 18:
                    var value = (reader.readSint64());
                    msg.setCreatetime(value);
                    break;
                case 19:
                    var value = new proto.Store.Addition;
                    reader.readMessage(value, proto.Store.Addition.deserializeBinaryFromReader);
                    msg.setAddition(value);
                    break;
                case 20:
                    var value = (reader.readSint32());
                    msg.setSource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.Merchandise.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.Merchandise.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.Merchandise.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getId();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getCategory();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getDesc();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getVipagio();
        if (f !== 0.0) {
            writer.writeFloat(6, f);
        }
        f = message.getStocks();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getImglistList();
        if (f.length > 0) {
            writer.writeRepeatedString(8, f);
        }
        f = message.getCoverimg();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
        f = message.getAttribute();
        if (f.length > 0) {
            writer.writeString(10, f);
        }
        f = message.getStatus();
        if (f !== 0) {
            writer.writeSint32(11, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(12, f);
        }
        f = message.getPrice();
        if (f !== 0) {
            writer.writeSint64(13, f);
        }
        f = message.getGamemoney();
        if (f !== 0.0) {
            writer.writeDouble(14, f);
        }
        f = message.getCostsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(15, f, Constants_pb.Item.serializeBinaryToWriter);
        }
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(16, f);
        }
        f = message.getEndtime();
        if (f !== 0) {
            writer.writeSint64(17, f);
        }
        f = message.getCreatetime();
        if (f !== 0) {
            writer.writeSint64(18, f);
        }
        f = message.getAddition();
        if (f != null) {
            writer.writeMessage(19, f, proto.Store.Addition.serializeBinaryToWriter);
        }
        f = message.getSource();
        if (f !== 0) {
            writer.writeSint32(20, f);
        }
    };
    proto.Store.Merchandise.prototype.getId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.Merchandise.prototype.setId = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.Merchandise.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.Merchandise.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.Merchandise.prototype.getCategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Store.Merchandise.prototype.setCategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Store.Merchandise.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.Merchandise.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.Merchandise.prototype.getDesc = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.Merchandise.prototype.setDesc = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Store.Merchandise.prototype.getVipagio = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
    };
    proto.Store.Merchandise.prototype.setVipagio = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 6, value);
    };
    proto.Store.Merchandise.prototype.getStocks = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Store.Merchandise.prototype.setStocks = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Store.Merchandise.prototype.getImglistList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 8));
    };
    proto.Store.Merchandise.prototype.setImglistList = function (value) {
        return googleProtobuf.Message.setField(this, 8, value || []);
    };
    proto.Store.Merchandise.prototype.addImglist = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 8, value, opt_index);
    };
    proto.Store.Merchandise.prototype.clearImglistList = function () {
        return this.setImglistList([]);
    };
    proto.Store.Merchandise.prototype.getCoverimg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Store.Merchandise.prototype.setCoverimg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    proto.Store.Merchandise.prototype.getAttribute = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
    };
    proto.Store.Merchandise.prototype.setAttribute = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 10, value);
    };
    proto.Store.Merchandise.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Store.Merchandise.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Store.Merchandise.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Store.Merchandise.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.Store.Merchandise.prototype.getPrice = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
    };
    proto.Store.Merchandise.prototype.setPrice = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 13, value);
    };
    proto.Store.Merchandise.prototype.getGamemoney = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
    };
    proto.Store.Merchandise.prototype.setGamemoney = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 14, value);
    };
    proto.Store.Merchandise.prototype.getCostsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, Constants_pb.Item, 15));
    };
    proto.Store.Merchandise.prototype.setCostsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 15, value);
    };
    proto.Store.Merchandise.prototype.addCosts = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.Constants.Item, opt_index);
    };
    proto.Store.Merchandise.prototype.clearCostsList = function () {
        return this.setCostsList([]);
    };
    proto.Store.Merchandise.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 16, 0));
    };
    proto.Store.Merchandise.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 16, value);
    };
    proto.Store.Merchandise.prototype.getEndtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 17, 0));
    };
    proto.Store.Merchandise.prototype.setEndtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 17, value);
    };
    proto.Store.Merchandise.prototype.getCreatetime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 18, 0));
    };
    proto.Store.Merchandise.prototype.setCreatetime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 18, value);
    };
    proto.Store.Merchandise.prototype.getAddition = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Store.Addition, 19));
    };
    proto.Store.Merchandise.prototype.setAddition = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 19, value);
    };
    proto.Store.Merchandise.prototype.clearAddition = function () {
        return this.setAddition(undefined);
    };
    proto.Store.Merchandise.prototype.hasAddition = function () {
        return googleProtobuf.Message.getField(this, 19) != null;
    };
    proto.Store.Merchandise.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 20, 0));
    };
    proto.Store.Merchandise.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 20, value);
    };
    proto.Store.ExchangeOrder.repeatedFields_ = [12];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.ExchangeOrder.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.ExchangeOrder.toObject(opt_includeInstance, this);
        };
        proto.Store.ExchangeOrder.toObject = function (includeInstance, msg) {
            var f, obj = {
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                buypid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                recivepid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                mid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                mname: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                createtime: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                completetime: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                deliverinfo: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                costsList: googleProtobuf.Message.toObjectList(msg.getCostsList(), Constants_pb.Item.toObject, includeInstance),
                num: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0),
                attach: googleProtobuf.Message.getFieldWithDefault(msg, 14, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.ExchangeOrder.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.ExchangeOrder;
        return proto.Store.ExchangeOrder.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.ExchangeOrder.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 3:
                    var value = (reader.readSint64());
                    msg.setBuypid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setRecivepid(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setMid(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setMname(value);
                    break;
                case 7:
                    var value = (reader.readSint64());
                    msg.setCreatetime(value);
                    break;
                case 8:
                    var value = (reader.readSint64());
                    msg.setCompletetime(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setDeliverinfo(value);
                    break;
                case 11:
                    var value = (reader.readSint32());
                    msg.setStatus(value);
                    break;
                case 12:
                    var value = new Constants_pb.Item;
                    reader.readMessage(value, Constants_pb.Item.deserializeBinaryFromReader);
                    msg.addCosts(value);
                    break;
                case 13:
                    var value = (reader.readSint32());
                    msg.setNum(value);
                    break;
                case 14:
                    var value = (reader.readString());
                    msg.setAttach(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.ExchangeOrder.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.ExchangeOrder.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.ExchangeOrder.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getBuypid();
        if (f !== 0) {
            writer.writeSint64(3, f);
        }
        f = message.getRecivepid();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getMid();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getMname();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getCreatetime();
        if (f !== 0) {
            writer.writeSint64(7, f);
        }
        f = message.getCompletetime();
        if (f !== 0) {
            writer.writeSint64(8, f);
        }
        f = message.getDeliverinfo();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
        f = message.getStatus();
        if (f !== 0) {
            writer.writeSint32(11, f);
        }
        f = message.getCostsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(12, f, Constants_pb.Item.serializeBinaryToWriter);
        }
        f = message.getNum();
        if (f !== 0) {
            writer.writeSint32(13, f);
        }
        f = message.getAttach();
        if (f.length > 0) {
            writer.writeString(14, f);
        }
    };
    proto.Store.ExchangeOrder.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.ExchangeOrder.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.ExchangeOrder.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.ExchangeOrder.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.ExchangeOrder.prototype.getBuypid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Store.ExchangeOrder.prototype.setBuypid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Store.ExchangeOrder.prototype.getRecivepid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Store.ExchangeOrder.prototype.setRecivepid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Store.ExchangeOrder.prototype.getMid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Store.ExchangeOrder.prototype.setMid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Store.ExchangeOrder.prototype.getMname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Store.ExchangeOrder.prototype.setMname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Store.ExchangeOrder.prototype.getCreatetime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Store.ExchangeOrder.prototype.setCreatetime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Store.ExchangeOrder.prototype.getCompletetime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Store.ExchangeOrder.prototype.setCompletetime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Store.ExchangeOrder.prototype.getDeliverinfo = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Store.ExchangeOrder.prototype.setDeliverinfo = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    proto.Store.ExchangeOrder.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Store.ExchangeOrder.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Store.ExchangeOrder.prototype.getCostsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, Constants_pb.Item, 12));
    };
    proto.Store.ExchangeOrder.prototype.setCostsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 12, value);
    };
    proto.Store.ExchangeOrder.prototype.addCosts = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.Constants.Item, opt_index);
    };
    proto.Store.ExchangeOrder.prototype.clearCostsList = function () {
        return this.setCostsList([]);
    };
    proto.Store.ExchangeOrder.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
    };
    proto.Store.ExchangeOrder.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 13, value);
    };
    proto.Store.ExchangeOrder.prototype.getAttach = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 14, ""));
    };
    proto.Store.ExchangeOrder.prototype.setAttach = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 14, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.Addition.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.Addition.toObject(opt_includeInstance, this);
        };
        proto.Store.Addition.toObject = function (includeInstance, msg) {
            var f, obj = {
                name: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                image: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.Addition.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.Addition;
        return proto.Store.Addition.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.Addition.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setImage(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.Addition.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.Addition.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.Addition.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getImage();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Store.Addition.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.Addition.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.Addition.prototype.getImage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.Addition.prototype.setImage = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.McCategory.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.McCategory.toObject(opt_includeInstance, this);
        };
        proto.Store.McCategory.toObject = function (includeInstance, msg) {
            var f, obj = {
                id: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                parent: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                createtime: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.McCategory.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.McCategory;
        return proto.Store.McCategory.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.McCategory.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setId(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setParent(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setCreatetime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.McCategory.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.McCategory.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.McCategory.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getId();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getParent();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getCreatetime();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
    };
    proto.Store.McCategory.prototype.getId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.McCategory.prototype.setId = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.McCategory.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.McCategory.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.McCategory.prototype.getParent = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Store.McCategory.prototype.setParent = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Store.McCategory.prototype.getCreatetime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Store.McCategory.prototype.setCreatetime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryExchangeOrderRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryExchangeOrderRequest.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryExchangeOrderRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                pageno: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                pagesize: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
                category: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryExchangeOrderRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryExchangeOrderRequest;
        return proto.Store.QueryExchangeOrderRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryExchangeOrderRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setStatus(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setPageno(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setPagesize(value);
                    break;
                case 8:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 10:
                    var value = (reader.readSint32());
                    msg.setCategory(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryExchangeOrderRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryExchangeOrderRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryExchangeOrderRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStatus();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getPageno();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getPagesize();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(8, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
        f = message.getCategory();
        if (f !== 0) {
            writer.writeSint32(10, f);
        }
    };
    proto.Store.QueryExchangeOrderRequest.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.QueryExchangeOrderRequest.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.QueryExchangeOrderRequest.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.QueryExchangeOrderRequest.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.QueryExchangeOrderRequest.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Store.QueryExchangeOrderRequest.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Store.QueryExchangeOrderRequest.prototype.getPageno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Store.QueryExchangeOrderRequest.prototype.setPageno = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Store.QueryExchangeOrderRequest.prototype.getPagesize = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Store.QueryExchangeOrderRequest.prototype.setPagesize = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Store.QueryExchangeOrderRequest.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Store.QueryExchangeOrderRequest.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Store.QueryExchangeOrderRequest.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Store.QueryExchangeOrderRequest.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    proto.Store.QueryExchangeOrderRequest.prototype.getCategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Store.QueryExchangeOrderRequest.prototype.setCategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Store.QueryExchangeOrderResponse.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryExchangeOrderResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryExchangeOrderResponse.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryExchangeOrderResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                orderlistList: googleProtobuf.Message.toObjectList(msg.getOrderlistList(), proto.Store.ExchangeOrder.toObject, includeInstance),
                pageno: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                pagesize: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                pagerecords: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                pagecount: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                code: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                msg: googleProtobuf.Message.getFieldWithDefault(msg, 7, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryExchangeOrderResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryExchangeOrderResponse;
        return proto.Store.QueryExchangeOrderResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryExchangeOrderResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Store.ExchangeOrder;
                    reader.readMessage(value, proto.Store.ExchangeOrder.deserializeBinaryFromReader);
                    msg.addOrderlist(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setPageno(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setPagesize(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setPagerecords(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setPagecount(value);
                    break;
                case 6:
                    var value = (reader.readEnum());
                    msg.setCode(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setMsg(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryExchangeOrderResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryExchangeOrderResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryExchangeOrderResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getOrderlistList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(1, f, proto.Store.ExchangeOrder.serializeBinaryToWriter);
        }
        f = message.getPageno();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getPagesize();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getPagerecords();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getPagecount();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getCode();
        if (f !== 0.0) {
            writer.writeEnum(6, f);
        }
        f = message.getMsg();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
    };
    proto.Store.QueryExchangeOrderResponse.prototype.getOrderlistList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Store.ExchangeOrder, 1));
    };
    proto.Store.QueryExchangeOrderResponse.prototype.setOrderlistList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
    };
    proto.Store.QueryExchangeOrderResponse.prototype.addOrderlist = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Store.ExchangeOrder, opt_index);
    };
    proto.Store.QueryExchangeOrderResponse.prototype.clearOrderlistList = function () {
        return this.setOrderlistList([]);
    };
    proto.Store.QueryExchangeOrderResponse.prototype.getPageno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.QueryExchangeOrderResponse.prototype.setPageno = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.QueryExchangeOrderResponse.prototype.getPagesize = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Store.QueryExchangeOrderResponse.prototype.setPagesize = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Store.QueryExchangeOrderResponse.prototype.getPagerecords = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Store.QueryExchangeOrderResponse.prototype.setPagerecords = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Store.QueryExchangeOrderResponse.prototype.getPagecount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Store.QueryExchangeOrderResponse.prototype.setPagecount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Store.QueryExchangeOrderResponse.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Store.QueryExchangeOrderResponse.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 6, value);
    };
    proto.Store.QueryExchangeOrderResponse.prototype.getMsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Store.QueryExchangeOrderResponse.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Store.QueryMerchandiseListRequest.repeatedFields_ = [7, 10];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryMerchandiseListRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryMerchandiseListRequest.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryMerchandiseListRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                id: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                category: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                pageno: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                pagesize: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                mutiidList: (f = googleProtobuf.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
                sourcesList: (f = googleProtobuf.Message.getRepeatedField(msg, 10)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryMerchandiseListRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryMerchandiseListRequest;
        return proto.Store.QueryMerchandiseListRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryMerchandiseListRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setId(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setCategory(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setStatus(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setPageno(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setPagesize(value);
                    break;
                case 7:
                    var value = (reader.readPackedSint32());
                    msg.setMutiidList(value);
                    break;
                case 8:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 10:
                    var value = (reader.readPackedSint32());
                    msg.setSourcesList(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryMerchandiseListRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryMerchandiseListRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryMerchandiseListRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getId();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getCategory();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStatus();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getPageno();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getPagesize();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getMutiidList();
        if (f.length > 0) {
            writer.writePackedSint32(7, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(8, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
        f = message.getSourcesList();
        if (f.length > 0) {
            writer.writePackedSint32(10, f);
        }
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setId = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getCategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setCategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getPageno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setPageno = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getPagesize = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setPagesize = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getMutiidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 7));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setMutiidList = function (value) {
        return googleProtobuf.Message.setField(this, 7, value || []);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.addMutiid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 7, value, opt_index);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.clearMutiidList = function () {
        return this.setMutiidList([]);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.getSourcesList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 10));
    };
    proto.Store.QueryMerchandiseListRequest.prototype.setSourcesList = function (value) {
        return googleProtobuf.Message.setField(this, 10, value || []);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.addSources = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 10, value, opt_index);
    };
    proto.Store.QueryMerchandiseListRequest.prototype.clearSourcesList = function () {
        return this.setSourcesList([]);
    };
    proto.Store.QueryMerchandiseListResponse.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryMerchandiseListResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryMerchandiseListResponse.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryMerchandiseListResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                code: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                merchandiselistList: googleProtobuf.Message.toObjectList(msg.getMerchandiselistList(), proto.Store.Merchandise.toObject, includeInstance),
                pageno: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                pagesize: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                pagerecords: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                pagecount: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryMerchandiseListResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryMerchandiseListResponse;
        return proto.Store.QueryMerchandiseListResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryMerchandiseListResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCode(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMsg(value);
                    break;
                case 3:
                    var value = new proto.Store.Merchandise;
                    reader.readMessage(value, proto.Store.Merchandise.deserializeBinaryFromReader);
                    msg.addMerchandiselist(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setPageno(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setPagesize(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setPagerecords(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setPagecount(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryMerchandiseListResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryMerchandiseListResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryMerchandiseListResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCode();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getMsg();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getMerchandiselistList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(3, f, proto.Store.Merchandise.serializeBinaryToWriter);
        }
        f = message.getPageno();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getPagesize();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getPagerecords();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getPagecount();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
    };
    proto.Store.QueryMerchandiseListResponse.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryMerchandiseListResponse.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Store.QueryMerchandiseListResponse.prototype.getMsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.QueryMerchandiseListResponse.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.QueryMerchandiseListResponse.prototype.getMerchandiselistList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Store.Merchandise, 3));
    };
    proto.Store.QueryMerchandiseListResponse.prototype.setMerchandiselistList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.Store.QueryMerchandiseListResponse.prototype.addMerchandiselist = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Store.Merchandise, opt_index);
    };
    proto.Store.QueryMerchandiseListResponse.prototype.clearMerchandiselistList = function () {
        return this.setMerchandiselistList([]);
    };
    proto.Store.QueryMerchandiseListResponse.prototype.getPageno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Store.QueryMerchandiseListResponse.prototype.setPageno = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Store.QueryMerchandiseListResponse.prototype.getPagesize = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Store.QueryMerchandiseListResponse.prototype.setPagesize = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Store.QueryMerchandiseListResponse.prototype.getPagerecords = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Store.QueryMerchandiseListResponse.prototype.setPagerecords = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Store.QueryMerchandiseListResponse.prototype.getPagecount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Store.QueryMerchandiseListResponse.prototype.setPagecount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryMcCategoryListRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryMcCategoryListRequest.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryMcCategoryListRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                id: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                parent: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryMcCategoryListRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryMcCategoryListRequest;
        return proto.Store.QueryMcCategoryListRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryMcCategoryListRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setId(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setParent(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setSource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryMcCategoryListRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryMcCategoryListRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryMcCategoryListRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getId();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getParent();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getSource();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
    };
    proto.Store.QueryMcCategoryListRequest.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.QueryMcCategoryListRequest.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.QueryMcCategoryListRequest.prototype.getId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.QueryMcCategoryListRequest.prototype.setId = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.QueryMcCategoryListRequest.prototype.getParent = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Store.QueryMcCategoryListRequest.prototype.setParent = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Store.QueryMcCategoryListRequest.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Store.QueryMcCategoryListRequest.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Store.QueryMcCategoryListRequest.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.QueryMcCategoryListRequest.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Store.QueryMcCategoryListRequest.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Store.QueryMcCategoryListRequest.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Store.QueryMcCategoryListResponse.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryMcCategoryListResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryMcCategoryListResponse.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryMcCategoryListResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                code: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                mccategorylistList: googleProtobuf.Message.toObjectList(msg.getMccategorylistList(), proto.Store.McCategory.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryMcCategoryListResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryMcCategoryListResponse;
        return proto.Store.QueryMcCategoryListResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryMcCategoryListResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCode(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMsg(value);
                    break;
                case 3:
                    var value = new proto.Store.McCategory;
                    reader.readMessage(value, proto.Store.McCategory.deserializeBinaryFromReader);
                    msg.addMccategorylist(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryMcCategoryListResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryMcCategoryListResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryMcCategoryListResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCode();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getMsg();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getMccategorylistList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(3, f, proto.Store.McCategory.serializeBinaryToWriter);
        }
    };
    proto.Store.QueryMcCategoryListResponse.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryMcCategoryListResponse.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Store.QueryMcCategoryListResponse.prototype.getMsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.QueryMcCategoryListResponse.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.QueryMcCategoryListResponse.prototype.getMccategorylistList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Store.McCategory, 3));
    };
    proto.Store.QueryMcCategoryListResponse.prototype.setMccategorylistList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.Store.QueryMcCategoryListResponse.prototype.addMccategorylist = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Store.McCategory, opt_index);
    };
    proto.Store.QueryMcCategoryListResponse.prototype.clearMccategorylistList = function () {
        return this.setMccategorylistList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.ApplePayNotifyReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.ApplePayNotifyReq.toObject(opt_includeInstance, this);
        };
        proto.Store.ApplePayNotifyReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                channelid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                receipt: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                sandbox: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.ApplePayNotifyReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.ApplePayNotifyReq;
        return proto.Store.ApplePayNotifyReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.ApplePayNotifyReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setChannelid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setReceipt(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setSandbox(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.ApplePayNotifyReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.ApplePayNotifyReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.ApplePayNotifyReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getChannelid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getReceipt();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getSandbox();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
    };
    proto.Store.ApplePayNotifyReq.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.ApplePayNotifyReq.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.ApplePayNotifyReq.prototype.getChannelid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.ApplePayNotifyReq.prototype.setChannelid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.ApplePayNotifyReq.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.ApplePayNotifyReq.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.ApplePayNotifyReq.prototype.getReceipt = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.ApplePayNotifyReq.prototype.setReceipt = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.ApplePayNotifyReq.prototype.getSandbox = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Store.ApplePayNotifyReq.prototype.setSandbox = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.ApplePayNotifyAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.ApplePayNotifyAck.toObject(opt_includeInstance, this);
        };
        proto.Store.ApplePayNotifyAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                code: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                credential: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.ApplePayNotifyAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.ApplePayNotifyAck;
        return proto.Store.ApplePayNotifyAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.ApplePayNotifyAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCode(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMsg(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setCredential(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.ApplePayNotifyAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.ApplePayNotifyAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.ApplePayNotifyAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getMsg();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getCredential();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Store.ApplePayNotifyAck.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.ApplePayNotifyAck.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.ApplePayNotifyAck.prototype.getMsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.ApplePayNotifyAck.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.ApplePayNotifyAck.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.ApplePayNotifyAck.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.ApplePayNotifyAck.prototype.getCredential = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.ApplePayNotifyAck.prototype.setCredential = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.HWPayNotifyReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.HWPayNotifyReq.toObject(opt_includeInstance, this);
        };
        proto.Store.HWPayNotifyReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                channelid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                purchasetoken: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                productid: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                sandbox: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.HWPayNotifyReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.HWPayNotifyReq;
        return proto.Store.HWPayNotifyReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.HWPayNotifyReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setChannelid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setPurchasetoken(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setProductid(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setSandbox(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.HWPayNotifyReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.HWPayNotifyReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.HWPayNotifyReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getChannelid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getPurchasetoken();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getProductid();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getSandbox();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
    };
    proto.Store.HWPayNotifyReq.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.HWPayNotifyReq.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.HWPayNotifyReq.prototype.getChannelid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.HWPayNotifyReq.prototype.setChannelid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.HWPayNotifyReq.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.HWPayNotifyReq.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.HWPayNotifyReq.prototype.getPurchasetoken = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.HWPayNotifyReq.prototype.setPurchasetoken = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.HWPayNotifyReq.prototype.getProductid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.HWPayNotifyReq.prototype.setProductid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Store.HWPayNotifyReq.prototype.getSandbox = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Store.HWPayNotifyReq.prototype.setSandbox = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.HWPayNotifyAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.HWPayNotifyAck.toObject(opt_includeInstance, this);
        };
        proto.Store.HWPayNotifyAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                code: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                credential: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.HWPayNotifyAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.HWPayNotifyAck;
        return proto.Store.HWPayNotifyAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.HWPayNotifyAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCode(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMsg(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setCredential(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.HWPayNotifyAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.HWPayNotifyAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.HWPayNotifyAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getMsg();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getCredential();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Store.HWPayNotifyAck.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.HWPayNotifyAck.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.HWPayNotifyAck.prototype.getMsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.HWPayNotifyAck.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.HWPayNotifyAck.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.HWPayNotifyAck.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.HWPayNotifyAck.prototype.getCredential = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.HWPayNotifyAck.prototype.setCredential = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.GooglePayNotifyReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.GooglePayNotifyReq.toObject(opt_includeInstance, this);
        };
        proto.Store.GooglePayNotifyReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                channelid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                purchasetoken: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                productid: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                sandbox: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.GooglePayNotifyReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.GooglePayNotifyReq;
        return proto.Store.GooglePayNotifyReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.GooglePayNotifyReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setAppid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setChannelid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setPurchasetoken(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setProductid(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setSandbox(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.GooglePayNotifyReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.GooglePayNotifyReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.GooglePayNotifyReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAppid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getChannelid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getPurchasetoken();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getProductid();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getSandbox();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
    };
    proto.Store.GooglePayNotifyReq.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.GooglePayNotifyReq.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.GooglePayNotifyReq.prototype.getChannelid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.GooglePayNotifyReq.prototype.setChannelid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.GooglePayNotifyReq.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.GooglePayNotifyReq.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.GooglePayNotifyReq.prototype.getPurchasetoken = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.GooglePayNotifyReq.prototype.setPurchasetoken = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.GooglePayNotifyReq.prototype.getProductid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.GooglePayNotifyReq.prototype.setProductid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Store.GooglePayNotifyReq.prototype.getSandbox = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Store.GooglePayNotifyReq.prototype.setSandbox = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.GooglePayNotifyAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.GooglePayNotifyAck.toObject(opt_includeInstance, this);
        };
        proto.Store.GooglePayNotifyAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                code: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                outtradeno: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                credential: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.GooglePayNotifyAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.GooglePayNotifyAck;
        return proto.Store.GooglePayNotifyAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.GooglePayNotifyAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCode(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMsg(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setOuttradeno(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setCredential(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.GooglePayNotifyAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.GooglePayNotifyAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.GooglePayNotifyAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getMsg();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getOuttradeno();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getCredential();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Store.GooglePayNotifyAck.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.GooglePayNotifyAck.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.GooglePayNotifyAck.prototype.getMsg = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.GooglePayNotifyAck.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.GooglePayNotifyAck.prototype.getOuttradeno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.GooglePayNotifyAck.prototype.setOuttradeno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.GooglePayNotifyAck.prototype.getCredential = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.GooglePayNotifyAck.prototype.setCredential = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryProvinceListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryProvinceListReq.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryProvinceListReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                country: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryProvinceListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryProvinceListReq;
        return proto.Store.QueryProvinceListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryProvinceListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setCountry(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryProvinceListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryProvinceListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryProvinceListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getCountry();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Store.QueryProvinceListReq.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryProvinceListReq.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryProvinceListReq.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.QueryProvinceListReq.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.QueryProvinceListReq.prototype.getCountry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.QueryProvinceListReq.prototype.setCountry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.QueryProvinceListAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryProvinceListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryProvinceListAck.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryProvinceListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                retcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                provincesList: googleProtobuf.Message.toObjectList(msg.getProvincesList(), proto.Store.Province.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryProvinceListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryProvinceListAck;
        return proto.Store.QueryProvinceListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryProvinceListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setRetcode(value);
                    break;
                case 2:
                    var value = new proto.Store.Province;
                    reader.readMessage(value, proto.Store.Province.deserializeBinaryFromReader);
                    msg.addProvinces(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryProvinceListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryProvinceListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryProvinceListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRetcode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getProvincesList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Store.Province.serializeBinaryToWriter);
        }
    };
    proto.Store.QueryProvinceListAck.prototype.getRetcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryProvinceListAck.prototype.setRetcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryProvinceListAck.prototype.getProvincesList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Store.Province, 2));
    };
    proto.Store.QueryProvinceListAck.prototype.setProvincesList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Store.QueryProvinceListAck.prototype.addProvinces = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Store.Province, opt_index);
    };
    proto.Store.QueryProvinceListAck.prototype.clearProvincesList = function () {
        return this.setProvincesList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryCityListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryCityListReq.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryCityListReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                province: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                country: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryCityListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryCityListReq;
        return proto.Store.QueryCityListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryCityListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setProvince(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setCountry(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryCityListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryCityListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryCityListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getProvince();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getCountry();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Store.QueryCityListReq.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryCityListReq.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryCityListReq.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.QueryCityListReq.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.QueryCityListReq.prototype.getProvince = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.QueryCityListReq.prototype.setProvince = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.QueryCityListReq.prototype.getCountry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.QueryCityListReq.prototype.setCountry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.QueryCityListAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryCityListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryCityListAck.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryCityListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                retcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                citiesList: googleProtobuf.Message.toObjectList(msg.getCitiesList(), proto.Store.City.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryCityListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryCityListAck;
        return proto.Store.QueryCityListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryCityListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setRetcode(value);
                    break;
                case 2:
                    var value = new proto.Store.City;
                    reader.readMessage(value, proto.Store.City.deserializeBinaryFromReader);
                    msg.addCities(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryCityListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryCityListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryCityListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRetcode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getCitiesList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Store.City.serializeBinaryToWriter);
        }
    };
    proto.Store.QueryCityListAck.prototype.getRetcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryCityListAck.prototype.setRetcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryCityListAck.prototype.getCitiesList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Store.City, 2));
    };
    proto.Store.QueryCityListAck.prototype.setCitiesList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Store.QueryCityListAck.prototype.addCities = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Store.City, opt_index);
    };
    proto.Store.QueryCityListAck.prototype.clearCitiesList = function () {
        return this.setCitiesList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryAreaListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryAreaListReq.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryAreaListReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                city: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                province: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                country: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryAreaListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryAreaListReq;
        return proto.Store.QueryAreaListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryAreaListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setCity(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setProvince(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setCountry(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryAreaListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryAreaListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryAreaListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getCity();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getProvince();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getCountry();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
    };
    proto.Store.QueryAreaListReq.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryAreaListReq.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryAreaListReq.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.QueryAreaListReq.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.QueryAreaListReq.prototype.getCity = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.QueryAreaListReq.prototype.setCity = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.QueryAreaListReq.prototype.getProvince = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.QueryAreaListReq.prototype.setProvince = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.QueryAreaListReq.prototype.getCountry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.QueryAreaListReq.prototype.setCountry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Store.QueryAreaListAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryAreaListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryAreaListAck.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryAreaListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                retcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                areasList: googleProtobuf.Message.toObjectList(msg.getAreasList(), proto.Store.Area.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryAreaListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryAreaListAck;
        return proto.Store.QueryAreaListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryAreaListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setRetcode(value);
                    break;
                case 2:
                    var value = new proto.Store.Area;
                    reader.readMessage(value, proto.Store.Area.deserializeBinaryFromReader);
                    msg.addAreas(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryAreaListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryAreaListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryAreaListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRetcode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAreasList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Store.Area.serializeBinaryToWriter);
        }
    };
    proto.Store.QueryAreaListAck.prototype.getRetcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryAreaListAck.prototype.setRetcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryAreaListAck.prototype.getAreasList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Store.Area, 2));
    };
    proto.Store.QueryAreaListAck.prototype.setAreasList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Store.QueryAreaListAck.prototype.addAreas = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Store.Area, opt_index);
    };
    proto.Store.QueryAreaListAck.prototype.clearAreasList = function () {
        return this.setAreasList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryTownListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryTownListReq.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryTownListReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                city: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                province: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                country: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                area: googleProtobuf.Message.getFieldWithDefault(msg, 6, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryTownListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryTownListReq;
        return proto.Store.QueryTownListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryTownListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setCity(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setProvince(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setCountry(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setArea(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryTownListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryTownListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryTownListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getCity();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getProvince();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getCountry();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getArea();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
    };
    proto.Store.QueryTownListReq.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryTownListReq.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryTownListReq.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.QueryTownListReq.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.QueryTownListReq.prototype.getCity = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.QueryTownListReq.prototype.setCity = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.QueryTownListReq.prototype.getProvince = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.QueryTownListReq.prototype.setProvince = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.QueryTownListReq.prototype.getCountry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.QueryTownListReq.prototype.setCountry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Store.QueryTownListReq.prototype.getArea = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Store.QueryTownListReq.prototype.setArea = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Store.QueryTownListAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryTownListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryTownListAck.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryTownListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                retcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                townsList: googleProtobuf.Message.toObjectList(msg.getTownsList(), proto.Store.Town.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryTownListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryTownListAck;
        return proto.Store.QueryTownListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryTownListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setRetcode(value);
                    break;
                case 2:
                    var value = new proto.Store.Town;
                    reader.readMessage(value, proto.Store.Town.deserializeBinaryFromReader);
                    msg.addTowns(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryTownListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryTownListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryTownListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRetcode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getTownsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Store.Town.serializeBinaryToWriter);
        }
    };
    proto.Store.QueryTownListAck.prototype.getRetcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryTownListAck.prototype.setRetcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryTownListAck.prototype.getTownsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Store.Town, 2));
    };
    proto.Store.QueryTownListAck.prototype.setTownsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Store.QueryTownListAck.prototype.addTowns = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Store.Town, opt_index);
    };
    proto.Store.QueryTownListAck.prototype.clearTownsList = function () {
        return this.setTownsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.GetUserAddressReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.GetUserAddressReq.toObject(opt_includeInstance, this);
        };
        proto.Store.GetUserAddressReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.GetUserAddressReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.GetUserAddressReq;
        return proto.Store.GetUserAddressReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.GetUserAddressReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.GetUserAddressReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.GetUserAddressReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.GetUserAddressReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Store.GetUserAddressReq.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.GetUserAddressReq.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.GetUserAddressReq.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.GetUserAddressReq.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.GetUserAddressAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.GetUserAddressAck.toObject(opt_includeInstance, this);
        };
        proto.Store.GetUserAddressAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                retcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                addr: (f = msg.getAddr()) && proto.Store.Address.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.GetUserAddressAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.GetUserAddressAck;
        return proto.Store.GetUserAddressAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.GetUserAddressAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setRetcode(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 3:
                    var value = new proto.Store.Address;
                    reader.readMessage(value, proto.Store.Address.deserializeBinaryFromReader);
                    msg.setAddr(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.GetUserAddressAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.GetUserAddressAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.GetUserAddressAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRetcode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
        f = message.getAddr();
        if (f != null) {
            writer.writeMessage(3, f, proto.Store.Address.serializeBinaryToWriter);
        }
    };
    proto.Store.GetUserAddressAck.prototype.getRetcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.GetUserAddressAck.prototype.setRetcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.GetUserAddressAck.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.GetUserAddressAck.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.GetUserAddressAck.prototype.getAddr = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Store.Address, 3));
    };
    proto.Store.GetUserAddressAck.prototype.setAddr = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Store.GetUserAddressAck.prototype.clearAddr = function () {
        return this.setAddr(undefined);
    };
    proto.Store.GetUserAddressAck.prototype.hasAddr = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.Province.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.Province.toObject(opt_includeInstance, this);
        };
        proto.Store.Province.toObject = function (includeInstance, msg) {
            var f, obj = {
                country: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                number: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.Province.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.Province;
        return proto.Store.Province.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.Province.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setCountry(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNumber(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.Province.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.Province.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.Province.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCountry();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNumber();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Store.Province.prototype.getCountry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.Province.prototype.setCountry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.Province.prototype.getNumber = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.Province.prototype.setNumber = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.Province.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.Province.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.City.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.City.toObject(opt_includeInstance, this);
        };
        proto.Store.City.toObject = function (includeInstance, msg) {
            var f, obj = {
                province: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                number: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.City.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.City;
        return proto.Store.City.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.City.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setProvince(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNumber(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.City.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.City.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.City.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getProvince();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNumber();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Store.City.prototype.getProvince = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.City.prototype.setProvince = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.City.prototype.getNumber = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.City.prototype.setNumber = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.City.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.City.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.Area.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.Area.toObject(opt_includeInstance, this);
        };
        proto.Store.Area.toObject = function (includeInstance, msg) {
            var f, obj = {
                city: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                number: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.Area.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.Area;
        return proto.Store.Area.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.Area.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setCity(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNumber(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.Area.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.Area.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.Area.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCity();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNumber();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Store.Area.prototype.getCity = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.Area.prototype.setCity = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.Area.prototype.getNumber = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.Area.prototype.setNumber = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.Area.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.Area.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.Town.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.Town.toObject(opt_includeInstance, this);
        };
        proto.Store.Town.toObject = function (includeInstance, msg) {
            var f, obj = {
                city: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                number: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                area: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.Town.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.Town;
        return proto.Store.Town.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.Town.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setCity(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNumber(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setArea(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.Town.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.Town.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.Town.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCity();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNumber();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getArea();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Store.Town.prototype.getCity = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.Town.prototype.setCity = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.Town.prototype.getNumber = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.Town.prototype.setNumber = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.Town.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.Town.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.Town.prototype.getArea = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.Town.prototype.setArea = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.Address.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.Address.toObject(opt_includeInstance, this);
        };
        proto.Store.Address.toObject = function (includeInstance, msg) {
            var f, obj = {
                name: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                mobile: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                country: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                province: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                city: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                area: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
                detail: googleProtobuf.Message.getFieldWithDefault(msg, 8, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.Address.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.Address;
        return proto.Store.Address.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.Address.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMobile(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setCountry(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setProvince(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setCity(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setArea(value);
                    break;
                case 8:
                    var value = (reader.readString());
                    msg.setDetail(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.Address.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.Address.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.Address.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getMobile();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getCountry();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getProvince();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getCity();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getArea();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
        f = message.getDetail();
        if (f.length > 0) {
            writer.writeString(8, f);
        }
    };
    proto.Store.Address.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.Address.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.Address.prototype.getMobile = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.Address.prototype.setMobile = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.Address.prototype.getCountry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.Address.prototype.setCountry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Store.Address.prototype.getProvince = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Store.Address.prototype.setProvince = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Store.Address.prototype.getCity = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Store.Address.prototype.setCity = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Store.Address.prototype.getArea = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Store.Address.prototype.setArea = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Store.Address.prototype.getDetail = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
    };
    proto.Store.Address.prototype.setDetail = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 8, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.UserConfirmOrder.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.UserConfirmOrder.toObject(opt_includeInstance, this);
        };
        proto.Store.UserConfirmOrder.toObject = function (includeInstance, msg) {
            var f, obj = {
                orderno: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                price: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                mid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                paytime: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.UserConfirmOrder.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.UserConfirmOrder;
        return proto.Store.UserConfirmOrder.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.UserConfirmOrder.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setOrderno(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 3:
                    var value = (reader.readSint64());
                    msg.setPrice(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setMid(value);
                    break;
                case 5:
                    var value = (reader.readSint64());
                    msg.setPaytime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.UserConfirmOrder.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.UserConfirmOrder.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.UserConfirmOrder.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getOrderno();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
        f = message.getPrice();
        if (f !== 0) {
            writer.writeSint64(3, f);
        }
        f = message.getMid();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getPaytime();
        if (f !== 0) {
            writer.writeSint64(5, f);
        }
    };
    proto.Store.UserConfirmOrder.prototype.getOrderno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.UserConfirmOrder.prototype.setOrderno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.UserConfirmOrder.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.UserConfirmOrder.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.UserConfirmOrder.prototype.getPrice = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Store.UserConfirmOrder.prototype.setPrice = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Store.UserConfirmOrder.prototype.getMid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Store.UserConfirmOrder.prototype.setMid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Store.UserConfirmOrder.prototype.getPaytime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Store.UserConfirmOrder.prototype.setPaytime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryUserConfirmOrderReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryUserConfirmOrderReq.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryUserConfirmOrderReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryUserConfirmOrderReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryUserConfirmOrderReq;
        return proto.Store.QueryUserConfirmOrderReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryUserConfirmOrderReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryUserConfirmOrderReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryUserConfirmOrderReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryUserConfirmOrderReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Store.QueryUserConfirmOrderReq.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryUserConfirmOrderReq.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryUserConfirmOrderReq.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.QueryUserConfirmOrderReq.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Store.QueryUserConfirmOrderAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.QueryUserConfirmOrderAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.QueryUserConfirmOrderAck.toObject(opt_includeInstance, this);
        };
        proto.Store.QueryUserConfirmOrderAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                retcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ordersList: googleProtobuf.Message.toObjectList(msg.getOrdersList(), proto.Store.UserConfirmOrder.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.QueryUserConfirmOrderAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.QueryUserConfirmOrderAck;
        return proto.Store.QueryUserConfirmOrderAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.QueryUserConfirmOrderAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setRetcode(value);
                    break;
                case 2:
                    var value = new proto.Store.UserConfirmOrder;
                    reader.readMessage(value, proto.Store.UserConfirmOrder.deserializeBinaryFromReader);
                    msg.addOrders(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.QueryUserConfirmOrderAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.QueryUserConfirmOrderAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.QueryUserConfirmOrderAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRetcode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getOrdersList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Store.UserConfirmOrder.serializeBinaryToWriter);
        }
    };
    proto.Store.QueryUserConfirmOrderAck.prototype.getRetcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.QueryUserConfirmOrderAck.prototype.setRetcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.QueryUserConfirmOrderAck.prototype.getOrdersList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Store.UserConfirmOrder, 2));
    };
    proto.Store.QueryUserConfirmOrderAck.prototype.setOrdersList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Store.QueryUserConfirmOrderAck.prototype.addOrders = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Store.UserConfirmOrder, opt_index);
    };
    proto.Store.QueryUserConfirmOrderAck.prototype.clearOrdersList = function () {
        return this.setOrdersList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.DeleteUserConfirmOrderReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.DeleteUserConfirmOrderReq.toObject(opt_includeInstance, this);
        };
        proto.Store.DeleteUserConfirmOrderReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                orderno: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.DeleteUserConfirmOrderReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.DeleteUserConfirmOrderReq;
        return proto.Store.DeleteUserConfirmOrderReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.DeleteUserConfirmOrderReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setOrderno(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setPid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.DeleteUserConfirmOrderReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.DeleteUserConfirmOrderReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.DeleteUserConfirmOrderReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getOrderno();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Store.DeleteUserConfirmOrderReq.prototype.getOrderno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Store.DeleteUserConfirmOrderReq.prototype.setOrderno = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Store.DeleteUserConfirmOrderReq.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Store.DeleteUserConfirmOrderReq.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Store.DeleteUserConfirmOrderReq.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Store.DeleteUserConfirmOrderReq.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Store.DeleteUserConfirmOrderAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Store.DeleteUserConfirmOrderAck.toObject(opt_includeInstance, this);
        };
        proto.Store.DeleteUserConfirmOrderAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                retcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                message: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Store.DeleteUserConfirmOrderAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Store.DeleteUserConfirmOrderAck;
        return proto.Store.DeleteUserConfirmOrderAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Store.DeleteUserConfirmOrderAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setRetcode(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMessage(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Store.DeleteUserConfirmOrderAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Store.DeleteUserConfirmOrderAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Store.DeleteUserConfirmOrderAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getRetcode();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getMessage();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Store.DeleteUserConfirmOrderAck.prototype.getRetcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Store.DeleteUserConfirmOrderAck.prototype.setRetcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Store.DeleteUserConfirmOrderAck.prototype.getMessage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Store.DeleteUserConfirmOrderAck.prototype.setMessage = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    goog.object.extend(exports, proto.Store);

    });
    var Store_pb_1 = Store_pb.Merchandise;
    var Store_pb_2 = Store_pb.QueryMerchandiseListResponse;
    var Store_pb_3 = Store_pb.QueryMerchandiseListRequest;
    var Store_pb_4 = Store_pb.UnifiedExchangeOrderRequest;
    var Store_pb_5 = Store_pb.UnifiedExchangeOrderResponse;
    var Store_pb_6 = Store_pb.UnifiedOrderRequest;
    var Store_pb_7 = Store_pb.HWPayNotifyReq;
    var Store_pb_8 = Store_pb.HWPayNotifyAck;
    var Store_pb_9 = Store_pb.ApplePayNotifyAck;
    var Store_pb_10 = Store_pb.ApplePayNotifyReq;
    var Store_pb_11 = Store_pb.UnifiedOrderResponse;
    var Store_pb_12 = Store_pb.CancelOrderRequest;
    var Store_pb_13 = Store_pb.CancelOrderResponse;
    var Store_pb_14 = Store_pb.GooglePayNotifyReq;
    var Store_pb_15 = Store_pb.GooglePayNotifyAck;
    var Store_pb_16 = Store_pb.QueryUserConfirmOrderReq;
    var Store_pb_17 = Store_pb.QueryUserConfirmOrderAck;
    var Store_pb_18 = Store_pb.DeleteUserConfirmOrderReq;
    var Store_pb_19 = Store_pb.DeleteUserConfirmOrderAck;
    var Store_pb_20 = Store_pb.UserConfirmOrder;

    const grpc$5 = {};
    grpc$5.web = grpcWeb;

    const proto$6 = {};
    proto$6.Store = Store_pb;
    proto$6.Store.StoreServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$5.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$6.Store.StoreServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$5.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_StoreService_unifiedOrder = new grpc$5.web.MethodDescriptor('/Store.StoreService/unifiedOrder', grpc$5.web.MethodType.UNARY, proto$6.Store.UnifiedOrderRequest, proto$6.Store.UnifiedOrderResponse, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.UnifiedOrderResponse.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.unifiedOrder =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/unifiedOrder', request, metadata || {}, methodDescriptor_StoreService_unifiedOrder, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.unifiedOrder =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/unifiedOrder', request, metadata || {}, methodDescriptor_StoreService_unifiedOrder);
        };
    const methodDescriptor_StoreService_unifiedExchangeOrder = new grpc$5.web.MethodDescriptor('/Store.StoreService/unifiedExchangeOrder', grpc$5.web.MethodType.UNARY, proto$6.Store.UnifiedExchangeOrderRequest, proto$6.Store.UnifiedExchangeOrderResponse, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.UnifiedExchangeOrderResponse.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.unifiedExchangeOrder =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/unifiedExchangeOrder', request, metadata || {}, methodDescriptor_StoreService_unifiedExchangeOrder, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.unifiedExchangeOrder =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/unifiedExchangeOrder', request, metadata || {}, methodDescriptor_StoreService_unifiedExchangeOrder);
        };
    const methodDescriptor_StoreService_cancelOrder = new grpc$5.web.MethodDescriptor('/Store.StoreService/cancelOrder', grpc$5.web.MethodType.UNARY, proto$6.Store.CancelOrderRequest, proto$6.Store.CancelOrderResponse, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.CancelOrderResponse.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.cancelOrder =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/cancelOrder', request, metadata || {}, methodDescriptor_StoreService_cancelOrder, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.cancelOrder =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/cancelOrder', request, metadata || {}, methodDescriptor_StoreService_cancelOrder);
        };
    const methodDescriptor_StoreService_queryMcCategoryList = new grpc$5.web.MethodDescriptor('/Store.StoreService/queryMcCategoryList', grpc$5.web.MethodType.UNARY, proto$6.Store.QueryMcCategoryListRequest, proto$6.Store.QueryMcCategoryListResponse, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.QueryMcCategoryListResponse.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.queryMcCategoryList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/queryMcCategoryList', request, metadata || {}, methodDescriptor_StoreService_queryMcCategoryList, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.queryMcCategoryList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/queryMcCategoryList', request, metadata || {}, methodDescriptor_StoreService_queryMcCategoryList);
        };
    const methodDescriptor_StoreService_queryMerchandiseList = new grpc$5.web.MethodDescriptor('/Store.StoreService/queryMerchandiseList', grpc$5.web.MethodType.UNARY, proto$6.Store.QueryMerchandiseListRequest, proto$6.Store.QueryMerchandiseListResponse, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.QueryMerchandiseListResponse.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.queryMerchandiseList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/queryMerchandiseList', request, metadata || {}, methodDescriptor_StoreService_queryMerchandiseList, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.queryMerchandiseList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/queryMerchandiseList', request, metadata || {}, methodDescriptor_StoreService_queryMerchandiseList);
        };
    const methodDescriptor_StoreService_notifyApplePay = new grpc$5.web.MethodDescriptor('/Store.StoreService/notifyApplePay', grpc$5.web.MethodType.UNARY, proto$6.Store.ApplePayNotifyReq, proto$6.Store.ApplePayNotifyAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.ApplePayNotifyAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.notifyApplePay =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/notifyApplePay', request, metadata || {}, methodDescriptor_StoreService_notifyApplePay, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.notifyApplePay =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/notifyApplePay', request, metadata || {}, methodDescriptor_StoreService_notifyApplePay);
        };
    const methodDescriptor_StoreService_notifyHWPay = new grpc$5.web.MethodDescriptor('/Store.StoreService/notifyHWPay', grpc$5.web.MethodType.UNARY, proto$6.Store.HWPayNotifyReq, proto$6.Store.HWPayNotifyAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.HWPayNotifyAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.notifyHWPay =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/notifyHWPay', request, metadata || {}, methodDescriptor_StoreService_notifyHWPay, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.notifyHWPay =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/notifyHWPay', request, metadata || {}, methodDescriptor_StoreService_notifyHWPay);
        };
    const methodDescriptor_StoreService_notifyGooglePay = new grpc$5.web.MethodDescriptor('/Store.StoreService/notifyGooglePay', grpc$5.web.MethodType.UNARY, proto$6.Store.GooglePayNotifyReq, proto$6.Store.GooglePayNotifyAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.GooglePayNotifyAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.notifyGooglePay =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/notifyGooglePay', request, metadata || {}, methodDescriptor_StoreService_notifyGooglePay, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.notifyGooglePay =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/notifyGooglePay', request, metadata || {}, methodDescriptor_StoreService_notifyGooglePay);
        };
    const methodDescriptor_StoreService_queryExchangeOrderList = new grpc$5.web.MethodDescriptor('/Store.StoreService/queryExchangeOrderList', grpc$5.web.MethodType.UNARY, proto$6.Store.QueryExchangeOrderRequest, proto$6.Store.QueryExchangeOrderResponse, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.QueryExchangeOrderResponse.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.queryExchangeOrderList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/queryExchangeOrderList', request, metadata || {}, methodDescriptor_StoreService_queryExchangeOrderList, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.queryExchangeOrderList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/queryExchangeOrderList', request, metadata || {}, methodDescriptor_StoreService_queryExchangeOrderList);
        };
    const methodDescriptor_StoreService_queryProvinceList = new grpc$5.web.MethodDescriptor('/Store.StoreService/queryProvinceList', grpc$5.web.MethodType.UNARY, proto$6.Store.QueryProvinceListReq, proto$6.Store.QueryProvinceListAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.QueryProvinceListAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.queryProvinceList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/queryProvinceList', request, metadata || {}, methodDescriptor_StoreService_queryProvinceList, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.queryProvinceList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/queryProvinceList', request, metadata || {}, methodDescriptor_StoreService_queryProvinceList);
        };
    const methodDescriptor_StoreService_queryCityList = new grpc$5.web.MethodDescriptor('/Store.StoreService/queryCityList', grpc$5.web.MethodType.UNARY, proto$6.Store.QueryCityListReq, proto$6.Store.QueryCityListAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.QueryCityListAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.queryCityList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/queryCityList', request, metadata || {}, methodDescriptor_StoreService_queryCityList, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.queryCityList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/queryCityList', request, metadata || {}, methodDescriptor_StoreService_queryCityList);
        };
    const methodDescriptor_StoreService_queryAreaList = new grpc$5.web.MethodDescriptor('/Store.StoreService/queryAreaList', grpc$5.web.MethodType.UNARY, proto$6.Store.QueryAreaListReq, proto$6.Store.QueryAreaListAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.QueryAreaListAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.queryAreaList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/queryAreaList', request, metadata || {}, methodDescriptor_StoreService_queryAreaList, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.queryAreaList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/queryAreaList', request, metadata || {}, methodDescriptor_StoreService_queryAreaList);
        };
    const methodDescriptor_StoreService_queryTownList = new grpc$5.web.MethodDescriptor('/Store.StoreService/queryTownList', grpc$5.web.MethodType.UNARY, proto$6.Store.QueryTownListReq, proto$6.Store.QueryTownListAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.QueryTownListAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.queryTownList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/queryTownList', request, metadata || {}, methodDescriptor_StoreService_queryTownList, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.queryTownList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/queryTownList', request, metadata || {}, methodDescriptor_StoreService_queryTownList);
        };
    const methodDescriptor_StoreService_getUserAddress = new grpc$5.web.MethodDescriptor('/Store.StoreService/getUserAddress', grpc$5.web.MethodType.UNARY, proto$6.Store.GetUserAddressReq, proto$6.Store.GetUserAddressAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.GetUserAddressAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.getUserAddress =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/getUserAddress', request, metadata || {}, methodDescriptor_StoreService_getUserAddress, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.getUserAddress =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/getUserAddress', request, metadata || {}, methodDescriptor_StoreService_getUserAddress);
        };
    const methodDescriptor_StoreService_queryUserConfirmOrder = new grpc$5.web.MethodDescriptor('/Store.StoreService/queryUserConfirmOrder', grpc$5.web.MethodType.UNARY, proto$6.Store.QueryUserConfirmOrderReq, proto$6.Store.QueryUserConfirmOrderAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.QueryUserConfirmOrderAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.queryUserConfirmOrder =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/queryUserConfirmOrder', request, metadata || {}, methodDescriptor_StoreService_queryUserConfirmOrder, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.queryUserConfirmOrder =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/queryUserConfirmOrder', request, metadata || {}, methodDescriptor_StoreService_queryUserConfirmOrder);
        };
    const methodDescriptor_StoreService_deleteUserConfirmOrder = new grpc$5.web.MethodDescriptor('/Store.StoreService/deleteUserConfirmOrder', grpc$5.web.MethodType.UNARY, proto$6.Store.DeleteUserConfirmOrderReq, proto$6.Store.DeleteUserConfirmOrderAck, function (request) {
        return request.serializeBinary();
    }, proto$6.Store.DeleteUserConfirmOrderAck.deserializeBinary);
    proto$6.Store.StoreServiceClient.prototype.deleteUserConfirmOrder =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Store.StoreService/deleteUserConfirmOrder', request, metadata || {}, methodDescriptor_StoreService_deleteUserConfirmOrder, callback);
        };
    proto$6.Store.StoreServicePromiseClient.prototype.deleteUserConfirmOrder =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Store.StoreService/deleteUserConfirmOrder', request, metadata || {}, methodDescriptor_StoreService_deleteUserConfirmOrder);
        };
    var Store_grpc_web_pb = proto$6.Store;
    var Store_grpc_web_pb_1 = Store_grpc_web_pb.StoreServiceClient;

    var AwardService_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Common_pb);
    goog.exportSymbol('proto.Award.ApplyAwardListRequest', null, global);
    goog.exportSymbol('proto.Award.ApplyAwardRequest', null, global);
    goog.exportSymbol('proto.Award.ApplyAwardResponse', null, global);
    goog.exportSymbol('proto.Award.AwardInfo', null, global);
    goog.exportSymbol('proto.Award.AwardInfoRequest', null, global);
    goog.exportSymbol('proto.Award.AwardItem', null, global);
    goog.exportSymbol('proto.Award.AwardResultNoti', null, global);
    goog.exportSymbol('proto.Award.AwardType', null, global);
    proto.Award.AwardItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Award.AwardItem.repeatedFields_, null);
    };
    goog.inherits(proto.Award.AwardItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Award.AwardItem.displayName = 'proto.Award.AwardItem';
    }
    proto.Award.AwardInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Award.AwardInfo.repeatedFields_, null);
    };
    goog.inherits(proto.Award.AwardInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Award.AwardInfo.displayName = 'proto.Award.AwardInfo';
    }
    proto.Award.AwardInfoRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Award.AwardInfoRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Award.AwardInfoRequest.displayName = 'proto.Award.AwardInfoRequest';
    }
    proto.Award.ApplyAwardRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Award.ApplyAwardRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Award.ApplyAwardRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Award.ApplyAwardRequest.displayName = 'proto.Award.ApplyAwardRequest';
    }
    proto.Award.ApplyAwardResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Award.ApplyAwardResponse.repeatedFields_, null);
    };
    goog.inherits(proto.Award.ApplyAwardResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Award.ApplyAwardResponse.displayName = 'proto.Award.ApplyAwardResponse';
    }
    proto.Award.ApplyAwardListRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Award.ApplyAwardListRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Award.ApplyAwardListRequest.displayName = 'proto.Award.ApplyAwardListRequest';
    }
    proto.Award.AwardResultNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Award.AwardResultNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Award.AwardResultNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Award.AwardResultNoti.displayName = 'proto.Award.AwardResultNoti';
    }
    proto.Award.AwardItem.repeatedFields_ = [5];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Award.AwardItem.prototype.toObject = function (opt_includeInstance) {
            return proto.Award.AwardItem.toObject(opt_includeInstance, this);
        };
        proto.Award.AwardItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                nitemtype: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nitemid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                namount: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nprobtype: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                arrchildrenList: googleProtobuf.Message.toObjectList(msg.getArrchildrenList(), proto.Award.AwardItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Award.AwardItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Award.AwardItem;
        return proto.Award.AwardItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.Award.AwardItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNitemtype(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNitemid(value);
                    break;
                case 3:
                    var value = (reader.readInt64());
                    msg.setNamount(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNprobtype(value);
                    break;
                case 5:
                    var value = new proto.Award.AwardItem;
                    reader.readMessage(value, proto.Award.AwardItem.deserializeBinaryFromReader);
                    msg.addArrchildren(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Award.AwardItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Award.AwardItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Award.AwardItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNitemtype();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNitemid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNamount();
        if (f !== 0) {
            writer.writeInt64(3, f);
        }
        f = message.getNprobtype();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getArrchildrenList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(5, f, proto.Award.AwardItem.serializeBinaryToWriter);
        }
    };
    proto.Award.AwardItem.prototype.getNitemtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Award.AwardItem.prototype.setNitemtype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Award.AwardItem.prototype.getNitemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Award.AwardItem.prototype.setNitemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Award.AwardItem.prototype.getNamount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Award.AwardItem.prototype.setNamount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Award.AwardItem.prototype.getNprobtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Award.AwardItem.prototype.setNprobtype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Award.AwardItem.prototype.getArrchildrenList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Award.AwardItem, 5));
    };
    proto.Award.AwardItem.prototype.setArrchildrenList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
    };
    proto.Award.AwardItem.prototype.addArrchildren = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Award.AwardItem.prototype.clearArrchildrenList = function () {
        return this.setArrchildrenList([]);
    };
    proto.Award.AwardInfo.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Award.AwardInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Award.AwardInfo.toObject(opt_includeInstance, this);
        };
        proto.Award.AwardInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                arritemsList: googleProtobuf.Message.toObjectList(msg.getArritemsList(), proto.Award.AwardItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Award.AwardInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Award.AwardInfo;
        return proto.Award.AwardInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Award.AwardInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Award.AwardItem;
                    reader.readMessage(value, proto.Award.AwardItem.deserializeBinaryFromReader);
                    msg.addArritems(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Award.AwardInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Award.AwardInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Award.AwardInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getArritemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(1, f, proto.Award.AwardItem.serializeBinaryToWriter);
        }
    };
    proto.Award.AwardInfo.prototype.getArritemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Award.AwardItem, 1));
    };
    proto.Award.AwardInfo.prototype.setArritemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
    };
    proto.Award.AwardInfo.prototype.addArritems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Award.AwardInfo.prototype.clearArritemsList = function () {
        return this.setArritemsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Award.AwardInfoRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Award.AwardInfoRequest.toObject(opt_includeInstance, this);
        };
        proto.Award.AwardInfoRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                nawardid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nrandseed: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Award.AwardInfoRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Award.AwardInfoRequest;
        return proto.Award.AwardInfoRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Award.AwardInfoRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNawardid(value);
                    break;
                case 3:
                    var value = (reader.readUint64());
                    msg.setNrandseed(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Award.AwardInfoRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Award.AwardInfoRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Award.AwardInfoRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNawardid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNrandseed();
        if (f !== 0) {
            writer.writeUint64(3, f);
        }
    };
    proto.Award.AwardInfoRequest.prototype.getNawardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Award.AwardInfoRequest.prototype.setNawardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Award.AwardInfoRequest.prototype.getNrandseed = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Award.AwardInfoRequest.prototype.setNrandseed = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Award.ApplyAwardRequest.repeatedFields_ = [6];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Award.ApplyAwardRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Award.ApplyAwardRequest.toObject(opt_includeInstance, this);
        };
        proto.Award.ApplyAwardRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nawardid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nawardsource: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nrandseed: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                ncount: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                arrawardidList: (f = googleProtobuf.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
                nextraratio: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Award.ApplyAwardRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Award.ApplyAwardRequest;
        return proto.Award.ApplyAwardRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Award.ApplyAwardRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNawardid(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNawardsource(value);
                    break;
                case 4:
                    var value = (reader.readUint64());
                    msg.setNrandseed(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNcount(value);
                    break;
                case 6:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addArrawardid(values[i]);
                    }
                    break;
                case 7:
                    var value = (reader.readUint32());
                    msg.setNextraratio(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Award.ApplyAwardRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Award.ApplyAwardRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Award.ApplyAwardRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNawardid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNawardsource();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNrandseed();
        if (f !== 0) {
            writer.writeUint64(4, f);
        }
        f = message.getNcount();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getArrawardidList();
        if (f.length > 0) {
            writer.writePackedUint32(6, f);
        }
        f = message.getNextraratio();
        if (f !== 0) {
            writer.writeUint32(7, f);
        }
    };
    proto.Award.ApplyAwardRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Award.ApplyAwardRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Award.ApplyAwardRequest.prototype.getNawardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Award.ApplyAwardRequest.prototype.setNawardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Award.ApplyAwardRequest.prototype.getNawardsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Award.ApplyAwardRequest.prototype.setNawardsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Award.ApplyAwardRequest.prototype.getNrandseed = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Award.ApplyAwardRequest.prototype.setNrandseed = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Award.ApplyAwardRequest.prototype.getNcount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Award.ApplyAwardRequest.prototype.setNcount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Award.ApplyAwardRequest.prototype.getArrawardidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 6));
    };
    proto.Award.ApplyAwardRequest.prototype.setArrawardidList = function (value) {
        return googleProtobuf.Message.setField(this, 6, value || []);
    };
    proto.Award.ApplyAwardRequest.prototype.addArrawardid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 6, value, opt_index);
    };
    proto.Award.ApplyAwardRequest.prototype.clearArrawardidList = function () {
        return this.setArrawardidList([]);
    };
    proto.Award.ApplyAwardRequest.prototype.getNextraratio = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Award.ApplyAwardRequest.prototype.setNextraratio = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Award.ApplyAwardResponse.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Award.ApplyAwardResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Award.ApplyAwardResponse.toObject(opt_includeInstance, this);
        };
        proto.Award.ApplyAwardResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                arritemsList: googleProtobuf.Message.toObjectList(msg.getArritemsList(), proto.Award.AwardItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Award.ApplyAwardResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Award.ApplyAwardResponse;
        return proto.Award.ApplyAwardResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Award.ApplyAwardResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Award.AwardItem;
                    reader.readMessage(value, proto.Award.AwardItem.deserializeBinaryFromReader);
                    msg.addArritems(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Award.ApplyAwardResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Award.ApplyAwardResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Award.ApplyAwardResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getArritemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Award.AwardItem.serializeBinaryToWriter);
        }
    };
    proto.Award.ApplyAwardResponse.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Award.ApplyAwardResponse.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Award.ApplyAwardResponse.prototype.getArritemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Award.AwardItem, 2));
    };
    proto.Award.ApplyAwardResponse.prototype.setArritemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Award.ApplyAwardResponse.prototype.addArritems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Award.ApplyAwardResponse.prototype.clearArritemsList = function () {
        return this.setArritemsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Award.ApplyAwardListRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Award.ApplyAwardListRequest.toObject(opt_includeInstance, this);
        };
        proto.Award.ApplyAwardListRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                stawardinfo: (f = msg.getStawardinfo()) && proto.Award.AwardInfo.toObject(includeInstance, f),
                nawardsource: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Award.ApplyAwardListRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Award.ApplyAwardListRequest;
        return proto.Award.ApplyAwardListRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Award.ApplyAwardListRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = new proto.Award.AwardInfo;
                    reader.readMessage(value, proto.Award.AwardInfo.deserializeBinaryFromReader);
                    msg.setStawardinfo(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNawardsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Award.ApplyAwardListRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Award.ApplyAwardListRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Award.ApplyAwardListRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStawardinfo();
        if (f != null) {
            writer.writeMessage(2, f, proto.Award.AwardInfo.serializeBinaryToWriter);
        }
        f = message.getNawardsource();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
    };
    proto.Award.ApplyAwardListRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Award.ApplyAwardListRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Award.ApplyAwardListRequest.prototype.getStawardinfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Award.AwardInfo, 2));
    };
    proto.Award.ApplyAwardListRequest.prototype.setStawardinfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Award.ApplyAwardListRequest.prototype.clearStawardinfo = function () {
        return this.setStawardinfo(undefined);
    };
    proto.Award.ApplyAwardListRequest.prototype.hasStawardinfo = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Award.ApplyAwardListRequest.prototype.getNawardsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Award.ApplyAwardListRequest.prototype.setNawardsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Award.AwardResultNoti.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Award.AwardResultNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Award.AwardResultNoti.toObject(opt_includeInstance, this);
        };
        proto.Award.AwardResultNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                arritemsList: googleProtobuf.Message.toObjectList(msg.getArritemsList(), proto.Award.AwardItem.toObject, includeInstance),
                nawardsource: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Award.AwardResultNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Award.AwardResultNoti;
        return proto.Award.AwardResultNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Award.AwardResultNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Award.AwardItem;
                    reader.readMessage(value, proto.Award.AwardItem.deserializeBinaryFromReader);
                    msg.addArritems(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNawardsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Award.AwardResultNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Award.AwardResultNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Award.AwardResultNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getArritemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(1, f, proto.Award.AwardItem.serializeBinaryToWriter);
        }
        f = message.getNawardsource();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Award.AwardResultNoti.prototype.getArritemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Award.AwardItem, 1));
    };
    proto.Award.AwardResultNoti.prototype.setArritemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
    };
    proto.Award.AwardResultNoti.prototype.addArritems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Award.AwardResultNoti.prototype.clearArritemsList = function () {
        return this.setArritemsList([]);
    };
    proto.Award.AwardResultNoti.prototype.getNawardsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Award.AwardResultNoti.prototype.setNawardsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Award.AwardType = {
        UNKONW: 0,
        SHOP: 1,
        PAY: 2,
        CURRENCY: 3,
        SOLICIT_MONEY: 4,
        PRIVILEGE_CARD: 5,
        GAME_INTERACTIVE: 6,
        GAME_EFFECT: 7,
        ROULETTE_TIMES: 8,
        ROULETTE_TIMES_TEMP: 9,
        ACCESSORY: 10,
        LUCKYGIFT: 11,
        VIP_EXP: 12
    };
    goog.object.extend(exports, proto.Award);

    });
    var AwardService_pb_1 = AwardService_pb.AwardItem;
    var AwardService_pb_2 = AwardService_pb.AwardType;
    var AwardService_pb_3 = AwardService_pb.AwardInfoRequest;
    var AwardService_pb_4 = AwardService_pb.AwardInfo;
    var AwardService_pb_5 = AwardService_pb.AwardResultNoti;

    const grpc$6 = {};
    grpc$6.web = grpcWeb;

    const proto$7 = {};
    proto$7.Award = AwardService_pb;
    proto$7.Award.AwardServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$6.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$7.Award.AwardServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$6.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_AwardService_GetAwardInfo = new grpc$6.web.MethodDescriptor('/Award.AwardService/GetAwardInfo', grpc$6.web.MethodType.UNARY, proto$7.Award.AwardInfoRequest, proto$7.Award.AwardInfo, function (request) {
        return request.serializeBinary();
    }, proto$7.Award.AwardInfo.deserializeBinary);
    proto$7.Award.AwardServiceClient.prototype.getAwardInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Award.AwardService/GetAwardInfo', request, metadata || {}, methodDescriptor_AwardService_GetAwardInfo, callback);
        };
    proto$7.Award.AwardServicePromiseClient.prototype.getAwardInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Award.AwardService/GetAwardInfo', request, metadata || {}, methodDescriptor_AwardService_GetAwardInfo);
        };
    const methodDescriptor_AwardService_ApplyAward = new grpc$6.web.MethodDescriptor('/Award.AwardService/ApplyAward', grpc$6.web.MethodType.UNARY, proto$7.Award.ApplyAwardRequest, proto$7.Award.ApplyAwardResponse, function (request) {
        return request.serializeBinary();
    }, proto$7.Award.ApplyAwardResponse.deserializeBinary);
    proto$7.Award.AwardServiceClient.prototype.applyAward =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Award.AwardService/ApplyAward', request, metadata || {}, methodDescriptor_AwardService_ApplyAward, callback);
        };
    proto$7.Award.AwardServicePromiseClient.prototype.applyAward =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Award.AwardService/ApplyAward', request, metadata || {}, methodDescriptor_AwardService_ApplyAward);
        };
    const methodDescriptor_AwardService_ApplyAwardList = new grpc$6.web.MethodDescriptor('/Award.AwardService/ApplyAwardList', grpc$6.web.MethodType.UNARY, proto$7.Award.ApplyAwardListRequest, proto$7.Award.ApplyAwardResponse, function (request) {
        return request.serializeBinary();
    }, proto$7.Award.ApplyAwardResponse.deserializeBinary);
    proto$7.Award.AwardServiceClient.prototype.applyAwardList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Award.AwardService/ApplyAwardList', request, metadata || {}, methodDescriptor_AwardService_ApplyAwardList, callback);
        };
    proto$7.Award.AwardServicePromiseClient.prototype.applyAwardList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Award.AwardService/ApplyAwardList', request, metadata || {}, methodDescriptor_AwardService_ApplyAwardList);
        };
    var AwardService_grpc_web_pb = proto$7.Award;
    var AwardService_grpc_web_pb_1 = AwardService_grpc_web_pb.AwardServiceClient;

    var RedeemCode_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Common_pb);
    goog.exportSymbol('proto.RedeemCode.AwardItem', null, global);
    goog.exportSymbol('proto.RedeemCode.AwardRecord', null, global);
    goog.exportSymbol('proto.RedeemCode.HistoryAck', null, global);
    goog.exportSymbol('proto.RedeemCode.HistoryGet', null, global);
    goog.exportSymbol('proto.RedeemCode.RedeemCodeRequest', null, global);
    proto.RedeemCode.RedeemCodeRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.RedeemCode.RedeemCodeRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.RedeemCode.RedeemCodeRequest.displayName = 'proto.RedeemCode.RedeemCodeRequest';
    }
    proto.RedeemCode.AwardItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.RedeemCode.AwardItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.RedeemCode.AwardItem.displayName = 'proto.RedeemCode.AwardItem';
    }
    proto.RedeemCode.AwardRecord = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.RedeemCode.AwardRecord, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.RedeemCode.AwardRecord.displayName = 'proto.RedeemCode.AwardRecord';
    }
    proto.RedeemCode.HistoryGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.RedeemCode.HistoryGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.RedeemCode.HistoryGet.displayName = 'proto.RedeemCode.HistoryGet';
    }
    proto.RedeemCode.HistoryAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.RedeemCode.HistoryAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.RedeemCode.HistoryAck.displayName = 'proto.RedeemCode.HistoryAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.RedeemCode.RedeemCodeRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.RedeemCode.RedeemCodeRequest.toObject(opt_includeInstance, this);
        };
        proto.RedeemCode.RedeemCodeRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                strcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.RedeemCode.RedeemCodeRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.RedeemCode.RedeemCodeRequest;
        return proto.RedeemCode.RedeemCodeRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.RedeemCode.RedeemCodeRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrcode(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.RedeemCode.RedeemCodeRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.RedeemCode.RedeemCodeRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.RedeemCode.RedeemCodeRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrcode();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.RedeemCode.RedeemCodeRequest.prototype.getStrcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.RedeemCode.RedeemCodeRequest.prototype.setStrcode = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.RedeemCode.AwardItem.prototype.toObject = function (opt_includeInstance) {
            return proto.RedeemCode.AwardItem.toObject(opt_includeInstance, this);
        };
        proto.RedeemCode.AwardItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                itemtype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                max: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                min: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.RedeemCode.AwardItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.RedeemCode.AwardItem;
        return proto.RedeemCode.AwardItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.RedeemCode.AwardItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setItemtype(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setMax(value);
                    break;
                case 5:
                    var value = (reader.readSint64());
                    msg.setMin(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.RedeemCode.AwardItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.RedeemCode.AwardItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.RedeemCode.AwardItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getItemtype();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getMax();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getMin();
        if (f !== 0) {
            writer.writeSint64(5, f);
        }
    };
    proto.RedeemCode.AwardItem.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.RedeemCode.AwardItem.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.RedeemCode.AwardItem.prototype.getItemtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.RedeemCode.AwardItem.prototype.setItemtype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.RedeemCode.AwardItem.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.RedeemCode.AwardItem.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.RedeemCode.AwardItem.prototype.getMax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.RedeemCode.AwardItem.prototype.setMax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.RedeemCode.AwardItem.prototype.getMin = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.RedeemCode.AwardItem.prototype.setMin = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.RedeemCode.AwardRecord.prototype.toObject = function (opt_includeInstance) {
            return proto.RedeemCode.AwardRecord.toObject(opt_includeInstance, this);
        };
        proto.RedeemCode.AwardRecord.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                time: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.RedeemCode.AwardRecord.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.RedeemCode.AwardRecord;
        return proto.RedeemCode.AwardRecord.deserializeBinaryFromReader(msg, reader);
    };
    proto.RedeemCode.AwardRecord.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 3:
                    var value = (reader.readSint64());
                    msg.setTime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.RedeemCode.AwardRecord.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.RedeemCode.AwardRecord.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.RedeemCode.AwardRecord.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getTime();
        if (f !== 0) {
            writer.writeSint64(3, f);
        }
    };
    proto.RedeemCode.AwardRecord.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.RedeemCode.AwardRecord.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.RedeemCode.AwardRecord.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.RedeemCode.AwardRecord.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.RedeemCode.AwardRecord.prototype.getTime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.RedeemCode.AwardRecord.prototype.setTime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.RedeemCode.HistoryGet.prototype.toObject = function (opt_includeInstance) {
            return proto.RedeemCode.HistoryGet.toObject(opt_includeInstance, this);
        };
        proto.RedeemCode.HistoryGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                code: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.RedeemCode.HistoryGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.RedeemCode.HistoryGet;
        return proto.RedeemCode.HistoryGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.RedeemCode.HistoryGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setCode(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.RedeemCode.HistoryGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.RedeemCode.HistoryGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.RedeemCode.HistoryGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCode();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.RedeemCode.HistoryGet.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.RedeemCode.HistoryGet.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.RedeemCode.HistoryAck.prototype.toObject = function (opt_includeInstance) {
            return proto.RedeemCode.HistoryAck.toObject(opt_includeInstance, this);
        };
        proto.RedeemCode.HistoryAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                code: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                have: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 3, false)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.RedeemCode.HistoryAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.RedeemCode.HistoryAck;
        return proto.RedeemCode.HistoryAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.RedeemCode.HistoryAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setCode(value);
                    break;
                case 3:
                    var value = (reader.readBool());
                    msg.setHave(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.RedeemCode.HistoryAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.RedeemCode.HistoryAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.RedeemCode.HistoryAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getCode();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getHave();
        if (f) {
            writer.writeBool(3, f);
        }
    };
    proto.RedeemCode.HistoryAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.RedeemCode.HistoryAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.RedeemCode.HistoryAck.prototype.getCode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.RedeemCode.HistoryAck.prototype.setCode = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.RedeemCode.HistoryAck.prototype.getHave = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 3, false));
    };
    proto.RedeemCode.HistoryAck.prototype.setHave = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 3, value);
    };
    goog.object.extend(exports, proto.RedeemCode);

    });
    var RedeemCode_pb_1 = RedeemCode_pb.RedeemCodeRequest;
    var RedeemCode_pb_2 = RedeemCode_pb.HistoryGet;
    var RedeemCode_pb_3 = RedeemCode_pb.HistoryAck;

    const grpc$7 = {};
    grpc$7.web = grpcWeb;

    const proto$8 = {};
    proto$8.RedeemCode = RedeemCode_pb;
    proto$8.RedeemCode.RedeemServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$7.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$8.RedeemCode.RedeemServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$7.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_RedeemService_RedeemCode = new grpc$7.web.MethodDescriptor('/RedeemCode.RedeemService/RedeemCode', grpc$7.web.MethodType.UNARY, proto$8.RedeemCode.RedeemCodeRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$8.RedeemCode.RedeemServiceClient.prototype.redeemCode =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/RedeemCode.RedeemService/RedeemCode', request, metadata || {}, methodDescriptor_RedeemService_RedeemCode, callback);
        };
    proto$8.RedeemCode.RedeemServicePromiseClient.prototype.redeemCode =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/RedeemCode.RedeemService/RedeemCode', request, metadata || {}, methodDescriptor_RedeemService_RedeemCode);
        };
    const methodDescriptor_RedeemService_History = new grpc$7.web.MethodDescriptor('/RedeemCode.RedeemService/History', grpc$7.web.MethodType.UNARY, proto$8.RedeemCode.HistoryGet, proto$8.RedeemCode.HistoryAck, function (request) {
        return request.serializeBinary();
    }, proto$8.RedeemCode.HistoryAck.deserializeBinary);
    proto$8.RedeemCode.RedeemServiceClient.prototype.history =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/RedeemCode.RedeemService/History', request, metadata || {}, methodDescriptor_RedeemService_History, callback);
        };
    proto$8.RedeemCode.RedeemServicePromiseClient.prototype.history =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/RedeemCode.RedeemService/History', request, metadata || {}, methodDescriptor_RedeemService_History);
        };
    var RedeemCode_grpc_web_pb = proto$8.RedeemCode;
    var RedeemCode_grpc_web_pb_1 = RedeemCode_grpc_web_pb.RedeemServiceClient;

    class AwardService extends Singleton {
        constructor() {
            super();
            this.awardService = null;
            this.awardService = new AwardService_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.m_redeemService = new RedeemCode_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.awardCache = new Map();
        }
        getAwardInfo(awardid, callback) {
            if (this.awardCache.has(awardid)) {
                callback(this.awardCache.get(awardid));
                return;
            }
            if (awardid < 0) {
                callback(null);
                return;
            }
            let req = new AwardService_pb_3();
            req.setNawardid(awardid);
            this.awardService.getAwardInfo(req, GlobalData.getInstance().baseMeta, (err, resp) => {
                if (err != null) {
                    CC.Loge("get award info failed: ", err);
                    return;
                }
                this.awardCache.set(awardid, resp);
                callback(resp);
            });
        }
        sendRedeemCode(p_text) {
            let l_rep = new RedeemCode_pb_1();
            l_rep.setStrcode(p_text);
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
            this.m_redeemService.redeemCode(l_rep, GlobalData.getInstance().baseMeta, (err, response) => {
                GlobalData.getInstance().loadingAni.Close();
                if (err) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REDEEM_FAIL);
                    return;
                }
                let ret = response.getNret();
                let warnStr = WARNING[ret] || (WARNING.REDEEM_FAIL + ": " + ret);
                if (ret == 0) {
                    warnStr = WARNING.REDEEM_SUCC;
                    GameStorage.setExcCode(1);
                }
                else if (ret == Common_pb_1.E_REDEEM_CODE_ALREADY_REDEEMED ||
                    ret == Common_pb_1.E_REDEEM_CODE_ALREADY_TYPE) {
                    GameStorage.setExcCode(1);
                }
                TopTipsManager.getInstance().showTopTips(warnStr);
                EventManager.getInstance().emit(LobbyEvent.Redeem_Code_ack);
            });
        }
        history(code) {
            return new Promise((resolve, reject) => {
                let l_rep = new RedeemCode_pb_2();
                l_rep.setCode(code);
                this.m_redeemService.history(l_rep, GlobalData.getInstance().baseMeta, (err, response) => {
                    GlobalData.getInstance().loadingAni.Close();
                    if (err) {
                        reject(err);
                    }
                    else {
                        resolve(response);
                    }
                });
            });
        }
    }

    var PAY_RESULT;
    (function (PAY_RESULT) {
        PAY_RESULT["DAY_LIMIT"] = "-30007";
        PAY_RESULT["WEEK_LIMIT"] = "-30008";
        PAY_RESULT["MONTH_LIMIT"] = "-30009";
        PAY_RESULT["UNOVER_ORDER"] = "-30017";
        PAY_RESULT["CHILD_LIMIT"] = "-30019";
    })(PAY_RESULT || (PAY_RESULT = {}));
    class MerchandiseEx {
        constructor(merch, award) {
            this._merchandise = merch;
            this._awardInfo = award;
        }
        getId() {
            return this._merchandise.getId();
        }
        getAppid() {
            return this._merchandise.getAppid();
        }
        getCategory() {
            return this._merchandise.getCategory();
        }
        getName() {
            return this._merchandise.getName();
        }
        getDesc() {
            return this._merchandise.getDesc();
        }
        getVipagio() {
            return this._merchandise.getVipagio();
        }
        getStocks() {
            return this._merchandise.getStocks();
        }
        getImglistList() {
            return this._merchandise.getImglistList();
        }
        getCoverimg() {
            return this._merchandise.getCoverimg();
        }
        getAttribute() {
            return this._merchandise.getAttribute();
        }
        setAttribute(value) {
            this._merchandise.setAttribute(value);
        }
        getStatus() {
            return this._merchandise.getStatus();
        }
        getType() {
            return this._merchandise.getType();
        }
        getPrice() {
            return this._merchandise.getPrice();
        }
        getGamemoney() {
            return this._merchandise.getGamemoney();
        }
        getCostsList() {
            return this._merchandise.getCostsList();
        }
        getAwardid() {
            return this._merchandise.getAwardid();
        }
        getEndtime() {
            return this._merchandise.getEndtime();
        }
        getCreatetime() {
            return this._merchandise.getCreatetime();
        }
        getAddition() {
            return this._merchandise.getAddition();
        }
        get merchandise() {
            return this._merchandise;
        }
        get awardInfo() {
            return this._awardInfo;
        }
    }
    class DataStore extends Singleton {
        constructor() {
            super();
            this.storeService = new Store_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.cacheByID = new Map();
            this.cacheByCat = new Map();
            this.callbackByCat = new Map();
        }
        showLobbyToast(msg) {
            let lobbyScene = GlobalData.getInstance().lobbyScene;
            if (lobbyScene != undefined && lobbyScene != null) {
                TopTipsManager.getInstance().showTopTips(msg);
            }
            else {
                Laya.timer.once(1000, this, this.showLobbyToast, [msg]);
            }
        }
        queryGoodsList(category, pageNum, pageSize, callback, id) {
            let req = new Store_pb_3();
            req.setAppid(GlobalVariables.APP_ID);
            req.setCategory(category);
            req.setPageno(pageNum);
            req.setPagesize(pageSize);
            if (id != null) {
                if (Array.isArray(id)) {
                    req.setMutiidList(id);
                }
                else {
                    req.setId(id);
                }
            }
            this.storeService.queryMerchandiseList(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err || res.getCode() != Constants_pb_1.SUCCESS) {
                    CC.Log('queryGoodsList failed: ', category, err, res);
                    this.showLobbyToast(WARNING.REQUEST_FAIL);
                    callback(null);
                    return;
                }
                CC.Log('queryGoodsList: ', res.toObject());
                callback(res);
            });
        }
        queryGoodsByCategory(category, callback) {
            if (this.cacheByCat.has(category)) {
                callback(this.cacheByCat.get(category));
            }
            else {
                if (this.callbackByCat.has(category)) {
                    this.callbackByCat.get(category).push(callback);
                    return;
                }
                else {
                    this.callbackByCat.set(category, [callback]);
                }
                let goods = [];
                let tempGoods = [];
                let queryComplete = false;
                let queryFunc = (page, complete) => {
                    this.queryGoodsList(category, page, 29, (res) => {
                        if (res == null) {
                            CC.Loge("query goods list failed");
                            complete(false);
                            return;
                        }
                        CC.Log("queryGoodsByCategory list: " + JSON.stringify(res));
                        let list = res.getMerchandiselistList();
                        tempGoods.push(...list);
                        if (list) {
                            list.forEach(merchandise => {
                                let awardid = merchandise.getAwardid();
                                AwardService.getInstance().getAwardInfo(awardid, (info) => {
                                    let merchEx = new MerchandiseEx(merchandise, info);
                                    goods.push(merchEx);
                                    if (goods.length == tempGoods.length && queryComplete) {
                                        complete(true);
                                    }
                                });
                            });
                        }
                        if (res.getPagecount() > page) {
                            queryFunc(page + 1, complete);
                        }
                        else {
                            queryComplete = true;
                            if (goods.length == tempGoods.length && queryComplete) {
                                complete(true);
                            }
                        }
                    });
                };
                queryFunc(1, (success) => {
                    if (success) {
                        goods.sort((a, b) => { return a.getId() - b.getId(); });
                        this.cacheByCat.set(category, goods);
                        if (goods) {
                            goods.forEach(merchandise => {
                                this.cacheByID.set(merchandise.getId(), merchandise);
                            });
                        }
                    }
                    else {
                        goods = [];
                    }
                    let callbacks = this.callbackByCat.get(category);
                    if (callbacks) {
                        callbacks.forEach(callback => {
                            callback(goods);
                        });
                    }
                    this.callbackByCat.delete(category);
                });
            }
        }
        clearGoodsByCategory(category) {
            if (this.cacheByCat.has(category)) {
                this.cacheByCat.delete(category);
            }
        }
        queryGoodsByID(id, callback) {
            let ids = [];
            if (Array.isArray(id)) {
                ids = id;
            }
            else {
                ids.push(id);
            }
            let cacheMissed = [];
            let goods = [];
            ids.forEach(id => {
                if (this.cacheByID.has(id)) {
                    goods.push(this.cacheByID.get(id));
                }
                else {
                    cacheMissed.push(id);
                }
            });
            if (cacheMissed.length == 0) {
                callback(goods);
            }
            else {
                let okGoods = [];
                let tempGoods = [];
                let queryComplete = false;
                let queryFunc = (page, complete) => {
                    this.queryGoodsList(0, 1, 29, (res) => {
                        if (res == null) {
                            CC.Loge("query goods list failed");
                            complete(false);
                            return;
                        }
                        CC.Log("queryGoodsByID list: " + JSON.stringify(res));
                        let list = res.getMerchandiselistList();
                        tempGoods.push(...list);
                        if (list) {
                            list.forEach(merchandise => {
                                let awardid = merchandise.getAwardid();
                                AwardService.getInstance().getAwardInfo(awardid, (info) => {
                                    let merchEx = new MerchandiseEx(merchandise, info);
                                    okGoods.push(merchEx);
                                    if (okGoods.length == tempGoods.length && queryComplete) {
                                        complete(true);
                                    }
                                });
                            });
                        }
                        if (res.getPagecount() > page) {
                            queryFunc(page + 1, complete);
                        }
                        else {
                            queryComplete = true;
                            if (okGoods.length == tempGoods.length && queryComplete) {
                                complete(true);
                            }
                        }
                    }, cacheMissed);
                };
                queryFunc(1, (success) => {
                    if (success) {
                        goods.push(...okGoods);
                        if (okGoods) {
                            okGoods.forEach(merchandise => {
                                this.cacheByID.set(merchandise.getId(), merchandise);
                            });
                        }
                        goods.sort((a, b) => { return a.getId() - b.getId(); });
                        callback(goods);
                    }
                    else {
                        callback([]);
                    }
                });
            }
        }
        clearGoodsByID(id) {
            if (this.cacheByID.has(id)) {
                this.cacheByID.delete(id);
            }
        }
        clearGoods() {
            this.cacheByID = new Map();
            this.cacheByCat = new Map();
            this.callbackByCat = new Map();
        }
        unifiedOrder(payType, goodsid, payNum, goodsName, callback, mReceipt, strType) {
            let req = new Store_pb_6();
            req.setAppid(GlobalVariables.APP_ID);
            req.setPaytype(payType);
            if (payType == Constants_pb_2.EQS_PAY) {
                req.setChannelid(PAY_CHANNEL.EQS_PAY);
            }
            req.setBuypid(GlobalData.getInstance().myPid);
            req.setRecivepid(GlobalData.getInstance().myPid);
            req.setClientip(GlobalVariables.G_MY_IP);
            req.setPayamount(payNum);
            req.setSubject(goodsName);
            req.setReturnurl("");
            let source = 0;
            if (DeviceData.getInstance().isAndroid) {
                source = GlobalVariables.SOURCE_ID_ANDROID;
            }
            else if (DeviceData.getInstance().isIOS) {
                source = GlobalVariables.SOURCE_ID_IOS;
            }
            else {
                source = GlobalVariables.SOURCE_ID_H5;
            }
            req.setSource(source);
            let goodJson = {
                'mid': goodsid,
                'type': strType
            };
            req.setAttach(JSON.stringify(goodJson));
            mReceipt && req.setReceipt(mReceipt);
            console.log("unifiedOrder::request  ", req.toObject());
            this.storeService.unifiedOrder(req, GlobalData.getInstance().baseMeta, (err, res) => {
                console.log("unifiedOrder::response  ======>>  ", err, res.toObject());
                if (err) {
                    CC.Log('unifiedOrder failed: ', goodsid, err);
                    this.showLobbyToast(WARNING.RECHARGE_FAIL);
                    callback(null);
                    return;
                }
                CC.Log('unifiedOrder: ' + JSON.stringify(res));
                if (res.getCode() === "SUCCESS") {
                    let payUrl = res.getCredential();
                    CC.Log('unifiedOrder success: ' + payUrl);
                    callback(res.getOuttradeno());
                    GameStorage.saveLastOrder(res.getOuttradeno());
                    let obj = {
                        goodID: goodsid,
                        goodNum: goodsName,
                        price: "R$" + (payNum / 100),
                        orderID: res.getOuttradeno(),
                    };
                    GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1022, JSON.stringify(obj));
                    if (payType == Constants_pb_2.APPLE_PAY) {
                        return;
                    }
                    let params = {
                        "orientation": 2,
                        "h5Url": payUrl,
                    };
                    DeviceData.getInstance().showWebViewNorm(params, null, 0);
                }
                else {
                    callback(null);
                    this.showLobbyToast(res.getMsg());
                }
            });
        }
        unifiedExchangeOrder(goodsid, num, callback) {
            let req = new Store_pb_4();
            req.setAppid(GlobalVariables.APP_ID);
            req.setBuypid(GlobalData.getInstance().myPid);
            req.setRecivepid(GlobalData.getInstance().myPid);
            req.setClientip(GlobalVariables.G_MY_IP);
            let goodJson = {
                'mid': goodsid,
                'num': num
            };
            req.setAttach(JSON.stringify(goodJson));
            this.storeService.unifiedExchangeOrder(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err || res.getCode() != Constants_pb_1.SUCCESS) {
                    CC.Log('unifiedExchangeOrder failed: ', goodsid, err, res);
                    if (!err) {
                        switch (res.getCode()) {
                            case Constants_pb_1.E_ITEM_LOCKED:
                                this.showLobbyToast('道具锁定不能用于兑换');
                                break;
                            default:
                                this.showLobbyToast('兑换失败');
                                break;
                        }
                    }
                    callback(false);
                    return;
                }
                CC.Log('unifiedExchangeOrder: ', res);
                callback(true);
            });
        }
        verifyAppleOrder(orderNo, receipt, callback) {
            let req = new Store_pb_10();
            req.setAppid(GlobalVariables.APP_ID);
            req.setChannelid(DeviceData.getInstance().getChannelID());
            req.setOuttradeno(orderNo);
            req.setReceipt(receipt);
            req.setSandbox(0);
            this.storeService.notifyApplePay(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    CC.Log('verifyAppleOrder failed: ', err);
                    this.showLobbyToast(WARNING.RECHARGE_FAIL);
                    callback(null);
                    return;
                }
                if (res.getCode() == 0) {
                    callback(res.getOuttradeno());
                }
                else {
                    this.showLobbyToast(WARNING.RECHARGE_FAIL);
                    callback(null);
                }
            });
        }
        verifyHWOrder(orderNo, purchaseToken, productID, callback) {
            let req = new Store_pb_7();
            req.setAppid(GlobalVariables.APP_ID);
            req.setChannelid(DeviceData.getInstance().getChannelID());
            req.setOuttradeno(orderNo);
            req.setPurchasetoken(purchaseToken);
            req.setProductid(productID);
            req.setSandbox(0);
            this.storeService.notifyHWPay(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    CC.Log('verifyHWOrder failed: ', productID, err);
                    this.showLobbyToast('支付失败');
                    callback(null);
                    return;
                }
                if (res.getCode() == 0) {
                    callback(res.getOuttradeno());
                }
                else {
                    this.showLobbyToast('支付失败');
                    callback(null);
                }
            });
        }
        cancelOrder(callback) {
            let orderID = GameStorage.getLastOrder();
            if (!orderID) {
                callback(false);
                return;
            }
            let req = new Store_pb_12();
            req.setOuttradeno(orderID);
            this.storeService.cancelOrder(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err || res.getCode() !== Constants_pb_1.SUCCESS) {
                    CC.Log('cancelOrder failed: ', err, res);
                    callback(false);
                    return;
                }
                CC.Log('cancelOrder: ', res);
                callback(true);
            });
        }
        verifyGoogleOrder(orderNo, purchaseToken, productID, callback) {
            let req = new Store_pb_14();
            req.setAppid(GlobalVariables.APP_ID);
            req.setChannelid(DeviceData.getInstance().getChannelID());
            req.setOuttradeno(orderNo);
            req.setPurchasetoken(purchaseToken);
            req.setProductid(productID);
            req.setSandbox(0);
            this.storeService.notifyGooglePay(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    CC.Log('verifyHWOrder failed: ', productID, err);
                    this.showLobbyToast(WARNING.REQUEST_FAIL);
                    callback(null);
                    return;
                }
                if (res.getCode() == 0) {
                    callback(res.getOuttradeno());
                }
                else {
                    this.showLobbyToast(WARNING.REQUEST_FAIL);
                    callback(null);
                }
            });
        }
        queryUserConfirmOrder(callback) {
            let req = new Store_pb_16();
            req.setPid(GlobalData.getInstance().myPid);
            req.setTicket(GlobalData.getInstance().myTicket);
            this.storeService.queryUserConfirmOrder(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err || res.getRetcode() != 0) {
                    callback(null);
                    return;
                }
                else {
                    callback(res.getOrdersList());
                    let orderArr = res.getOrdersList();
                    for (let i = 0; i < orderArr.length; i++) {
                        let info = orderArr[i];
                        let obj = {
                            goodID: info.getMid(),
                            price: "R$" + (info.getPrice() / 100),
                            orderID: info.getOrderno(),
                        };
                        GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1023, JSON.stringify(obj));
                    }
                }
            });
        }
        deleteUserConfirmOrder(orderNo, callback) {
            let req = new Store_pb_18();
            req.setPid(GlobalData.getInstance().myPid);
            req.setTicket(GlobalData.getInstance().myTicket);
            req.setOrderno(orderNo);
            this.storeService.deleteUserConfirmOrder(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err || res.getRetcode() != 0) {
                    callback(false);
                }
                else {
                    callback(true);
                }
            });
        }
    }

    var Vip_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Common_pb);
    goog.exportSymbol('proto.Vip.GMAddExpRequest', null, global);
    goog.exportSymbol('proto.Vip.GMAddExpResponse', null, global);
    goog.exportSymbol('proto.Vip.GMQueryVipInfoRequest', null, global);
    goog.exportSymbol('proto.Vip.GMQueryVipInfoResponse', null, global);
    goog.exportSymbol('proto.Vip.GetBetAwardRequest', null, global);
    goog.exportSymbol('proto.Vip.GetVipAwardRequest', null, global);
    goog.exportSymbol('proto.Vip.QueryVipInfoRequest', null, global);
    goog.exportSymbol('proto.Vip.QueryVipLevelRequest', null, global);
    goog.exportSymbol('proto.Vip.QueryVipLevelResponse', null, global);
    goog.exportSymbol('proto.Vip.VipInfo', null, global);
    goog.exportSymbol('proto.Vip.VipLevelChangeNoti', null, global);
    proto.Vip.VipInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Vip.VipInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.VipInfo.displayName = 'proto.Vip.VipInfo';
    }
    proto.Vip.QueryVipInfoRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Vip.QueryVipInfoRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.QueryVipInfoRequest.displayName = 'proto.Vip.QueryVipInfoRequest';
    }
    proto.Vip.GetVipAwardRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Vip.GetVipAwardRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.GetVipAwardRequest.displayName = 'proto.Vip.GetVipAwardRequest';
    }
    proto.Vip.GetBetAwardRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Vip.GetBetAwardRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.GetBetAwardRequest.displayName = 'proto.Vip.GetBetAwardRequest';
    }
    proto.Vip.QueryVipLevelRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Vip.QueryVipLevelRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Vip.QueryVipLevelRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.QueryVipLevelRequest.displayName = 'proto.Vip.QueryVipLevelRequest';
    }
    proto.Vip.QueryVipLevelResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Vip.QueryVipLevelResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.QueryVipLevelResponse.displayName = 'proto.Vip.QueryVipLevelResponse';
    }
    proto.Vip.VipLevelChangeNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Vip.VipLevelChangeNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.VipLevelChangeNoti.displayName = 'proto.Vip.VipLevelChangeNoti';
    }
    proto.Vip.GMQueryVipInfoRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Vip.GMQueryVipInfoRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Vip.GMQueryVipInfoRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.GMQueryVipInfoRequest.displayName = 'proto.Vip.GMQueryVipInfoRequest';
    }
    proto.Vip.GMQueryVipInfoResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Vip.GMQueryVipInfoResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.GMQueryVipInfoResponse.displayName = 'proto.Vip.GMQueryVipInfoResponse';
    }
    proto.Vip.GMAddExpRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Vip.GMAddExpRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.GMAddExpRequest.displayName = 'proto.Vip.GMAddExpRequest';
    }
    proto.Vip.GMAddExpResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Vip.GMAddExpResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Vip.GMAddExpResponse.displayName = 'proto.Vip.GMAddExpResponse';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.VipInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.VipInfo.toObject(opt_includeInstance, this);
        };
        proto.Vip.VipInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                nviplevel: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nvipexp: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nvipbet: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                ncurbet: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                bmonthaward: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 5, false),
                ranksign: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                fails1v1: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                mapvipawardMap: (f = msg.getMapvipawardMap()) ? f.toObject(includeInstance, undefined) : [],
                mapbetawardMap: (f = msg.getMapbetawardMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.VipInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.VipInfo;
        return proto.Vip.VipInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.VipInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNviplevel(value);
                    break;
                case 2:
                    var value = (reader.readUint64());
                    msg.setNvipexp(value);
                    break;
                case 3:
                    var value = (reader.readUint64());
                    msg.setNvipbet(value);
                    break;
                case 4:
                    var value = (reader.readUint64());
                    msg.setNcurbet(value);
                    break;
                case 5:
                    var value = (reader.readBool());
                    msg.setBmonthaward(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setRanksign(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setFails1v1(value);
                    break;
                case 11:
                    var value = msg.getMapvipawardMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readBool, null, 0, false);
                    });
                    break;
                case 12:
                    var value = msg.getMapbetawardMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readBool, null, 0, false);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.VipInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.VipInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.VipInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNviplevel();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNvipexp();
        if (f !== 0) {
            writer.writeUint64(2, f);
        }
        f = message.getNvipbet();
        if (f !== 0) {
            writer.writeUint64(3, f);
        }
        f = message.getNcurbet();
        if (f !== 0) {
            writer.writeUint64(4, f);
        }
        f = message.getBmonthaward();
        if (f) {
            writer.writeBool(5, f);
        }
        f = message.getRanksign();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getFails1v1();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getMapvipawardMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeBool);
        }
        f = message.getMapbetawardMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(12, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeBool);
        }
    };
    proto.Vip.VipInfo.prototype.getNviplevel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Vip.VipInfo.prototype.setNviplevel = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Vip.VipInfo.prototype.getNvipexp = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Vip.VipInfo.prototype.setNvipexp = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Vip.VipInfo.prototype.getNvipbet = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Vip.VipInfo.prototype.setNvipbet = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Vip.VipInfo.prototype.getNcurbet = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Vip.VipInfo.prototype.setNcurbet = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Vip.VipInfo.prototype.getBmonthaward = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 5, false));
    };
    proto.Vip.VipInfo.prototype.setBmonthaward = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 5, value);
    };
    proto.Vip.VipInfo.prototype.getRanksign = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Vip.VipInfo.prototype.setRanksign = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Vip.VipInfo.prototype.getFails1v1 = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Vip.VipInfo.prototype.setFails1v1 = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Vip.VipInfo.prototype.getMapvipawardMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, null));
    };
    proto.Vip.VipInfo.prototype.clearMapvipawardMap = function () {
        this.getMapvipawardMap().clear();
        return this;
    };
    proto.Vip.VipInfo.prototype.getMapbetawardMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 12, opt_noLazyCreate, null));
    };
    proto.Vip.VipInfo.prototype.clearMapbetawardMap = function () {
        this.getMapbetawardMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.QueryVipInfoRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.QueryVipInfoRequest.toObject(opt_includeInstance, this);
        };
        proto.Vip.QueryVipInfoRequest.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.QueryVipInfoRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.QueryVipInfoRequest;
        return proto.Vip.QueryVipInfoRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.QueryVipInfoRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.QueryVipInfoRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.QueryVipInfoRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.QueryVipInfoRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.GetVipAwardRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.GetVipAwardRequest.toObject(opt_includeInstance, this);
        };
        proto.Vip.GetVipAwardRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                nviplevel: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.GetVipAwardRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.GetVipAwardRequest;
        return proto.Vip.GetVipAwardRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.GetVipAwardRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNviplevel(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.GetVipAwardRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.GetVipAwardRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.GetVipAwardRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNviplevel();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.Vip.GetVipAwardRequest.prototype.getNviplevel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Vip.GetVipAwardRequest.prototype.setNviplevel = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.GetBetAwardRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.GetBetAwardRequest.toObject(opt_includeInstance, this);
        };
        proto.Vip.GetBetAwardRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                nviplevel: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.GetBetAwardRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.GetBetAwardRequest;
        return proto.Vip.GetBetAwardRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.GetBetAwardRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNviplevel(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.GetBetAwardRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.GetBetAwardRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.GetBetAwardRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNviplevel();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.Vip.GetBetAwardRequest.prototype.getNviplevel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Vip.GetBetAwardRequest.prototype.setNviplevel = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Vip.QueryVipLevelRequest.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.QueryVipLevelRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.QueryVipLevelRequest.toObject(opt_includeInstance, this);
        };
        proto.Vip.QueryVipLevelRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                arrplayersList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.QueryVipLevelRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.QueryVipLevelRequest;
        return proto.Vip.QueryVipLevelRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.QueryVipLevelRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addArrplayers(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.QueryVipLevelRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.QueryVipLevelRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.QueryVipLevelRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getArrplayersList();
        if (f.length > 0) {
            writer.writePackedUint32(1, f);
        }
    };
    proto.Vip.QueryVipLevelRequest.prototype.getArrplayersList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Vip.QueryVipLevelRequest.prototype.setArrplayersList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Vip.QueryVipLevelRequest.prototype.addArrplayers = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Vip.QueryVipLevelRequest.prototype.clearArrplayersList = function () {
        return this.setArrplayersList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.QueryVipLevelResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.QueryVipLevelResponse.toObject(opt_includeInstance, this);
        };
        proto.Vip.QueryVipLevelResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                mapviplevelMap: (f = msg.getMapviplevelMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.QueryVipLevelResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.QueryVipLevelResponse;
        return proto.Vip.QueryVipLevelResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.QueryVipLevelResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = msg.getMapviplevelMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readUint32, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.QueryVipLevelResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.QueryVipLevelResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.QueryVipLevelResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getMapviplevelMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeUint32);
        }
    };
    proto.Vip.QueryVipLevelResponse.prototype.getMapviplevelMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate, null));
    };
    proto.Vip.QueryVipLevelResponse.prototype.clearMapviplevelMap = function () {
        this.getMapviplevelMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.VipLevelChangeNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.VipLevelChangeNoti.toObject(opt_includeInstance, this);
        };
        proto.Vip.VipLevelChangeNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                noldlevel: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nnewlevel: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.VipLevelChangeNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.VipLevelChangeNoti;
        return proto.Vip.VipLevelChangeNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.VipLevelChangeNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNoldlevel(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNnewlevel(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.VipLevelChangeNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.VipLevelChangeNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.VipLevelChangeNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNoldlevel();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNnewlevel();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
    };
    proto.Vip.VipLevelChangeNoti.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Vip.VipLevelChangeNoti.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Vip.VipLevelChangeNoti.prototype.getNoldlevel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Vip.VipLevelChangeNoti.prototype.setNoldlevel = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Vip.VipLevelChangeNoti.prototype.getNnewlevel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Vip.VipLevelChangeNoti.prototype.setNnewlevel = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Vip.GMQueryVipInfoRequest.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.GMQueryVipInfoRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.GMQueryVipInfoRequest.toObject(opt_includeInstance, this);
        };
        proto.Vip.GMQueryVipInfoRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                arrpidList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.GMQueryVipInfoRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.GMQueryVipInfoRequest;
        return proto.Vip.GMQueryVipInfoRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.GMQueryVipInfoRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addArrpid(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.GMQueryVipInfoRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.GMQueryVipInfoRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.GMQueryVipInfoRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getArrpidList();
        if (f.length > 0) {
            writer.writePackedUint32(1, f);
        }
    };
    proto.Vip.GMQueryVipInfoRequest.prototype.getArrpidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Vip.GMQueryVipInfoRequest.prototype.setArrpidList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Vip.GMQueryVipInfoRequest.prototype.addArrpid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Vip.GMQueryVipInfoRequest.prototype.clearArrpidList = function () {
        return this.setArrpidList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.GMQueryVipInfoResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.GMQueryVipInfoResponse.toObject(opt_includeInstance, this);
        };
        proto.Vip.GMQueryVipInfoResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                mapinfoMap: (f = msg.getMapinfoMap()) ? f.toObject(includeInstance, proto.Vip.VipInfo.toObject) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.GMQueryVipInfoResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.GMQueryVipInfoResponse;
        return proto.Vip.GMQueryVipInfoResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.GMQueryVipInfoResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = msg.getMapinfoMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Vip.VipInfo.deserializeBinaryFromReader, 0, new proto.Vip.VipInfo());
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.GMQueryVipInfoResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.GMQueryVipInfoResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.GMQueryVipInfoResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getMapinfoMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Vip.VipInfo.serializeBinaryToWriter);
        }
    };
    proto.Vip.GMQueryVipInfoResponse.prototype.getMapinfoMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate, proto.Vip.VipInfo));
    };
    proto.Vip.GMQueryVipInfoResponse.prototype.clearMapinfoMap = function () {
        this.getMapinfoMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.GMAddExpRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.GMAddExpRequest.toObject(opt_includeInstance, this);
        };
        proto.Vip.GMAddExpRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                mapbetMap: (f = msg.getMapbetMap()) ? f.toObject(includeInstance, undefined) : [],
                viplv: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.GMAddExpRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.GMAddExpRequest;
        return proto.Vip.GMAddExpRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.GMAddExpRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = msg.getMapbetMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readUint64, null, 0, 0);
                    });
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setViplv(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.GMAddExpRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.GMAddExpRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.GMAddExpRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getMapbetMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeUint64);
        }
        f = message.getViplv();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Vip.GMAddExpRequest.prototype.getMapbetMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate, null));
    };
    proto.Vip.GMAddExpRequest.prototype.clearMapbetMap = function () {
        this.getMapbetMap().clear();
        return this;
    };
    proto.Vip.GMAddExpRequest.prototype.getViplv = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Vip.GMAddExpRequest.prototype.setViplv = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Vip.GMAddExpResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Vip.GMAddExpResponse.toObject(opt_includeInstance, this);
        };
        proto.Vip.GMAddExpResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                mapresultMap: (f = msg.getMapresultMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Vip.GMAddExpResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Vip.GMAddExpResponse;
        return proto.Vip.GMAddExpResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Vip.GMAddExpResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = msg.getMapresultMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readEnum, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Vip.GMAddExpResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Vip.GMAddExpResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Vip.GMAddExpResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getMapresultMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeEnum);
        }
    };
    proto.Vip.GMAddExpResponse.prototype.getMapresultMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate, null));
    };
    proto.Vip.GMAddExpResponse.prototype.clearMapresultMap = function () {
        this.getMapresultMap().clear();
        return this;
    };
    goog.object.extend(exports, proto.Vip);

    });
    var Vip_pb_1 = Vip_pb.QueryVipInfoRequest;
    var Vip_pb_2 = Vip_pb.QueryVipLevelRequest;
    var Vip_pb_3 = Vip_pb.VipInfo;
    var Vip_pb_4 = Vip_pb.GetBetAwardRequest;
    var Vip_pb_5 = Vip_pb.GetVipAwardRequest;
    var Vip_pb_6 = Vip_pb.VipLevelChangeNoti;
    var Vip_pb_7 = Vip_pb.GMQueryVipInfoRequest;
    var Vip_pb_8 = Vip_pb.GMQueryVipInfoResponse;
    var Vip_pb_9 = Vip_pb.GMAddExpRequest;
    var Vip_pb_10 = Vip_pb.GMAddExpResponse;

    const grpc$8 = {};
    grpc$8.web = grpcWeb;

    const proto$9 = {};
    proto$9.Vip = Vip_pb;
    proto$9.Vip.VipServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$8.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$9.Vip.VipServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$8.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_VipService_QueryVipInfo = new grpc$8.web.MethodDescriptor('/Vip.VipService/QueryVipInfo', grpc$8.web.MethodType.UNARY, proto$9.Vip.QueryVipInfoRequest, proto$9.Vip.VipInfo, function (request) {
        return request.serializeBinary();
    }, proto$9.Vip.VipInfo.deserializeBinary);
    proto$9.Vip.VipServiceClient.prototype.queryVipInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Vip.VipService/QueryVipInfo', request, metadata || {}, methodDescriptor_VipService_QueryVipInfo, callback);
        };
    proto$9.Vip.VipServicePromiseClient.prototype.queryVipInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Vip.VipService/QueryVipInfo', request, metadata || {}, methodDescriptor_VipService_QueryVipInfo);
        };
    const methodDescriptor_VipService_GetVipAward = new grpc$8.web.MethodDescriptor('/Vip.VipService/GetVipAward', grpc$8.web.MethodType.UNARY, proto$9.Vip.GetVipAwardRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$9.Vip.VipServiceClient.prototype.getVipAward =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Vip.VipService/GetVipAward', request, metadata || {}, methodDescriptor_VipService_GetVipAward, callback);
        };
    proto$9.Vip.VipServicePromiseClient.prototype.getVipAward =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Vip.VipService/GetVipAward', request, metadata || {}, methodDescriptor_VipService_GetVipAward);
        };
    const methodDescriptor_VipService_GetBetAward = new grpc$8.web.MethodDescriptor('/Vip.VipService/GetBetAward', grpc$8.web.MethodType.UNARY, proto$9.Vip.GetBetAwardRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$9.Vip.VipServiceClient.prototype.getBetAward =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Vip.VipService/GetBetAward', request, metadata || {}, methodDescriptor_VipService_GetBetAward, callback);
        };
    proto$9.Vip.VipServicePromiseClient.prototype.getBetAward =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Vip.VipService/GetBetAward', request, metadata || {}, methodDescriptor_VipService_GetBetAward);
        };
    const methodDescriptor_VipService_QueryVipLevel = new grpc$8.web.MethodDescriptor('/Vip.VipService/QueryVipLevel', grpc$8.web.MethodType.UNARY, proto$9.Vip.QueryVipLevelRequest, proto$9.Vip.QueryVipLevelResponse, function (request) {
        return request.serializeBinary();
    }, proto$9.Vip.QueryVipLevelResponse.deserializeBinary);
    proto$9.Vip.VipServiceClient.prototype.queryVipLevel =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Vip.VipService/QueryVipLevel', request, metadata || {}, methodDescriptor_VipService_QueryVipLevel, callback);
        };
    proto$9.Vip.VipServicePromiseClient.prototype.queryVipLevel =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Vip.VipService/QueryVipLevel', request, metadata || {}, methodDescriptor_VipService_QueryVipLevel);
        };
    const methodDescriptor_VipService_GMQueryVipInfo = new grpc$8.web.MethodDescriptor('/Vip.VipService/GMQueryVipInfo', grpc$8.web.MethodType.UNARY, proto$9.Vip.GMQueryVipInfoRequest, proto$9.Vip.GMQueryVipInfoResponse, function (request) {
        return request.serializeBinary();
    }, proto$9.Vip.GMQueryVipInfoResponse.deserializeBinary);
    proto$9.Vip.VipServiceClient.prototype.gMQueryVipInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Vip.VipService/GMQueryVipInfo', request, metadata || {}, methodDescriptor_VipService_GMQueryVipInfo, callback);
        };
    proto$9.Vip.VipServicePromiseClient.prototype.gMQueryVipInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Vip.VipService/GMQueryVipInfo', request, metadata || {}, methodDescriptor_VipService_GMQueryVipInfo);
        };
    const methodDescriptor_VipService_GMAddExp = new grpc$8.web.MethodDescriptor('/Vip.VipService/GMAddExp', grpc$8.web.MethodType.UNARY, proto$9.Vip.GMAddExpRequest, proto$9.Vip.GMAddExpResponse, function (request) {
        return request.serializeBinary();
    }, proto$9.Vip.GMAddExpResponse.deserializeBinary);
    proto$9.Vip.VipServiceClient.prototype.gMAddExp =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Vip.VipService/GMAddExp', request, metadata || {}, methodDescriptor_VipService_GMAddExp, callback);
        };
    proto$9.Vip.VipServicePromiseClient.prototype.gMAddExp =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Vip.VipService/GMAddExp', request, metadata || {}, methodDescriptor_VipService_GMAddExp);
        };
    var Vip_grpc_web_pb = proto$9.Vip;
    var Vip_grpc_web_pb_1 = Vip_grpc_web_pb.VipServiceClient;

    class VipManager extends Singleton {
        constructor() {
            super();
            this.m_oldLevel = -1;
            this.m_oldExp = -1;
            this.m_vipLevelList = new Array();
            this.m_playerVipInfo = new PlayerVipData();
            this.m_oldLevel = -1;
            this.m_vipService = new Vip_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.m_otherPlayer = new Array();
            this.init();
        }
        init() {
            let l_json = Laya.loader.getRes(LobbyRes.VIP_LEVEL);
            for (const key in l_json) {
                var l_value = l_json[key];
                let l_data = new VipData();
                l_data.level = Number(key);
                l_data.exp = l_value["exp"];
                l_data.bet = l_value["bet"];
                l_data.need = l_value["need"];
                l_data.level_award = l_value["level_award"];
                l_data.daily_award = l_value["daily_award"];
                l_data.day_award = l_value["day_award"];
                l_data.roll = l_value["roll"];
                l_data.rate = l_value["rate"];
                l_data.withdraw_times = l_value["withdraw_times"];
                l_data.withdraw_amount = l_value["withdraw_amount"];
                l_data.describe = l_value["describe"];
                l_data.describeList;
                let l_arr = l_data.describe.split("|");
                for (let i = 0; i < l_arr.length; i++) {
                    if (l_arr[i]) {
                        let l_strArr = l_arr[i].split("&");
                        l_data.describeList[i] = l_strArr;
                    }
                }
                this.m_vipLevelList.push(l_data);
            }
        }
        getPlayerVipInfo(callback) {
            let req = new Vip_pb_1();
            this.m_vipService.queryVipInfo(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (callback) {
                    callback(ack);
                }
                else {
                    this.setPlayerVipInfo(ack);
                }
            });
        }
        setPlayerVipInfo(p_vipInfo) {
            if (p_vipInfo) {
                this.m_playerVipInfo.pid = GlobalData.getInstance().myPid;
                this.m_playerVipInfo.nVipLevel = p_vipInfo.getNviplevel();
                this.m_playerVipInfo.nVipExp = p_vipInfo.getNvipexp();
                this.m_playerVipInfo.nVipBet = p_vipInfo.getNvipbet();
                this.m_playerVipInfo.nCurBet = p_vipInfo.getNcurbet();
                this.m_playerVipInfo.nRankSign = p_vipInfo.getRanksign();
                this.m_playerVipInfo.nFails1v1 = p_vipInfo.getFails1v1();
                this.m_playerVipInfo.mapVipAward = new Map();
                p_vipInfo.getMapvipawardMap().forEach((entry, key) => {
                    this.m_playerVipInfo.mapVipAward.set(key, entry);
                });
                this.m_playerVipInfo.mapBetAward = new Map();
                p_vipInfo.getMapbetawardMap().forEach((entry, key) => {
                    this.m_playerVipInfo.mapBetAward.set(key, entry);
                });
                this.m_playerVipInfo.bDailyAward = p_vipInfo.getBmonthaward();
                this.m_playerVipInfo.vipData = this.getVipData(this.m_playerVipInfo.nVipLevel);
            }
            let l_ischange = false;
            if (this.m_oldLevel < this.m_playerVipInfo.nVipLevel) {
                if (this.m_oldLevel != -1) {
                    DataStore.getInstance().clearGoods();
                }
                this.m_oldLevel = this.m_playerVipInfo.nVipLevel;
                this.m_oldExp = this.m_playerVipInfo.nVipExp;
                l_ischange = true;
            }
            if (l_ischange == false && this.m_oldExp < this.m_playerVipInfo.nVipExp) {
            }
            EventManager.getInstance().emit(LobbyDefine.VIP_INFO_NOTI, [this.m_playerVipInfo, l_ischange]);
        }
        openVipWindow(isYes) {
            if (isYes) {
                UploadManager.getInstance().pageAction("大厅", "VIP标志", "查看VIP页面");
                GlobalData.getInstance().lobbyScene.showVipHandler();
            }
        }
        get playerVipInfo() {
            return this.m_playerVipInfo;
        }
        getOtherPlayerVip(p_idList, callback) {
            let req = new Vip_pb_2();
            req.setArrplayersList(p_idList);
            this.m_vipService.queryVipLevel(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err) {
                    CC.Log('queryGamesData error: ', err);
                    callback && callback(null);
                    return;
                }
                let l_map = ack.getMapviplevelMap();
                l_map.forEach((entry, key) => {
                    let l_otherPlayerVip = new PlayerVipData();
                    l_otherPlayerVip.pid = key;
                    l_otherPlayerVip.nVipLevel = entry;
                    l_otherPlayerVip.vipData = this.getVipData(entry);
                    this.m_otherPlayer.push(l_otherPlayerVip);
                });
                callback && callback(this.m_otherPlayer);
            });
        }
        getVipData(p_level) {
            for (let i = 0; i < this.m_vipLevelList.length; i++) {
                if (this.m_vipLevelList[i].level == p_level) {
                    return this.m_vipLevelList[i];
                }
            }
        }
        getVipList() {
            return this.m_vipLevelList;
        }
        getDailyAward(p_level, callback) {
            let l_rep = new Vip_pb_4();
            l_rep.setNviplevel(p_level);
            this.m_vipService.getBetAward(l_rep, GlobalData.getInstance().baseMeta, (err, ack) => {
                console.log("getBetAward  ", ack.toObject());
                callback && callback(ack.getNret());
            });
        }
        getVipAward(p_level, callback) {
            let l_rep = new Vip_pb_5();
            l_rep.setNviplevel(p_level);
            this.m_vipService.getVipAward(l_rep, GlobalData.getInstance().baseMeta, (err, ack) => {
                console.log("getVipAward  ", ack.toObject());
                if (err) {
                    CC.Log('queryGamesData error: ', err);
                    callback && callback(false);
                    return;
                }
                else {
                    callback && callback(true);
                }
            });
        }
        gettPrivilegeTipsChange(p_lastVipData, p_nextVipData) {
            let l_changeList = [];
            for (let i = 0; i < p_nextVipData.describeList.length; i++) {
                let l_changeData = {
                    'new': false,
                    'up': false,
                    'data': p_nextVipData.describeList[i],
                };
                let l_isNew = true;
                if (p_lastVipData) {
                    for (let j = 0; j < p_lastVipData.describeList.length; j++) {
                        let l_title = p_nextVipData.describeList[i][0] + "";
                        let l_title1 = p_lastVipData.describeList[j][0] + "";
                        if (l_title == l_title1) {
                            l_isNew = false;
                            let l_str = p_lastVipData.describeList[j][1] + "";
                            let l_str1 = p_nextVipData.describeList[i][1] + "";
                            let l_now = Number(l_str.replace(/[^0-9]/ig, ""));
                            let l_next = Number(l_str1.replace(/[^0-9]/ig, ""));
                            if (l_now < l_next) {
                                l_changeData = {
                                    'new': false,
                                    'up': true,
                                    'data': p_nextVipData.describeList[i],
                                };
                            }
                            break;
                        }
                    }
                    if (l_isNew) {
                        l_changeData = {
                            'new': true,
                            'up': false,
                            'data': p_nextVipData.describeList[i],
                        };
                    }
                }
                l_changeList.push(l_changeData);
            }
            return l_changeList.sort(this.sortPrivilegeTips);
        }
        sortPrivilegeTips(p_a, p_b) {
            if (p_b['new'] && p_a['new']) {
                return 0;
            }
            if (p_a['new']) {
                return -1;
            }
            if (p_b['new']) {
                return 1;
            }
            if (p_a['up']) {
                return -1;
            }
            if (p_b['up']) {
                return 1;
            }
            return 0;
        }
        getVipCharityMultiple() {
            if (!this.m_playerVipInfo || !this.m_playerVipInfo.vipData || this.m_playerVipInfo.nVipLevel < 3) {
                return 1;
            }
            let l_str = this.m_playerVipInfo.vipData.describeList[2][1] + "";
            let multiple = Number(l_str.replace(/[^0-9]/ig, ""));
            return multiple;
        }
        getVipRewardMultiple() {
            if (!this.m_playerVipInfo || !this.m_playerVipInfo.vipData || this.m_playerVipInfo.nVipLevel < 2) {
                return 1;
            }
            let l_str = this.m_playerVipInfo.vipData.describeList[1][1] + "";
            let multiple = Number(l_str.replace(/[^0-9]/ig, ""));
            return multiple;
        }
        clearData() {
            this.m_playerVipInfo = new PlayerVipData();
            this.m_oldLevel = -1;
        }
    }

    var OutInvite_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Invite.AwardAck', null, global);
    goog.exportSymbol('proto.Invite.AwardGet', null, global);
    goog.exportSymbol('proto.Invite.Bind', null, global);
    goog.exportSymbol('proto.Invite.BindAck', null, global);
    goog.exportSymbol('proto.Invite.BindGet', null, global);
    goog.exportSymbol('proto.Invite.InfoAck', null, global);
    goog.exportSymbol('proto.Invite.InfoGet', null, global);
    goog.exportSymbol('proto.Invite.InviteAward', null, global);
    goog.exportSymbol('proto.Invite.QueryAck', null, global);
    goog.exportSymbol('proto.Invite.QueryGet', null, global);
    goog.exportSymbol('proto.Invite.Recharge', null, global);
    goog.exportSymbol('proto.Invite.WheelAck', null, global);
    goog.exportSymbol('proto.Invite.WheelGet', null, global);
    proto.Invite.InviteAward = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.InviteAward, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.InviteAward.displayName = 'proto.Invite.InviteAward';
    }
    proto.Invite.Bind = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.Bind, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.Bind.displayName = 'proto.Invite.Bind';
    }
    proto.Invite.Recharge = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.Recharge, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.Recharge.displayName = 'proto.Invite.Recharge';
    }
    proto.Invite.QueryGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.QueryGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.QueryGet.displayName = 'proto.Invite.QueryGet';
    }
    proto.Invite.QueryAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Invite.QueryAck.repeatedFields_, null);
    };
    goog.inherits(proto.Invite.QueryAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.QueryAck.displayName = 'proto.Invite.QueryAck';
    }
    proto.Invite.BindGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.BindGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.BindGet.displayName = 'proto.Invite.BindGet';
    }
    proto.Invite.BindAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.BindAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.BindAck.displayName = 'proto.Invite.BindAck';
    }
    proto.Invite.InfoGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.InfoGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.InfoGet.displayName = 'proto.Invite.InfoGet';
    }
    proto.Invite.InfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Invite.InfoAck.repeatedFields_, null);
    };
    goog.inherits(proto.Invite.InfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.InfoAck.displayName = 'proto.Invite.InfoAck';
    }
    proto.Invite.AwardGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.AwardGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.AwardGet.displayName = 'proto.Invite.AwardGet';
    }
    proto.Invite.AwardAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.AwardAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.AwardAck.displayName = 'proto.Invite.AwardAck';
    }
    proto.Invite.WheelGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.WheelGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.WheelGet.displayName = 'proto.Invite.WheelGet';
    }
    proto.Invite.WheelAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Invite.WheelAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Invite.WheelAck.displayName = 'proto.Invite.WheelAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.InviteAward.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.InviteAward.toObject(opt_includeInstance, this);
        };
        proto.Invite.InviteAward.toObject = function (includeInstance, msg) {
            var f, obj = {
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                value: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                min: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                max: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.InviteAward.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.InviteAward;
        return proto.Invite.InviteAward.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.InviteAward.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setValue(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setItemnum(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setMin(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setMax(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.InviteAward.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.InviteAward.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.InviteAward.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getValue();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getMin();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getMax();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
    };
    proto.Invite.InviteAward.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.InviteAward.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.InviteAward.prototype.getValue = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Invite.InviteAward.prototype.setValue = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Invite.InviteAward.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Invite.InviteAward.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Invite.InviteAward.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Invite.InviteAward.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Invite.InviteAward.prototype.getMin = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Invite.InviteAward.prototype.setMin = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Invite.InviteAward.prototype.getMax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Invite.InviteAward.prototype.setMax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.Bind.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.Bind.toObject(opt_includeInstance, this);
        };
        proto.Invite.Bind.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ppid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                time: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                count: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                amount: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                innum1: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                innum2: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                adall1: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                adall2: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                adcur1: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                adcur2: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                active: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                played: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0),
                wheels: googleProtobuf.Message.getFieldWithDefault(msg, 14, 0),
                whsmax: googleProtobuf.Message.getFieldWithDefault(msg, 15, 0),
                whsall: googleProtobuf.Message.getFieldWithDefault(msg, 16, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.Bind.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.Bind;
        return proto.Invite.Bind.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.Bind.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setPpid(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setTime(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setCount(value);
                    break;
                case 5:
                    var value = (reader.readSint64());
                    msg.setAmount(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setInnum1(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setInnum2(value);
                    break;
                case 8:
                    var value = (reader.readSint64());
                    msg.setAdall1(value);
                    break;
                case 9:
                    var value = (reader.readSint64());
                    msg.setAdall2(value);
                    break;
                case 10:
                    var value = (reader.readSint64());
                    msg.setAdcur1(value);
                    break;
                case 11:
                    var value = (reader.readSint64());
                    msg.setAdcur2(value);
                    break;
                case 12:
                    var value = (reader.readSint32());
                    msg.setActive(value);
                    break;
                case 13:
                    var value = (reader.readSint32());
                    msg.setPlayed(value);
                    break;
                case 14:
                    var value = (reader.readSint32());
                    msg.setWheels(value);
                    break;
                case 15:
                    var value = (reader.readSint32());
                    msg.setWhsmax(value);
                    break;
                case 16:
                    var value = (reader.readSint32());
                    msg.setWhsall(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.Bind.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.Bind.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.Bind.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getPpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getTime();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getCount();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getAmount();
        if (f !== 0) {
            writer.writeSint64(5, f);
        }
        f = message.getInnum1();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getInnum2();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getAdall1();
        if (f !== 0) {
            writer.writeSint64(8, f);
        }
        f = message.getAdall2();
        if (f !== 0) {
            writer.writeSint64(9, f);
        }
        f = message.getAdcur1();
        if (f !== 0) {
            writer.writeSint64(10, f);
        }
        f = message.getAdcur2();
        if (f !== 0) {
            writer.writeSint64(11, f);
        }
        f = message.getActive();
        if (f !== 0) {
            writer.writeSint32(12, f);
        }
        f = message.getPlayed();
        if (f !== 0) {
            writer.writeSint32(13, f);
        }
        f = message.getWheels();
        if (f !== 0) {
            writer.writeSint32(14, f);
        }
        f = message.getWhsmax();
        if (f !== 0) {
            writer.writeSint32(15, f);
        }
        f = message.getWhsall();
        if (f !== 0) {
            writer.writeSint32(16, f);
        }
    };
    proto.Invite.Bind.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.Bind.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.Bind.prototype.getPpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Invite.Bind.prototype.setPpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Invite.Bind.prototype.getTime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Invite.Bind.prototype.setTime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Invite.Bind.prototype.getCount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Invite.Bind.prototype.setCount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Invite.Bind.prototype.getAmount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Invite.Bind.prototype.setAmount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Invite.Bind.prototype.getInnum1 = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Invite.Bind.prototype.setInnum1 = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Invite.Bind.prototype.getInnum2 = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Invite.Bind.prototype.setInnum2 = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Invite.Bind.prototype.getAdall1 = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Invite.Bind.prototype.setAdall1 = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Invite.Bind.prototype.getAdall2 = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Invite.Bind.prototype.setAdall2 = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Invite.Bind.prototype.getAdcur1 = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Invite.Bind.prototype.setAdcur1 = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Invite.Bind.prototype.getAdcur2 = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Invite.Bind.prototype.setAdcur2 = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Invite.Bind.prototype.getActive = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Invite.Bind.prototype.setActive = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.Invite.Bind.prototype.getPlayed = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
    };
    proto.Invite.Bind.prototype.setPlayed = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 13, value);
    };
    proto.Invite.Bind.prototype.getWheels = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 14, 0));
    };
    proto.Invite.Bind.prototype.setWheels = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 14, value);
    };
    proto.Invite.Bind.prototype.getWhsmax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 15, 0));
    };
    proto.Invite.Bind.prototype.setWhsmax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 15, value);
    };
    proto.Invite.Bind.prototype.getWhsall = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 16, 0));
    };
    proto.Invite.Bind.prototype.setWhsall = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 16, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.Recharge.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.Recharge.toObject(opt_includeInstance, this);
        };
        proto.Invite.Recharge.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ppid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                gpid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                amount: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                day: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                adnum: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.Recharge.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.Recharge;
        return proto.Invite.Recharge.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.Recharge.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setPpid(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setGpid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setAmount(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setDay(value);
                    break;
                case 11:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 12:
                    var value = (reader.readSint64());
                    msg.setAdnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.Recharge.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.Recharge.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.Recharge.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getPpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getGpid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getAmount();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getDay();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(11, f);
        }
        f = message.getAdnum();
        if (f !== 0) {
            writer.writeSint64(12, f);
        }
    };
    proto.Invite.Recharge.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.Recharge.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.Recharge.prototype.getPpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Invite.Recharge.prototype.setPpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Invite.Recharge.prototype.getGpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Invite.Recharge.prototype.setGpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Invite.Recharge.prototype.getAmount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Invite.Recharge.prototype.setAmount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Invite.Recharge.prototype.getDay = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Invite.Recharge.prototype.setDay = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Invite.Recharge.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Invite.Recharge.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Invite.Recharge.prototype.getAdnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Invite.Recharge.prototype.setAdnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.QueryGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.QueryGet.toObject(opt_includeInstance, this);
        };
        proto.Invite.QueryGet.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.QueryGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.QueryGet;
        return proto.Invite.QueryGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.QueryGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.QueryGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.QueryGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.QueryGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    proto.Invite.QueryAck.repeatedFields_ = [31];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.QueryAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.QueryAck.toObject(opt_includeInstance, this);
        };
        proto.Invite.QueryAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                info: (f = msg.getInfo()) && proto.Invite.Bind.toObject(includeInstance, f),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.Invite.InviteAward.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.QueryAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.QueryAck;
        return proto.Invite.QueryAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.QueryAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = new proto.Invite.Bind;
                    reader.readMessage(value, proto.Invite.Bind.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                case 31:
                    var value = new proto.Invite.InviteAward;
                    reader.readMessage(value, proto.Invite.InviteAward.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.QueryAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.QueryAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.QueryAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(2, f, proto.Invite.Bind.serializeBinaryToWriter);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(31, f, proto.Invite.InviteAward.serializeBinaryToWriter);
        }
    };
    proto.Invite.QueryAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.QueryAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.QueryAck.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Invite.Bind, 2));
    };
    proto.Invite.QueryAck.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Invite.QueryAck.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Invite.QueryAck.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Invite.QueryAck.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Invite.InviteAward, 31));
    };
    proto.Invite.QueryAck.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 31, value);
    };
    proto.Invite.QueryAck.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 31, opt_value, proto.Invite.InviteAward, opt_index);
    };
    proto.Invite.QueryAck.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.BindGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.BindGet.toObject(opt_includeInstance, this);
        };
        proto.Invite.BindGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                ppid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.BindGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.BindGet;
        return proto.Invite.BindGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.BindGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.BindGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.BindGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.BindGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.Invite.BindGet.prototype.getPpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.BindGet.prototype.setPpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.BindAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.BindAck.toObject(opt_includeInstance, this);
        };
        proto.Invite.BindAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                info: (f = msg.getInfo()) && proto.Invite.Bind.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.BindAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.BindAck;
        return proto.Invite.BindAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.BindAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = new proto.Invite.Bind;
                    reader.readMessage(value, proto.Invite.Bind.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.BindAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.BindAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.BindAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(2, f, proto.Invite.Bind.serializeBinaryToWriter);
        }
    };
    proto.Invite.BindAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.BindAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.BindAck.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Invite.Bind, 2));
    };
    proto.Invite.BindAck.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Invite.BindAck.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Invite.BindAck.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.InfoGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.InfoGet.toObject(opt_includeInstance, this);
        };
        proto.Invite.InfoGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                type: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                page: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                num: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                dayb: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                daye: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.InfoGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.InfoGet;
        return proto.Invite.InfoGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.InfoGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setNum(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setDayb(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setDaye(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.InfoGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.InfoGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.InfoGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getNum();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getDayb();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getDaye();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
    };
    proto.Invite.InfoGet.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.InfoGet.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.InfoGet.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Invite.InfoGet.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Invite.InfoGet.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Invite.InfoGet.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Invite.InfoGet.prototype.getDayb = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Invite.InfoGet.prototype.setDayb = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Invite.InfoGet.prototype.getDaye = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Invite.InfoGet.prototype.setDaye = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Invite.InfoAck.repeatedFields_ = [11, 12];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.InfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.InfoAck.toObject(opt_includeInstance, this);
        };
        proto.Invite.InfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                page: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                num: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                dayb: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                daye: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                array1List: googleProtobuf.Message.toObjectList(msg.getArray1List(), proto.Invite.Recharge.toObject, includeInstance),
                array2List: googleProtobuf.Message.toObjectList(msg.getArray2List(), proto.Invite.Recharge.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.InfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.InfoAck;
        return proto.Invite.InfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.InfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setNum(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setDayb(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setDaye(value);
                    break;
                case 11:
                    var value = new proto.Invite.Recharge;
                    reader.readMessage(value, proto.Invite.Recharge.deserializeBinaryFromReader);
                    msg.addArray1(value);
                    break;
                case 12:
                    var value = new proto.Invite.Recharge;
                    reader.readMessage(value, proto.Invite.Recharge.deserializeBinaryFromReader);
                    msg.addArray2(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.InfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.InfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.InfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getNum();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getDayb();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getDaye();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getArray1List();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.Invite.Recharge.serializeBinaryToWriter);
        }
        f = message.getArray2List();
        if (f.length > 0) {
            writer.writeRepeatedMessage(12, f, proto.Invite.Recharge.serializeBinaryToWriter);
        }
    };
    proto.Invite.InfoAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.InfoAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.InfoAck.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Invite.InfoAck.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Invite.InfoAck.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Invite.InfoAck.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Invite.InfoAck.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Invite.InfoAck.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Invite.InfoAck.prototype.getDayb = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Invite.InfoAck.prototype.setDayb = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Invite.InfoAck.prototype.getDaye = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Invite.InfoAck.prototype.setDaye = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Invite.InfoAck.prototype.getArray1List = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Invite.Recharge, 11));
    };
    proto.Invite.InfoAck.prototype.setArray1List = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Invite.InfoAck.prototype.addArray1 = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Invite.Recharge, opt_index);
    };
    proto.Invite.InfoAck.prototype.clearArray1List = function () {
        return this.setArray1List([]);
    };
    proto.Invite.InfoAck.prototype.getArray2List = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Invite.Recharge, 12));
    };
    proto.Invite.InfoAck.prototype.setArray2List = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 12, value);
    };
    proto.Invite.InfoAck.prototype.addArray2 = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.Invite.Recharge, opt_index);
    };
    proto.Invite.InfoAck.prototype.clearArray2List = function () {
        return this.setArray2List([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.AwardGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.AwardGet.toObject(opt_includeInstance, this);
        };
        proto.Invite.AwardGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                outnum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.AwardGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.AwardGet;
        return proto.Invite.AwardGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.AwardGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setOutnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.AwardGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.AwardGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.AwardGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getOutnum();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
    };
    proto.Invite.AwardGet.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.AwardGet.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.AwardGet.prototype.getOutnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Invite.AwardGet.prototype.setOutnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.AwardAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.AwardAck.toObject(opt_includeInstance, this);
        };
        proto.Invite.AwardAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                adnum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                info: (f = msg.getInfo()) && proto.Invite.Bind.toObject(includeInstance, f),
                outnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.AwardAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.AwardAck;
        return proto.Invite.AwardAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.AwardAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint64());
                    msg.setAdnum(value);
                    break;
                case 3:
                    var value = new proto.Invite.Bind;
                    reader.readMessage(value, proto.Invite.Bind.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setOutnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.AwardAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.AwardAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.AwardAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAdnum();
        if (f !== 0) {
            writer.writeSint64(2, f);
        }
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(3, f, proto.Invite.Bind.serializeBinaryToWriter);
        }
        f = message.getOutnum();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
    };
    proto.Invite.AwardAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.AwardAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.AwardAck.prototype.getAdnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Invite.AwardAck.prototype.setAdnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Invite.AwardAck.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Invite.Bind, 3));
    };
    proto.Invite.AwardAck.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Invite.AwardAck.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Invite.AwardAck.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    proto.Invite.AwardAck.prototype.getOutnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Invite.AwardAck.prototype.setOutnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.WheelGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.WheelGet.toObject(opt_includeInstance, this);
        };
        proto.Invite.WheelGet.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.WheelGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.WheelGet;
        return proto.Invite.WheelGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.WheelGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.WheelGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.WheelGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.WheelGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Invite.WheelAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Invite.WheelAck.toObject(opt_includeInstance, this);
        };
        proto.Invite.WheelAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                info: (f = msg.getInfo()) && proto.Invite.Bind.toObject(includeInstance, f),
                adnum: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Invite.WheelAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Invite.WheelAck;
        return proto.Invite.WheelAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Invite.WheelAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = new proto.Invite.Bind;
                    reader.readMessage(value, proto.Invite.Bind.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setAdnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Invite.WheelAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Invite.WheelAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Invite.WheelAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(2, f, proto.Invite.Bind.serializeBinaryToWriter);
        }
        f = message.getAdnum();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
    };
    proto.Invite.WheelAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Invite.WheelAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Invite.WheelAck.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Invite.Bind, 2));
    };
    proto.Invite.WheelAck.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Invite.WheelAck.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Invite.WheelAck.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Invite.WheelAck.prototype.getAdnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Invite.WheelAck.prototype.setAdnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    goog.object.extend(exports, proto.Invite);

    });
    var OutInvite_pb_1 = OutInvite_pb.QueryGet;
    var OutInvite_pb_2 = OutInvite_pb.QueryAck;
    var OutInvite_pb_3 = OutInvite_pb.BindGet;
    var OutInvite_pb_4 = OutInvite_pb.BindAck;
    var OutInvite_pb_5 = OutInvite_pb.InfoGet;
    var OutInvite_pb_6 = OutInvite_pb.InfoAck;
    var OutInvite_pb_7 = OutInvite_pb.AwardGet;
    var OutInvite_pb_8 = OutInvite_pb.AwardAck;
    var OutInvite_pb_9 = OutInvite_pb.WheelGet;
    var OutInvite_pb_10 = OutInvite_pb.WheelAck;

    const grpc$9 = {};
    grpc$9.web = grpcWeb;
    const proto$a = {};
    proto$a.Invite = OutInvite_pb;
    proto$a.Invite.OutInviteServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$9.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$a.Invite.OutInviteServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$9.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_OutInviteService_Query = new grpc$9.web.MethodDescriptor('/Invite.OutInviteService/Query', grpc$9.web.MethodType.UNARY, proto$a.Invite.QueryGet, proto$a.Invite.QueryAck, function (request) {
        return request.serializeBinary();
    }, proto$a.Invite.QueryAck.deserializeBinary);
    proto$a.Invite.OutInviteServiceClient.prototype.query =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Invite.OutInviteService/Query', request, metadata || {}, methodDescriptor_OutInviteService_Query, callback);
        };
    proto$a.Invite.OutInviteServicePromiseClient.prototype.query =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Invite.OutInviteService/Query', request, metadata || {}, methodDescriptor_OutInviteService_Query);
        };
    const methodDescriptor_OutInviteService_Bind = new grpc$9.web.MethodDescriptor('/Invite.OutInviteService/Bind', grpc$9.web.MethodType.UNARY, proto$a.Invite.BindGet, proto$a.Invite.BindAck, function (request) {
        return request.serializeBinary();
    }, proto$a.Invite.BindAck.deserializeBinary);
    proto$a.Invite.OutInviteServiceClient.prototype.bind =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Invite.OutInviteService/Bind', request, metadata || {}, methodDescriptor_OutInviteService_Bind, callback);
        };
    proto$a.Invite.OutInviteServicePromiseClient.prototype.bind =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Invite.OutInviteService/Bind', request, metadata || {}, methodDescriptor_OutInviteService_Bind);
        };
    const methodDescriptor_OutInviteService_Info = new grpc$9.web.MethodDescriptor('/Invite.OutInviteService/Info', grpc$9.web.MethodType.UNARY, proto$a.Invite.InfoGet, proto$a.Invite.InfoAck, function (request) {
        return request.serializeBinary();
    }, proto$a.Invite.InfoAck.deserializeBinary);
    proto$a.Invite.OutInviteServiceClient.prototype.info =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Invite.OutInviteService/Info', request, metadata || {}, methodDescriptor_OutInviteService_Info, callback);
        };
    proto$a.Invite.OutInviteServicePromiseClient.prototype.info =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Invite.OutInviteService/Info', request, metadata || {}, methodDescriptor_OutInviteService_Info);
        };
    const methodDescriptor_OutInviteService_Award = new grpc$9.web.MethodDescriptor('/Invite.OutInviteService/Award', grpc$9.web.MethodType.UNARY, proto$a.Invite.AwardGet, proto$a.Invite.AwardAck, function (request) {
        return request.serializeBinary();
    }, proto$a.Invite.AwardAck.deserializeBinary);
    proto$a.Invite.OutInviteServiceClient.prototype.award =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Invite.OutInviteService/Award', request, metadata || {}, methodDescriptor_OutInviteService_Award, callback);
        };
    proto$a.Invite.OutInviteServicePromiseClient.prototype.award =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Invite.OutInviteService/Award', request, metadata || {}, methodDescriptor_OutInviteService_Award);
        };
    const methodDescriptor_OutInviteService_Wheel = new grpc$9.web.MethodDescriptor('/Invite.OutInviteService/Wheel', grpc$9.web.MethodType.UNARY, proto$a.Invite.WheelGet, proto$a.Invite.WheelAck, function (request) {
        return request.serializeBinary();
    }, proto$a.Invite.WheelAck.deserializeBinary);
    proto$a.Invite.OutInviteServiceClient.prototype.wheel =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Invite.OutInviteService/Wheel', request, metadata || {}, methodDescriptor_OutInviteService_Wheel, callback);
        };
    proto$a.Invite.OutInviteServicePromiseClient.prototype.wheel =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Invite.OutInviteService/Wheel', request, metadata || {}, methodDescriptor_OutInviteService_Wheel);
        };
    var OutInvite_grpc_web_pb = proto$a.Invite;
    var OutInvite_grpc_web_pb_1 = OutInvite_grpc_web_pb.OutInviteServicePromiseClient;

    class OutInviteService extends Singleton {
        constructor() {
            super();
            this.outInviteService = null;
            this.outInviteService = new OutInvite_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        query() {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new OutInvite_pb_1();
                let ack = yield this.outInviteService.query(request, GlobalData.getInstance().baseMeta);
                EventManager.getInstance().emit(LobbyEvent.INVITE_AWARD_EVENT, [ack]);
                return ack;
            });
        }
        info(type, dayB, dayE, page, num) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new OutInvite_pb_5();
                request.setType(type);
                request.setDayb(dayB);
                request.setDaye(dayE);
                request.setPage(page);
                request.setNum(num);
                let ack = yield this.outInviteService.info(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
        bind(ppid) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new OutInvite_pb_3();
                request.setPpid(ppid);
                let ack = yield this.outInviteService.bind(request, GlobalData.getInstance().baseMeta);
                CC.Log("BindGet ack = " + JSON.stringify(ack.toObject()));
                return ack;
            });
        }
        award(outNum = null) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new OutInvite_pb_7();
                request.setAppid(parseInt(GlobalVariables.APP_ID));
                if (outNum) {
                    request.setOutnum(outNum);
                }
                let ack = yield this.outInviteService.award(request, GlobalData.getInstance().baseMeta);
                EventManager.getInstance().emit(LobbyEvent.INVITE_AWARD_EVENT, [ack]);
                return ack;
            });
        }
        wheel() {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new OutInvite_pb_9();
                return yield this.outInviteService.wheel(request, GlobalData.getInstance().baseMeta);
            });
        }
    }

    class AFUtil {
        static reportLoginPage() {
            DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.LOGIN_PAGE, {});
            DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.LOGIN_PAGE, {});
            DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.LOGIN_PAGE, {});
        }
        static reportRegistVisitor() {
            DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.REGIST_VISITOR, {});
            DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.REGIST_VISITOR, {});
            DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.REGIST_VISITOR, {});
        }
        static reportRegistPhone() {
            DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.REGIST_PHONE, {});
            DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.REGIST_PHONE, {});
            DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.REGIST_PHONE, {});
        }
        static reportRegistApple() {
            DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.REGIST_APPLE, {});
            DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.REGIST_APPLE, {});
        }
        static reportRegistAll() {
            DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.REGIST_ALL, {});
        }
        static reportAFRegistAll(__pid, __type) {
            let params = {
                [AFInAppEventParamName.REGISTRATION_METHOD]: __type,
                [AFInAppEventParamName.CUSTOMER_USER_ID]: __pid
            };
            DeviceData.getInstance().sendAFLogEvent(AFInAppEventType.COMPLETE_REGISTRATION, params);
            let params1 = {
                [FBInAppEventParamName.REGISTRATION_METHOD]: __type,
            };
            DeviceData.getInstance().sendFBLogEvent(FBInAppEventType.COMPLETE_REGISTRATION, params1);
            let params2 = {
                [FBPixelParamName.CONT_NAME]: __type,
            };
            DeviceData.getInstance().sendFBPixel(0, FBPixelStandardType.COMPLETE_REGISTRATION, params2);
        }
        static reportArriveResult() {
            DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.ARRIVE_RESULT, {});
            DeviceData.getInstance().sendAFLogEvent(AFInAppEventType.LOGIN, {});
            DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.LOGIN, {});
            DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.LOGIN, {});
        }
        static reportFirstOpen() {
            DeviceData.getInstance().sendAFLogEvent(AFInAppEventType.FIRST_OPEN, {});
            DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.FIRST_OPEN, {});
            DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.FIRST_OPEN, {});
        }
        static reportVipLVAndPay() {
            let vipLv = VipManager.getInstance().playerVipInfo.nVipLevel || 0;
            if (vipLv == 0) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.VIPLV_0, {});
                DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.VIPLV_0, {});
                DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.VIPLV_0, {});
            }
            else if (vipLv >= 1 && vipLv <= 4) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.VIPLV_1TO4, {});
                DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.VIPLV_1TO4, {});
                DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.VIPLV_1TO4, {});
            }
            else if (vipLv >= 5 && vipLv <= 8) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.VIPLV_5TO8, {});
                DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.VIPLV_5TO8, {});
                DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.VIPLV_5TO8, {});
            }
            else if (vipLv >= 9 && vipLv <= 12) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.VIPLV_9TO12, {});
                DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.VIPLV_9TO12, {});
                DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.VIPLV_9TO12, {});
            }
            else if (vipLv >= 13 && vipLv <= 16) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.VIPLV_13TO16, {});
                DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.VIPLV_13TO16, {});
                DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.VIPLV_13TO16, {});
            }
            let vipExp = VipManager.getInstance().playerVipInfo.nVipExp || 0;
            if (vipExp == 0) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PAY_0, {});
            }
            else if (vipExp >= 50000 && vipExp < 200000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PAY_50KTO200K, {});
            }
            else if (vipExp >= 200000 && vipExp < 300000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PAY_200KTO300K, {});
            }
            else if (vipExp >= 300000 && vipExp < 700000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PAY_300KTO700K, {});
            }
            else if (vipExp >= 700000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PAY_700KUP, {});
            }
        }
        static reportBetValue() {
            let vipBet = VipManager.getInstance().playerVipInfo.nVipBet || 0;
            let vipCharge = VipManager.getInstance().playerVipInfo.nVipExp || 0;
            let betArr = [5000, 10000, 20000, 30000, 40000, 50000, 100000, 500000, 1000000];
            let events1 = [
                AFCustomEventType.BET_5K,
                AFCustomEventType.BET_10K,
                AFCustomEventType.BET_20K,
                AFCustomEventType.BET_30K,
                AFCustomEventType.BET_40K,
                AFCustomEventType.BET_50K,
                AFCustomEventType.BET_100K,
                AFCustomEventType.BET_500K,
                AFCustomEventType.BET_1M
            ];
            for (let i = 0; i < betArr.length; i++) {
                if (vipBet >= betArr[i]) {
                    DeviceData.getInstance().sendAFLogEvent(events1[i], {});
                }
            }
            let chargeArr = [20000, 50000, 100000, 200000, 500000, 1000000];
            let events2 = [
                AFCustomEventType.CHARGE_20K,
                AFCustomEventType.CHARGE_50K,
                AFCustomEventType.CHARGE_100K,
                AFCustomEventType.CHARGE_200K,
                AFCustomEventType.CHARGE_500K,
                AFCustomEventType.CHARGE_1M
            ];
            for (let i = 0; i < chargeArr.length; i++) {
                if (vipCharge >= chargeArr[i]) {
                    DeviceData.getInstance().sendAFLogEvent(events2[i], {});
                }
            }
        }
        static reportInvite() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let queryAck = yield OutInviteService.getInstance().query();
                    let info = queryAck.getInfo();
                    let num = info.getInnum1();
                    if (num == 0) {
                        DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.INVITE_0, {});
                        DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.INVITE_0, {});
                        DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.INVITE_0, {});
                    }
                    else if (num >= 1 && num <= 5) {
                        DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.INVITE_1TO5, {});
                        DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.INVITE_1TO5, {});
                        DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.INVITE_1TO5, {});
                    }
                    else if (num >= 6 && num <= 10) {
                        DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.INVITE_6TO10, {});
                        DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.INVITE_6TO10, {});
                        DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.INVITE_6TO10, {});
                    }
                    else if (num >= 11 && num <= 20) {
                        DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.INVITE_11TO20, {});
                        DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.INVITE_11TO20, {});
                        DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.INVITE_11TO20, {});
                    }
                    else if (num >= 20) {
                        DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.INVITE_20UP, {});
                        DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.INVITE_20UP, {});
                        DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.INVITE_20UP, {});
                    }
                }
                catch (ex) {
                }
            });
        }
        static reportPurchase(id, orderId, price) {
            if (id == 190001) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_FIRST, {});
            }
            else if (id == 190002) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_50K, {});
            }
            else if (id == 190003) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_100K, {});
            }
            else if (id == 190004) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_200K, {});
            }
            else if (id == 190005) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_500K, {});
            }
            else if (id == 190006) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_1M, {});
            }
            else if (id == 190007) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_5M, {});
            }
            else if (id == 190008) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_10M, {});
            }
            else if (id == 190011) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_20M, {});
            }
            else if (id == 190009) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_30M, {});
            }
            else if (id == 190010) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_50M, {});
            }
            let params = {
                id: id,
                orderId: orderId,
                price: price,
            };
            DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.PURCHASE_START, params);
            let params1 = {
                [FBPixelParamName.CONT_NAME]: id + "",
                [FBPixelParamName.CONT_IDS]: [orderId + ""],
                [FBPixelParamName.VALUE]: price,
            };
            DeviceData.getInstance().sendFBPixel(0, FBPixelStandardType.PURCHASE_START, params1);
        }
        static reportGameType(type, gameId) {
            if (type == 0) {
                if (gameId == 32 || gameId == 42 || gameId == 1 || gameId == 7) {
                    DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GAME_TYPE_FISH, {});
                }
            }
            else if (type == 1) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GAME_TYPE_CASINO, {});
            }
            else if (type == 2) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GAME_TYPE_SOLT, {});
            }
            else if (type == 3) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GAME_TYPE_TIEN_LEN, {});
            }
        }
        static reportGood(amount) {
            if (amount >= 0 && amount < 2000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GOLD_0TO2K, {});
            }
            else if (amount >= 2000 && amount < 5000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GOLD_2KTO5K, {});
            }
            else if (amount >= 5000 && amount < 50000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GOLD_5KTO50K, {});
            }
            else if (amount >= 50000 && amount < 100000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GOLD_50KTO1M, {});
            }
            else if (amount >= 100000 && amount < 1000000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GOLD_1MTO10M, {});
            }
            else if (amount >= 1000000 && amount < 5000000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GOLD_10MTO50M, {});
            }
            else if (amount >= 5000000 && amount < 10000000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GOLD_50MTO100M, {});
            }
            else if (amount >= 10000000) {
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.GOLD_100MUP, {});
            }
        }
        static registerFDPurchase() {
            let fdPurchase = {
                "purchaseDate": new Date().toLocaleDateString(),
                "isPurchaseMember": false
            };
            Laya.LocalStorage.setItem("fd_purchase", JSON.stringify(fdPurchase));
        }
        static reportPurchaseUser(price, orderId, __callBack) {
            let params = {
                [AFInAppEventParamName.REVENUE]: price,
                [AFInAppEventParamName.CURRENCY]: "VND",
                [AFInAppEventParamName.ORDER_ID]: orderId,
            };
            DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_TIMES, params, __callBack);
            DeviceData.getInstance().sendAFLogEvent(AFInAppEventType.PURCHASE, params, __callBack);
            let params1 = {
                [FBPixelParamName.CONT_NAME]: orderId + "",
                [FBPixelParamName.CURRENCY]: "VND",
                [FBPixelParamName.VALUE]: price,
            };
            DeviceData.getInstance().sendFBPixel(0, FBPixelStandardType.PURCHASE, params1, __callBack);
            let today = new Date().toLocaleDateString();
            let fdData = Laya.LocalStorage.getItem("fd_purchase");
            if (fdData) {
                let fdPurchase = JSON.parse(fdData);
                if (fdPurchase && fdPurchase instanceof Object) {
                    if (fdPurchase['purchaseDate'] == today) {
                        DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.FD_PURCHASE_TIMES, params);
                        DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.FD_PURCHASE_TIMES, params);
                        DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.FD_PURCHASE_TIMES, {});
                        if (!fdPurchase['isPurchaseMember']) {
                            fdPurchase['isPurchaseMember'] = true;
                            DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.FD_PURCHASE_MEMBERS, {});
                            DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.FD_PURCHASE_MEMBERS, {});
                            DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.FD_PURCHASE_MEMBERS, {});
                            Laya.LocalStorage.setItem("fd_purchase", JSON.stringify(fdPurchase));
                        }
                    }
                }
            }
            let dayPurchase = null;
            let dayData = Laya.LocalStorage.getItem("day_purchase");
            if (dayData) {
                dayPurchase = JSON.parse(dayData);
            }
            if (!dayPurchase || !(dayPurchase instanceof Object)) {
                dayPurchase = {
                    "purchaseDate": today,
                    "isPurchaseMember": false
                };
            }
            if (dayPurchase['purchaseDate'] != today) {
                dayPurchase['purchaseDate'] = today;
                dayPurchase['isPurchaseMember'] = false;
            }
            if (!dayPurchase['isPurchaseMember']) {
                dayPurchase['isPurchaseMember'] = true;
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE, {});
                DeviceData.getInstance().sendAFLogEvent(AFCustomEventType.PURCHASE_MEMBERS, {});
                DeviceData.getInstance().sendFBLogEvent(FBCustomEventType.PURCHASE_MEMBERS, {});
                DeviceData.getInstance().sendFBPixel(1, FBCustomEventType.PURCHASE_MEMBERS, {});
                Laya.LocalStorage.setItem("day_purchase", JSON.stringify(dayPurchase));
            }
        }
        static reportUserOrder() {
            DataStore.getInstance().queryUserConfirmOrder((orderArray) => {
                if (orderArray) {
                    orderArray.forEach((item) => {
                        let price = item.getPrice() / 100;
                        let orderNo = item.getOrderno();
                        AFUtil.reportPurchaseUser(price, orderNo, (state) => {
                            if (state) {
                                this.deleteUserOrder(orderNo, 0);
                            }
                        });
                    });
                }
            });
        }
        static deleteUserOrder(orderNo, retryCount = 0) {
            if (retryCount > 5) {
                return;
            }
            retryCount++;
            DataStore.getInstance().deleteUserConfirmOrder(orderNo, (result) => {
                if (!result) {
                    setTimeout(() => {
                        this.deleteUserOrder(orderNo, retryCount);
                    }, 2000);
                }
            });
        }
        static testSendPixel() {
            let events = [
                FBCustomEventType.FIRST_OPEN,
                FBCustomEventType.LOGIN,
                FBCustomEventType.LOGIN_PAGE,
                FBCustomEventType.REGIST_PHONE,
                FBCustomEventType.REGIST_VISITOR,
                FBCustomEventType.VIPLV_0,
                FBCustomEventType.VIPLV_1TO4,
                FBCustomEventType.VIPLV_5TO8,
                FBCustomEventType.VIPLV_9TO12,
                FBCustomEventType.VIPLV_13TO16,
                FBCustomEventType.INVITE_0,
                FBCustomEventType.INVITE_1TO5,
                FBCustomEventType.INVITE_6TO10,
                FBCustomEventType.INVITE_11TO20,
                FBCustomEventType.INVITE_20UP,
                FBCustomEventType.PURCHASE_START,
                FBCustomEventType.PURCHASE_MEMBERS,
                FBCustomEventType.FD_PURCHASE_TIMES,
                FBCustomEventType.FD_PURCHASE_MEMBERS,
            ];
            let index = 0;
            Laya.timer.loop(1000, Laya.stage, () => {
                DeviceData.getInstance().sendFBPixel(1, events[index], {});
                index++;
            });
        }
    }

    const grpc$a = {};
    grpc$a.web = grpcWeb;


    const proto$b = {};
    proto$b.Match = Match_pb;
    proto$b.Match.MatchServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$a.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$b.Match.MatchServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$a.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_MatchService_Create = new grpc$a.web.MethodDescriptor('/Match.MatchService/Create', grpc$a.web.MethodType.UNARY, proto$b.Match.CreateGet, proto$b.Match.CreateAck, function (request) {
        return request.serializeBinary();
    }, proto$b.Match.CreateAck.deserializeBinary);
    proto$b.Match.MatchServiceClient.prototype.create =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Match.MatchService/Create', request, metadata || {}, methodDescriptor_MatchService_Create, callback);
        };
    proto$b.Match.MatchServicePromiseClient.prototype.create =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Match.MatchService/Create', request, metadata || {}, methodDescriptor_MatchService_Create);
        };
    const methodDescriptor_MatchService_Start = new grpc$a.web.MethodDescriptor('/Match.MatchService/Start', grpc$a.web.MethodType.UNARY, proto$b.Match.StartGet, proto$b.Match.StartAck, function (request) {
        return request.serializeBinary();
    }, proto$b.Match.StartAck.deserializeBinary);
    proto$b.Match.MatchServiceClient.prototype.start =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Match.MatchService/Start', request, metadata || {}, methodDescriptor_MatchService_Start, callback);
        };
    proto$b.Match.MatchServicePromiseClient.prototype.start =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Match.MatchService/Start', request, metadata || {}, methodDescriptor_MatchService_Start);
        };
    const methodDescriptor_MatchService_Match = new grpc$a.web.MethodDescriptor('/Match.MatchService/Match', grpc$a.web.MethodType.UNARY, proto$b.Match.MatchGet, proto$b.Match.MatchAck, function (request) {
        return request.serializeBinary();
    }, proto$b.Match.MatchAck.deserializeBinary);
    proto$b.Match.MatchServiceClient.prototype.match =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Match.MatchService/Match', request, metadata || {}, methodDescriptor_MatchService_Match, callback);
        };
    proto$b.Match.MatchServicePromiseClient.prototype.match =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Match.MatchService/Match', request, metadata || {}, methodDescriptor_MatchService_Match);
        };
    const methodDescriptor_MatchService_Cancel = new grpc$a.web.MethodDescriptor('/Match.MatchService/Cancel', grpc$a.web.MethodType.UNARY, proto$b.Match.CancelGet, proto$b.Match.CancelAck, function (request) {
        return request.serializeBinary();
    }, proto$b.Match.CancelAck.deserializeBinary);
    proto$b.Match.MatchServiceClient.prototype.cancel =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Match.MatchService/Cancel', request, metadata || {}, methodDescriptor_MatchService_Cancel, callback);
        };
    proto$b.Match.MatchServicePromiseClient.prototype.cancel =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Match.MatchService/Cancel', request, metadata || {}, methodDescriptor_MatchService_Cancel);
        };
    const methodDescriptor_MatchService_GiveUp = new grpc$a.web.MethodDescriptor('/Match.MatchService/GiveUp', grpc$a.web.MethodType.UNARY, proto$b.Match.GiveUpGet, proto$b.Match.GiveUpAck, function (request) {
        return request.serializeBinary();
    }, proto$b.Match.GiveUpAck.deserializeBinary);
    proto$b.Match.MatchServiceClient.prototype.giveUp =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Match.MatchService/GiveUp', request, metadata || {}, methodDescriptor_MatchService_GiveUp, callback);
        };
    proto$b.Match.MatchServicePromiseClient.prototype.giveUp =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Match.MatchService/GiveUp', request, metadata || {}, methodDescriptor_MatchService_GiveUp);
        };
    const methodDescriptor_MatchService_Status = new grpc$a.web.MethodDescriptor('/Match.MatchService/Status', grpc$a.web.MethodType.UNARY, proto$b.Match.StatusGet, proto$b.Match.StatusAck, function (request) {
        return request.serializeBinary();
    }, proto$b.Match.StatusAck.deserializeBinary);
    proto$b.Match.MatchServiceClient.prototype.status =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Match.MatchService/Status', request, metadata || {}, methodDescriptor_MatchService_Status, callback);
        };
    proto$b.Match.MatchServicePromiseClient.prototype.status =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Match.MatchService/Status', request, metadata || {}, methodDescriptor_MatchService_Status);
        };
    const methodDescriptor_MatchService_PlyNum = new grpc$a.web.MethodDescriptor('/Match.MatchService/PlyNum', grpc$a.web.MethodType.UNARY, proto$b.Match.PlyNumGet, proto$b.Match.PlyNumAck, function (request) {
        return request.serializeBinary();
    }, proto$b.Match.PlyNumAck.deserializeBinary);
    proto$b.Match.MatchServiceClient.prototype.plyNum =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Match.MatchService/PlyNum', request, metadata || {}, methodDescriptor_MatchService_PlyNum, callback);
        };
    proto$b.Match.MatchServicePromiseClient.prototype.plyNum =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Match.MatchService/PlyNum', request, metadata || {}, methodDescriptor_MatchService_PlyNum);
        };
    var Match_grpc_web_pb = proto$b.Match;
    var Match_grpc_web_pb_1 = Match_grpc_web_pb.MatchServiceClient;

    class DataMatch extends Singleton {
        constructor() {
            super();
            this.m_overScore = {};
            this.playerMatchDataList = new Array();
            this.matchMakerService = new Match_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.gsManagerService = new GSMgr_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        clearData() {
            this.m_tableInfo = null;
            this.m_gameTable = null;
            this.usersInfo = null;
            this.m_charge = [];
            this.m_dissolve = null;
            this.m_overScore = {};
        }
        allocateTable(playerIds, rule, callback) {
            let req = new GSMgr_pb_4();
            req.setNgameid(GlobalVariables.GAME_ID_MJ_XLMJ);
            req.setArrplayersList(playerIds);
            req.setStrrule(rule);
            this.gsManagerService.allocateTable(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err) {
                    CC.Loge("allocateTable failed: " + JSON.stringify(err));
                    callback(null);
                    return;
                }
                this.m_tableInfo = ack.getSttable();
                this.addPlayer(this.m_tableInfo.getArrplayersList());
                callback(ack.getSttable());
            });
        }
        sendCreateGet(rule) {
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
            let req = new Match_pb_9();
            req.setRule(rule);
            this.matchMakerService.create(req, GlobalData.getInstance().baseMeta, (err, ack) => __awaiter(this, void 0, void 0, function* () {
                if (window.G_GameSocket) {
                    window.G_GameSocket.cleanSaveDatas();
                }
                GlobalData.getInstance().lobbySocket.cleanSaveDatas();
                GlobalData.getInstance().loadingAni.Close();
                if (err) {
                    CC.Loge("sendCreateGet error = ", err);
                    TopTipsManager.getInstance().showTopTips(WARNING.SEND_FAIL);
                    return;
                }
                let ret = ack.getNret();
                if (ret == Common_pb_1.SUCCESS) {
                    AFUtil.reportGameType(3);
                }
                else {
                    let warnStr = WARNING[ret] || WARNING[Common_pb_1.E_FAIL];
                    if (ret == Common_pb_1.E_VIP_LEVEL_NOT_ENOUGH) {
                        let vipLv = ack.getNvip();
                        warnStr = "Bạn cần phải là VIP" + vipLv + " để có thể tham gia phòng đầu hàng";
                    }
                    TopTipsManager.getInstance().showTopTips(warnStr);
                    if (ret == Common_pb_1.E_MM_HAS_TABLE_TO_PLAY) {
                        let table = ack.getTable();
                        if (table) {
                            this.m_gameTable = table;
                            let users = table.getUsersMap();
                            let tmpArr = [];
                            users.forEach((pid, chair) => {
                                tmpArr[tmpArr.length] = pid;
                            });
                            let charge = table.getChargeMap();
                            this.setChargeUser(charge);
                            if (window.G_PokerMgr) {
                                let curRound = table.getNumcur() || 0;
                                window.G_PokerMgr.setCurRound(curRound);
                                let state = table.getStatus();
                                window.G_PokerMgr.setTblStatus(state);
                            }
                            this.m_dissolve = table.getCancelMap();
                            this.addPlayer(tmpArr);
                            EventManager.getInstance().emit(LobbyEvent.MATCH_UPDATE_NOTI, [ack]);
                        }
                        else {
                            CC.Loge("sendCreateGet onMatchUpdateNoti no table data!!!!!!");
                        }
                    }
                }
            }));
        }
        sendStartMatchReq(roomId, roomType, plyNum, callback) {
            let req = new Match_pb_1();
            req.setIp(GlobalVariables.G_MY_IP);
            req.setPass(roomId);
            req.setRoomid(roomType);
            req.setPlynum(plyNum);
            CC.Log("sendStartMatchReq req = " + JSON.stringify(req.toObject()));
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
            this.matchMakerService.match(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (window.G_GameSocket) {
                    window.G_GameSocket.cleanSaveDatas();
                }
                GlobalData.getInstance().lobbySocket.cleanSaveDatas();
                GlobalData.getInstance().loadingAni.Close();
                if (err) {
                    CC.Loge("sendStartMatchReq error = ", err);
                    TopTipsManager.getInstance().showTopTips(WARNING.SEND_FAIL);
                    return;
                }
                CC.Log("sendStartMatchReq ack = " + JSON.stringify(ack.toObject()));
                let ret = ack.getNret();
                let msg = "ret:" + ret;
                if (ret == Common_pb_1.SUCCESS) {
                    AFUtil.reportGameType(3);
                    callback && callback(ack.getTable());
                }
                else if (ret == Common_pb_1.E_GAME_PLAYING || ret == Common_pb_1.E_MM_HAS_TABLE_TO_PLAY) {
                    callback && callback(ack.getTable());
                }
                else {
                    let warnStr = WARNING[ret] || WARNING[Common_pb_1.E_FAIL];
                    if (ret == Common_pb_1.E_VIP_LEVEL_NOT_ENOUGH) {
                        let vipLv = ack.getNvip();
                        warnStr = "Bạn cần phải là VIP" + vipLv + " để có thể tham gia phòng đầu hàng";
                    }
                    TopTipsManager.getInstance().showTopTips(warnStr);
                }
            });
        }
        sendCancelMatchReq(__agree, callback) {
            let req = new Match_pb_3();
            req.setAgree(__agree);
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
            this.matchMakerService.cancel(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                GlobalData.getInstance().loadingAni.Close();
                if (err) {
                    CC.Loge("sendCancelMatchReq error = ", err);
                    if (callback) {
                        callback(false);
                    }
                    TopTipsManager.getInstance().showTopTips(WARNING.SEND_FAIL);
                    return;
                }
                CC.Log("sendCancelMatchReq ack = " + JSON.stringify(ack.toObject()));
                let ret = ack.getNret();
                if (ret == Common_pb_1.SUCCESS) {
                    if (callback) {
                        callback(true);
                    }
                }
                else {
                    let warnStr = WARNING[ret] || WARNING[Common_pb_1.E_FAIL];
                    TopTipsManager.getInstance().showTopTips(warnStr);
                    if (callback) {
                        callback(false, ret);
                    }
                }
            });
        }
        sendStartGet(callback) {
            let req = new Match_pb_14();
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
            this.matchMakerService.start(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                GlobalData.getInstance().loadingAni.Close();
                if (err) {
                    CC.Loge("sendStartGet error = ", err);
                    if (callback) {
                        callback(false);
                    }
                    TopTipsManager.getInstance().showTopTips(WARNING.SEND_FAIL);
                    return;
                }
                let ret = ack.getNret();
                if (ret == Common_pb_1.SUCCESS) {
                    if (callback) {
                        callback(true);
                    }
                }
                else {
                    let warnStr = WARNING[ret] || WARNING[Common_pb_1.E_FAIL];
                    TopTipsManager.getInstance().showTopTips(warnStr);
                    if (callback) {
                        callback(false);
                    }
                }
            });
        }
        sendGiveUpGet(roomId, callback) {
            let req = new Match_pb_10();
            req.setPass(roomId);
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
            this.matchMakerService.giveUp(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                GlobalData.getInstance().loadingAni.Close();
                if (err) {
                    CC.Loge("sendGiveUpGet error = ", err);
                    TopTipsManager.getInstance().showTopTips(WARNING.SEND_FAIL);
                    return;
                }
                let ret = ack.getNret();
                if (ret == Common_pb_1.SUCCESS) {
                    if (callback) {
                        callback(true);
                    }
                }
                else {
                    let warnStr = WARNING[ret] || WARNING[Common_pb_1.E_FAIL];
                    TopTipsManager.getInstance().showTopTips(warnStr);
                    if (callback) {
                        callback(false);
                    }
                }
            });
        }
        waitForLobbyTip(msg) {
            let lobbyScene = GlobalData.getInstance().lobbyScene;
            if (lobbyScene != undefined && lobbyScene != null) {
                TopTipsManager.getInstance().showTopTips(msg);
            }
            else {
                Laya.timer.once(1000, this, this.waitForLobbyTip, [msg]);
            }
        }
        getChairByPID(__pid) {
            let users = this.m_gameTable.getUsersMap();
            let resChair = 0;
            users.forEach((pid, chair) => {
                if (pid == __pid) {
                    resChair = chair;
                }
            });
            return resChair;
        }
        getMyChair() {
            let myPID = GlobalData.getInstance().myPid;
            let users = this.m_gameTable.getUsersMap();
            let myChair = 0;
            users.forEach((pid, chair) => {
                if (pid == myPID) {
                    myChair = chair;
                }
            });
            return myChair;
        }
        getPlayerByChair(__chair) {
            let users = this.m_gameTable.getUsersMap();
            let pid = users.get(__chair);
            if (pid) {
                return this.usersInfo[pid];
            }
        }
        getPlayerByPID(__pid) {
            return this.usersInfo[__pid];
        }
        addPlayer(playerList, callback) {
            return __awaiter(this, void 0, void 0, function* () {
                CC.Log('玩家列表 playerList = ' + playerList);
                this.usersInfo = null;
                this.usersInfo = new Array();
                let findList = [];
                for (let i = 0; i < playerList.length; i++) {
                    let pid = playerList[i];
                    if (!this.usersInfo[pid]) {
                        this.usersInfo[pid] = new BasicInfo();
                        this.usersInfo[pid].nPid = pid;
                        this.usersInfo[pid].nickname = "User" + pid;
                        findList.push(pid);
                    }
                    else {
                        continue;
                    }
                }
                if (findList.length > 0) {
                    yield DataPlayer.getInstance().getUsersInfo(findList, this.usersInfo);
                    yield DataCurrency.getInstance().batchQueryCyPromise(findList, this.usersInfo);
                    EventManager.getInstance().emit(LobbyEvent.REFRESH_PLAYER_INFO);
                }
            });
        }
        getPlayerMoney(pids) {
            return __awaiter(this, void 0, void 0, function* () {
                yield DataCurrency.getInstance().batchQueryCyPromise(pids, this.usersInfo);
            });
        }
        setChargeUser(chargeMap) {
            this.m_charge = [];
            if (chargeMap) {
                chargeMap.forEach((money, pid) => {
                    this.m_charge.push(pid);
                });
            }
        }
        findRoom(bMin) {
            let user = DataPlayer.getInstance().userInfo;
            let myVipLv = VipManager.getInstance().playerVipInfo.nVipLevel;
            if (bMin) {
                for (let i = 0; i < GoldSelectParam.length; i++) {
                    let param = GoldSelectParam[i];
                    if (myVipLv >= param.vip) {
                        let min = param.limit[0];
                        let max = param.limit[1];
                        if (!isNaN(min) && !isNaN(max)) {
                            if (user.gold <= max && user.gold >= min) {
                                return param;
                            }
                        }
                        else if (isNaN(min)) {
                            if (user.gold <= max) {
                                return param;
                            }
                        }
                        else if (isNaN(max)) {
                            if (user.gold >= min) {
                                return param;
                            }
                        }
                    }
                }
            }
            else {
                for (let i = GoldSelectParam.length - 1; i >= 0; i--) {
                    let param = GoldSelectParam[i];
                    if (myVipLv >= param.vip) {
                        let min = param.limit[0];
                        let max = param.limit[1];
                        if (!isNaN(min) && !isNaN(max)) {
                            if (user.gold <= max && user.gold >= min) {
                                return param;
                            }
                        }
                        else if (isNaN(min)) {
                            if (user.gold <= max) {
                                return param;
                            }
                        }
                        else if (isNaN(max)) {
                            if (user.gold >= min) {
                                return param;
                            }
                        }
                    }
                }
            }
        }
        findRoomParam(__roomtype) {
            for (let i = GoldSelectParam.length - 1; i >= 0; i--) {
                let param = GoldSelectParam[i];
                if (__roomtype == param.type) {
                    return param;
                }
            }
        }
        getFakePlyNum(callback) {
            let roomIds = [];
            for (let i = GoldSelectParam.length - 1; i >= 0; i--) {
                let param = GoldSelectParam[i];
                roomIds[roomIds.length] = param.type;
            }
            if (roomIds.length > 0) {
                let req = new Match_pb_17();
                req.setRoomidsList(roomIds);
                this.matchMakerService.plyNum(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                    if (err) {
                        callback(null);
                        return;
                    }
                    let plyNumArr = ack.getPlynumsMap();
                    callback(plyNumArr);
                });
            }
        }
    }

    class GameSocketSet {
        constructor(father) {
            this.m_father = father;
        }
        onGameStart(data) {
            EventManager.getInstance().emit(GameEvent.GAME_START_NOTI, [data]);
            window.G_PokerData.m_baseScore = data.getBasescore();
            window.G_PokerData.m_banker = data.getBanker();
        }
        onDealCards(data) {
            let cards = data.getHandsList();
            window.G_PokerData.setCardsByPos(0, cards);
            window.G_PokerData.m_groups = data.getGroupsList();
            window.G_PokerData.m_tipGroups = data.getGroupsList();
            let plyNum = window.G_PokerMgr.m_plyNum;
            for (let i = 0; i < plyNum; i++) {
                let pos = window.S2CPos(i);
                if (pos != MAJIANG_PLAYER_POS_ENUM.SELF) {
                    let cards1 = [];
                    for (let j = 0; j < HAND_CARD_N; j++) {
                        cards1[j] = -1;
                    }
                    window.G_PokerData.setCardsByPos(pos, cards1);
                }
            }
            EventManager.getInstance().emit(GameEvent.DEAL_CARD_NOTI, [data]);
        }
        onOperationNoti(data) {
            let nSerialID = data.getSerialid();
            window.G_PokerData.m_serialID = nSerialID;
            let chairID = data.getChair();
            let myChair = DataMatch.getInstance().getMyChair();
            if (chairID == myChair) {
                window.G_PokerData.m_tipGroups = data.getGroupsList();
                window.G_PokerData.m_tipIndex = 0;
            }
            let deadLine = Math.floor(data.getDeadline() / 1000);
            let curT = window.getNow();
            window.G_PokerData.m_deadLine = deadLine - curT;
            let opcode = data.getOperate();
            window.G_PokerData.m_curChair = chairID;
            EventManager.getInstance().emit(GameEvent.PLAYER_OPERATION_NOTI, [data]);
        }
        onPlayerOpBroadcast(data) {
            window.G_PokerData.m_outGroup = data.getGroup();
            let chairID = data.getChair();
            let pos = window.S2CPos(chairID);
            window.G_PokerData.setLeftNumByPos(pos, data.getLeftnum());
            let tmpGroup = data.getGroup();
            if (tmpGroup) {
                window.G_PokerData.m_lastOut[pos] = tmpGroup;
            }
            let opcode = data.getOperate();
            if (opcode & OpeType.OP_GIVE_UP) {
                window.G_PokerData.m_pass[pos] = 1;
            }
            EventManager.getInstance().emit(GameEvent.PLAYER_OP_BROADCAST_NOTI, [data]);
        }
        dealMoneyChange(data) {
            let nReason = data.getNreason();
            let changeArr = [];
            data.getChangesMap().forEach((nChange, nChairID) => {
                let pos = window.S2CPos(nChairID);
                changeArr[pos] = nChange;
                let l_score = data.getScoresMap().get(nChairID);
                CC.Log('金币变动(9022) myChair: ' + DataMatch.getInstance().getMyChair() + ' nChairID = ' + nChairID + ' nChange = ' + nChange + ' nReason = ' + nReason);
                EventManager.getInstance().emit(GameEvent.GAME_MONEY_CHANGE, [nChairID, nChange, l_score, nReason]);
                EventManager.getInstance().emit(GameEvent.GAME_MONEY_ANIM_NOTI, [changeArr]);
            });
        }
        dealTuoGuan(data) {
            let cChairID = data.getChair();
            let cAuto = data.getAuto();
            CC.Log('托管信息(8926): cChairID = ' + cChairID + ' cAuto = ' + cAuto);
            EventManager.getInstance().emit(GameEvent.USER_MAJIANG_AUTO_NOT, [cChairID, cAuto]);
        }
        reconect(data) {
            window.G_PokerData.clearData();
            window.G_PokerData.m_baseScore = data.getBasescore();
            window.G_PokerData.m_banker = data.getBanker();
            let handCards = data.getCardsList();
            window.G_PokerData.setCardsByPos(0, handCards);
            window.G_PokerData.m_groups = data.getGroupsList();
            let others = data.getUsersMap();
            others.forEach((info, chair) => {
                let pos = window.S2CPos(chair);
                if (pos != MAJIANG_PLAYER_POS_ENUM.SELF) {
                    let leftNum = info.getLeftnum();
                    let cards = [];
                    for (let i = 0; i < leftNum; i++) {
                        cards[i] = -1;
                    }
                    window.G_PokerData.setCardsByPos(pos, cards);
                }
                let pass = info.getPass();
                let money = info.getScore();
                let tmpGroup = info.getDisgroup();
                window.G_PokerData.m_pass[pos] = pass;
                window.G_PokerData.m_money[pos] = money;
                if (tmpGroup) {
                    window.G_PokerData.m_lastOut[pos] = tmpGroup;
                }
            });
            let outGroups = data.getOutgroupsList();
            if (outGroups.length > 0) {
                window.G_PokerData.m_outGroup = outGroups[outGroups.length - 1];
            }
            EventManager.getInstance().emit(GameEvent.USER_MAJIANG_RECONECT, [data]);
        }
        refreshGameResult(data) {
            let arrResult = data.getResultsList();
            CC.Log('牌局结算(8917): ', arrResult);
            CC.Log('------------------GameResult--------------------');
            for (let i = 0; i < arrResult.length; i++) {
                let gameResult = arrResult[i];
                let chairID = gameResult.getChair();
                let pos = window.S2CPos(chairID);
                let cards = gameResult.getHandsList();
                window.G_PokerData.setCardsByPos(pos, cards);
            }
            EventManager.getInstance().emit(GameEvent.USER_MAJIANG_GAME_END, [arrResult]);
        }
        onTianHu(data) {
            let deadLine = Math.floor(data.getDeadline() / 1000);
            let curT = window.getNow();
            window.G_PokerData.m_deadLine = deadLine - curT;
            let thDatas = data.getDatasList();
            window.G_PokerData.m_thDatas = thDatas;
            EventManager.getInstance().emit(GameEvent.TIAN_HU_NOTI, [data]);
        }
        updateCardNoti(data) {
            let cards = data.getHandsList();
            let chairID = data.getChair();
            let pos = window.S2CPos(chairID);
            if (pos == MAJIANG_PLAYER_POS_ENUM.SELF) {
                window.G_PokerData.setCardsByPos(0, cards);
                window.G_PokerData.m_groups = data.getGroupsList();
                window.G_PokerData.sortCardsByGroup();
            }
            CC.Log("updateCardNoti cards ===  ", chairID, cards);
            EventManager.getInstance().emit(GameEvent.UPDATE_CARD_NOTI, [data]);
        }
    }

    class BaseSocketSend {
        constructor(father) {
            this.m_father = father;
        }
    }

    class GameSocketSend extends BaseSocketSend {
        constructor(father) {
            super(father);
        }
        sendMJOperate(_data, callback) {
            CC.Log('sendMJOperate = ' + JSON.stringify(_data));
            let send = new Second_pb_12();
            send.setOperate(_data.opcode);
            send.setCardsList(_data.cards);
            send.setSerialid(window.G_PokerData.m_serialID);
            CC.Log('sendMJOperate = ' + JSON.stringify(send.toObject()));
            this.m_father.sendMessage(OpcodeGame.PlayerOpGet, send, (err, mst) => {
                if (err != null) {
                    CC.Log(err);
                }
                let commonAck = null;
                if (mst) {
                    let msg = mst.getMsg();
                    let typeName = msg.getTypeName();
                    commonAck = msg.unpack(Second_pb_3.deserializeBinary, typeName);
                }
                if (callback != null) {
                    callback(err == null, commonAck);
                }
            });
        }
        sendAutoReq(_data) {
            let send = new Second_pb_1();
            send.setAuto(_data.cAuto);
            this.m_father.sendMessage(OpcodeGame.AutoPlayGet, send, (err) => {
                if (err != null) {
                    CC.Log(err);
                }
            });
        }
        loseLeaveGame() {
            let send = new Second_pb_10();
            this.m_father.sendMessage(OpcodeGame.LeaveGameGet, send, (err) => {
                if (err != null) {
                    CC.Log(err);
                }
            });
        }
        sendChat(p_str) {
            this.m_father.sendChat(p_str);
        }
        sendInteractive(p_id, p_pos) {
            this.m_father.sendInteractive(p_id, p_pos);
        }
    }

    class GameSocket extends BaseSocket {
        constructor() {
            super();
        }
        initData() {
            super.initData();
            CC.Log("GameSocket initData");
            this.socketSend = new GameSocketSend(this);
            this.socketSet = new GameSocketSet(this);
            this.registerNotify(OpcodeGame.GameStartNoti, Second_pb_8, this.socketSet.onGameStart);
            this.registerNotify(OpcodeGame.DealCardNoti, Second_pb_4, this.socketSet.onDealCards);
            this.registerNotify(OpcodeGame.PlayerOpNoti, Second_pb_13, this.socketSet.onOperationNoti.bind(this.socketSet));
            this.registerNotify(OpcodeGame.PlayerOpResult, Second_pb_14, this.socketSet.onPlayerOpBroadcast);
            this.registerNotify(OpcodeGame.GameMoneyChange, Second_pb_5, this.socketSet.dealMoneyChange);
            this.registerNotify(OpcodeGame.AutoPlayNoti, Second_pb_2, this.socketSet.dealTuoGuan);
            this.registerNotify(OpcodeGame.GameResultNoti, Second_pb_7, this.socketSet.refreshGameResult);
            this.registerNotify(OpcodeGame.ReconnectNoti, Second_pb_15, this.socketSet.reconect);
            this.registerNotify(OpcodeGame.TianHuNoti, Second_pb_19, this.socketSet.onTianHu);
            this.registerNotify(OpcodeGame.UpdateCardNoti, Second_pb_20, this.socketSet.updateCardNoti);
            this.setMsgName(OpcodeGame.PlayerOpGet, "Second.PlayerOpGet");
            this.setMsgName(OpcodeGame.AutoPlayGet, "Second.AutoPlayReq");
            this.setMsgName(OpcodeGame.LeaveGameGet, "Second.LeaveGameGet");
        }
    }

    class GameAudio extends Singleton {
        constructor() {
            super(...arguments);
            this.localBgm = "";
            this.canBgm = GameStorage.getCanBgm();
            this.canEff = GameStorage.getCanEff();
        }
        playMusic(url) {
            this.localBgm = url;
            this.canBgm = GameStorage.getCanBgm();
            if (this.canBgm) {
                this.stopMusic();
                Laya.SoundManager.playMusic('sound/' + url, 0);
                Laya.SoundManager.setMusicVolume(1);
            }
        }
        stopMusic() {
            Laya.SoundManager.stopMusic();
        }
        resumeMusic() {
            if (this.localBgm != '') {
                if (this.canBgm) {
                    Laya.SoundManager.stopMusic();
                    Laya.timer.once(500, this, function () {
                        Laya.SoundManager.playMusic('sound/' + this.localBgm, 0);
                        Laya.SoundManager.setMusicVolume(1);
                    });
                }
            }
        }
        playEffect(url, p_info) {
            this.canEff = GameStorage.getCanEff();
            let l_url = url;
            if (url.split('.').length > 0) {
                l_url = url.split('.')[0];
            }
            let path = 'sound/';
            if (p_info) {
                if (p_info.nGender == 1) {
                    path = path + 'male/';
                }
                else {
                    path = path + 'female/';
                }
            }
            else {
                path = path + 'female/';
            }
            if (this.canEff) {
                Laya.SoundManager.setSoundVolume(1);
                Laya.SoundManager.playSound(path + l_url + ".ogg");
            }
        }
        playBaseEffect(url, isLoop = false) {
            let l_url = url;
            if (url.split('.').length > 0) {
                l_url = url.split('.')[0];
            }
            let path = 'sound/';
            this.canEff = GameStorage.getCanEff();
            if (this.canEff) {
                if (isLoop) {
                    Laya.SoundManager.playSound(path + l_url + ".ogg", 0);
                }
                else {
                    Laya.SoundManager.playSound(path + l_url + ".ogg");
                }
            }
        }
        closeBaseEffect(url) {
            let l_url = url;
            if (url.split('.').length > 0) {
                l_url = url.split('.')[0];
            }
            let path = 'sound/';
            this.canEff = GameStorage.getCanEff();
            if (this.canEff) {
                Laya.SoundManager.stopSound(path + l_url + ".ogg");
            }
        }
        playChatSound(url, p_info) {
            this.canEff = GameStorage.getCanEff();
            let path = 'sound/emoji/';
            if (p_info) {
                if (p_info.nGender == 1) {
                    path = path + 'male/';
                }
                else {
                    path = path + 'female/';
                }
            }
            else {
                path = path + 'female/';
            }
            if (this.canEff) {
                Laya.Event.TRANSFORM_CHANGED;
                Laya.SoundManager.playSound(path + url + ".ogg");
            }
        }
        playEmojiSound(url) {
            this.canEff = GameStorage.getCanEff();
            let path = 'sound/emoji/';
            if (this.canEff) {
                Laya.SoundManager.playSound(path + url + ".ogg");
            }
        }
        playClick() {
            this.canEff = GameStorage.getCanEff();
            if (this.canEff) {
                Laya.SoundManager.playSound('sound/click.ogg');
            }
        }
        playCloseWin() {
            this.canEff = GameStorage.getCanEff();
            if (this.canEff) {
                Laya.SoundManager.playSound('sound/closeWin.ogg');
            }
        }
        setBgm(can) {
            this.canBgm = can;
            if (can) {
                this.resumeMusic();
            }
            else {
                this.stopMusic();
            }
        }
        setEff(can) {
            this.canEff = can;
        }
    }

    var VALUE_J = 11;
    var VALUE_Q = 12;
    var VALUE_K = 13;
    var VALUE_A = 14;
    var VALUE_2 = 15;
    class PokerData {
        constructor() {
            this.clearData();
        }
        clearData(__force) {
            this.m_serialID = 0;
            this.m_cards = [[], [], [], []];
            this.m_groups = [];
            this.m_tipGroups = [];
            this.m_leftNum = [];
            this.m_money = [];
            this.m_banker = -1;
            this.m_baseScore = 0;
            this.m_deadLine = 0;
            this.m_outGroup = null;
            this.m_thDatas = [];
            this.m_pass = [0, 0, 0, 0];
            this.m_bSort = false;
            this.m_tipIndex = 0;
            this.m_lastOut = [];
            this.m_curChair = -1;
        }
        getCardsByPos(__pos) {
            return this.m_cards[__pos];
        }
        setCardsByPos(__pos, __cards) {
            this.m_cards[__pos] = __cards;
        }
        getLeftNumByPos(__pos) {
            return this.m_leftNum[__pos];
        }
        setLeftNumByPos(__pos, __num) {
            this.m_leftNum[__pos] = __num;
        }
        getTHByPos(__pos) {
            return this.m_thDatas[__pos];
        }
        setTHByPos(__pos, __num) {
            this.m_thDatas[__pos] = __num;
        }
        sortCardsByGroup() {
            if (this.m_groups.length > 0) {
                if (!this.m_bSort) {
                    let tmpGroups = this.m_groups.slice(0);
                    tmpGroups.sort((a, b) => {
                        let card_a = a.getCardsList();
                        let card_b = b.getCardsList();
                        let type_a = a.getType();
                        let type_b = b.getType();
                        if (card_b.length == card_a.length) {
                            if (type_b == type_a) {
                                return card_a[0] - card_b[0];
                            }
                            else if (type_a & GroupType.T_King2) {
                                return 1;
                            }
                            else if (type_b & GroupType.T_King2) {
                                return -1;
                            }
                            return type_b - type_a;
                        }
                        return card_b.length - card_a.length;
                    });
                    this.m_cards[0] = [];
                    let groups = tmpGroups;
                    let len = groups.length;
                    for (let i = 0; i < len; i++) {
                        let group = groups[i];
                        let cards = group.getCardsList();
                        for (let j = 0; j < cards.length; j++) {
                            let cardID = cards[j];
                            this.m_cards[0].push(cardID);
                        }
                    }
                    return groups;
                }
                else {
                    this.m_cards[0].sort((a, b) => {
                        return a - b;
                    });
                }
            }
        }
        getTipCards() {
            let tipGroups = this.m_tipGroups;
            if (tipGroups && tipGroups.length > 0) {
                let len = tipGroups.length;
                let group = tipGroups[this.m_tipIndex];
                if (!group) {
                    group = tipGroups[0];
                    this.m_tipIndex = 0;
                }
                let cards = group.getCardsList();
                this.m_tipIndex = (this.m_tipIndex + 1) % len;
                return cards;
            }
        }
        checkOutCard(__pos) {
            return this.m_lastOut[__pos];
        }
        cardId2Value(__id) {
            return Math.floor((__id - 1) / 4) + 3;
        }
        checkSelBomb(__cards) {
            if (__cards && __cards.length > 0) {
                if (__cards.length != 4 && __cards.length != 6 && __cards.length != 8) {
                    return;
                }
                let myChair = DataMatch.getInstance().getMyChair();
                if (this.m_curChair == myChair && this.m_outGroup) {
                    let outCards = this.m_outGroup.getCardsList();
                    let bCard2 = false;
                    for (let i = 0; i < outCards.length; i++) {
                        let cardId = outCards[i];
                        if (cardId >= 49 && cardId <= 52) {
                            bCard2 = true;
                            break;
                        }
                    }
                    if (bCard2) {
                        __cards.sort();
                        let tipGroups = this.m_tipGroups;
                        if (tipGroups && tipGroups.length > 0) {
                            let len = tipGroups.length;
                            for (let i = 0; i < len; i++) {
                                let group = tipGroups[i];
                                let type = group.getType();
                                let gCards = group.getCardsList().sort();
                                if (type == GroupType.T_FOUR || type == GroupType.T_Lian3 || type == GroupType.T_Lian4) {
                                    if (__cards.length != gCards.length) {
                                        continue;
                                    }
                                    if (__cards.toString() == gCards.toString()) {
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    class PokerMgr {
        constructor() {
            this.m_bGameStart = false;
            this.clearData();
        }
        clearData(__force) {
            this.m_tableData = null;
            this.m_plyNum = 0;
            this.m_totalPly = 4;
            this.m_baseScore = 0;
            this.m_roomId = "";
            this.m_curRound = 1;
            this.m_allRound = 0;
            this.m_owner = 0;
            this.m_tblStatus = Match_pb_15.NONE;
            this.m_roomType = "";
            this.m_count = 0;
            this.m_bAutoExit = false;
        }
        setTableData(table) {
            this.m_tableData = table;
            if (table) {
                let mkRule = table.getRule();
                this.m_roomId = table.getPass();
                this.setTblStatus(table.getStatus());
                this.m_curRound = table.getNumcur();
                this.m_owner = table.getOwner();
                this.m_roomType = table.getRoomid();
                this.m_plyNum = table.getNumply();
                this.m_count = 10;
                if (mkRule) {
                    this.m_totalPly = mkRule.getPlayernum() || 4;
                    this.m_allRound = mkRule.getNummax();
                    this.m_baseScore = mkRule.getBasescore();
                    this.m_gameRule = mkRule.getOptionflags();
                    this.m_roomType = mkRule.getRoomid();
                }
                GlobalData.getInstance().gameName = "vietname_poker";
                GlobalData.getInstance().gameId = table.getGameid();
                if (this.m_curRound == 0 && this.m_owner == GlobalData.getInstance().myPid) {
                    let base = this.m_baseScore;
                    let limit = mkRule.getMinmoney();
                    let plyNum = this.m_plyNum;
                    let round = this.m_allRound;
                    let giveInLimit = mkRule.getMaxrate();
                    let bLeft = this.m_gameRule & CreateOpt.OPT_LEFT_CARD;
                    let bGiveIn = this.m_gameRule & CreateOpt.OPT_ADMIT_DEFEAT;
                    let owner = this.m_owner;
                    let users = JSON.stringify(table.getUsersMap().toObject());
                    let msg = "RoomID: " + this.m_roomId + ", RoomType: " + this.m_roomType + ", baseScore: " + base + ", limit: " + limit + ", playerNum: " + plyNum + ", round: " + round +
                        ", giveIn: " + bGiveIn + ", leftCard: " + bLeft + ", giveInLimit: " + giveInLimit + ", owner: " + owner +
                        ", players: " + users;
                }
            }
        }
        setCurRound(__curRound) {
            this.m_curRound = __curRound;
        }
        setTblStatus(__state) {
            this.m_tblStatus = __state;
            if (this.m_tblStatus == Match_pb_15.NONE || this.m_tblStatus == Match_pb_15.WAIT) {
                this.m_bGameStart = false;
            }
            else if (this.m_tblStatus == Match_pb_15.PLAYING) {
                this.m_bGameStart = true;
            }
        }
        setPlyNum(__num) {
            this.m_plyNum = __num;
        }
        isPrivate() {
            if (this.m_roomType == RoomType.SRF) {
                return true;
            }
            return false;
        }
    }

    class IncludePoker {
        static initCommon() {
            window.G_PokerMgr = new PokerMgr();
            window.G_PokerData = new PokerData();
            window.G_GameSocket = new GameSocket();
        }
    }

    class AdapterGame extends Singleton {
        initGame() {
            let gameTable = DataMatch.getInstance().m_gameTable;
            if (window.G_GameSocket != null && window.G_GameSocket != undefined) {
                this.clearGameState();
            }
            if (GlobalData.getInstance().lobbySocket) {
                GlobalData.getInstance().lobbySocket.syncTime();
            }
            let gameId = gameTable.getGameid();
            if (gameId == GlobalVariables.GAME_ID_MJ_XLMJ) {
                IncludePoker.initCommon();
            }
            window.G_PokerMgr.setTableData(gameTable);
            GameAudio.getInstance().stopMusic();
        }
        createGame() {
            if (LobbyDefine$1.isMiniGame(DataMatch.getInstance().m_gameTable.getGameid())) {
                return;
            }
            this.initGame();
            if (!window.G_GameScene) {
                Laya.View.open(GameRes.MJGAME_SCENE, false, null, Laya.Handler.create(this, function (p_scene) {
                    p_scene.autoDestroyAtClosed = true;
                }));
            }
        }
        enterGame() {
            let table = DataMatch.getInstance().m_tableInfo;
            if (LobbyDefine$1.isMiniGame(DataMatch.getInstance().m_gameTable.getGameid())) {
                this.enterMiniGame();
                return;
            }
            if (!window.G_GameScene) {
                this.initGame();
                window.G_GameSocket.startConnect(GlobalVariables.GAME_SERVICE_XLMJ, table, () => {
                    Laya.View.open(GameRes.MJGAME_SCENE, false, null, Laya.Handler.create(this, function (p_scene) {
                        p_scene.autoDestroyAtClosed = true;
                    }));
                });
            }
            else {
                let gameTable = DataMatch.getInstance().m_gameTable;
                if (gameTable) {
                    let rule = gameTable.getRule();
                    if (rule.getRoomid() != RoomType.SRF) {
                        this.initGame();
                    }
                }
                if (!window.G_GameSocket) {
                    window.G_GameSocket = new GameSocket();
                }
                window.G_GameSocket.startConnect(GlobalVariables.GAME_SERVICE_XLMJ, table, () => {
                    window.G_GameSocket.gotoLogin();
                });
            }
        }
        enterMiniGame() {
            let table = DataMatch.getInstance().m_tableInfo;
            this.initGame();
            let gameId = DataMatch.getInstance().m_gameTable.getGameid();
            let layerName = null;
            if (gameId == GlobalVariables.GAME_ID_MINI_BET) {
            }
            else if (gameId == GlobalVariables.GAME_ID_MINI_YXX) {
            }
            window.G_GameSocket.startConnect(GlobalVariables.GAME_SERVICE_XLMJ, table, () => {
                let layer = PopupManager.isLayerExist(layerName);
                if (!layer) {
                    PopupManager.Show(layerName, null);
                }
                window.G_GameSocket.gotoLogin(table.getStrtableid());
            });
        }
        clearGameState() {
            if (window.G_GameSocket) {
                window.G_GameSocket.closeSocket(true);
            }
            window.G_GameSocket = null;
            if (window.G_PokerMgr) {
                window.G_PokerMgr.clearData();
                window.G_PokerMgr = null;
            }
            GlobalVariables.G_PrivateMJType = 0;
            GlobalVariables.G_PrivateMJPlayMode = 0;
            GlobalVariables.G_IS_CHANGE_TABLE = false;
            GlobalVariables.GAME_MODULE_LOADED = false;
        }
    }

    var MSG_TYPE;
    (function (MSG_TYPE) {
        MSG_TYPE[MSG_TYPE["NORMAL"] = 0] = "NORMAL";
        MSG_TYPE[MSG_TYPE["YES_NO"] = 1] = "YES_NO";
        MSG_TYPE[MSG_TYPE["GIVE_UP"] = 2] = "GIVE_UP";
        MSG_TYPE[MSG_TYPE["NOT_ENOUGH"] = 3] = "NOT_ENOUGH";
    })(MSG_TYPE || (MSG_TYPE = {}));
    class MessageBox extends Laya.Box {
        constructor() {
            super();
            this.notEnough = null;
        }
        onEnable() {
        }
        onDisable() {
        }
        init() {
            this.bg = this.getChildByName("root").getChildByName("bg");
            this.content = this.bg.getChildByName("content");
            this.notEnough = this.bg.getChildByName("notEnough");
            this.m_mask = this.getChildByName("maskbg");
            this.bg.getChildByName("no").on(Laya.Event.MOUSE_DOWN, this, this.onBtnClick, [false]);
            this.bg.getChildByName("yes").on(Laya.Event.MOUSE_DOWN, this, this.onBtnClick, [true]);
            this.m_mask.on(Laya.Event.MOUSE_DOWN, null, null);
            this.m_mask.width = Laya.stage.width + 800;
            this.m_mask.height = Laya.stage.height;
            this.inited = true;
            this._Show(this.data[0], this.data[1], this.data[2]);
        }
        Show(parameter) {
            this.data = parameter;
            if (!this.inited) {
                this.init();
            }
            else {
                this._Show(parameter[0], parameter[1], parameter[2]);
            }
        }
        _Show(strContent, type = MSG_TYPE.NORMAL, messageHandler) {
            this.messageFunction = messageHandler;
            this.m_mask.width = Laya.stage.width + 800;
            this.m_mask.height = Laya.stage.height;
            switch (type) {
                case MSG_TYPE.YES_NO:
                    this.bg.getChildByName("yes").centerX = 230;
                    this.bg.getChildByName("no").visible = true;
                    this.notEnough.visible = false;
                    this.content.visible = true;
                    this.content.text = strContent;
                    break;
                case MSG_TYPE.GIVE_UP:
                    this.bg.getChildByName("yes").centerX = 230;
                    this.bg.getChildByName("no").visible = true;
                    this.notEnough.visible = false;
                    this.content.visible = true;
                    this.content.text = strContent;
                    break;
                case MSG_TYPE.NOT_ENOUGH:
                    this.bg.getChildByName("yes").centerX = 230;
                    this.bg.getChildByName("no").visible = true;
                    this.notEnough.visible = true;
                    this.notEnough.getChildByName('label').text = strContent;
                    this.content.visible = false;
                    break;
                default:
                    this.bg.getChildByName("yes").centerX = 0;
                    this.bg.getChildByName("no").visible = false;
                    this.notEnough.visible = false;
                    this.content.visible = true;
                    this.content.text = strContent;
                    break;
            }
            this.visible = true;
            this.bg.scaleX = 0;
            this.bg.scaleY = 0;
            Laya.Tween.to(this.bg, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 0);
        }
        onBtnClick(isYes) {
            this.messageFunction && this.messageFunction.runWith(isYes);
            this.Close();
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            Laya.Tween.to(this.bg, { scaleX: 0, scaleY: 0 }, 200, Laya.Ease.backIn, Laya.Handler.create(this, () => { this.visible = false; }), 0);
        }
        onDestroy() {
            PopupManager.clear(PREFAB_LOBBY.MESSAGE_BOX);
        }
    }

    class GameHttpRequest {
        static post(url, params, callback) {
            this._callback = callback;
            var xhr = new Laya.HttpRequest();
            xhr.http.timeout = 10000;
            xhr.once(Laya.Event.COMPLETE, this, this.completeHandler);
            xhr.once(Laya.Event.ERROR, this, this.errorHandler);
            let data = JSON.stringify(params);
            let headers = ["content-type", "application/json"];
            xhr.send(url, data, "post", "text", headers);
        }
        static get(url, callback) {
            this._callback = callback;
            var xhr = new Laya.HttpRequest();
            xhr.http.timeout = 10000;
            xhr.once(Laya.Event.COMPLETE, this, this.completeHandler);
            xhr.once(Laya.Event.ERROR, this, this.errorHandler);
            xhr.send(url, '', "get", "text");
        }
        static postLog(url, params, callback) {
            this._callback = callback;
            var xhr = new Laya.HttpRequest();
            xhr.http.timeout = 10000;
            xhr.once(Laya.Event.COMPLETE, this, this.completeHandler);
            xhr.once(Laya.Event.ERROR, this, this.errorHandler);
            let responseType = "text";
            let headers = null;
            headers = ["content-type", "application/json"];
            xhr.send(url, JSON.stringify(params), "post", responseType, headers);
        }
        static getRecord(url, callback) {
            this._handler = callback;
            var xhr = new Laya.HttpRequest();
            xhr.http.timeout = 10000;
            xhr.once(Laya.Event.COMPLETE, this, this.onRecordCompleteHandler);
            xhr.once(Laya.Event.ERROR, this, this.errorRecordHandler);
            xhr.send(url, '', "get", "arraybuffer");
        }
        static onRecordCompleteHandler(res) {
            this._handler.runWith([res, null]);
        }
        static errorRecordHandler(error) {
            this._handler.runWith([null, error]);
        }
        static completeHandler(res) {
            this._callback(res, null);
        }
        static errorHandler(error) {
            this._callback(null, error);
        }
        static parseParam(data) {
            var body = '';
            for (const key in data) {
                if (Object.prototype.hasOwnProperty.call(data, key)) {
                    const val = data[key];
                    body += key + "=" + val + "&";
                }
            }
            return body.slice(0, -1);
        }
    }
    GameHttpRequest._callback = null;
    GameHttpRequest._handler = null;

    var moment = createCommonjsModule(function (module, exports) {
    ;
    (function (global, factory) {
        'object' === 'object' && 'object' !== 'undefined' ? module.exports = factory() :
            typeof undefined === 'function' && undefined.amd ? undefined(factory) :
                global.moment = factory();
    }(commonjsGlobal, (function () {
        'use strict';
        var hookCallback;
        function hooks() {
            return hookCallback.apply(null, arguments);
        }
        function setHookCallback(callback) {
            hookCallback = callback;
        }
        function isArray(input) {
            return (input instanceof Array ||
                Object.prototype.toString.call(input) === '[object Array]');
        }
        function isObject(input) {
            return (input != null &&
                Object.prototype.toString.call(input) === '[object Object]');
        }
        function hasOwnProp(a, b) {
            return Object.prototype.hasOwnProperty.call(a, b);
        }
        function isObjectEmpty(obj) {
            if (Object.getOwnPropertyNames) {
                return Object.getOwnPropertyNames(obj).length === 0;
            }
            else {
                var k;
                for (k in obj) {
                    if (hasOwnProp(obj, k)) {
                        return false;
                    }
                }
                return true;
            }
        }
        function isUndefined(input) {
            return input === void 0;
        }
        function isNumber(input) {
            return (typeof input === 'number' ||
                Object.prototype.toString.call(input) === '[object Number]');
        }
        function isDate(input) {
            return (input instanceof Date ||
                Object.prototype.toString.call(input) === '[object Date]');
        }
        function map(arr, fn) {
            var res = [], i, arrLen = arr.length;
            for (i = 0; i < arrLen; ++i) {
                res.push(fn(arr[i], i));
            }
            return res;
        }
        function extend(a, b) {
            for (var i in b) {
                if (hasOwnProp(b, i)) {
                    a[i] = b[i];
                }
            }
            if (hasOwnProp(b, 'toString')) {
                a.toString = b.toString;
            }
            if (hasOwnProp(b, 'valueOf')) {
                a.valueOf = b.valueOf;
            }
            return a;
        }
        function createUTC(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, true).utc();
        }
        function defaultParsingFlags() {
            return {
                empty: false,
                unusedTokens: [],
                unusedInput: [],
                overflow: -2,
                charsLeftOver: 0,
                nullInput: false,
                invalidEra: null,
                invalidMonth: null,
                invalidFormat: false,
                userInvalidated: false,
                iso: false,
                parsedDateParts: [],
                era: null,
                meridiem: null,
                rfc2822: false,
                weekdayMismatch: false,
            };
        }
        function getParsingFlags(m) {
            if (m._pf == null) {
                m._pf = defaultParsingFlags();
            }
            return m._pf;
        }
        var some;
        if (Array.prototype.some) {
            some = Array.prototype.some;
        }
        else {
            some = function (fun) {
                var t = Object(this), len = t.length >>> 0, i;
                for (i = 0; i < len; i++) {
                    if (i in t && fun.call(this, t[i], i, t)) {
                        return true;
                    }
                }
                return false;
            };
        }
        function isValid(m) {
            var flags = null, parsedParts = false, isNowValid = m._d && !isNaN(m._d.getTime());
            if (isNowValid) {
                flags = getParsingFlags(m);
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                });
                isNowValid =
                    flags.overflow < 0 &&
                        !flags.empty &&
                        !flags.invalidEra &&
                        !flags.invalidMonth &&
                        !flags.invalidWeekday &&
                        !flags.weekdayMismatch &&
                        !flags.nullInput &&
                        !flags.invalidFormat &&
                        !flags.userInvalidated &&
                        (!flags.meridiem || (flags.meridiem && parsedParts));
                if (m._strict) {
                    isNowValid =
                        isNowValid &&
                            flags.charsLeftOver === 0 &&
                            flags.unusedTokens.length === 0 &&
                            flags.bigHour === undefined;
                }
            }
            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
            return m._isValid;
        }
        function createInvalid(flags) {
            var m = createUTC(NaN);
            if (flags != null) {
                extend(getParsingFlags(m), flags);
            }
            else {
                getParsingFlags(m).userInvalidated = true;
            }
            return m;
        }
        var momentProperties = (hooks.momentProperties = []), updateInProgress = false;
        function copyConfig(to, from) {
            var i, prop, val, momentPropertiesLen = momentProperties.length;
            if (!isUndefined(from._isAMomentObject)) {
                to._isAMomentObject = from._isAMomentObject;
            }
            if (!isUndefined(from._i)) {
                to._i = from._i;
            }
            if (!isUndefined(from._f)) {
                to._f = from._f;
            }
            if (!isUndefined(from._l)) {
                to._l = from._l;
            }
            if (!isUndefined(from._strict)) {
                to._strict = from._strict;
            }
            if (!isUndefined(from._tzm)) {
                to._tzm = from._tzm;
            }
            if (!isUndefined(from._isUTC)) {
                to._isUTC = from._isUTC;
            }
            if (!isUndefined(from._offset)) {
                to._offset = from._offset;
            }
            if (!isUndefined(from._pf)) {
                to._pf = getParsingFlags(from);
            }
            if (!isUndefined(from._locale)) {
                to._locale = from._locale;
            }
            if (momentPropertiesLen > 0) {
                for (i = 0; i < momentPropertiesLen; i++) {
                    prop = momentProperties[i];
                    val = from[prop];
                    if (!isUndefined(val)) {
                        to[prop] = val;
                    }
                }
            }
            return to;
        }
        function Moment(config) {
            copyConfig(this, config);
            this._d = new Date(config._d != null ? config._d.getTime() : NaN);
            if (!this.isValid()) {
                this._d = new Date(NaN);
            }
            if (updateInProgress === false) {
                updateInProgress = true;
                hooks.updateOffset(this);
                updateInProgress = false;
            }
        }
        function isMoment(obj) {
            return (obj instanceof Moment || (obj != null && obj._isAMomentObject != null));
        }
        function warn(msg) {
            if (hooks.suppressDeprecationWarnings === false &&
                typeof console !== 'undefined' &&
                console.warn) {
                console.warn('Deprecation warning: ' + msg);
            }
        }
        function deprecate(msg, fn) {
            var firstTime = true;
            return extend(function () {
                if (hooks.deprecationHandler != null) {
                    hooks.deprecationHandler(null, msg);
                }
                if (firstTime) {
                    var args = [], arg, i, key, argLen = arguments.length;
                    for (i = 0; i < argLen; i++) {
                        arg = '';
                        if (typeof arguments[i] === 'object') {
                            arg += '\n[' + i + '] ';
                            for (key in arguments[0]) {
                                if (hasOwnProp(arguments[0], key)) {
                                    arg += key + ': ' + arguments[0][key] + ', ';
                                }
                            }
                            arg = arg.slice(0, -2);
                        }
                        else {
                            arg = arguments[i];
                        }
                        args.push(arg);
                    }
                    warn(msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack);
                    firstTime = false;
                }
                return fn.apply(this, arguments);
            }, fn);
        }
        var deprecations = {};
        function deprecateSimple(name, msg) {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(name, msg);
            }
            if (!deprecations[name]) {
                warn(msg);
                deprecations[name] = true;
            }
        }
        hooks.suppressDeprecationWarnings = false;
        hooks.deprecationHandler = null;
        function isFunction(input) {
            return ((typeof Function !== 'undefined' && input instanceof Function) ||
                Object.prototype.toString.call(input) === '[object Function]');
        }
        function set(config) {
            var prop, i;
            for (i in config) {
                if (hasOwnProp(config, i)) {
                    prop = config[i];
                    if (isFunction(prop)) {
                        this[i] = prop;
                    }
                    else {
                        this['_' + i] = prop;
                    }
                }
            }
            this._config = config;
            this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source);
        }
        function mergeConfigs(parentConfig, childConfig) {
            var res = extend({}, parentConfig), prop;
            for (prop in childConfig) {
                if (hasOwnProp(childConfig, prop)) {
                    if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                        res[prop] = {};
                        extend(res[prop], parentConfig[prop]);
                        extend(res[prop], childConfig[prop]);
                    }
                    else if (childConfig[prop] != null) {
                        res[prop] = childConfig[prop];
                    }
                    else {
                        delete res[prop];
                    }
                }
            }
            for (prop in parentConfig) {
                if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                    res[prop] = extend({}, res[prop]);
                }
            }
            return res;
        }
        function Locale(config) {
            if (config != null) {
                this.set(config);
            }
        }
        var keys;
        if (Object.keys) {
            keys = Object.keys;
        }
        else {
            keys = function (obj) {
                var i, res = [];
                for (i in obj) {
                    if (hasOwnProp(obj, i)) {
                        res.push(i);
                    }
                }
                return res;
            };
        }
        var defaultCalendar = {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        };
        function calendar(key, mom, now) {
            var output = this._calendar[key] || this._calendar['sameElse'];
            return isFunction(output) ? output.call(mom, now) : output;
        }
        function zeroFill(number, targetLength, forceSign) {
            var absNumber = '' + Math.abs(number), zerosToFill = targetLength - absNumber.length, sign = number >= 0;
            return ((sign ? (forceSign ? '+' : '') : '-') +
                Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
                absNumber);
        }
        var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, formatFunctions = {}, formatTokenFunctions = {};
        function addFormatToken(token, padded, ordinal, callback) {
            var func = callback;
            if (typeof callback === 'string') {
                func = function () {
                    return this[callback]();
                };
            }
            if (token) {
                formatTokenFunctions[token] = func;
            }
            if (padded) {
                formatTokenFunctions[padded[0]] = function () {
                    return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
                };
            }
            if (ordinal) {
                formatTokenFunctions[ordinal] = function () {
                    return this.localeData().ordinal(func.apply(this, arguments), token);
                };
            }
        }
        function removeFormattingTokens(input) {
            if (input.match(/\[[\s\S]/)) {
                return input.replace(/^\[|\]$/g, '');
            }
            return input.replace(/\\/g, '');
        }
        function makeFormatFunction(format) {
            var array = format.match(formattingTokens), i, length;
            for (i = 0, length = array.length; i < length; i++) {
                if (formatTokenFunctions[array[i]]) {
                    array[i] = formatTokenFunctions[array[i]];
                }
                else {
                    array[i] = removeFormattingTokens(array[i]);
                }
            }
            return function (mom) {
                var output = '', i;
                for (i = 0; i < length; i++) {
                    output += isFunction(array[i])
                        ? array[i].call(mom, format)
                        : array[i];
                }
                return output;
            };
        }
        function formatMoment(m, format) {
            if (!m.isValid()) {
                return m.localeData().invalidDate();
            }
            format = expandFormat(format, m.localeData());
            formatFunctions[format] =
                formatFunctions[format] || makeFormatFunction(format);
            return formatFunctions[format](m);
        }
        function expandFormat(format, locale) {
            var i = 5;
            function replaceLongDateFormatTokens(input) {
                return locale.longDateFormat(input) || input;
            }
            localFormattingTokens.lastIndex = 0;
            while (i >= 0 && localFormattingTokens.test(format)) {
                format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
                localFormattingTokens.lastIndex = 0;
                i -= 1;
            }
            return format;
        }
        var defaultLongDateFormat = {
            LTS: 'h:mm:ss A',
            LT: 'h:mm A',
            L: 'MM/DD/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A',
        };
        function longDateFormat(key) {
            var format = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];
            if (format || !formatUpper) {
                return format;
            }
            this._longDateFormat[key] = formatUpper
                .match(formattingTokens)
                .map(function (tok) {
                if (tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd') {
                    return tok.slice(1);
                }
                return tok;
            })
                .join('');
            return this._longDateFormat[key];
        }
        var defaultInvalidDate = 'Invalid date';
        function invalidDate() {
            return this._invalidDate;
        }
        var defaultOrdinal = '%d', defaultDayOfMonthOrdinalParse = /\d{1,2}/;
        function ordinal(number) {
            return this._ordinal.replace('%d', number);
        }
        var defaultRelativeTime = {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            w: 'a week',
            ww: '%d weeks',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        };
        function relativeTime(number, withoutSuffix, string, isFuture) {
            var output = this._relativeTime[string];
            return isFunction(output)
                ? output(number, withoutSuffix, string, isFuture)
                : output.replace(/%d/i, number);
        }
        function pastFuture(diff, output) {
            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
            return isFunction(format) ? format(output) : format.replace(/%s/i, output);
        }
        var aliases = {
            D: 'date',
            dates: 'date',
            date: 'date',
            d: 'day',
            days: 'day',
            day: 'day',
            e: 'weekday',
            weekdays: 'weekday',
            weekday: 'weekday',
            E: 'isoWeekday',
            isoweekdays: 'isoWeekday',
            isoweekday: 'isoWeekday',
            DDD: 'dayOfYear',
            dayofyears: 'dayOfYear',
            dayofyear: 'dayOfYear',
            h: 'hour',
            hours: 'hour',
            hour: 'hour',
            ms: 'millisecond',
            milliseconds: 'millisecond',
            millisecond: 'millisecond',
            m: 'minute',
            minutes: 'minute',
            minute: 'minute',
            M: 'month',
            months: 'month',
            month: 'month',
            Q: 'quarter',
            quarters: 'quarter',
            quarter: 'quarter',
            s: 'second',
            seconds: 'second',
            second: 'second',
            gg: 'weekYear',
            weekyears: 'weekYear',
            weekyear: 'weekYear',
            GG: 'isoWeekYear',
            isoweekyears: 'isoWeekYear',
            isoweekyear: 'isoWeekYear',
            w: 'week',
            weeks: 'week',
            week: 'week',
            W: 'isoWeek',
            isoweeks: 'isoWeek',
            isoweek: 'isoWeek',
            y: 'year',
            years: 'year',
            year: 'year',
        };
        function normalizeUnits(units) {
            return typeof units === 'string'
                ? aliases[units] || aliases[units.toLowerCase()]
                : undefined;
        }
        function normalizeObjectUnits(inputObject) {
            var normalizedInput = {}, normalizedProp, prop;
            for (prop in inputObject) {
                if (hasOwnProp(inputObject, prop)) {
                    normalizedProp = normalizeUnits(prop);
                    if (normalizedProp) {
                        normalizedInput[normalizedProp] = inputObject[prop];
                    }
                }
            }
            return normalizedInput;
        }
        var priorities = {
            date: 9,
            day: 11,
            weekday: 11,
            isoWeekday: 11,
            dayOfYear: 4,
            hour: 13,
            millisecond: 16,
            minute: 14,
            month: 8,
            quarter: 7,
            second: 15,
            weekYear: 1,
            isoWeekYear: 1,
            week: 5,
            isoWeek: 5,
            year: 1,
        };
        function getPrioritizedUnits(unitsObj) {
            var units = [], u;
            for (u in unitsObj) {
                if (hasOwnProp(unitsObj, u)) {
                    units.push({ unit: u, priority: priorities[u] });
                }
            }
            units.sort(function (a, b) {
                return a.priority - b.priority;
            });
            return units;
        }
        var match1 = /\d/, match2 = /\d\d/, match3 = /\d{3}/, match4 = /\d{4}/, match6 = /[+-]?\d{6}/, match1to2 = /\d\d?/, match3to4 = /\d\d\d\d?/, match5to6 = /\d\d\d\d\d\d?/, match1to3 = /\d{1,3}/, match1to4 = /\d{1,4}/, match1to6 = /[+-]?\d{1,6}/, matchUnsigned = /\d+/, matchSigned = /[+-]?\d+/, matchOffset = /Z|[+-]\d\d:?\d\d/gi, matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, match1to2NoLeadingZero = /^[1-9]\d?/, match1to2HasZero = /^([1-9]\d|\d)/, regexes;
        regexes = {};
        function addRegexToken(token, regex, strictRegex) {
            regexes[token] = isFunction(regex)
                ? regex
                : function (isStrict, localeData) {
                    return isStrict && strictRegex ? strictRegex : regex;
                };
        }
        function getParseRegexForToken(token, config) {
            if (!hasOwnProp(regexes, token)) {
                return new RegExp(unescapeFormat(token));
            }
            return regexes[token](config._strict, config._locale);
        }
        function unescapeFormat(s) {
            return regexEscape(s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
                return p1 || p2 || p3 || p4;
            }));
        }
        function regexEscape(s) {
            return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
        }
        function absFloor(number) {
            if (number < 0) {
                return Math.ceil(number) || 0;
            }
            else {
                return Math.floor(number);
            }
        }
        function toInt(argumentForCoercion) {
            var coercedNumber = +argumentForCoercion, value = 0;
            if (coercedNumber !== 0 && isFinite(coercedNumber)) {
                value = absFloor(coercedNumber);
            }
            return value;
        }
        var tokens = {};
        function addParseToken(token, callback) {
            var i, func = callback, tokenLen;
            if (typeof token === 'string') {
                token = [token];
            }
            if (isNumber(callback)) {
                func = function (input, array) {
                    array[callback] = toInt(input);
                };
            }
            tokenLen = token.length;
            for (i = 0; i < tokenLen; i++) {
                tokens[token[i]] = func;
            }
        }
        function addWeekParseToken(token, callback) {
            addParseToken(token, function (input, array, config, token) {
                config._w = config._w || {};
                callback(input, config._w, config, token);
            });
        }
        function addTimeToArrayFromToken(token, input, config) {
            if (input != null && hasOwnProp(tokens, token)) {
                tokens[token](input, config._a, config, token);
            }
        }
        function isLeapYear(year) {
            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
        }
        var YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6, WEEK = 7, WEEKDAY = 8;
        addFormatToken('Y', 0, 0, function () {
            var y = this.year();
            return y <= 9999 ? zeroFill(y, 4) : '+' + y;
        });
        addFormatToken(0, ['YY', 2], 0, function () {
            return this.year() % 100;
        });
        addFormatToken(0, ['YYYY', 4], 0, 'year');
        addFormatToken(0, ['YYYYY', 5], 0, 'year');
        addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');
        addRegexToken('Y', matchSigned);
        addRegexToken('YY', match1to2, match2);
        addRegexToken('YYYY', match1to4, match4);
        addRegexToken('YYYYY', match1to6, match6);
        addRegexToken('YYYYYY', match1to6, match6);
        addParseToken(['YYYYY', 'YYYYYY'], YEAR);
        addParseToken('YYYY', function (input, array) {
            array[YEAR] =
                input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
        });
        addParseToken('YY', function (input, array) {
            array[YEAR] = hooks.parseTwoDigitYear(input);
        });
        addParseToken('Y', function (input, array) {
            array[YEAR] = parseInt(input, 10);
        });
        function daysInYear(year) {
            return isLeapYear(year) ? 366 : 365;
        }
        hooks.parseTwoDigitYear = function (input) {
            return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
        };
        var getSetYear = makeGetSet('FullYear', true);
        function getIsLeapYear() {
            return isLeapYear(this.year());
        }
        function makeGetSet(unit, keepTime) {
            return function (value) {
                if (value != null) {
                    set$1(this, unit, value);
                    hooks.updateOffset(this, keepTime);
                    return this;
                }
                else {
                    return get(this, unit);
                }
            };
        }
        function get(mom, unit) {
            if (!mom.isValid()) {
                return NaN;
            }
            var d = mom._d, isUTC = mom._isUTC;
            switch (unit) {
                case 'Milliseconds':
                    return isUTC ? d.getUTCMilliseconds() : d.getMilliseconds();
                case 'Seconds':
                    return isUTC ? d.getUTCSeconds() : d.getSeconds();
                case 'Minutes':
                    return isUTC ? d.getUTCMinutes() : d.getMinutes();
                case 'Hours':
                    return isUTC ? d.getUTCHours() : d.getHours();
                case 'Date':
                    return isUTC ? d.getUTCDate() : d.getDate();
                case 'Day':
                    return isUTC ? d.getUTCDay() : d.getDay();
                case 'Month':
                    return isUTC ? d.getUTCMonth() : d.getMonth();
                case 'FullYear':
                    return isUTC ? d.getUTCFullYear() : d.getFullYear();
                default:
                    return NaN;
            }
        }
        function set$1(mom, unit, value) {
            var d, isUTC, year, month, date;
            if (!mom.isValid() || isNaN(value)) {
                return;
            }
            d = mom._d;
            isUTC = mom._isUTC;
            switch (unit) {
                case 'Milliseconds':
                    return void (isUTC
                        ? d.setUTCMilliseconds(value)
                        : d.setMilliseconds(value));
                case 'Seconds':
                    return void (isUTC ? d.setUTCSeconds(value) : d.setSeconds(value));
                case 'Minutes':
                    return void (isUTC ? d.setUTCMinutes(value) : d.setMinutes(value));
                case 'Hours':
                    return void (isUTC ? d.setUTCHours(value) : d.setHours(value));
                case 'Date':
                    return void (isUTC ? d.setUTCDate(value) : d.setDate(value));
                case 'FullYear':
                    break;
                default:
                    return;
            }
            year = value;
            month = mom.month();
            date = mom.date();
            date = date === 29 && month === 1 && !isLeapYear(year) ? 28 : date;
            void (isUTC
                ? d.setUTCFullYear(year, month, date)
                : d.setFullYear(year, month, date));
        }
        function stringGet(units) {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units]();
            }
            return this;
        }
        function stringSet(units, value) {
            if (typeof units === 'object') {
                units = normalizeObjectUnits(units);
                var prioritized = getPrioritizedUnits(units), i, prioritizedLen = prioritized.length;
                for (i = 0; i < prioritizedLen; i++) {
                    this[prioritized[i].unit](units[prioritized[i].unit]);
                }
            }
            else {
                units = normalizeUnits(units);
                if (isFunction(this[units])) {
                    return this[units](value);
                }
            }
            return this;
        }
        function mod(n, x) {
            return ((n % x) + x) % x;
        }
        var indexOf;
        if (Array.prototype.indexOf) {
            indexOf = Array.prototype.indexOf;
        }
        else {
            indexOf = function (o) {
                var i;
                for (i = 0; i < this.length; ++i) {
                    if (this[i] === o) {
                        return i;
                    }
                }
                return -1;
            };
        }
        function daysInMonth(year, month) {
            if (isNaN(year) || isNaN(month)) {
                return NaN;
            }
            var modMonth = mod(month, 12);
            year += (month - modMonth) / 12;
            return modMonth === 1
                ? isLeapYear(year)
                    ? 29
                    : 28
                : 31 - ((modMonth % 7) % 2);
        }
        addFormatToken('M', ['MM', 2], 'Mo', function () {
            return this.month() + 1;
        });
        addFormatToken('MMM', 0, 0, function (format) {
            return this.localeData().monthsShort(this, format);
        });
        addFormatToken('MMMM', 0, 0, function (format) {
            return this.localeData().months(this, format);
        });
        addRegexToken('M', match1to2, match1to2NoLeadingZero);
        addRegexToken('MM', match1to2, match2);
        addRegexToken('MMM', function (isStrict, locale) {
            return locale.monthsShortRegex(isStrict);
        });
        addRegexToken('MMMM', function (isStrict, locale) {
            return locale.monthsRegex(isStrict);
        });
        addParseToken(['M', 'MM'], function (input, array) {
            array[MONTH] = toInt(input) - 1;
        });
        addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
            var month = config._locale.monthsParse(input, token, config._strict);
            if (month != null) {
                array[MONTH] = month;
            }
            else {
                getParsingFlags(config).invalidMonth = input;
            }
        });
        var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'), defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'), MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord;
        function localeMonths(m, format) {
            if (!m) {
                return isArray(this._months)
                    ? this._months
                    : this._months['standalone'];
            }
            return isArray(this._months)
                ? this._months[m.month()]
                : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                    ? 'format'
                    : 'standalone'][m.month()];
        }
        function localeMonthsShort(m, format) {
            if (!m) {
                return isArray(this._monthsShort)
                    ? this._monthsShort
                    : this._monthsShort['standalone'];
            }
            return isArray(this._monthsShort)
                ? this._monthsShort[m.month()]
                : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
        }
        function handleStrictParse(monthName, format, strict) {
            var i, ii, mom, llc = monthName.toLocaleLowerCase();
            if (!this._monthsParse) {
                this._monthsParse = [];
                this._longMonthsParse = [];
                this._shortMonthsParse = [];
                for (i = 0; i < 12; ++i) {
                    mom = createUTC([2000, i]);
                    this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                    this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
                }
            }
            if (strict) {
                if (format === 'MMM') {
                    ii = indexOf.call(this._shortMonthsParse, llc);
                    return ii !== -1 ? ii : null;
                }
                else {
                    ii = indexOf.call(this._longMonthsParse, llc);
                    return ii !== -1 ? ii : null;
                }
            }
            else {
                if (format === 'MMM') {
                    ii = indexOf.call(this._shortMonthsParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf.call(this._longMonthsParse, llc);
                    return ii !== -1 ? ii : null;
                }
                else {
                    ii = indexOf.call(this._longMonthsParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf.call(this._shortMonthsParse, llc);
                    return ii !== -1 ? ii : null;
                }
            }
        }
        function localeMonthsParse(monthName, format, strict) {
            var i, mom, regex;
            if (this._monthsParseExact) {
                return handleStrictParse.call(this, monthName, format, strict);
            }
            if (!this._monthsParse) {
                this._monthsParse = [];
                this._longMonthsParse = [];
                this._shortMonthsParse = [];
            }
            for (i = 0; i < 12; i++) {
                mom = createUTC([2000, i]);
                if (strict && !this._longMonthsParse[i]) {
                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
                }
                if (!strict && !this._monthsParse[i]) {
                    regex =
                        '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
                }
                if (strict &&
                    format === 'MMMM' &&
                    this._longMonthsParse[i].test(monthName)) {
                    return i;
                }
                else if (strict &&
                    format === 'MMM' &&
                    this._shortMonthsParse[i].test(monthName)) {
                    return i;
                }
                else if (!strict && this._monthsParse[i].test(monthName)) {
                    return i;
                }
            }
        }
        function setMonth(mom, value) {
            if (!mom.isValid()) {
                return mom;
            }
            if (typeof value === 'string') {
                if (/^\d+$/.test(value)) {
                    value = toInt(value);
                }
                else {
                    value = mom.localeData().monthsParse(value);
                    if (!isNumber(value)) {
                        return mom;
                    }
                }
            }
            var month = value, date = mom.date();
            date = date < 29 ? date : Math.min(date, daysInMonth(mom.year(), month));
            void (mom._isUTC
                ? mom._d.setUTCMonth(month, date)
                : mom._d.setMonth(month, date));
            return mom;
        }
        function getSetMonth(value) {
            if (value != null) {
                setMonth(this, value);
                hooks.updateOffset(this, true);
                return this;
            }
            else {
                return get(this, 'Month');
            }
        }
        function getDaysInMonth() {
            return daysInMonth(this.year(), this.month());
        }
        function monthsShortRegex(isStrict) {
            if (this._monthsParseExact) {
                if (!hasOwnProp(this, '_monthsRegex')) {
                    computeMonthsParse.call(this);
                }
                if (isStrict) {
                    return this._monthsShortStrictRegex;
                }
                else {
                    return this._monthsShortRegex;
                }
            }
            else {
                if (!hasOwnProp(this, '_monthsShortRegex')) {
                    this._monthsShortRegex = defaultMonthsShortRegex;
                }
                return this._monthsShortStrictRegex && isStrict
                    ? this._monthsShortStrictRegex
                    : this._monthsShortRegex;
            }
        }
        function monthsRegex(isStrict) {
            if (this._monthsParseExact) {
                if (!hasOwnProp(this, '_monthsRegex')) {
                    computeMonthsParse.call(this);
                }
                if (isStrict) {
                    return this._monthsStrictRegex;
                }
                else {
                    return this._monthsRegex;
                }
            }
            else {
                if (!hasOwnProp(this, '_monthsRegex')) {
                    this._monthsRegex = defaultMonthsRegex;
                }
                return this._monthsStrictRegex && isStrict
                    ? this._monthsStrictRegex
                    : this._monthsRegex;
            }
        }
        function computeMonthsParse() {
            function cmpLenRev(a, b) {
                return b.length - a.length;
            }
            var shortPieces = [], longPieces = [], mixedPieces = [], i, mom, shortP, longP;
            for (i = 0; i < 12; i++) {
                mom = createUTC([2000, i]);
                shortP = regexEscape(this.monthsShort(mom, ''));
                longP = regexEscape(this.months(mom, ''));
                shortPieces.push(shortP);
                longPieces.push(longP);
                mixedPieces.push(longP);
                mixedPieces.push(shortP);
            }
            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);
            this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
            this._monthsShortRegex = this._monthsRegex;
            this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
            this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        }
        function createDate(y, m, d, h, M, s, ms) {
            var date;
            if (y < 100 && y >= 0) {
                date = new Date(y + 400, m, d, h, M, s, ms);
                if (isFinite(date.getFullYear())) {
                    date.setFullYear(y);
                }
            }
            else {
                date = new Date(y, m, d, h, M, s, ms);
            }
            return date;
        }
        function createUTCDate(y) {
            var date, args;
            if (y < 100 && y >= 0) {
                args = Array.prototype.slice.call(arguments);
                args[0] = y + 400;
                date = new Date(Date.UTC.apply(null, args));
                if (isFinite(date.getUTCFullYear())) {
                    date.setUTCFullYear(y);
                }
            }
            else {
                date = new Date(Date.UTC.apply(null, arguments));
            }
            return date;
        }
        function firstWeekOffset(year, dow, doy) {
            var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
            return -fwdlw + fwd - 1;
        }
        function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
            var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
            if (dayOfYear <= 0) {
                resYear = year - 1;
                resDayOfYear = daysInYear(resYear) + dayOfYear;
            }
            else if (dayOfYear > daysInYear(year)) {
                resYear = year + 1;
                resDayOfYear = dayOfYear - daysInYear(year);
            }
            else {
                resYear = year;
                resDayOfYear = dayOfYear;
            }
            return {
                year: resYear,
                dayOfYear: resDayOfYear,
            };
        }
        function weekOfYear(mom, dow, doy) {
            var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
            if (week < 1) {
                resYear = mom.year() - 1;
                resWeek = week + weeksInYear(resYear, dow, doy);
            }
            else if (week > weeksInYear(mom.year(), dow, doy)) {
                resWeek = week - weeksInYear(mom.year(), dow, doy);
                resYear = mom.year() + 1;
            }
            else {
                resYear = mom.year();
                resWeek = week;
            }
            return {
                week: resWeek,
                year: resYear,
            };
        }
        function weeksInYear(year, dow, doy) {
            var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
            return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
        }
        addFormatToken('w', ['ww', 2], 'wo', 'week');
        addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');
        addRegexToken('w', match1to2, match1to2NoLeadingZero);
        addRegexToken('ww', match1to2, match2);
        addRegexToken('W', match1to2, match1to2NoLeadingZero);
        addRegexToken('WW', match1to2, match2);
        addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
            week[token.substr(0, 1)] = toInt(input);
        });
        function localeWeek(mom) {
            return weekOfYear(mom, this._week.dow, this._week.doy).week;
        }
        var defaultLocaleWeek = {
            dow: 0,
            doy: 6,
        };
        function localeFirstDayOfWeek() {
            return this._week.dow;
        }
        function localeFirstDayOfYear() {
            return this._week.doy;
        }
        function getSetWeek(input) {
            var week = this.localeData().week(this);
            return input == null ? week : this.add((input - week) * 7, 'd');
        }
        function getSetISOWeek(input) {
            var week = weekOfYear(this, 1, 4).week;
            return input == null ? week : this.add((input - week) * 7, 'd');
        }
        addFormatToken('d', 0, 'do', 'day');
        addFormatToken('dd', 0, 0, function (format) {
            return this.localeData().weekdaysMin(this, format);
        });
        addFormatToken('ddd', 0, 0, function (format) {
            return this.localeData().weekdaysShort(this, format);
        });
        addFormatToken('dddd', 0, 0, function (format) {
            return this.localeData().weekdays(this, format);
        });
        addFormatToken('e', 0, 0, 'weekday');
        addFormatToken('E', 0, 0, 'isoWeekday');
        addRegexToken('d', match1to2);
        addRegexToken('e', match1to2);
        addRegexToken('E', match1to2);
        addRegexToken('dd', function (isStrict, locale) {
            return locale.weekdaysMinRegex(isStrict);
        });
        addRegexToken('ddd', function (isStrict, locale) {
            return locale.weekdaysShortRegex(isStrict);
        });
        addRegexToken('dddd', function (isStrict, locale) {
            return locale.weekdaysRegex(isStrict);
        });
        addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
            var weekday = config._locale.weekdaysParse(input, token, config._strict);
            if (weekday != null) {
                week.d = weekday;
            }
            else {
                getParsingFlags(config).invalidWeekday = input;
            }
        });
        addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
            week[token] = toInt(input);
        });
        function parseWeekday(input, locale) {
            if (typeof input !== 'string') {
                return input;
            }
            if (!isNaN(input)) {
                return parseInt(input, 10);
            }
            input = locale.weekdaysParse(input);
            if (typeof input === 'number') {
                return input;
            }
            return null;
        }
        function parseIsoWeekday(input, locale) {
            if (typeof input === 'string') {
                return locale.weekdaysParse(input) % 7 || 7;
            }
            return isNaN(input) ? null : input;
        }
        function shiftWeekdays(ws, n) {
            return ws.slice(n, 7).concat(ws.slice(0, n));
        }
        var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'), defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'), defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'), defaultWeekdaysRegex = matchWord, defaultWeekdaysShortRegex = matchWord, defaultWeekdaysMinRegex = matchWord;
        function localeWeekdays(m, format) {
            var weekdays = isArray(this._weekdays)
                ? this._weekdays
                : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format)
                    ? 'format'
                    : 'standalone'];
            return m === true
                ? shiftWeekdays(weekdays, this._week.dow)
                : m
                    ? weekdays[m.day()]
                    : weekdays;
        }
        function localeWeekdaysShort(m) {
            return m === true
                ? shiftWeekdays(this._weekdaysShort, this._week.dow)
                : m
                    ? this._weekdaysShort[m.day()]
                    : this._weekdaysShort;
        }
        function localeWeekdaysMin(m) {
            return m === true
                ? shiftWeekdays(this._weekdaysMin, this._week.dow)
                : m
                    ? this._weekdaysMin[m.day()]
                    : this._weekdaysMin;
        }
        function handleStrictParse$1(weekdayName, format, strict) {
            var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
            if (!this._weekdaysParse) {
                this._weekdaysParse = [];
                this._shortWeekdaysParse = [];
                this._minWeekdaysParse = [];
                for (i = 0; i < 7; ++i) {
                    mom = createUTC([2000, 1]).day(i);
                    this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                    this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                    this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
                }
            }
            if (strict) {
                if (format === 'dddd') {
                    ii = indexOf.call(this._weekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                }
                else if (format === 'ddd') {
                    ii = indexOf.call(this._shortWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                }
                else {
                    ii = indexOf.call(this._minWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                }
            }
            else {
                if (format === 'dddd') {
                    ii = indexOf.call(this._weekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf.call(this._shortWeekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf.call(this._minWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                }
                else if (format === 'ddd') {
                    ii = indexOf.call(this._shortWeekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf.call(this._weekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf.call(this._minWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                }
                else {
                    ii = indexOf.call(this._minWeekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf.call(this._weekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf.call(this._shortWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                }
            }
        }
        function localeWeekdaysParse(weekdayName, format, strict) {
            var i, mom, regex;
            if (this._weekdaysParseExact) {
                return handleStrictParse$1.call(this, weekdayName, format, strict);
            }
            if (!this._weekdaysParse) {
                this._weekdaysParse = [];
                this._minWeekdaysParse = [];
                this._shortWeekdaysParse = [];
                this._fullWeekdaysParse = [];
            }
            for (i = 0; i < 7; i++) {
                mom = createUTC([2000, 1]).day(i);
                if (strict && !this._fullWeekdaysParse[i]) {
                    this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                    this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                    this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
                }
                if (!this._weekdaysParse[i]) {
                    regex =
                        '^' +
                            this.weekdays(mom, '') +
                            '|^' +
                            this.weekdaysShort(mom, '') +
                            '|^' +
                            this.weekdaysMin(mom, '');
                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
                }
                if (strict &&
                    format === 'dddd' &&
                    this._fullWeekdaysParse[i].test(weekdayName)) {
                    return i;
                }
                else if (strict &&
                    format === 'ddd' &&
                    this._shortWeekdaysParse[i].test(weekdayName)) {
                    return i;
                }
                else if (strict &&
                    format === 'dd' &&
                    this._minWeekdaysParse[i].test(weekdayName)) {
                    return i;
                }
                else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                    return i;
                }
            }
        }
        function getSetDayOfWeek(input) {
            if (!this.isValid()) {
                return input != null ? this : NaN;
            }
            var day = get(this, 'Day');
            if (input != null) {
                input = parseWeekday(input, this.localeData());
                return this.add(input - day, 'd');
            }
            else {
                return day;
            }
        }
        function getSetLocaleDayOfWeek(input) {
            if (!this.isValid()) {
                return input != null ? this : NaN;
            }
            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return input == null ? weekday : this.add(input - weekday, 'd');
        }
        function getSetISODayOfWeek(input) {
            if (!this.isValid()) {
                return input != null ? this : NaN;
            }
            if (input != null) {
                var weekday = parseIsoWeekday(input, this.localeData());
                return this.day(this.day() % 7 ? weekday : weekday - 7);
            }
            else {
                return this.day() || 7;
            }
        }
        function weekdaysRegex(isStrict) {
            if (this._weekdaysParseExact) {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                    computeWeekdaysParse.call(this);
                }
                if (isStrict) {
                    return this._weekdaysStrictRegex;
                }
                else {
                    return this._weekdaysRegex;
                }
            }
            else {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                    this._weekdaysRegex = defaultWeekdaysRegex;
                }
                return this._weekdaysStrictRegex && isStrict
                    ? this._weekdaysStrictRegex
                    : this._weekdaysRegex;
            }
        }
        function weekdaysShortRegex(isStrict) {
            if (this._weekdaysParseExact) {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                    computeWeekdaysParse.call(this);
                }
                if (isStrict) {
                    return this._weekdaysShortStrictRegex;
                }
                else {
                    return this._weekdaysShortRegex;
                }
            }
            else {
                if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                    this._weekdaysShortRegex = defaultWeekdaysShortRegex;
                }
                return this._weekdaysShortStrictRegex && isStrict
                    ? this._weekdaysShortStrictRegex
                    : this._weekdaysShortRegex;
            }
        }
        function weekdaysMinRegex(isStrict) {
            if (this._weekdaysParseExact) {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                    computeWeekdaysParse.call(this);
                }
                if (isStrict) {
                    return this._weekdaysMinStrictRegex;
                }
                else {
                    return this._weekdaysMinRegex;
                }
            }
            else {
                if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                    this._weekdaysMinRegex = defaultWeekdaysMinRegex;
                }
                return this._weekdaysMinStrictRegex && isStrict
                    ? this._weekdaysMinStrictRegex
                    : this._weekdaysMinRegex;
            }
        }
        function computeWeekdaysParse() {
            function cmpLenRev(a, b) {
                return b.length - a.length;
            }
            var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i, mom, minp, shortp, longp;
            for (i = 0; i < 7; i++) {
                mom = createUTC([2000, 1]).day(i);
                minp = regexEscape(this.weekdaysMin(mom, ''));
                shortp = regexEscape(this.weekdaysShort(mom, ''));
                longp = regexEscape(this.weekdays(mom, ''));
                minPieces.push(minp);
                shortPieces.push(shortp);
                longPieces.push(longp);
                mixedPieces.push(minp);
                mixedPieces.push(shortp);
                mixedPieces.push(longp);
            }
            minPieces.sort(cmpLenRev);
            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);
            this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
            this._weekdaysShortRegex = this._weekdaysRegex;
            this._weekdaysMinRegex = this._weekdaysRegex;
            this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
            this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
            this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
        }
        function hFormat() {
            return this.hours() % 12 || 12;
        }
        function kFormat() {
            return this.hours() || 24;
        }
        addFormatToken('H', ['HH', 2], 0, 'hour');
        addFormatToken('h', ['hh', 2], 0, hFormat);
        addFormatToken('k', ['kk', 2], 0, kFormat);
        addFormatToken('hmm', 0, 0, function () {
            return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
        });
        addFormatToken('hmmss', 0, 0, function () {
            return ('' +
                hFormat.apply(this) +
                zeroFill(this.minutes(), 2) +
                zeroFill(this.seconds(), 2));
        });
        addFormatToken('Hmm', 0, 0, function () {
            return '' + this.hours() + zeroFill(this.minutes(), 2);
        });
        addFormatToken('Hmmss', 0, 0, function () {
            return ('' +
                this.hours() +
                zeroFill(this.minutes(), 2) +
                zeroFill(this.seconds(), 2));
        });
        function meridiem(token, lowercase) {
            addFormatToken(token, 0, 0, function () {
                return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
            });
        }
        meridiem('a', true);
        meridiem('A', false);
        function matchMeridiem(isStrict, locale) {
            return locale._meridiemParse;
        }
        addRegexToken('a', matchMeridiem);
        addRegexToken('A', matchMeridiem);
        addRegexToken('H', match1to2, match1to2HasZero);
        addRegexToken('h', match1to2, match1to2NoLeadingZero);
        addRegexToken('k', match1to2, match1to2NoLeadingZero);
        addRegexToken('HH', match1to2, match2);
        addRegexToken('hh', match1to2, match2);
        addRegexToken('kk', match1to2, match2);
        addRegexToken('hmm', match3to4);
        addRegexToken('hmmss', match5to6);
        addRegexToken('Hmm', match3to4);
        addRegexToken('Hmmss', match5to6);
        addParseToken(['H', 'HH'], HOUR);
        addParseToken(['k', 'kk'], function (input, array, config) {
            var kInput = toInt(input);
            array[HOUR] = kInput === 24 ? 0 : kInput;
        });
        addParseToken(['a', 'A'], function (input, array, config) {
            config._isPm = config._locale.isPM(input);
            config._meridiem = input;
        });
        addParseToken(['h', 'hh'], function (input, array, config) {
            array[HOUR] = toInt(input);
            getParsingFlags(config).bigHour = true;
        });
        addParseToken('hmm', function (input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
            getParsingFlags(config).bigHour = true;
        });
        addParseToken('hmmss', function (input, array, config) {
            var pos1 = input.length - 4, pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
            getParsingFlags(config).bigHour = true;
        });
        addParseToken('Hmm', function (input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
        });
        addParseToken('Hmmss', function (input, array, config) {
            var pos1 = input.length - 4, pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
        });
        function localeIsPM(input) {
            return (input + '').toLowerCase().charAt(0) === 'p';
        }
        var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i, getSetHour = makeGetSet('Hours', true);
        function localeMeridiem(hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'pm' : 'PM';
            }
            else {
                return isLower ? 'am' : 'AM';
            }
        }
        var baseConfig = {
            calendar: defaultCalendar,
            longDateFormat: defaultLongDateFormat,
            invalidDate: defaultInvalidDate,
            ordinal: defaultOrdinal,
            dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
            relativeTime: defaultRelativeTime,
            months: defaultLocaleMonths,
            monthsShort: defaultLocaleMonthsShort,
            week: defaultLocaleWeek,
            weekdays: defaultLocaleWeekdays,
            weekdaysMin: defaultLocaleWeekdaysMin,
            weekdaysShort: defaultLocaleWeekdaysShort,
            meridiemParse: defaultLocaleMeridiemParse,
        };
        var locales = {}, localeFamilies = {}, globalLocale;
        function commonPrefix(arr1, arr2) {
            var i, minl = Math.min(arr1.length, arr2.length);
            for (i = 0; i < minl; i += 1) {
                if (arr1[i] !== arr2[i]) {
                    return i;
                }
            }
            return minl;
        }
        function normalizeLocale(key) {
            return key ? key.toLowerCase().replace('_', '-') : key;
        }
        function chooseLocale(names) {
            var i = 0, j, next, locale, split;
            while (i < names.length) {
                split = normalizeLocale(names[i]).split('-');
                j = split.length;
                next = normalizeLocale(names[i + 1]);
                next = next ? next.split('-') : null;
                while (j > 0) {
                    locale = loadLocale(split.slice(0, j).join('-'));
                    if (locale) {
                        return locale;
                    }
                    if (next &&
                        next.length >= j &&
                        commonPrefix(split, next) >= j - 1) {
                        break;
                    }
                    j--;
                }
                i++;
            }
            return globalLocale;
        }
        function isLocaleNameSane(name) {
            return !!(name && name.match('^[^/\\\\]*$'));
        }
        function loadLocale(name) {
            var oldLocale = null, aliasedRequire;
            if (locales[name] === undefined &&
                'object' !== 'undefined' &&
                module &&
                module.exports &&
                isLocaleNameSane(name)) {
                try {
                    oldLocale = globalLocale._abbr;
                    aliasedRequire = commonjsRequire;
                    aliasedRequire('./locale/' + name);
                    getSetGlobalLocale(oldLocale);
                }
                catch (e) {
                    locales[name] = null;
                }
            }
            return locales[name];
        }
        function getSetGlobalLocale(key, values) {
            var data;
            if (key) {
                if (isUndefined(values)) {
                    data = getLocale(key);
                }
                else {
                    data = defineLocale(key, values);
                }
                if (data) {
                    globalLocale = data;
                }
                else {
                    if (typeof console !== 'undefined' && console.warn) {
                        console.warn('Locale ' + key + ' not found. Did you forget to load it?');
                    }
                }
            }
            return globalLocale._abbr;
        }
        function defineLocale(name, config) {
            if (config !== null) {
                var locale, parentConfig = baseConfig;
                config.abbr = name;
                if (locales[name] != null) {
                    deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                    parentConfig = locales[name]._config;
                }
                else if (config.parentLocale != null) {
                    if (locales[config.parentLocale] != null) {
                        parentConfig = locales[config.parentLocale]._config;
                    }
                    else {
                        locale = loadLocale(config.parentLocale);
                        if (locale != null) {
                            parentConfig = locale._config;
                        }
                        else {
                            if (!localeFamilies[config.parentLocale]) {
                                localeFamilies[config.parentLocale] = [];
                            }
                            localeFamilies[config.parentLocale].push({
                                name: name,
                                config: config,
                            });
                            return null;
                        }
                    }
                }
                locales[name] = new Locale(mergeConfigs(parentConfig, config));
                if (localeFamilies[name]) {
                    localeFamilies[name].forEach(function (x) {
                        defineLocale(x.name, x.config);
                    });
                }
                getSetGlobalLocale(name);
                return locales[name];
            }
            else {
                delete locales[name];
                return null;
            }
        }
        function updateLocale(name, config) {
            if (config != null) {
                var locale, tmpLocale, parentConfig = baseConfig;
                if (locales[name] != null && locales[name].parentLocale != null) {
                    locales[name].set(mergeConfigs(locales[name]._config, config));
                }
                else {
                    tmpLocale = loadLocale(name);
                    if (tmpLocale != null) {
                        parentConfig = tmpLocale._config;
                    }
                    config = mergeConfigs(parentConfig, config);
                    if (tmpLocale == null) {
                        config.abbr = name;
                    }
                    locale = new Locale(config);
                    locale.parentLocale = locales[name];
                    locales[name] = locale;
                }
                getSetGlobalLocale(name);
            }
            else {
                if (locales[name] != null) {
                    if (locales[name].parentLocale != null) {
                        locales[name] = locales[name].parentLocale;
                        if (name === getSetGlobalLocale()) {
                            getSetGlobalLocale(name);
                        }
                    }
                    else if (locales[name] != null) {
                        delete locales[name];
                    }
                }
            }
            return locales[name];
        }
        function getLocale(key) {
            var locale;
            if (key && key._locale && key._locale._abbr) {
                key = key._locale._abbr;
            }
            if (!key) {
                return globalLocale;
            }
            if (!isArray(key)) {
                locale = loadLocale(key);
                if (locale) {
                    return locale;
                }
                key = [key];
            }
            return chooseLocale(key);
        }
        function listLocales() {
            return keys(locales);
        }
        function checkOverflow(m) {
            var overflow, a = m._a;
            if (a && getParsingFlags(m).overflow === -2) {
                overflow =
                    a[MONTH] < 0 || a[MONTH] > 11
                        ? MONTH
                        : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                            ? DATE
                            : a[HOUR] < 0 ||
                                a[HOUR] > 24 ||
                                (a[HOUR] === 24 &&
                                    (a[MINUTE] !== 0 ||
                                        a[SECOND] !== 0 ||
                                        a[MILLISECOND] !== 0))
                                ? HOUR
                                : a[MINUTE] < 0 || a[MINUTE] > 59
                                    ? MINUTE
                                    : a[SECOND] < 0 || a[SECOND] > 59
                                        ? SECOND
                                        : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                                            ? MILLISECOND
                                            : -1;
                if (getParsingFlags(m)._overflowDayOfYear &&
                    (overflow < YEAR || overflow > DATE)) {
                    overflow = DATE;
                }
                if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                    overflow = WEEK;
                }
                if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                    overflow = WEEKDAY;
                }
                getParsingFlags(m).overflow = overflow;
            }
            return m;
        }
        var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, tzRegex = /Z|[+-]\d\d(?::?\d\d)?/, isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ], isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ], aspNetJsonRegex = /^\/?Date\((-?\d+)/i, rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };
        function configFromISO(config) {
            var i, l, string = config._i, match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;
            if (match) {
                getParsingFlags(config).iso = true;
                for (i = 0, l = isoDatesLen; i < l; i++) {
                    if (isoDates[i][1].exec(match[1])) {
                        dateFormat = isoDates[i][0];
                        allowTime = isoDates[i][2] !== false;
                        break;
                    }
                }
                if (dateFormat == null) {
                    config._isValid = false;
                    return;
                }
                if (match[3]) {
                    for (i = 0, l = isoTimesLen; i < l; i++) {
                        if (isoTimes[i][1].exec(match[3])) {
                            timeFormat = (match[2] || ' ') + isoTimes[i][0];
                            break;
                        }
                    }
                    if (timeFormat == null) {
                        config._isValid = false;
                        return;
                    }
                }
                if (!allowTime && timeFormat != null) {
                    config._isValid = false;
                    return;
                }
                if (match[4]) {
                    if (tzRegex.exec(match[4])) {
                        tzFormat = 'Z';
                    }
                    else {
                        config._isValid = false;
                        return;
                    }
                }
                config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
                configFromStringAndFormat(config);
            }
            else {
                config._isValid = false;
            }
        }
        function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
            var result = [
                untruncateYear(yearStr),
                defaultLocaleMonthsShort.indexOf(monthStr),
                parseInt(dayStr, 10),
                parseInt(hourStr, 10),
                parseInt(minuteStr, 10),
            ];
            if (secondStr) {
                result.push(parseInt(secondStr, 10));
            }
            return result;
        }
        function untruncateYear(yearStr) {
            var year = parseInt(yearStr, 10);
            if (year <= 49) {
                return 2000 + year;
            }
            else if (year <= 999) {
                return 1900 + year;
            }
            return year;
        }
        function preprocessRFC2822(s) {
            return s
                .replace(/\([^()]*\)|[\n\t]/g, ' ')
                .replace(/(\s\s+)/g, ' ')
                .replace(/^\s\s*/, '')
                .replace(/\s\s*$/, '');
        }
        function checkWeekday(weekdayStr, parsedInput, config) {
            if (weekdayStr) {
                var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
                if (weekdayProvided !== weekdayActual) {
                    getParsingFlags(config).weekdayMismatch = true;
                    config._isValid = false;
                    return false;
                }
            }
            return true;
        }
        function calculateOffset(obsOffset, militaryOffset, numOffset) {
            if (obsOffset) {
                return obsOffsets[obsOffset];
            }
            else if (militaryOffset) {
                return 0;
            }
            else {
                var hm = parseInt(numOffset, 10), m = hm % 100, h = (hm - m) / 100;
                return h * 60 + m;
            }
        }
        function configFromRFC2822(config) {
            var match = rfc2822.exec(preprocessRFC2822(config._i)), parsedArray;
            if (match) {
                parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
                if (!checkWeekday(match[1], parsedArray, config)) {
                    return;
                }
                config._a = parsedArray;
                config._tzm = calculateOffset(match[8], match[9], match[10]);
                config._d = createUTCDate.apply(null, config._a);
                config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
                getParsingFlags(config).rfc2822 = true;
            }
            else {
                config._isValid = false;
            }
        }
        function configFromString(config) {
            var matched = aspNetJsonRegex.exec(config._i);
            if (matched !== null) {
                config._d = new Date(+matched[1]);
                return;
            }
            configFromISO(config);
            if (config._isValid === false) {
                delete config._isValid;
            }
            else {
                return;
            }
            configFromRFC2822(config);
            if (config._isValid === false) {
                delete config._isValid;
            }
            else {
                return;
            }
            if (config._strict) {
                config._isValid = false;
            }
            else {
                hooks.createFromInputFallback(config);
            }
        }
        hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        });
        function defaults(a, b, c) {
            if (a != null) {
                return a;
            }
            if (b != null) {
                return b;
            }
            return c;
        }
        function currentDateArray(config) {
            var nowValue = new Date(hooks.now());
            if (config._useUTC) {
                return [
                    nowValue.getUTCFullYear(),
                    nowValue.getUTCMonth(),
                    nowValue.getUTCDate(),
                ];
            }
            return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
        }
        function configFromArray(config) {
            var i, date, input = [], currentDate, expectedWeekday, yearToUse;
            if (config._d) {
                return;
            }
            currentDate = currentDateArray(config);
            if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
                dayOfYearFromWeekInfo(config);
            }
            if (config._dayOfYear != null) {
                yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
                if (config._dayOfYear > daysInYear(yearToUse) ||
                    config._dayOfYear === 0) {
                    getParsingFlags(config)._overflowDayOfYear = true;
                }
                date = createUTCDate(yearToUse, 0, config._dayOfYear);
                config._a[MONTH] = date.getUTCMonth();
                config._a[DATE] = date.getUTCDate();
            }
            for (i = 0; i < 3 && config._a[i] == null; ++i) {
                config._a[i] = input[i] = currentDate[i];
            }
            for (; i < 7; i++) {
                config._a[i] = input[i] =
                    config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
            }
            if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
                config._nextDay = true;
                config._a[HOUR] = 0;
            }
            config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
            expectedWeekday = config._useUTC
                ? config._d.getUTCDay()
                : config._d.getDay();
            if (config._tzm != null) {
                config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
            }
            if (config._nextDay) {
                config._a[HOUR] = 24;
            }
            if (config._w &&
                typeof config._w.d !== 'undefined' &&
                config._w.d !== expectedWeekday) {
                getParsingFlags(config).weekdayMismatch = true;
            }
        }
        function dayOfYearFromWeekInfo(config) {
            var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
            w = config._w;
            if (w.GG != null || w.W != null || w.E != null) {
                dow = 1;
                doy = 4;
                weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
                week = defaults(w.W, 1);
                weekday = defaults(w.E, 1);
                if (weekday < 1 || weekday > 7) {
                    weekdayOverflow = true;
                }
            }
            else {
                dow = config._locale._week.dow;
                doy = config._locale._week.doy;
                curWeek = weekOfYear(createLocal(), dow, doy);
                weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
                week = defaults(w.w, curWeek.week);
                if (w.d != null) {
                    weekday = w.d;
                    if (weekday < 0 || weekday > 6) {
                        weekdayOverflow = true;
                    }
                }
                else if (w.e != null) {
                    weekday = w.e + dow;
                    if (w.e < 0 || w.e > 6) {
                        weekdayOverflow = true;
                    }
                }
                else {
                    weekday = dow;
                }
            }
            if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
                getParsingFlags(config)._overflowWeeks = true;
            }
            else if (weekdayOverflow != null) {
                getParsingFlags(config)._overflowWeekday = true;
            }
            else {
                temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
                config._a[YEAR] = temp.year;
                config._dayOfYear = temp.dayOfYear;
            }
        }
        hooks.ISO_8601 = function () { };
        hooks.RFC_2822 = function () { };
        function configFromStringAndFormat(config) {
            if (config._f === hooks.ISO_8601) {
                configFromISO(config);
                return;
            }
            if (config._f === hooks.RFC_2822) {
                configFromRFC2822(config);
                return;
            }
            config._a = [];
            getParsingFlags(config).empty = true;
            var string = '' + config._i, i, parsedInput, tokens, token, skipped, stringLength = string.length, totalParsedInputLength = 0, era, tokenLen;
            tokens =
                expandFormat(config._f, config._locale).match(formattingTokens) || [];
            tokenLen = tokens.length;
            for (i = 0; i < tokenLen; i++) {
                token = tokens[i];
                parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                    [])[0];
                if (parsedInput) {
                    skipped = string.substr(0, string.indexOf(parsedInput));
                    if (skipped.length > 0) {
                        getParsingFlags(config).unusedInput.push(skipped);
                    }
                    string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                    totalParsedInputLength += parsedInput.length;
                }
                if (formatTokenFunctions[token]) {
                    if (parsedInput) {
                        getParsingFlags(config).empty = false;
                    }
                    else {
                        getParsingFlags(config).unusedTokens.push(token);
                    }
                    addTimeToArrayFromToken(token, parsedInput, config);
                }
                else if (config._strict && !parsedInput) {
                    getParsingFlags(config).unusedTokens.push(token);
                }
            }
            getParsingFlags(config).charsLeftOver =
                stringLength - totalParsedInputLength;
            if (string.length > 0) {
                getParsingFlags(config).unusedInput.push(string);
            }
            if (config._a[HOUR] <= 12 &&
                getParsingFlags(config).bigHour === true &&
                config._a[HOUR] > 0) {
                getParsingFlags(config).bigHour = undefined;
            }
            getParsingFlags(config).parsedDateParts = config._a.slice(0);
            getParsingFlags(config).meridiem = config._meridiem;
            config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
            era = getParsingFlags(config).era;
            if (era !== null) {
                config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
            }
            configFromArray(config);
            checkOverflow(config);
        }
        function meridiemFixWrap(locale, hour, meridiem) {
            var isPm;
            if (meridiem == null) {
                return hour;
            }
            if (locale.meridiemHour != null) {
                return locale.meridiemHour(hour, meridiem);
            }
            else if (locale.isPM != null) {
                isPm = locale.isPM(meridiem);
                if (isPm && hour < 12) {
                    hour += 12;
                }
                if (!isPm && hour === 12) {
                    hour = 0;
                }
                return hour;
            }
            else {
                return hour;
            }
        }
        function configFromStringAndArray(config) {
            var tempConfig, bestMoment, scoreToBeat, i, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config._f.length;
            if (configfLen === 0) {
                getParsingFlags(config).invalidFormat = true;
                config._d = new Date(NaN);
                return;
            }
            for (i = 0; i < configfLen; i++) {
                currentScore = 0;
                validFormatFound = false;
                tempConfig = copyConfig({}, config);
                if (config._useUTC != null) {
                    tempConfig._useUTC = config._useUTC;
                }
                tempConfig._f = config._f[i];
                configFromStringAndFormat(tempConfig);
                if (isValid(tempConfig)) {
                    validFormatFound = true;
                }
                currentScore += getParsingFlags(tempConfig).charsLeftOver;
                currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
                getParsingFlags(tempConfig).score = currentScore;
                if (!bestFormatIsValid) {
                    if (scoreToBeat == null ||
                        currentScore < scoreToBeat ||
                        validFormatFound) {
                        scoreToBeat = currentScore;
                        bestMoment = tempConfig;
                        if (validFormatFound) {
                            bestFormatIsValid = true;
                        }
                    }
                }
                else {
                    if (currentScore < scoreToBeat) {
                        scoreToBeat = currentScore;
                        bestMoment = tempConfig;
                    }
                }
            }
            extend(config, bestMoment || tempConfig);
        }
        function configFromObject(config) {
            if (config._d) {
                return;
            }
            var i = normalizeObjectUnits(config._i), dayOrDate = i.day === undefined ? i.date : i.day;
            config._a = map([i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond], function (obj) {
                return obj && parseInt(obj, 10);
            });
            configFromArray(config);
        }
        function createFromConfig(config) {
            var res = new Moment(checkOverflow(prepareConfig(config)));
            if (res._nextDay) {
                res.add(1, 'd');
                res._nextDay = undefined;
            }
            return res;
        }
        function prepareConfig(config) {
            var input = config._i, format = config._f;
            config._locale = config._locale || getLocale(config._l);
            if (input === null || (format === undefined && input === '')) {
                return createInvalid({ nullInput: true });
            }
            if (typeof input === 'string') {
                config._i = input = config._locale.preparse(input);
            }
            if (isMoment(input)) {
                return new Moment(checkOverflow(input));
            }
            else if (isDate(input)) {
                config._d = input;
            }
            else if (isArray(format)) {
                configFromStringAndArray(config);
            }
            else if (format) {
                configFromStringAndFormat(config);
            }
            else {
                configFromInput(config);
            }
            if (!isValid(config)) {
                config._d = null;
            }
            return config;
        }
        function configFromInput(config) {
            var input = config._i;
            if (isUndefined(input)) {
                config._d = new Date(hooks.now());
            }
            else if (isDate(input)) {
                config._d = new Date(input.valueOf());
            }
            else if (typeof input === 'string') {
                configFromString(config);
            }
            else if (isArray(input)) {
                config._a = map(input.slice(0), function (obj) {
                    return parseInt(obj, 10);
                });
                configFromArray(config);
            }
            else if (isObject(input)) {
                configFromObject(config);
            }
            else if (isNumber(input)) {
                config._d = new Date(input);
            }
            else {
                hooks.createFromInputFallback(config);
            }
        }
        function createLocalOrUTC(input, format, locale, strict, isUTC) {
            var c = {};
            if (format === true || format === false) {
                strict = format;
                format = undefined;
            }
            if (locale === true || locale === false) {
                strict = locale;
                locale = undefined;
            }
            if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
                input = undefined;
            }
            c._isAMomentObject = true;
            c._useUTC = c._isUTC = isUTC;
            c._l = locale;
            c._i = input;
            c._f = format;
            c._strict = strict;
            return createFromConfig(c);
        }
        function createLocal(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, false);
        }
        var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            }
            else {
                return createInvalid();
            }
        }), prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            }
            else {
                return createInvalid();
            }
        });
        function pickBy(fn, moments) {
            var res, i;
            if (moments.length === 1 && isArray(moments[0])) {
                moments = moments[0];
            }
            if (!moments.length) {
                return createLocal();
            }
            res = moments[0];
            for (i = 1; i < moments.length; ++i) {
                if (!moments[i].isValid() || moments[i][fn](res)) {
                    res = moments[i];
                }
            }
            return res;
        }
        function min() {
            var args = [].slice.call(arguments, 0);
            return pickBy('isBefore', args);
        }
        function max() {
            var args = [].slice.call(arguments, 0);
            return pickBy('isAfter', args);
        }
        var now = function () {
            return Date.now ? Date.now() : +new Date();
        };
        var ordering = [
            'year',
            'quarter',
            'month',
            'week',
            'day',
            'hour',
            'minute',
            'second',
            'millisecond',
        ];
        function isDurationValid(m) {
            var key, unitHasDecimal = false, i, orderLen = ordering.length;
            for (key in m) {
                if (hasOwnProp(m, key) &&
                    !(indexOf.call(ordering, key) !== -1 &&
                        (m[key] == null || !isNaN(m[key])))) {
                    return false;
                }
            }
            for (i = 0; i < orderLen; ++i) {
                if (m[ordering[i]]) {
                    if (unitHasDecimal) {
                        return false;
                    }
                    if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                        unitHasDecimal = true;
                    }
                }
            }
            return true;
        }
        function isValid$1() {
            return this._isValid;
        }
        function createInvalid$1() {
            return createDuration(NaN);
        }
        function Duration(duration) {
            var normalizedInput = normalizeObjectUnits(duration), years = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months = normalizedInput.month || 0, weeks = normalizedInput.week || normalizedInput.isoWeek || 0, days = normalizedInput.day || 0, hours = normalizedInput.hour || 0, minutes = normalizedInput.minute || 0, seconds = normalizedInput.second || 0, milliseconds = normalizedInput.millisecond || 0;
            this._isValid = isDurationValid(normalizedInput);
            this._milliseconds =
                +milliseconds +
                    seconds * 1e3 +
                    minutes * 6e4 +
                    hours * 1000 * 60 * 60;
            this._days = +days + weeks * 7;
            this._months = +months + quarters * 3 + years * 12;
            this._data = {};
            this._locale = getLocale();
            this._bubble();
        }
        function isDuration(obj) {
            return obj instanceof Duration;
        }
        function absRound(number) {
            if (number < 0) {
                return Math.round(-1 * number) * -1;
            }
            else {
                return Math.round(number);
            }
        }
        function compareArrays(array1, array2, dontConvert) {
            var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i;
            for (i = 0; i < len; i++) {
                if ((dontConvert && array1[i] !== array2[i]) ||
                    (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                    diffs++;
                }
            }
            return diffs + lengthDiff;
        }
        function offset(token, separator) {
            addFormatToken(token, 0, 0, function () {
                var offset = this.utcOffset(), sign = '+';
                if (offset < 0) {
                    offset = -offset;
                    sign = '-';
                }
                return (sign +
                    zeroFill(~~(offset / 60), 2) +
                    separator +
                    zeroFill(~~offset % 60, 2));
            });
        }
        offset('Z', ':');
        offset('ZZ', '');
        addRegexToken('Z', matchShortOffset);
        addRegexToken('ZZ', matchShortOffset);
        addParseToken(['Z', 'ZZ'], function (input, array, config) {
            config._useUTC = true;
            config._tzm = offsetFromString(matchShortOffset, input);
        });
        var chunkOffset = /([\+\-]|\d\d)/gi;
        function offsetFromString(matcher, string) {
            var matches = (string || '').match(matcher), chunk, parts, minutes;
            if (matches === null) {
                return null;
            }
            chunk = matches[matches.length - 1] || [];
            parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
            minutes = +(parts[1] * 60) + toInt(parts[2]);
            return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
        }
        function cloneWithOffset(input, model) {
            var res, diff;
            if (model._isUTC) {
                res = model.clone();
                diff =
                    (isMoment(input) || isDate(input)
                        ? input.valueOf()
                        : createLocal(input).valueOf()) - res.valueOf();
                res._d.setTime(res._d.valueOf() + diff);
                hooks.updateOffset(res, false);
                return res;
            }
            else {
                return createLocal(input).local();
            }
        }
        function getDateOffset(m) {
            return -Math.round(m._d.getTimezoneOffset());
        }
        hooks.updateOffset = function () { };
        function getSetOffset(input, keepLocalTime, keepMinutes) {
            var offset = this._offset || 0, localAdjust;
            if (!this.isValid()) {
                return input != null ? this : NaN;
            }
            if (input != null) {
                if (typeof input === 'string') {
                    input = offsetFromString(matchShortOffset, input);
                    if (input === null) {
                        return this;
                    }
                }
                else if (Math.abs(input) < 16 && !keepMinutes) {
                    input = input * 60;
                }
                if (!this._isUTC && keepLocalTime) {
                    localAdjust = getDateOffset(this);
                }
                this._offset = input;
                this._isUTC = true;
                if (localAdjust != null) {
                    this.add(localAdjust, 'm');
                }
                if (offset !== input) {
                    if (!keepLocalTime || this._changeInProgress) {
                        addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                    }
                    else if (!this._changeInProgress) {
                        this._changeInProgress = true;
                        hooks.updateOffset(this, true);
                        this._changeInProgress = null;
                    }
                }
                return this;
            }
            else {
                return this._isUTC ? offset : getDateOffset(this);
            }
        }
        function getSetZone(input, keepLocalTime) {
            if (input != null) {
                if (typeof input !== 'string') {
                    input = -input;
                }
                this.utcOffset(input, keepLocalTime);
                return this;
            }
            else {
                return -this.utcOffset();
            }
        }
        function setOffsetToUTC(keepLocalTime) {
            return this.utcOffset(0, keepLocalTime);
        }
        function setOffsetToLocal(keepLocalTime) {
            if (this._isUTC) {
                this.utcOffset(0, keepLocalTime);
                this._isUTC = false;
                if (keepLocalTime) {
                    this.subtract(getDateOffset(this), 'm');
                }
            }
            return this;
        }
        function setOffsetToParsedOffset() {
            if (this._tzm != null) {
                this.utcOffset(this._tzm, false, true);
            }
            else if (typeof this._i === 'string') {
                var tZone = offsetFromString(matchOffset, this._i);
                if (tZone != null) {
                    this.utcOffset(tZone);
                }
                else {
                    this.utcOffset(0, true);
                }
            }
            return this;
        }
        function hasAlignedHourOffset(input) {
            if (!this.isValid()) {
                return false;
            }
            input = input ? createLocal(input).utcOffset() : 0;
            return (this.utcOffset() - input) % 60 === 0;
        }
        function isDaylightSavingTime() {
            return (this.utcOffset() > this.clone().month(0).utcOffset() ||
                this.utcOffset() > this.clone().month(5).utcOffset());
        }
        function isDaylightSavingTimeShifted() {
            if (!isUndefined(this._isDSTShifted)) {
                return this._isDSTShifted;
            }
            var c = {}, other;
            copyConfig(c, this);
            c = prepareConfig(c);
            if (c._a) {
                other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
                this._isDSTShifted =
                    this.isValid() && compareArrays(c._a, other.toArray()) > 0;
            }
            else {
                this._isDSTShifted = false;
            }
            return this._isDSTShifted;
        }
        function isLocal() {
            return this.isValid() ? !this._isUTC : false;
        }
        function isUtcOffset() {
            return this.isValid() ? this._isUTC : false;
        }
        function isUtc() {
            return this.isValid() ? this._isUTC && this._offset === 0 : false;
        }
        var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
        function createDuration(input, key) {
            var duration = input, match = null, sign, ret, diffRes;
            if (isDuration(input)) {
                duration = {
                    ms: input._milliseconds,
                    d: input._days,
                    M: input._months,
                };
            }
            else if (isNumber(input) || !isNaN(+input)) {
                duration = {};
                if (key) {
                    duration[key] = +input;
                }
                else {
                    duration.milliseconds = +input;
                }
            }
            else if ((match = aspNetRegex.exec(input))) {
                sign = match[1] === '-' ? -1 : 1;
                duration = {
                    y: 0,
                    d: toInt(match[DATE]) * sign,
                    h: toInt(match[HOUR]) * sign,
                    m: toInt(match[MINUTE]) * sign,
                    s: toInt(match[SECOND]) * sign,
                    ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign,
                };
            }
            else if ((match = isoRegex.exec(input))) {
                sign = match[1] === '-' ? -1 : 1;
                duration = {
                    y: parseIso(match[2], sign),
                    M: parseIso(match[3], sign),
                    w: parseIso(match[4], sign),
                    d: parseIso(match[5], sign),
                    h: parseIso(match[6], sign),
                    m: parseIso(match[7], sign),
                    s: parseIso(match[8], sign),
                };
            }
            else if (duration == null) {
                duration = {};
            }
            else if (typeof duration === 'object' &&
                ('from' in duration || 'to' in duration)) {
                diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
                duration = {};
                duration.ms = diffRes.milliseconds;
                duration.M = diffRes.months;
            }
            ret = new Duration(duration);
            if (isDuration(input) && hasOwnProp(input, '_locale')) {
                ret._locale = input._locale;
            }
            if (isDuration(input) && hasOwnProp(input, '_isValid')) {
                ret._isValid = input._isValid;
            }
            return ret;
        }
        createDuration.fn = Duration.prototype;
        createDuration.invalid = createInvalid$1;
        function parseIso(inp, sign) {
            var res = inp && parseFloat(inp.replace(',', '.'));
            return (isNaN(res) ? 0 : res) * sign;
        }
        function positiveMomentsDifference(base, other) {
            var res = {};
            res.months =
                other.month() - base.month() + (other.year() - base.year()) * 12;
            if (base.clone().add(res.months, 'M').isAfter(other)) {
                --res.months;
            }
            res.milliseconds = +other - +base.clone().add(res.months, 'M');
            return res;
        }
        function momentsDifference(base, other) {
            var res;
            if (!(base.isValid() && other.isValid())) {
                return { milliseconds: 0, months: 0 };
            }
            other = cloneWithOffset(other, base);
            if (base.isBefore(other)) {
                res = positiveMomentsDifference(base, other);
            }
            else {
                res = positiveMomentsDifference(other, base);
                res.milliseconds = -res.milliseconds;
                res.months = -res.months;
            }
            return res;
        }
        function createAdder(direction, name) {
            return function (val, period) {
                var dur, tmp;
                if (period !== null && !isNaN(+period)) {
                    deprecateSimple(name, 'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                    tmp = val;
                    val = period;
                    period = tmp;
                }
                dur = createDuration(val, period);
                addSubtract(this, dur, direction);
                return this;
            };
        }
        function addSubtract(mom, duration, isAdding, updateOffset) {
            var milliseconds = duration._milliseconds, days = absRound(duration._days), months = absRound(duration._months);
            if (!mom.isValid()) {
                return;
            }
            updateOffset = updateOffset == null ? true : updateOffset;
            if (months) {
                setMonth(mom, get(mom, 'Month') + months * isAdding);
            }
            if (days) {
                set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
            }
            if (milliseconds) {
                mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
            }
            if (updateOffset) {
                hooks.updateOffset(mom, days || months);
            }
        }
        var add = createAdder(1, 'add'), subtract = createAdder(-1, 'subtract');
        function isString(input) {
            return typeof input === 'string' || input instanceof String;
        }
        function isMomentInput(input) {
            return (isMoment(input) ||
                isDate(input) ||
                isString(input) ||
                isNumber(input) ||
                isNumberOrStringArray(input) ||
                isMomentInputObject(input) ||
                input === null ||
                input === undefined);
        }
        function isMomentInputObject(input) {
            var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ], i, property, propertyLen = properties.length;
            for (i = 0; i < propertyLen; i += 1) {
                property = properties[i];
                propertyTest = propertyTest || hasOwnProp(input, property);
            }
            return objectTest && propertyTest;
        }
        function isNumberOrStringArray(input) {
            var arrayTest = isArray(input), dataTypeTest = false;
            if (arrayTest) {
                dataTypeTest =
                    input.filter(function (item) {
                        return !isNumber(item) && isString(input);
                    }).length === 0;
            }
            return arrayTest && dataTypeTest;
        }
        function isCalendarSpec(input) {
            var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ], i, property;
            for (i = 0; i < properties.length; i += 1) {
                property = properties[i];
                propertyTest = propertyTest || hasOwnProp(input, property);
            }
            return objectTest && propertyTest;
        }
        function getCalendarFormat(myMoment, now) {
            var diff = myMoment.diff(now, 'days', true);
            return diff < -6
                ? 'sameElse'
                : diff < -1
                    ? 'lastWeek'
                    : diff < 0
                        ? 'lastDay'
                        : diff < 1
                            ? 'sameDay'
                            : diff < 2
                                ? 'nextDay'
                                : diff < 7
                                    ? 'nextWeek'
                                    : 'sameElse';
        }
        function calendar$1(time, formats) {
            if (arguments.length === 1) {
                if (!arguments[0]) {
                    time = undefined;
                    formats = undefined;
                }
                else if (isMomentInput(arguments[0])) {
                    time = arguments[0];
                    formats = undefined;
                }
                else if (isCalendarSpec(arguments[0])) {
                    formats = arguments[0];
                    time = undefined;
                }
            }
            var now = time || createLocal(), sod = cloneWithOffset(now, this).startOf('day'), format = hooks.calendarFormat(this, sod) || 'sameElse', output = formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);
            return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
        }
        function clone() {
            return new Moment(this);
        }
        function isAfter(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input);
            if (!(this.isValid() && localInput.isValid())) {
                return false;
            }
            units = normalizeUnits(units) || 'millisecond';
            if (units === 'millisecond') {
                return this.valueOf() > localInput.valueOf();
            }
            else {
                return localInput.valueOf() < this.clone().startOf(units).valueOf();
            }
        }
        function isBefore(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input);
            if (!(this.isValid() && localInput.isValid())) {
                return false;
            }
            units = normalizeUnits(units) || 'millisecond';
            if (units === 'millisecond') {
                return this.valueOf() < localInput.valueOf();
            }
            else {
                return this.clone().endOf(units).valueOf() < localInput.valueOf();
            }
        }
        function isBetween(from, to, units, inclusivity) {
            var localFrom = isMoment(from) ? from : createLocal(from), localTo = isMoment(to) ? to : createLocal(to);
            if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
                return false;
            }
            inclusivity = inclusivity || '()';
            return ((inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
                (inclusivity[1] === ')'
                    ? this.isBefore(localTo, units)
                    : !this.isAfter(localTo, units)));
        }
        function isSame(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input), inputMs;
            if (!(this.isValid() && localInput.isValid())) {
                return false;
            }
            units = normalizeUnits(units) || 'millisecond';
            if (units === 'millisecond') {
                return this.valueOf() === localInput.valueOf();
            }
            else {
                inputMs = localInput.valueOf();
                return (this.clone().startOf(units).valueOf() <= inputMs &&
                    inputMs <= this.clone().endOf(units).valueOf());
            }
        }
        function isSameOrAfter(input, units) {
            return this.isSame(input, units) || this.isAfter(input, units);
        }
        function isSameOrBefore(input, units) {
            return this.isSame(input, units) || this.isBefore(input, units);
        }
        function diff(input, units, asFloat) {
            var that, zoneDelta, output;
            if (!this.isValid()) {
                return NaN;
            }
            that = cloneWithOffset(input, this);
            if (!that.isValid()) {
                return NaN;
            }
            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
            units = normalizeUnits(units);
            switch (units) {
                case 'year':
                    output = monthDiff(this, that) / 12;
                    break;
                case 'month':
                    output = monthDiff(this, that);
                    break;
                case 'quarter':
                    output = monthDiff(this, that) / 3;
                    break;
                case 'second':
                    output = (this - that) / 1e3;
                    break;
                case 'minute':
                    output = (this - that) / 6e4;
                    break;
                case 'hour':
                    output = (this - that) / 36e5;
                    break;
                case 'day':
                    output = (this - that - zoneDelta) / 864e5;
                    break;
                case 'week':
                    output = (this - that - zoneDelta) / 6048e5;
                    break;
                default:
                    output = this - that;
            }
            return asFloat ? output : absFloor(output);
        }
        function monthDiff(a, b) {
            if (a.date() < b.date()) {
                return -monthDiff(b, a);
            }
            var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()), anchor = a.clone().add(wholeMonthDiff, 'months'), anchor2, adjust;
            if (b - anchor < 0) {
                anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
                adjust = (b - anchor) / (anchor - anchor2);
            }
            else {
                anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
                adjust = (b - anchor) / (anchor2 - anchor);
            }
            return -(wholeMonthDiff + adjust) || 0;
        }
        hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
        hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';
        function toString() {
            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
        }
        function toISOString(keepOffset) {
            if (!this.isValid()) {
                return null;
            }
            var utc = keepOffset !== true, m = utc ? this.clone().utc() : this;
            if (m.year() < 0 || m.year() > 9999) {
                return formatMoment(m, utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
            }
            if (isFunction(Date.prototype.toISOString)) {
                if (utc) {
                    return this.toDate().toISOString();
                }
                else {
                    return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                        .toISOString()
                        .replace('Z', formatMoment(m, 'Z'));
                }
            }
            return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        function inspect() {
            if (!this.isValid()) {
                return 'moment.invalid(/* ' + this._i + ' */)';
            }
            var func = 'moment', zone = '', prefix, year, datetime, suffix;
            if (!this.isLocal()) {
                func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
                zone = 'Z';
            }
            prefix = '[' + func + '("]';
            year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
            datetime = '-MM-DD[T]HH:mm:ss.SSS';
            suffix = zone + '[")]';
            return this.format(prefix + year + datetime + suffix);
        }
        function format(inputString) {
            if (!inputString) {
                inputString = this.isUtc()
                    ? hooks.defaultFormatUtc
                    : hooks.defaultFormat;
            }
            var output = formatMoment(this, inputString);
            return this.localeData().postformat(output);
        }
        function from(time, withoutSuffix) {
            if (this.isValid() &&
                ((isMoment(time) && time.isValid()) || createLocal(time).isValid())) {
                return createDuration({ to: this, from: time })
                    .locale(this.locale())
                    .humanize(!withoutSuffix);
            }
            else {
                return this.localeData().invalidDate();
            }
        }
        function fromNow(withoutSuffix) {
            return this.from(createLocal(), withoutSuffix);
        }
        function to(time, withoutSuffix) {
            if (this.isValid() &&
                ((isMoment(time) && time.isValid()) || createLocal(time).isValid())) {
                return createDuration({ from: this, to: time })
                    .locale(this.locale())
                    .humanize(!withoutSuffix);
            }
            else {
                return this.localeData().invalidDate();
            }
        }
        function toNow(withoutSuffix) {
            return this.to(createLocal(), withoutSuffix);
        }
        function locale(key) {
            var newLocaleData;
            if (key === undefined) {
                return this._locale._abbr;
            }
            else {
                newLocaleData = getLocale(key);
                if (newLocaleData != null) {
                    this._locale = newLocaleData;
                }
                return this;
            }
        }
        var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
            if (key === undefined) {
                return this.localeData();
            }
            else {
                return this.locale(key);
            }
        });
        function localeData() {
            return this._locale;
        }
        var MS_PER_SECOND = 1000, MS_PER_MINUTE = 60 * MS_PER_SECOND, MS_PER_HOUR = 60 * MS_PER_MINUTE, MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
        function mod$1(dividend, divisor) {
            return ((dividend % divisor) + divisor) % divisor;
        }
        function localStartOfDate(y, m, d) {
            if (y < 100 && y >= 0) {
                return new Date(y + 400, m, d) - MS_PER_400_YEARS;
            }
            else {
                return new Date(y, m, d).valueOf();
            }
        }
        function utcStartOfDate(y, m, d) {
            if (y < 100 && y >= 0) {
                return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
            }
            else {
                return Date.UTC(y, m, d);
            }
        }
        function startOf(units) {
            var time, startOfDate;
            units = normalizeUnits(units);
            if (units === undefined || units === 'millisecond' || !this.isValid()) {
                return this;
            }
            startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
            switch (units) {
                case 'year':
                    time = startOfDate(this.year(), 0, 1);
                    break;
                case 'quarter':
                    time = startOfDate(this.year(), this.month() - (this.month() % 3), 1);
                    break;
                case 'month':
                    time = startOfDate(this.year(), this.month(), 1);
                    break;
                case 'week':
                    time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                    break;
                case 'isoWeek':
                    time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                    break;
                case 'day':
                case 'date':
                    time = startOfDate(this.year(), this.month(), this.date());
                    break;
                case 'hour':
                    time = this._d.valueOf();
                    time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                    break;
                case 'minute':
                    time = this._d.valueOf();
                    time -= mod$1(time, MS_PER_MINUTE);
                    break;
                case 'second':
                    time = this._d.valueOf();
                    time -= mod$1(time, MS_PER_SECOND);
                    break;
            }
            this._d.setTime(time);
            hooks.updateOffset(this, true);
            return this;
        }
        function endOf(units) {
            var time, startOfDate;
            units = normalizeUnits(units);
            if (units === undefined || units === 'millisecond' || !this.isValid()) {
                return this;
            }
            startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
            switch (units) {
                case 'year':
                    time = startOfDate(this.year() + 1, 0, 1) - 1;
                    break;
                case 'quarter':
                    time =
                        startOfDate(this.year(), this.month() - (this.month() % 3) + 3, 1) - 1;
                    break;
                case 'month':
                    time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                    break;
                case 'week':
                    time =
                        startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                    break;
                case 'isoWeek':
                    time =
                        startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                    break;
                case 'day':
                case 'date':
                    time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                    break;
                case 'hour':
                    time = this._d.valueOf();
                    time +=
                        MS_PER_HOUR -
                            mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) -
                            1;
                    break;
                case 'minute':
                    time = this._d.valueOf();
                    time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                    break;
                case 'second':
                    time = this._d.valueOf();
                    time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                    break;
            }
            this._d.setTime(time);
            hooks.updateOffset(this, true);
            return this;
        }
        function valueOf() {
            return this._d.valueOf() - (this._offset || 0) * 60000;
        }
        function unix() {
            return Math.floor(this.valueOf() / 1000);
        }
        function toDate() {
            return new Date(this.valueOf());
        }
        function toArray() {
            var m = this;
            return [
                m.year(),
                m.month(),
                m.date(),
                m.hour(),
                m.minute(),
                m.second(),
                m.millisecond(),
            ];
        }
        function toObject() {
            var m = this;
            return {
                years: m.year(),
                months: m.month(),
                date: m.date(),
                hours: m.hours(),
                minutes: m.minutes(),
                seconds: m.seconds(),
                milliseconds: m.milliseconds(),
            };
        }
        function toJSON() {
            return this.isValid() ? this.toISOString() : null;
        }
        function isValid$2() {
            return isValid(this);
        }
        function parsingFlags() {
            return extend({}, getParsingFlags(this));
        }
        function invalidAt() {
            return getParsingFlags(this).overflow;
        }
        function creationData() {
            return {
                input: this._i,
                format: this._f,
                locale: this._locale,
                isUTC: this._isUTC,
                strict: this._strict,
            };
        }
        addFormatToken('N', 0, 0, 'eraAbbr');
        addFormatToken('NN', 0, 0, 'eraAbbr');
        addFormatToken('NNN', 0, 0, 'eraAbbr');
        addFormatToken('NNNN', 0, 0, 'eraName');
        addFormatToken('NNNNN', 0, 0, 'eraNarrow');
        addFormatToken('y', ['y', 1], 'yo', 'eraYear');
        addFormatToken('y', ['yy', 2], 0, 'eraYear');
        addFormatToken('y', ['yyy', 3], 0, 'eraYear');
        addFormatToken('y', ['yyyy', 4], 0, 'eraYear');
        addRegexToken('N', matchEraAbbr);
        addRegexToken('NN', matchEraAbbr);
        addRegexToken('NNN', matchEraAbbr);
        addRegexToken('NNNN', matchEraName);
        addRegexToken('NNNNN', matchEraNarrow);
        addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (input, array, config, token) {
            var era = config._locale.erasParse(input, token, config._strict);
            if (era) {
                getParsingFlags(config).era = era;
            }
            else {
                getParsingFlags(config).invalidEra = input;
            }
        });
        addRegexToken('y', matchUnsigned);
        addRegexToken('yy', matchUnsigned);
        addRegexToken('yyy', matchUnsigned);
        addRegexToken('yyyy', matchUnsigned);
        addRegexToken('yo', matchEraYearOrdinal);
        addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
        addParseToken(['yo'], function (input, array, config, token) {
            var match;
            if (config._locale._eraYearOrdinalRegex) {
                match = input.match(config._locale._eraYearOrdinalRegex);
            }
            if (config._locale.eraYearOrdinalParse) {
                array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
            }
            else {
                array[YEAR] = parseInt(input, 10);
            }
        });
        function localeEras(m, format) {
            var i, l, date, eras = this._eras || getLocale('en')._eras;
            for (i = 0, l = eras.length; i < l; ++i) {
                switch (typeof eras[i].since) {
                    case 'string':
                        date = hooks(eras[i].since).startOf('day');
                        eras[i].since = date.valueOf();
                        break;
                }
                switch (typeof eras[i].until) {
                    case 'undefined':
                        eras[i].until = +Infinity;
                        break;
                    case 'string':
                        date = hooks(eras[i].until).startOf('day').valueOf();
                        eras[i].until = date.valueOf();
                        break;
                }
            }
            return eras;
        }
        function localeErasParse(eraName, format, strict) {
            var i, l, eras = this.eras(), name, abbr, narrow;
            eraName = eraName.toUpperCase();
            for (i = 0, l = eras.length; i < l; ++i) {
                name = eras[i].name.toUpperCase();
                abbr = eras[i].abbr.toUpperCase();
                narrow = eras[i].narrow.toUpperCase();
                if (strict) {
                    switch (format) {
                        case 'N':
                        case 'NN':
                        case 'NNN':
                            if (abbr === eraName) {
                                return eras[i];
                            }
                            break;
                        case 'NNNN':
                            if (name === eraName) {
                                return eras[i];
                            }
                            break;
                        case 'NNNNN':
                            if (narrow === eraName) {
                                return eras[i];
                            }
                            break;
                    }
                }
                else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                    return eras[i];
                }
            }
        }
        function localeErasConvertYear(era, year) {
            var dir = era.since <= era.until ? +1 : -1;
            if (year === undefined) {
                return hooks(era.since).year();
            }
            else {
                return hooks(era.since).year() + (year - era.offset) * dir;
            }
        }
        function getEraName() {
            var i, l, val, eras = this.localeData().eras();
            for (i = 0, l = eras.length; i < l; ++i) {
                val = this.clone().startOf('day').valueOf();
                if (eras[i].since <= val && val <= eras[i].until) {
                    return eras[i].name;
                }
                if (eras[i].until <= val && val <= eras[i].since) {
                    return eras[i].name;
                }
            }
            return '';
        }
        function getEraNarrow() {
            var i, l, val, eras = this.localeData().eras();
            for (i = 0, l = eras.length; i < l; ++i) {
                val = this.clone().startOf('day').valueOf();
                if (eras[i].since <= val && val <= eras[i].until) {
                    return eras[i].narrow;
                }
                if (eras[i].until <= val && val <= eras[i].since) {
                    return eras[i].narrow;
                }
            }
            return '';
        }
        function getEraAbbr() {
            var i, l, val, eras = this.localeData().eras();
            for (i = 0, l = eras.length; i < l; ++i) {
                val = this.clone().startOf('day').valueOf();
                if (eras[i].since <= val && val <= eras[i].until) {
                    return eras[i].abbr;
                }
                if (eras[i].until <= val && val <= eras[i].since) {
                    return eras[i].abbr;
                }
            }
            return '';
        }
        function getEraYear() {
            var i, l, dir, val, eras = this.localeData().eras();
            for (i = 0, l = eras.length; i < l; ++i) {
                dir = eras[i].since <= eras[i].until ? +1 : -1;
                val = this.clone().startOf('day').valueOf();
                if ((eras[i].since <= val && val <= eras[i].until) ||
                    (eras[i].until <= val && val <= eras[i].since)) {
                    return ((this.year() - hooks(eras[i].since).year()) * dir +
                        eras[i].offset);
                }
            }
            return this.year();
        }
        function erasNameRegex(isStrict) {
            if (!hasOwnProp(this, '_erasNameRegex')) {
                computeErasParse.call(this);
            }
            return isStrict ? this._erasNameRegex : this._erasRegex;
        }
        function erasAbbrRegex(isStrict) {
            if (!hasOwnProp(this, '_erasAbbrRegex')) {
                computeErasParse.call(this);
            }
            return isStrict ? this._erasAbbrRegex : this._erasRegex;
        }
        function erasNarrowRegex(isStrict) {
            if (!hasOwnProp(this, '_erasNarrowRegex')) {
                computeErasParse.call(this);
            }
            return isStrict ? this._erasNarrowRegex : this._erasRegex;
        }
        function matchEraAbbr(isStrict, locale) {
            return locale.erasAbbrRegex(isStrict);
        }
        function matchEraName(isStrict, locale) {
            return locale.erasNameRegex(isStrict);
        }
        function matchEraNarrow(isStrict, locale) {
            return locale.erasNarrowRegex(isStrict);
        }
        function matchEraYearOrdinal(isStrict, locale) {
            return locale._eraYearOrdinalRegex || matchUnsigned;
        }
        function computeErasParse() {
            var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i, l, erasName, erasAbbr, erasNarrow, eras = this.eras();
            for (i = 0, l = eras.length; i < l; ++i) {
                erasName = regexEscape(eras[i].name);
                erasAbbr = regexEscape(eras[i].abbr);
                erasNarrow = regexEscape(eras[i].narrow);
                namePieces.push(erasName);
                abbrPieces.push(erasAbbr);
                narrowPieces.push(erasNarrow);
                mixedPieces.push(erasName);
                mixedPieces.push(erasAbbr);
                mixedPieces.push(erasNarrow);
            }
            this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
            this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
            this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
            this._erasNarrowRegex = new RegExp('^(' + narrowPieces.join('|') + ')', 'i');
        }
        addFormatToken(0, ['gg', 2], 0, function () {
            return this.weekYear() % 100;
        });
        addFormatToken(0, ['GG', 2], 0, function () {
            return this.isoWeekYear() % 100;
        });
        function addWeekYearFormatToken(token, getter) {
            addFormatToken(0, [token, token.length], 0, getter);
        }
        addWeekYearFormatToken('gggg', 'weekYear');
        addWeekYearFormatToken('ggggg', 'weekYear');
        addWeekYearFormatToken('GGGG', 'isoWeekYear');
        addWeekYearFormatToken('GGGGG', 'isoWeekYear');
        addRegexToken('G', matchSigned);
        addRegexToken('g', matchSigned);
        addRegexToken('GG', match1to2, match2);
        addRegexToken('gg', match1to2, match2);
        addRegexToken('GGGG', match1to4, match4);
        addRegexToken('gggg', match1to4, match4);
        addRegexToken('GGGGG', match1to6, match6);
        addRegexToken('ggggg', match1to6, match6);
        addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
            week[token.substr(0, 2)] = toInt(input);
        });
        addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
            week[token] = hooks.parseTwoDigitYear(input);
        });
        function getSetWeekYear(input) {
            return getSetWeekYearHelper.call(this, input, this.week(), this.weekday() + this.localeData()._week.dow, this.localeData()._week.dow, this.localeData()._week.doy);
        }
        function getSetISOWeekYear(input) {
            return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
        }
        function getISOWeeksInYear() {
            return weeksInYear(this.year(), 1, 4);
        }
        function getISOWeeksInISOWeekYear() {
            return weeksInYear(this.isoWeekYear(), 1, 4);
        }
        function getWeeksInYear() {
            var weekInfo = this.localeData()._week;
            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
        }
        function getWeeksInWeekYear() {
            var weekInfo = this.localeData()._week;
            return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
        }
        function getSetWeekYearHelper(input, week, weekday, dow, doy) {
            var weeksTarget;
            if (input == null) {
                return weekOfYear(this, dow, doy).year;
            }
            else {
                weeksTarget = weeksInYear(input, dow, doy);
                if (week > weeksTarget) {
                    week = weeksTarget;
                }
                return setWeekAll.call(this, input, week, weekday, dow, doy);
            }
        }
        function setWeekAll(weekYear, week, weekday, dow, doy) {
            var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
            this.year(date.getUTCFullYear());
            this.month(date.getUTCMonth());
            this.date(date.getUTCDate());
            return this;
        }
        addFormatToken('Q', 0, 'Qo', 'quarter');
        addRegexToken('Q', match1);
        addParseToken('Q', function (input, array) {
            array[MONTH] = (toInt(input) - 1) * 3;
        });
        function getSetQuarter(input) {
            return input == null
                ? Math.ceil((this.month() + 1) / 3)
                : this.month((input - 1) * 3 + (this.month() % 3));
        }
        addFormatToken('D', ['DD', 2], 'Do', 'date');
        addRegexToken('D', match1to2, match1to2NoLeadingZero);
        addRegexToken('DD', match1to2, match2);
        addRegexToken('Do', function (isStrict, locale) {
            return isStrict
                ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
                : locale._dayOfMonthOrdinalParseLenient;
        });
        addParseToken(['D', 'DD'], DATE);
        addParseToken('Do', function (input, array) {
            array[DATE] = toInt(input.match(match1to2)[0]);
        });
        var getSetDayOfMonth = makeGetSet('Date', true);
        addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');
        addRegexToken('DDD', match1to3);
        addRegexToken('DDDD', match3);
        addParseToken(['DDD', 'DDDD'], function (input, array, config) {
            config._dayOfYear = toInt(input);
        });
        function getSetDayOfYear(input) {
            var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
            return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
        }
        addFormatToken('m', ['mm', 2], 0, 'minute');
        addRegexToken('m', match1to2, match1to2HasZero);
        addRegexToken('mm', match1to2, match2);
        addParseToken(['m', 'mm'], MINUTE);
        var getSetMinute = makeGetSet('Minutes', false);
        addFormatToken('s', ['ss', 2], 0, 'second');
        addRegexToken('s', match1to2, match1to2HasZero);
        addRegexToken('ss', match1to2, match2);
        addParseToken(['s', 'ss'], SECOND);
        var getSetSecond = makeGetSet('Seconds', false);
        addFormatToken('S', 0, 0, function () {
            return ~~(this.millisecond() / 100);
        });
        addFormatToken(0, ['SS', 2], 0, function () {
            return ~~(this.millisecond() / 10);
        });
        addFormatToken(0, ['SSS', 3], 0, 'millisecond');
        addFormatToken(0, ['SSSS', 4], 0, function () {
            return this.millisecond() * 10;
        });
        addFormatToken(0, ['SSSSS', 5], 0, function () {
            return this.millisecond() * 100;
        });
        addFormatToken(0, ['SSSSSS', 6], 0, function () {
            return this.millisecond() * 1000;
        });
        addFormatToken(0, ['SSSSSSS', 7], 0, function () {
            return this.millisecond() * 10000;
        });
        addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
            return this.millisecond() * 100000;
        });
        addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
            return this.millisecond() * 1000000;
        });
        addRegexToken('S', match1to3, match1);
        addRegexToken('SS', match1to3, match2);
        addRegexToken('SSS', match1to3, match3);
        var token, getSetMillisecond;
        for (token = 'SSSS'; token.length <= 9; token += 'S') {
            addRegexToken(token, matchUnsigned);
        }
        function parseMs(input, array) {
            array[MILLISECOND] = toInt(('0.' + input) * 1000);
        }
        for (token = 'S'; token.length <= 9; token += 'S') {
            addParseToken(token, parseMs);
        }
        getSetMillisecond = makeGetSet('Milliseconds', false);
        addFormatToken('z', 0, 0, 'zoneAbbr');
        addFormatToken('zz', 0, 0, 'zoneName');
        function getZoneAbbr() {
            return this._isUTC ? 'UTC' : '';
        }
        function getZoneName() {
            return this._isUTC ? 'Coordinated Universal Time' : '';
        }
        var proto = Moment.prototype;
        proto.add = add;
        proto.calendar = calendar$1;
        proto.clone = clone;
        proto.diff = diff;
        proto.endOf = endOf;
        proto.format = format;
        proto.from = from;
        proto.fromNow = fromNow;
        proto.to = to;
        proto.toNow = toNow;
        proto.get = stringGet;
        proto.invalidAt = invalidAt;
        proto.isAfter = isAfter;
        proto.isBefore = isBefore;
        proto.isBetween = isBetween;
        proto.isSame = isSame;
        proto.isSameOrAfter = isSameOrAfter;
        proto.isSameOrBefore = isSameOrBefore;
        proto.isValid = isValid$2;
        proto.lang = lang;
        proto.locale = locale;
        proto.localeData = localeData;
        proto.max = prototypeMax;
        proto.min = prototypeMin;
        proto.parsingFlags = parsingFlags;
        proto.set = stringSet;
        proto.startOf = startOf;
        proto.subtract = subtract;
        proto.toArray = toArray;
        proto.toObject = toObject;
        proto.toDate = toDate;
        proto.toISOString = toISOString;
        proto.inspect = inspect;
        if (typeof Symbol !== 'undefined' && Symbol.for != null) {
            proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
                return 'Moment<' + this.format() + '>';
            };
        }
        proto.toJSON = toJSON;
        proto.toString = toString;
        proto.unix = unix;
        proto.valueOf = valueOf;
        proto.creationData = creationData;
        proto.eraName = getEraName;
        proto.eraNarrow = getEraNarrow;
        proto.eraAbbr = getEraAbbr;
        proto.eraYear = getEraYear;
        proto.year = getSetYear;
        proto.isLeapYear = getIsLeapYear;
        proto.weekYear = getSetWeekYear;
        proto.isoWeekYear = getSetISOWeekYear;
        proto.quarter = proto.quarters = getSetQuarter;
        proto.month = getSetMonth;
        proto.daysInMonth = getDaysInMonth;
        proto.week = proto.weeks = getSetWeek;
        proto.isoWeek = proto.isoWeeks = getSetISOWeek;
        proto.weeksInYear = getWeeksInYear;
        proto.weeksInWeekYear = getWeeksInWeekYear;
        proto.isoWeeksInYear = getISOWeeksInYear;
        proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
        proto.date = getSetDayOfMonth;
        proto.day = proto.days = getSetDayOfWeek;
        proto.weekday = getSetLocaleDayOfWeek;
        proto.isoWeekday = getSetISODayOfWeek;
        proto.dayOfYear = getSetDayOfYear;
        proto.hour = proto.hours = getSetHour;
        proto.minute = proto.minutes = getSetMinute;
        proto.second = proto.seconds = getSetSecond;
        proto.millisecond = proto.milliseconds = getSetMillisecond;
        proto.utcOffset = getSetOffset;
        proto.utc = setOffsetToUTC;
        proto.local = setOffsetToLocal;
        proto.parseZone = setOffsetToParsedOffset;
        proto.hasAlignedHourOffset = hasAlignedHourOffset;
        proto.isDST = isDaylightSavingTime;
        proto.isLocal = isLocal;
        proto.isUtcOffset = isUtcOffset;
        proto.isUtc = isUtc;
        proto.isUTC = isUtc;
        proto.zoneAbbr = getZoneAbbr;
        proto.zoneName = getZoneName;
        proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
        proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
        proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
        proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
        proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);
        function createUnix(input) {
            return createLocal(input * 1000);
        }
        function createInZone() {
            return createLocal.apply(null, arguments).parseZone();
        }
        function preParsePostFormat(string) {
            return string;
        }
        var proto$1 = Locale.prototype;
        proto$1.calendar = calendar;
        proto$1.longDateFormat = longDateFormat;
        proto$1.invalidDate = invalidDate;
        proto$1.ordinal = ordinal;
        proto$1.preparse = preParsePostFormat;
        proto$1.postformat = preParsePostFormat;
        proto$1.relativeTime = relativeTime;
        proto$1.pastFuture = pastFuture;
        proto$1.set = set;
        proto$1.eras = localeEras;
        proto$1.erasParse = localeErasParse;
        proto$1.erasConvertYear = localeErasConvertYear;
        proto$1.erasAbbrRegex = erasAbbrRegex;
        proto$1.erasNameRegex = erasNameRegex;
        proto$1.erasNarrowRegex = erasNarrowRegex;
        proto$1.months = localeMonths;
        proto$1.monthsShort = localeMonthsShort;
        proto$1.monthsParse = localeMonthsParse;
        proto$1.monthsRegex = monthsRegex;
        proto$1.monthsShortRegex = monthsShortRegex;
        proto$1.week = localeWeek;
        proto$1.firstDayOfYear = localeFirstDayOfYear;
        proto$1.firstDayOfWeek = localeFirstDayOfWeek;
        proto$1.weekdays = localeWeekdays;
        proto$1.weekdaysMin = localeWeekdaysMin;
        proto$1.weekdaysShort = localeWeekdaysShort;
        proto$1.weekdaysParse = localeWeekdaysParse;
        proto$1.weekdaysRegex = weekdaysRegex;
        proto$1.weekdaysShortRegex = weekdaysShortRegex;
        proto$1.weekdaysMinRegex = weekdaysMinRegex;
        proto$1.isPM = localeIsPM;
        proto$1.meridiem = localeMeridiem;
        function get$1(format, index, field, setter) {
            var locale = getLocale(), utc = createUTC().set(setter, index);
            return locale[field](utc, format);
        }
        function listMonthsImpl(format, index, field) {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }
            format = format || '';
            if (index != null) {
                return get$1(format, index, field, 'month');
            }
            var i, out = [];
            for (i = 0; i < 12; i++) {
                out[i] = get$1(format, i, field, 'month');
            }
            return out;
        }
        function listWeekdaysImpl(localeSorted, format, index, field) {
            if (typeof localeSorted === 'boolean') {
                if (isNumber(format)) {
                    index = format;
                    format = undefined;
                }
                format = format || '';
            }
            else {
                format = localeSorted;
                index = format;
                localeSorted = false;
                if (isNumber(format)) {
                    index = format;
                    format = undefined;
                }
                format = format || '';
            }
            var locale = getLocale(), shift = localeSorted ? locale._week.dow : 0, i, out = [];
            if (index != null) {
                return get$1(format, (index + shift) % 7, field, 'day');
            }
            for (i = 0; i < 7; i++) {
                out[i] = get$1(format, (i + shift) % 7, field, 'day');
            }
            return out;
        }
        function listMonths(format, index) {
            return listMonthsImpl(format, index, 'months');
        }
        function listMonthsShort(format, index) {
            return listMonthsImpl(format, index, 'monthsShort');
        }
        function listWeekdays(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
        }
        function listWeekdaysShort(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
        }
        function listWeekdaysMin(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
        }
        getSetGlobalLocale('en', {
            eras: [
                {
                    since: '0001-01-01',
                    until: +Infinity,
                    offset: 1,
                    name: 'Anno Domini',
                    narrow: 'AD',
                    abbr: 'AD',
                },
                {
                    since: '0000-12-31',
                    until: -Infinity,
                    offset: 1,
                    name: 'Before Christ',
                    narrow: 'BC',
                    abbr: 'BC',
                },
            ],
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function (number) {
                var b = number % 10, output = toInt((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                        ? 'st'
                        : b === 2
                            ? 'nd'
                            : b === 3
                                ? 'rd'
                                : 'th';
                return number + output;
            },
        });
        hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
        hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
        var mathAbs = Math.abs;
        function abs() {
            var data = this._data;
            this._milliseconds = mathAbs(this._milliseconds);
            this._days = mathAbs(this._days);
            this._months = mathAbs(this._months);
            data.milliseconds = mathAbs(data.milliseconds);
            data.seconds = mathAbs(data.seconds);
            data.minutes = mathAbs(data.minutes);
            data.hours = mathAbs(data.hours);
            data.months = mathAbs(data.months);
            data.years = mathAbs(data.years);
            return this;
        }
        function addSubtract$1(duration, input, value, direction) {
            var other = createDuration(input, value);
            duration._milliseconds += direction * other._milliseconds;
            duration._days += direction * other._days;
            duration._months += direction * other._months;
            return duration._bubble();
        }
        function add$1(input, value) {
            return addSubtract$1(this, input, value, 1);
        }
        function subtract$1(input, value) {
            return addSubtract$1(this, input, value, -1);
        }
        function absCeil(number) {
            if (number < 0) {
                return Math.floor(number);
            }
            else {
                return Math.ceil(number);
            }
        }
        function bubble() {
            var milliseconds = this._milliseconds, days = this._days, months = this._months, data = this._data, seconds, minutes, hours, years, monthsFromDays;
            if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
                milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
                days = 0;
                months = 0;
            }
            data.milliseconds = milliseconds % 1000;
            seconds = absFloor(milliseconds / 1000);
            data.seconds = seconds % 60;
            minutes = absFloor(seconds / 60);
            data.minutes = minutes % 60;
            hours = absFloor(minutes / 60);
            data.hours = hours % 24;
            days += absFloor(hours / 24);
            monthsFromDays = absFloor(daysToMonths(days));
            months += monthsFromDays;
            days -= absCeil(monthsToDays(monthsFromDays));
            years = absFloor(months / 12);
            months %= 12;
            data.days = days;
            data.months = months;
            data.years = years;
            return this;
        }
        function daysToMonths(days) {
            return (days * 4800) / 146097;
        }
        function monthsToDays(months) {
            return (months * 146097) / 4800;
        }
        function as(units) {
            if (!this.isValid()) {
                return NaN;
            }
            var days, months, milliseconds = this._milliseconds;
            units = normalizeUnits(units);
            if (units === 'month' || units === 'quarter' || units === 'year') {
                days = this._days + milliseconds / 864e5;
                months = this._months + daysToMonths(days);
                switch (units) {
                    case 'month':
                        return months;
                    case 'quarter':
                        return months / 3;
                    case 'year':
                        return months / 12;
                }
            }
            else {
                days = this._days + Math.round(monthsToDays(this._months));
                switch (units) {
                    case 'week':
                        return days / 7 + milliseconds / 6048e5;
                    case 'day':
                        return days + milliseconds / 864e5;
                    case 'hour':
                        return days * 24 + milliseconds / 36e5;
                    case 'minute':
                        return days * 1440 + milliseconds / 6e4;
                    case 'second':
                        return days * 86400 + milliseconds / 1000;
                    case 'millisecond':
                        return Math.floor(days * 864e5) + milliseconds;
                    default:
                        throw new Error('Unknown unit ' + units);
                }
            }
        }
        function makeAs(alias) {
            return function () {
                return this.as(alias);
            };
        }
        var asMilliseconds = makeAs('ms'), asSeconds = makeAs('s'), asMinutes = makeAs('m'), asHours = makeAs('h'), asDays = makeAs('d'), asWeeks = makeAs('w'), asMonths = makeAs('M'), asQuarters = makeAs('Q'), asYears = makeAs('y'), valueOf$1 = asMilliseconds;
        function clone$1() {
            return createDuration(this);
        }
        function get$2(units) {
            units = normalizeUnits(units);
            return this.isValid() ? this[units + 's']() : NaN;
        }
        function makeGetter(name) {
            return function () {
                return this.isValid() ? this._data[name] : NaN;
            };
        }
        var milliseconds = makeGetter('milliseconds'), seconds = makeGetter('seconds'), minutes = makeGetter('minutes'), hours = makeGetter('hours'), days = makeGetter('days'), months = makeGetter('months'), years = makeGetter('years');
        function weeks() {
            return absFloor(this.days() / 7);
        }
        var round = Math.round, thresholds = {
            ss: 44,
            s: 45,
            m: 45,
            h: 22,
            d: 26,
            w: null,
            M: 11,
        };
        function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
            return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
        }
        function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
            var duration = createDuration(posNegDuration).abs(), seconds = round(duration.as('s')), minutes = round(duration.as('m')), hours = round(duration.as('h')), days = round(duration.as('d')), months = round(duration.as('M')), weeks = round(duration.as('w')), years = round(duration.as('y')), a = (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);
            if (thresholds.w != null) {
                a =
                    a ||
                        (weeks <= 1 && ['w']) ||
                        (weeks < thresholds.w && ['ww', weeks]);
            }
            a = a ||
                (months <= 1 && ['M']) ||
                (months < thresholds.M && ['MM', months]) ||
                (years <= 1 && ['y']) || ['yy', years];
            a[2] = withoutSuffix;
            a[3] = +posNegDuration > 0;
            a[4] = locale;
            return substituteTimeAgo.apply(null, a);
        }
        function getSetRelativeTimeRounding(roundingFunction) {
            if (roundingFunction === undefined) {
                return round;
            }
            if (typeof roundingFunction === 'function') {
                round = roundingFunction;
                return true;
            }
            return false;
        }
        function getSetRelativeTimeThreshold(threshold, limit) {
            if (thresholds[threshold] === undefined) {
                return false;
            }
            if (limit === undefined) {
                return thresholds[threshold];
            }
            thresholds[threshold] = limit;
            if (threshold === 's') {
                thresholds.ss = limit - 1;
            }
            return true;
        }
        function humanize(argWithSuffix, argThresholds) {
            if (!this.isValid()) {
                return this.localeData().invalidDate();
            }
            var withSuffix = false, th = thresholds, locale, output;
            if (typeof argWithSuffix === 'object') {
                argThresholds = argWithSuffix;
                argWithSuffix = false;
            }
            if (typeof argWithSuffix === 'boolean') {
                withSuffix = argWithSuffix;
            }
            if (typeof argThresholds === 'object') {
                th = Object.assign({}, thresholds, argThresholds);
                if (argThresholds.s != null && argThresholds.ss == null) {
                    th.ss = argThresholds.s - 1;
                }
            }
            locale = this.localeData();
            output = relativeTime$1(this, !withSuffix, th, locale);
            if (withSuffix) {
                output = locale.pastFuture(+this, output);
            }
            return locale.postformat(output);
        }
        var abs$1 = Math.abs;
        function sign(x) {
            return (x > 0) - (x < 0) || +x;
        }
        function toISOString$1() {
            if (!this.isValid()) {
                return this.localeData().invalidDate();
            }
            var seconds = abs$1(this._milliseconds) / 1000, days = abs$1(this._days), months = abs$1(this._months), minutes, hours, years, s, total = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
            if (!total) {
                return 'P0D';
            }
            minutes = absFloor(seconds / 60);
            hours = absFloor(minutes / 60);
            seconds %= 60;
            minutes %= 60;
            years = absFloor(months / 12);
            months %= 12;
            s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
            totalSign = total < 0 ? '-' : '';
            ymSign = sign(this._months) !== sign(total) ? '-' : '';
            daysSign = sign(this._days) !== sign(total) ? '-' : '';
            hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';
            return (totalSign +
                'P' +
                (years ? ymSign + years + 'Y' : '') +
                (months ? ymSign + months + 'M' : '') +
                (days ? daysSign + days + 'D' : '') +
                (hours || minutes || seconds ? 'T' : '') +
                (hours ? hmsSign + hours + 'H' : '') +
                (minutes ? hmsSign + minutes + 'M' : '') +
                (seconds ? hmsSign + s + 'S' : ''));
        }
        var proto$2 = Duration.prototype;
        proto$2.isValid = isValid$1;
        proto$2.abs = abs;
        proto$2.add = add$1;
        proto$2.subtract = subtract$1;
        proto$2.as = as;
        proto$2.asMilliseconds = asMilliseconds;
        proto$2.asSeconds = asSeconds;
        proto$2.asMinutes = asMinutes;
        proto$2.asHours = asHours;
        proto$2.asDays = asDays;
        proto$2.asWeeks = asWeeks;
        proto$2.asMonths = asMonths;
        proto$2.asQuarters = asQuarters;
        proto$2.asYears = asYears;
        proto$2.valueOf = valueOf$1;
        proto$2._bubble = bubble;
        proto$2.clone = clone$1;
        proto$2.get = get$2;
        proto$2.milliseconds = milliseconds;
        proto$2.seconds = seconds;
        proto$2.minutes = minutes;
        proto$2.hours = hours;
        proto$2.days = days;
        proto$2.weeks = weeks;
        proto$2.months = months;
        proto$2.years = years;
        proto$2.humanize = humanize;
        proto$2.toISOString = toISOString$1;
        proto$2.toString = toISOString$1;
        proto$2.toJSON = toISOString$1;
        proto$2.locale = locale;
        proto$2.localeData = localeData;
        proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
        proto$2.lang = lang;
        addFormatToken('X', 0, 0, 'unix');
        addFormatToken('x', 0, 0, 'valueOf');
        addRegexToken('x', matchSigned);
        addRegexToken('X', matchTimestamp);
        addParseToken('X', function (input, array, config) {
            config._d = new Date(parseFloat(input) * 1000);
        });
        addParseToken('x', function (input, array, config) {
            config._d = new Date(toInt(input));
        });
        hooks.version = '2.30.1';
        setHookCallback(createLocal);
        hooks.fn = proto;
        hooks.min = min;
        hooks.max = max;
        hooks.now = now;
        hooks.utc = createUTC;
        hooks.unix = createUnix;
        hooks.months = listMonths;
        hooks.isDate = isDate;
        hooks.locale = getSetGlobalLocale;
        hooks.invalid = createInvalid;
        hooks.duration = createDuration;
        hooks.isMoment = isMoment;
        hooks.weekdays = listWeekdays;
        hooks.parseZone = createInZone;
        hooks.localeData = getLocale;
        hooks.isDuration = isDuration;
        hooks.monthsShort = listMonthsShort;
        hooks.weekdaysMin = listWeekdaysMin;
        hooks.defineLocale = defineLocale;
        hooks.updateLocale = updateLocale;
        hooks.locales = listLocales;
        hooks.weekdaysShort = listWeekdaysShort;
        hooks.normalizeUnits = normalizeUnits;
        hooks.relativeTimeRounding = getSetRelativeTimeRounding;
        hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
        hooks.calendarFormat = getCalendarFormat;
        hooks.prototype = proto;
        hooks.HTML5_FMT = {
            DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
            DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
            DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
            DATE: 'YYYY-MM-DD',
            TIME: 'HH:mm',
            TIME_SECONDS: 'HH:mm:ss',
            TIME_MS: 'HH:mm:ss.SSS',
            WEEK: 'GGGG-[W]WW',
            MONTH: 'YYYY-MM',
        };
        return hooks;
    })));

    });

    var CDType;
    (function (CDType) {
        CDType[CDType["SS"] = 0] = "SS";
        CDType[CDType["MM"] = 1] = "MM";
        CDType[CDType["HH"] = 2] = "HH";
        CDType[CDType["Day"] = 3] = "Day";
    })(CDType || (CDType = {}));
    class GlobalFunction {
        GameService(type) {
            GlobalVariables.SERVICE_TYPE = type;
            switch (type) {
                case SERVER_TYPE.TEST:
                    GlobalVariables.SERVER_URL = 'http://192.168.0.213:8000';
                    GlobalVariables.LOG_KEY = 'dfdfdfd23';
                    break;
                case SERVER_TYPE.TEST_IN:
                    GlobalVariables.SERVER_URL = 'http://192.168.0.239:8080';
                    GlobalVariables.LOG_KEY = 'dfdfdfd23';
                    break;
                case SERVER_TYPE.PRE_RELEASE:
                    GlobalVariables.SERVER_URL = 'http://pre-release.008.net:16102';
                    GlobalVariables.LOG_KEY = 'dfdfdfd23';
                    break;
                case SERVER_TYPE.RELEASE:
                default:
                    GlobalVariables.SERVER_URL = 'http://login.hzmj.008.net:8080';
                    GlobalVariables.LOG_KEY = 'wZzMAr8IGmE3qkob3B1gNoIgCKJOJYlP';
                    break;
            }
        }
        initCommon() {
            window.findNodeByName = function (__node, __name) {
                let num = __node.numChildren;
                if (num > 0) {
                    for (let i = 0; i < num; i++) {
                        let child = __node.getChildAt(i);
                        if (child && child.name === __name) {
                            return child;
                        }
                        else if (child.numChildren > 0) {
                            this.findNodeByName(child, __name);
                        }
                    }
                }
            };
        }
        S2CPos(cChair) {
            return 0;
        }
        GetMyIP(callback) {
            GameHttpRequest.get(GlobalVariables.IP_SOURCE_URL, callback);
        }
        GetRealName(_name) {
            let name = _name;
            let find = name.indexOf(";V$#");
            if (find != -1) {
                name = name.substr(0, find);
            }
            return name;
        }
        formatDate(strDate, strFormat = 'yyyy-MM-DD HH:mm:ss') {
            if (!strDate)
                return;
            let result = moment(strDate * 1000).format(strFormat);
            return result;
        }
        getNow() {
            return ((Date.now() - GlobalData.getInstance().serverTimeDelta) / 1000);
        }
        getNowMilli() {
            return Date.now() - GlobalData.getInstance().serverTimeDelta;
        }
        isOutSevenDays(time) {
            let now = Date.parse(new Date().toString());
            let delta = moment.duration(now - time * 1000, 'ms'), years = delta.years(), months = delta.months(), days = delta.days();
            if (years <= 0 && months <= 0 && days < 7) {
                return false;
            }
            else {
                return true;
            }
        }
        loadTimeAlias(dateNum) {
            if (!dateNum)
                return;
            let targetYear = moment(dateNum * 1000).year();
            let targetMonth = moment(dateNum * 1000).month();
            let targetDay = moment(dateNum * 1000).date();
            let targetHour = moment(dateNum * 1000).hour();
            let targetMinute = moment(dateNum * 1000).minute();
            const date = new Date();
            const year = date.getFullYear();
            const month = date.getMonth();
            const day = date.getDate();
            let l_monthDay = new Date(year, month + 1, 0).getDate();
            if (moment().year() - targetYear > 0) {
                if (moment().year() - targetYear > 1) {
                    return (moment().year() - targetYear) + '年前';
                }
                else if (month + 12 - targetMonth > 1) {
                    return (month + 12 - targetMonth) + '个月前';
                }
                else {
                    return (day + l_monthDay - targetDay) + '天前';
                }
            }
            else if (moment().month() - targetMonth > 0) {
                if (l_monthDay - targetDay > 28) {
                    return (moment().month() - targetMonth) + '个月前';
                }
                else {
                    return (day + l_monthDay - targetDay) + '天前';
                }
            }
            else if (moment().date() - targetDay > 0) {
                return (moment().date() - targetDay) + '天前';
            }
            else if (moment().hour() - targetHour > 0) {
                return (moment().hour() - targetHour) + '小时前';
            }
            else if (moment().minute() - targetMinute > 0) {
                return (moment().minute() - targetMinute) + '分钟前';
            }
            else {
                return '刚刚';
            }
        }
        countDown(endDate, cdType = CDType.SS) {
            let now = this.getNowMilli();
            let delta = moment.duration(endDate * 1000 - now, 'ms'), days = Math.floor((endDate * 1000 - now) / (24 * 3600 * 1000)), hours = delta.hours(), mins = delta.minutes(), ss = delta.seconds();
            if (days <= 0 && hours <= 0 && mins <= 0 && ss <= 0) {
                return '00:00:00';
            }
            else {
                let hourTime = this.prefixInt(hours, 2) + ':' + this.prefixInt(mins, 2) + ':' + this.prefixInt(ss, 2);
                switch (cdType) {
                    case CDType.MM:
                        hourTime = this.prefixInt(hours, 2) + ':' + this.prefixInt(mins, 2);
                        break;
                    case CDType.HH:
                        hourTime = days > 0 ? this.prefixInt(hours, 2) : hourTime;
                        break;
                    case CDType.Day:
                        hourTime = days > 0 ? '' : hourTime;
                        break;
                }
                let dayTime = days + '天' + hourTime;
                let result = days > 0 ? dayTime : hourTime;
                return result;
            }
        }
        prefixInt(num, n) {
            return (Array(n).join('0') + num).slice(-n);
        }
        getChildByRoute(node, route) {
            let names = route.split(".");
            let child;
            child = node;
            for (let i = 0; i < names.length; i++) {
                const name = names[i];
                child = child.getChildByName(name);
                if (child == null) {
                    return child;
                }
            }
            return child;
        }
        shuffle(array) {
            let currentIndex = array.length, randomIndex;
            while (currentIndex != 0) {
                randomIndex = Math.floor(Math.random() * currentIndex);
                currentIndex--;
                [array[currentIndex], array[randomIndex]] = [
                    array[randomIndex], array[currentIndex]
                ];
            }
            return array;
        }
        randomInt(max) {
            return Math.floor(Math.random() * max);
        }
        formatGold(num, min = 100000, isFixed = false) {
            if (min >= 100000) {
                min = 100000;
            }
            if (num < min)
                return num.toString();
            let unit = '万';
            let baseNum = 10000;
            let l_c = 0;
            l_c = num / 10000;
            let decimals = 2;
            if (l_c >= 1) {
                unit = "万";
                if (l_c >= 1000) {
                    decimals = 0;
                }
                else if (l_c >= 100) {
                    if (decimals > 1) {
                        decimals = 1;
                    }
                }
                else if (l_c >= 10) {
                    if (decimals > 2) {
                        decimals = 2;
                    }
                }
                else {
                    if (decimals > 2) {
                        decimals = 2;
                    }
                }
            }
            if (Math.floor(num / 100000000) >= 1) {
                l_c = num / 100000000;
                unit = '亿';
                baseNum = 100000000;
                decimals = 2;
                if (l_c >= 1000) {
                    decimals = 0;
                }
                else if (l_c >= 100) {
                    if (decimals > 1) {
                        decimals = 1;
                    }
                }
                else if (l_c >= 10) {
                    if (decimals > 2) {
                        decimals = 2;
                    }
                }
                else {
                    if (decimals > 2) {
                        decimals = 2;
                    }
                }
            }
            if (Math.floor(num / 1000000000000) >= 1) {
                baseNum = 1000000000000;
                decimals = 2;
                l_c = num / 1000000000000;
                unit = '兆';
                if (l_c >= 1000) {
                    decimals = 0;
                }
                else if (l_c >= 100) {
                    if (decimals > 1) {
                        decimals = 1;
                    }
                }
                else if (l_c >= 10) {
                    if (decimals > 2) {
                        decimals = 2;
                    }
                }
                else {
                    if (decimals > 2) {
                        decimals = 2;
                    }
                }
            }
            if (Math.floor(num / 10000000000000000) >= 1) {
                baseNum = 10000000000000000;
                decimals = 2;
                l_c = num / 10000000000000000;
                unit = '万兆';
                if (l_c >= 1000) {
                    decimals = 0;
                }
                else if (l_c >= 100) {
                    if (decimals > 1) {
                        decimals = 1;
                    }
                }
                else if (l_c >= 10) {
                    if (decimals > 2) {
                        decimals = 2;
                    }
                }
                else {
                    if (decimals > 2) {
                        decimals = 2;
                    }
                }
            }
            let temp = this.getDotFirstNum(l_c, decimals);
            let result = temp + unit;
            return result;
        }
        getDotFirstNum(num, digit = 2) {
            if (Number(num) === Math.floor(num))
                return Math.floor(num);
            let res = [], addNum = 0;
            num += '';
            let [zs, xs] = num.split('.');
            for (let i = 0; i < xs.length; i++) {
                const ele = xs[i];
                if (res.length < digit) {
                    if (ele != 0) {
                        for (let k = i; k < i + (digit - 1); k++) {
                            if (res.length < digit) {
                                res[k] = xs[k];
                            }
                        }
                    }
                    else {
                        res[i] = xs[i];
                    }
                    ;
                }
            }
            return Number(Number(zs) + addNum + '.' + res.join(''));
        }
        selectStartRoom(p_isWin) {
            let l_data = {
                "isAgain": false,
                "roomName": null,
                "upId": null,
            };
            let gameConfigs = Laya.loader.getRes(GameRes.CONFIGS);
            let gameModeConfig = gameConfigs['gameModeData'];
            let gameId = GlobalData.getInstance().gameName;
            let myGold = DataPlayer.getInstance().userInfo.gold;
            let myBean = DataPlayer.getInstance().userInfo.bean;
            let selectMode = GlobalData.getInstance().gameId - 1;
            let canStart = 1;
            let l_str = "";
            let basescore = 0;
            for (let i = 0; i < gameModeConfig.length; i++) {
                const rooms = gameModeConfig[i] && gameModeConfig[i]['rooms'];
                let isMoney = !gameModeConfig[i] || (gameModeConfig[i] && gameModeConfig[i]['cyType'] == Currency_pb_10.GAMEMONEY);
                let money = isMoney ? myGold : myBean;
                for (let j = 0; j < rooms.length; j++) {
                    const room = rooms[j];
                    if (room['id'] === gameId) {
                        selectMode = i;
                        basescore = room['basescore'];
                        if (room['min'] <= money && (room['max'] === -1 || room['max'] >= money)) {
                            l_str = room['name'];
                            canStart = 0;
                            l_data["isAgain"] = true;
                            break;
                        }
                        else {
                            l_data["isAgain"] = false;
                        }
                    }
                }
            }
            let rooms = gameModeConfig[selectMode] && gameModeConfig[selectMode]['rooms'];
            let isMoney = !gameModeConfig[selectMode] || (gameModeConfig[selectMode] && gameModeConfig[selectMode]['cyType'] == Currency_pb_10.GAMEMONEY);
            let money = isMoney ? myGold : myBean;
            if (rooms && rooms.length > 0) {
                for (let i = rooms.length - 1; i >= 0; i--) {
                    const ele = rooms[i];
                    if (ele['id'] != gameId) {
                        if (ele['min'] <= money && (ele['max'] === -1 || ele['max'] >= money)) {
                            l_str = ele['name'];
                            if (basescore < ele['basescore'] && p_isWin) {
                                l_data["roomName"] = "前往" + l_str;
                            }
                            else if (!p_isWin && basescore > ele['basescore']) {
                                l_data["roomName"] = "降为" + l_str;
                            }
                            GlobalData.getInstance().changeGameName = ele['id'];
                            l_data["upId"] = ele['id'];
                            break;
                        }
                    }
                }
            }
            if (money <= 0) {
                l_data["isAgain"] = true;
            }
            return l_data;
        }
        showLobbyToast(msg) {
            let lobbyScene = GlobalData.getInstance().lobbyScene;
            if (lobbyScene != undefined && lobbyScene != null) {
                TopTipsManager.getInstance().showTopTips(msg);
            }
            else {
                Laya.timer.once(1000, this, this.showLobbyToast, [msg]);
            }
        }
        vibration(p_time = 3000, p_pause = 0, p_nexttime = 0) {
        }
        gotoWXPay(url) {
            CC.Log("gotoWXPay: " + url);
            var l = 50;
            var t = 50;
            var w = window.innerWidth - l * 2;
            var h = window.innerHeight - t * 2;
            Laya.Browser.window['conch'].setExternalLinkEx(url, l, t, w, h, false);
            setTimeout(() => {
                Laya.Browser.window['conch'].closeExternalLink();
            }, 1000);
        }
        captureShareImg(target = Laya.stage) {
            var _texture = target.drawToTexture(target.width, target.height, target.x, target.y);
            var sp2 = new Laya.Sprite();
            let tempHeight = target.height >= 745 ? 745 : target.height;
            let tempWidth = tempHeight * _texture.sourceWidth / _texture.sourceHeight;
            sp2.size(tempWidth, tempHeight);
            sp2.graphics.drawTexture(_texture, 0, 0, tempWidth, tempHeight);
            return sp2;
        }
        versionCompare(newStr, oldStr) {
            var nStr1 = newStr.replace(/(^\s+)|(\s+$)/gi, "");
            var nStr2 = oldStr.replace(/(^\s+)|(\s+$)/gi, "");
            if (!nStr1 || !nStr2) {
                return true;
            }
            var arr1 = nStr1.split('.');
            var arr2 = nStr2.split('.');
            var minL = Math.min(arr1.length, arr2.length);
            var index = 0;
            var diff = 0;
            while (index < minL) {
                diff = parseInt(arr1[index]) - parseInt(arr2[index]);
                if (diff != 0) {
                    break;
                }
                index++;
            }
            diff = (diff != 0) ? diff : (arr1.length - arr2.length);
            return diff;
        }
        dateIsWeekday() {
            let l_time = GlobalFunc.getNowMilli();
            let l_date = new Date(l_time);
            let l_day = l_date.getDay();
            if (l_day == 0) {
                return true;
            }
            return false;
        }
    }
    const GlobalFunc = new GlobalFunction();

    var Gate_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, any_pb);

    goog.object.extend(proto, Common_pb);
    goog.exportSymbol('proto.Gate.BanPlayerRequest', null, global);
    goog.exportSymbol('proto.Gate.CommonNotify', null, global);
    goog.exportSymbol('proto.Gate.ConnectNotify', null, global);
    goog.exportSymbol('proto.Gate.CrossDayNotify', null, global);
    goog.exportSymbol('proto.Gate.DisconnectNotify', null, global);
    goog.exportSymbol('proto.Gate.GuestAck', null, global);
    goog.exportSymbol('proto.Gate.GuestGet', null, global);
    goog.exportSymbol('proto.Gate.ListenRequest', null, global);
    goog.exportSymbol('proto.Gate.LocaItem', null, global);
    goog.exportSymbol('proto.Gate.LocationAck', null, global);
    goog.exportSymbol('proto.Gate.LocationGet', null, global);
    goog.exportSymbol('proto.Gate.LoginAck', null, global);
    goog.exportSymbol('proto.Gate.MarkLogGet', null, global);
    goog.exportSymbol('proto.Gate.OnlineTimeNotify', null, global);
    goog.exportSymbol('proto.Gate.QRCodeAck', null, global);
    goog.exportSymbol('proto.Gate.QRCodeGet', null, global);
    goog.exportSymbol('proto.Gate.SyncTimeRequest', null, global);
    goog.exportSymbol('proto.Gate.SyncTimeResponse', null, global);
    goog.exportSymbol('proto.Gate.UnbanPlayerRequest', null, global);
    proto.Gate.CommonNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Gate.CommonNotify.repeatedFields_, null);
    };
    goog.inherits(proto.Gate.CommonNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.CommonNotify.displayName = 'proto.Gate.CommonNotify';
    }
    proto.Gate.ListenRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.ListenRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.ListenRequest.displayName = 'proto.Gate.ListenRequest';
    }
    proto.Gate.LoginAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.LoginAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.LoginAck.displayName = 'proto.Gate.LoginAck';
    }
    proto.Gate.GuestGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.GuestGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.GuestGet.displayName = 'proto.Gate.GuestGet';
    }
    proto.Gate.GuestAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.GuestAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.GuestAck.displayName = 'proto.Gate.GuestAck';
    }
    proto.Gate.ConnectNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.ConnectNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.ConnectNotify.displayName = 'proto.Gate.ConnectNotify';
    }
    proto.Gate.DisconnectNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.DisconnectNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.DisconnectNotify.displayName = 'proto.Gate.DisconnectNotify';
    }
    proto.Gate.CrossDayNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.CrossDayNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.CrossDayNotify.displayName = 'proto.Gate.CrossDayNotify';
    }
    proto.Gate.OnlineTimeNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.OnlineTimeNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.OnlineTimeNotify.displayName = 'proto.Gate.OnlineTimeNotify';
    }
    proto.Gate.SyncTimeRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.SyncTimeRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.SyncTimeRequest.displayName = 'proto.Gate.SyncTimeRequest';
    }
    proto.Gate.SyncTimeResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.SyncTimeResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.SyncTimeResponse.displayName = 'proto.Gate.SyncTimeResponse';
    }
    proto.Gate.BanPlayerRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.BanPlayerRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.BanPlayerRequest.displayName = 'proto.Gate.BanPlayerRequest';
    }
    proto.Gate.UnbanPlayerRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.UnbanPlayerRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.UnbanPlayerRequest.displayName = 'proto.Gate.UnbanPlayerRequest';
    }
    proto.Gate.QRCodeGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.QRCodeGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.QRCodeGet.displayName = 'proto.Gate.QRCodeGet';
    }
    proto.Gate.QRCodeAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.QRCodeAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.QRCodeAck.displayName = 'proto.Gate.QRCodeAck';
    }
    proto.Gate.LocaItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.LocaItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.LocaItem.displayName = 'proto.Gate.LocaItem';
    }
    proto.Gate.LocationGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Gate.LocationGet.repeatedFields_, null);
    };
    goog.inherits(proto.Gate.LocationGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.LocationGet.displayName = 'proto.Gate.LocationGet';
    }
    proto.Gate.LocationAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Gate.LocationAck.repeatedFields_, null);
    };
    goog.inherits(proto.Gate.LocationAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.LocationAck.displayName = 'proto.Gate.LocationAck';
    }
    proto.Gate.MarkLogGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Gate.MarkLogGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Gate.MarkLogGet.displayName = 'proto.Gate.MarkLogGet';
    }
    proto.Gate.CommonNotify.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.CommonNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.CommonNotify.toObject(opt_includeInstance, this);
        };
        proto.Gate.CommonNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                opcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                msg: (f = msg.getMsg()) && any_pb.Any.toObject(includeInstance, f),
                vecpidsList: (f = googleProtobuf.Message.getRepeatedField(msg, 11)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.CommonNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.CommonNotify;
        return proto.Gate.CommonNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.CommonNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setOpcode(value);
                    break;
                case 2:
                    var value = new any_pb.Any;
                    reader.readMessage(value, any_pb.Any.deserializeBinaryFromReader);
                    msg.setMsg(value);
                    break;
                case 11:
                    var value = (reader.readPackedUint32());
                    msg.setVecpidsList(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.CommonNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.CommonNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.CommonNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getOpcode();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getMsg();
        if (f != null) {
            writer.writeMessage(2, f, any_pb.Any.serializeBinaryToWriter);
        }
        f = message.getVecpidsList();
        if (f.length > 0) {
            writer.writePackedUint32(11, f);
        }
    };
    proto.Gate.CommonNotify.prototype.getOpcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.CommonNotify.prototype.setOpcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Gate.CommonNotify.prototype.getMsg = function () {
        return (googleProtobuf.Message.getWrapperField(this, any_pb.Any, 2));
    };
    proto.Gate.CommonNotify.prototype.setMsg = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Gate.CommonNotify.prototype.clearMsg = function () {
        return this.setMsg(undefined);
    };
    proto.Gate.CommonNotify.prototype.hasMsg = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Gate.CommonNotify.prototype.getVecpidsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 11));
    };
    proto.Gate.CommonNotify.prototype.setVecpidsList = function (value) {
        return googleProtobuf.Message.setField(this, 11, value || []);
    };
    proto.Gate.CommonNotify.prototype.addVecpids = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 11, value, opt_index);
    };
    proto.Gate.CommonNotify.prototype.clearVecpidsList = function () {
        return this.setVecpidsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.ListenRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.ListenRequest.toObject(opt_includeInstance, this);
        };
        proto.Gate.ListenRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                strdeviceinfo: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                strlocation: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                logchannel: googleProtobuf.Message.getFieldWithDefault(msg, 6, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.ListenRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.ListenRequest;
        return proto.Gate.ListenRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.ListenRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrdeviceinfo(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrlocation(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setLogchannel(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.ListenRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.ListenRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.ListenRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStrdeviceinfo();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getStrlocation();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getLogchannel();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
    };
    proto.Gate.ListenRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.ListenRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Gate.ListenRequest.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Gate.ListenRequest.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Gate.ListenRequest.prototype.getStrdeviceinfo = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Gate.ListenRequest.prototype.setStrdeviceinfo = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Gate.ListenRequest.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Gate.ListenRequest.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Gate.ListenRequest.prototype.getStrlocation = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Gate.ListenRequest.prototype.setStrlocation = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Gate.ListenRequest.prototype.getLogchannel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Gate.ListenRequest.prototype.setLogchannel = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.LoginAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.LoginAck.toObject(opt_includeInstance, this);
        };
        proto.Gate.LoginAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                country: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.LoginAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.LoginAck;
        return proto.Gate.LoginAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.LoginAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setCountry(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.LoginAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.LoginAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.LoginAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCountry();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Gate.LoginAck.prototype.getCountry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Gate.LoginAck.prototype.setCountry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.GuestGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.GuestGet.toObject(opt_includeInstance, this);
        };
        proto.Gate.GuestGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                ip: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                location: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                channel: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.GuestGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.GuestGet;
        return proto.Gate.GuestGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.GuestGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setAddr(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setIp(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setLocation(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setChannel(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.GuestGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.GuestGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.GuestGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAddr();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getIp();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getLocation();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getChannel();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Gate.GuestGet.prototype.getAddr = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Gate.GuestGet.prototype.setAddr = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Gate.GuestGet.prototype.getIp = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Gate.GuestGet.prototype.setIp = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Gate.GuestGet.prototype.getLocation = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Gate.GuestGet.prototype.setLocation = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Gate.GuestGet.prototype.getChannel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Gate.GuestGet.prototype.setChannel = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.GuestAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.GuestAck.toObject(opt_includeInstance, this);
        };
        proto.Gate.GuestAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                country: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.GuestAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.GuestAck;
        return proto.Gate.GuestAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.GuestAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setCountry(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.GuestAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.GuestAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.GuestAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCountry();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Gate.GuestAck.prototype.getCountry = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Gate.GuestAck.prototype.setCountry = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Gate.GuestAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Gate.GuestAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Gate.GuestAck.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Gate.GuestAck.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.ConnectNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.ConnectNotify.toObject(opt_includeInstance, this);
        };
        proto.Gate.ConnectNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.ConnectNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.ConnectNotify;
        return proto.Gate.ConnectNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.ConnectNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.ConnectNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.ConnectNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.ConnectNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.Gate.ConnectNotify.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.ConnectNotify.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.DisconnectNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.DisconnectNotify.toObject(opt_includeInstance, this);
        };
        proto.Gate.DisconnectNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.DisconnectNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.DisconnectNotify;
        return proto.Gate.DisconnectNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.DisconnectNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.DisconnectNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.DisconnectNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.DisconnectNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.Gate.DisconnectNotify.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.DisconnectNotify.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.CrossDayNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.CrossDayNotify.toObject(opt_includeInstance, this);
        };
        proto.Gate.CrossDayNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.CrossDayNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.CrossDayNotify;
        return proto.Gate.CrossDayNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.CrossDayNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.CrossDayNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.CrossDayNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.CrossDayNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.Gate.CrossDayNotify.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.CrossDayNotify.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.OnlineTimeNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.OnlineTimeNotify.toObject(opt_includeInstance, this);
        };
        proto.Gate.OnlineTimeNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ndeltatime: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.OnlineTimeNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.OnlineTimeNotify;
        return proto.Gate.OnlineTimeNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.OnlineTimeNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readInt64());
                    msg.setNdeltatime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.OnlineTimeNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.OnlineTimeNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.OnlineTimeNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNdeltatime();
        if (f !== 0) {
            writer.writeInt64(2, f);
        }
    };
    proto.Gate.OnlineTimeNotify.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.OnlineTimeNotify.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Gate.OnlineTimeNotify.prototype.getNdeltatime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Gate.OnlineTimeNotify.prototype.setNdeltatime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.SyncTimeRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.SyncTimeRequest.toObject(opt_includeInstance, this);
        };
        proto.Gate.SyncTimeRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                nclienttime: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.SyncTimeRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.SyncTimeRequest;
        return proto.Gate.SyncTimeRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.SyncTimeRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt64());
                    msg.setNclienttime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.SyncTimeRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.SyncTimeRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.SyncTimeRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNclienttime();
        if (f !== 0) {
            writer.writeInt64(1, f);
        }
    };
    proto.Gate.SyncTimeRequest.prototype.getNclienttime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.SyncTimeRequest.prototype.setNclienttime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.SyncTimeResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.SyncTimeResponse.toObject(opt_includeInstance, this);
        };
        proto.Gate.SyncTimeResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nclienttime: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nservertime: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.SyncTimeResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.SyncTimeResponse;
        return proto.Gate.SyncTimeResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.SyncTimeResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt64());
                    msg.setNclienttime(value);
                    break;
                case 2:
                    var value = (reader.readInt64());
                    msg.setNservertime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.SyncTimeResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.SyncTimeResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.SyncTimeResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNclienttime();
        if (f !== 0) {
            writer.writeInt64(1, f);
        }
        f = message.getNservertime();
        if (f !== 0) {
            writer.writeInt64(2, f);
        }
    };
    proto.Gate.SyncTimeResponse.prototype.getNclienttime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.SyncTimeResponse.prototype.setNclienttime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Gate.SyncTimeResponse.prototype.getNservertime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Gate.SyncTimeResponse.prototype.setNservertime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.BanPlayerRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.BanPlayerRequest.toObject(opt_includeInstance, this);
        };
        proto.Gate.BanPlayerRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nday: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.BanPlayerRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.BanPlayerRequest;
        return proto.Gate.BanPlayerRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.BanPlayerRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNday(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.BanPlayerRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.BanPlayerRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.BanPlayerRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNday();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Gate.BanPlayerRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.BanPlayerRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Gate.BanPlayerRequest.prototype.getNday = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Gate.BanPlayerRequest.prototype.setNday = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.UnbanPlayerRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.UnbanPlayerRequest.toObject(opt_includeInstance, this);
        };
        proto.Gate.UnbanPlayerRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.UnbanPlayerRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.UnbanPlayerRequest;
        return proto.Gate.UnbanPlayerRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.UnbanPlayerRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.UnbanPlayerRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.UnbanPlayerRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.UnbanPlayerRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.Gate.UnbanPlayerRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.UnbanPlayerRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.QRCodeGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.QRCodeGet.toObject(opt_includeInstance, this);
        };
        proto.Gate.QRCodeGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                url: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                size: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.QRCodeGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.QRCodeGet;
        return proto.Gate.QRCodeGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.QRCodeGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setUrl(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setSize(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.QRCodeGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.QRCodeGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.QRCodeGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getUrl();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getSize();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
    };
    proto.Gate.QRCodeGet.prototype.getUrl = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Gate.QRCodeGet.prototype.setUrl = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Gate.QRCodeGet.prototype.getSize = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Gate.QRCodeGet.prototype.setSize = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.QRCodeAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.QRCodeAck.toObject(opt_includeInstance, this);
        };
        proto.Gate.QRCodeAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                result: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.QRCodeAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.QRCodeAck;
        return proto.Gate.QRCodeAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.QRCodeAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setResult(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.QRCodeAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.QRCodeAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.QRCodeAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getResult();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Gate.QRCodeAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.QRCodeAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Gate.QRCodeAck.prototype.getResult = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Gate.QRCodeAck.prototype.setResult = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.LocaItem.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.LocaItem.toObject(opt_includeInstance, this);
        };
        proto.Gate.LocaItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                longitude: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                latitude: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                time: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.LocaItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.LocaItem;
        return proto.Gate.LocaItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.LocaItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setLongitude(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setLatitude(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setTime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.LocaItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.LocaItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.LocaItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getLongitude();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getLatitude();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getTime();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
    };
    proto.Gate.LocaItem.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.LocaItem.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Gate.LocaItem.prototype.getLongitude = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Gate.LocaItem.prototype.setLongitude = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Gate.LocaItem.prototype.getLatitude = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Gate.LocaItem.prototype.setLatitude = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Gate.LocaItem.prototype.getTime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Gate.LocaItem.prototype.setTime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Gate.LocationGet.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.LocationGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.LocationGet.toObject(opt_includeInstance, this);
        };
        proto.Gate.LocationGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                item: (f = msg.getItem()) && proto.Gate.LocaItem.toObject(includeInstance, f),
                pidsList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
                motify: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.LocationGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.LocationGet;
        return proto.Gate.LocationGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.LocationGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Gate.LocaItem;
                    reader.readMessage(value, proto.Gate.LocaItem.deserializeBinaryFromReader);
                    msg.setItem(value);
                    break;
                case 2:
                    var value = (reader.readPackedUint32());
                    msg.setPidsList(value);
                    break;
                case 3:
                    var value = (reader.readEnum());
                    msg.setMotify(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.LocationGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.LocationGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.LocationGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getItem();
        if (f != null) {
            writer.writeMessage(1, f, proto.Gate.LocaItem.serializeBinaryToWriter);
        }
        f = message.getPidsList();
        if (f.length > 0) {
            writer.writePackedUint32(2, f);
        }
        f = message.getMotify();
        if (f !== 0.0) {
            writer.writeEnum(3, f);
        }
    };
    proto.Gate.LocationGet.prototype.getItem = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Gate.LocaItem, 1));
    };
    proto.Gate.LocationGet.prototype.setItem = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 1, value);
    };
    proto.Gate.LocationGet.prototype.clearItem = function () {
        return this.setItem(undefined);
    };
    proto.Gate.LocationGet.prototype.hasItem = function () {
        return googleProtobuf.Message.getField(this, 1) != null;
    };
    proto.Gate.LocationGet.prototype.getPidsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 2));
    };
    proto.Gate.LocationGet.prototype.setPidsList = function (value) {
        return googleProtobuf.Message.setField(this, 2, value || []);
    };
    proto.Gate.LocationGet.prototype.addPids = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.Gate.LocationGet.prototype.clearPidsList = function () {
        return this.setPidsList([]);
    };
    proto.Gate.LocationGet.prototype.getMotify = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Gate.LocationGet.prototype.setMotify = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 3, value);
    };
    proto.Gate.LocationAck.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.LocationAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.LocationAck.toObject(opt_includeInstance, this);
        };
        proto.Gate.LocationAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                item: (f = msg.getItem()) && proto.Gate.LocaItem.toObject(includeInstance, f),
                pidsList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
                motify: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                itemsMap: (f = msg.getItemsMap()) ? f.toObject(includeInstance, proto.Gate.LocaItem.toObject) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.LocationAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.LocationAck;
        return proto.Gate.LocationAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.LocationAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = new proto.Gate.LocaItem;
                    reader.readMessage(value, proto.Gate.LocaItem.deserializeBinaryFromReader);
                    msg.setItem(value);
                    break;
                case 3:
                    var value = (reader.readPackedUint32());
                    msg.setPidsList(value);
                    break;
                case 4:
                    var value = (reader.readEnum());
                    msg.setMotify(value);
                    break;
                case 11:
                    var value = msg.getItemsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Gate.LocaItem.deserializeBinaryFromReader, 0, new proto.Gate.LocaItem());
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.LocationAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.LocationAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.LocationAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getItem();
        if (f != null) {
            writer.writeMessage(2, f, proto.Gate.LocaItem.serializeBinaryToWriter);
        }
        f = message.getPidsList();
        if (f.length > 0) {
            writer.writePackedUint32(3, f);
        }
        f = message.getMotify();
        if (f !== 0.0) {
            writer.writeEnum(4, f);
        }
        f = message.getItemsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Gate.LocaItem.serializeBinaryToWriter);
        }
    };
    proto.Gate.LocationAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.LocationAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Gate.LocationAck.prototype.getItem = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Gate.LocaItem, 2));
    };
    proto.Gate.LocationAck.prototype.setItem = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Gate.LocationAck.prototype.clearItem = function () {
        return this.setItem(undefined);
    };
    proto.Gate.LocationAck.prototype.hasItem = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Gate.LocationAck.prototype.getPidsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 3));
    };
    proto.Gate.LocationAck.prototype.setPidsList = function (value) {
        return googleProtobuf.Message.setField(this, 3, value || []);
    };
    proto.Gate.LocationAck.prototype.addPids = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
    };
    proto.Gate.LocationAck.prototype.clearPidsList = function () {
        return this.setPidsList([]);
    };
    proto.Gate.LocationAck.prototype.getMotify = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Gate.LocationAck.prototype.setMotify = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 4, value);
    };
    proto.Gate.LocationAck.prototype.getItemsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, proto.Gate.LocaItem));
    };
    proto.Gate.LocationAck.prototype.clearItemsMap = function () {
        this.getItemsMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Gate.MarkLogGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Gate.MarkLogGet.toObject(opt_includeInstance, this);
        };
        proto.Gate.MarkLogGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                logtype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                message: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                uptime: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                platform: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                matchid: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
                gameid: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                strmac: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 10, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Gate.MarkLogGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Gate.MarkLogGet;
        return proto.Gate.MarkLogGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Gate.MarkLogGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setLogtype(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setMessage(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setUptime(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setPlatform(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setMatchid(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setGameid(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setStrmac(value);
                    break;
                case 10:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Gate.MarkLogGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Gate.MarkLogGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Gate.MarkLogGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getLogtype();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getMessage();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getUptime();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getPlatform();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getMatchid();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
        f = message.getGameid();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
        f = message.getStrmac();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(10, f);
        }
    };
    proto.Gate.MarkLogGet.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Gate.MarkLogGet.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Gate.MarkLogGet.prototype.getLogtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Gate.MarkLogGet.prototype.setLogtype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Gate.MarkLogGet.prototype.getMessage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Gate.MarkLogGet.prototype.setMessage = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Gate.MarkLogGet.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Gate.MarkLogGet.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Gate.MarkLogGet.prototype.getUptime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Gate.MarkLogGet.prototype.setUptime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Gate.MarkLogGet.prototype.getPlatform = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Gate.MarkLogGet.prototype.setPlatform = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Gate.MarkLogGet.prototype.getMatchid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Gate.MarkLogGet.prototype.setMatchid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Gate.MarkLogGet.prototype.getGameid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Gate.MarkLogGet.prototype.setGameid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Gate.MarkLogGet.prototype.getStrmac = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Gate.MarkLogGet.prototype.setStrmac = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    proto.Gate.MarkLogGet.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
    };
    proto.Gate.MarkLogGet.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 10, value);
    };
    goog.object.extend(exports, proto.Gate);

    });
    var Gate_pb_1 = Gate_pb.ListenRequest;
    var Gate_pb_2 = Gate_pb.CommonNotify;
    var Gate_pb_3 = Gate_pb.SyncTimeRequest;
    var Gate_pb_4 = Gate_pb.SyncTimeResponse;
    var Gate_pb_5 = Gate_pb.QRCodeGet;
    var Gate_pb_6 = Gate_pb.QRCodeAck;
    var Gate_pb_7 = Gate_pb.MarkLogGet;
    var Gate_pb_8 = Gate_pb.LoginAck;
    var Gate_pb_9 = Gate_pb.GuestGet;
    var Gate_pb_10 = Gate_pb.GuestAck;

    const grpc$b = {};
    grpc$b.web = grpcWeb;


    const proto$c = {};
    proto$c.Gate = Gate_pb;
    proto$c.Gate.GateServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$b.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$c.Gate.GateServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$b.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_GateService_ListenNotify = new grpc$b.web.MethodDescriptor('/Gate.GateService/ListenNotify', grpc$b.web.MethodType.SERVER_STREAMING, proto$c.Gate.ListenRequest, proto$c.Gate.CommonNotify, function (request) {
        return request.serializeBinary();
    }, proto$c.Gate.CommonNotify.deserializeBinary);
    proto$c.Gate.GateServiceClient.prototype.listenNotify =
        function (request, metadata) {
            return this.client_.serverStreaming(this.hostname_ +
                '/Gate.GateService/ListenNotify', request, metadata || {}, methodDescriptor_GateService_ListenNotify);
        };
    proto$c.Gate.GateServicePromiseClient.prototype.listenNotify =
        function (request, metadata) {
            return this.client_.serverStreaming(this.hostname_ +
                '/Gate.GateService/ListenNotify', request, metadata || {}, methodDescriptor_GateService_ListenNotify);
        };
    const methodDescriptor_GateService_Guest = new grpc$b.web.MethodDescriptor('/Gate.GateService/Guest', grpc$b.web.MethodType.UNARY, proto$c.Gate.GuestGet, proto$c.Gate.GuestAck, function (request) {
        return request.serializeBinary();
    }, proto$c.Gate.GuestAck.deserializeBinary);
    proto$c.Gate.GateServiceClient.prototype.guest =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Gate.GateService/Guest', request, metadata || {}, methodDescriptor_GateService_Guest, callback);
        };
    proto$c.Gate.GateServicePromiseClient.prototype.guest =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Gate.GateService/Guest', request, metadata || {}, methodDescriptor_GateService_Guest);
        };
    const methodDescriptor_GateService_SyncTime = new grpc$b.web.MethodDescriptor('/Gate.GateService/SyncTime', grpc$b.web.MethodType.UNARY, proto$c.Gate.SyncTimeRequest, proto$c.Gate.SyncTimeResponse, function (request) {
        return request.serializeBinary();
    }, proto$c.Gate.SyncTimeResponse.deserializeBinary);
    proto$c.Gate.GateServiceClient.prototype.syncTime =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Gate.GateService/SyncTime', request, metadata || {}, methodDescriptor_GateService_SyncTime, callback);
        };
    proto$c.Gate.GateServicePromiseClient.prototype.syncTime =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Gate.GateService/SyncTime', request, metadata || {}, methodDescriptor_GateService_SyncTime);
        };
    const methodDescriptor_GateService_BanPlayer = new grpc$b.web.MethodDescriptor('/Gate.GateService/BanPlayer', grpc$b.web.MethodType.UNARY, proto$c.Gate.BanPlayerRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$c.Gate.GateServiceClient.prototype.banPlayer =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Gate.GateService/BanPlayer', request, metadata || {}, methodDescriptor_GateService_BanPlayer, callback);
        };
    proto$c.Gate.GateServicePromiseClient.prototype.banPlayer =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Gate.GateService/BanPlayer', request, metadata || {}, methodDescriptor_GateService_BanPlayer);
        };
    const methodDescriptor_GateService_UnbanPlayer = new grpc$b.web.MethodDescriptor('/Gate.GateService/UnbanPlayer', grpc$b.web.MethodType.UNARY, proto$c.Gate.UnbanPlayerRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$c.Gate.GateServiceClient.prototype.unbanPlayer =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Gate.GateService/UnbanPlayer', request, metadata || {}, methodDescriptor_GateService_UnbanPlayer, callback);
        };
    proto$c.Gate.GateServicePromiseClient.prototype.unbanPlayer =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Gate.GateService/UnbanPlayer', request, metadata || {}, methodDescriptor_GateService_UnbanPlayer);
        };
    const methodDescriptor_GateService_QRCode = new grpc$b.web.MethodDescriptor('/Gate.GateService/QRCode', grpc$b.web.MethodType.UNARY, proto$c.Gate.QRCodeGet, proto$c.Gate.QRCodeAck, function (request) {
        return request.serializeBinary();
    }, proto$c.Gate.QRCodeAck.deserializeBinary);
    proto$c.Gate.GateServiceClient.prototype.qRCode =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Gate.GateService/QRCode', request, metadata || {}, methodDescriptor_GateService_QRCode, callback);
        };
    proto$c.Gate.GateServicePromiseClient.prototype.qRCode =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Gate.GateService/QRCode', request, metadata || {}, methodDescriptor_GateService_QRCode);
        };
    const methodDescriptor_GateService_MarkLog = new grpc$b.web.MethodDescriptor('/Gate.GateService/MarkLog', grpc$b.web.MethodType.UNARY, proto$c.Gate.MarkLogGet, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$c.Gate.GateServiceClient.prototype.markLog =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Gate.GateService/MarkLog', request, metadata || {}, methodDescriptor_GateService_MarkLog, callback);
        };
    proto$c.Gate.GateServicePromiseClient.prototype.markLog =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Gate.GateService/MarkLog', request, metadata || {}, methodDescriptor_GateService_MarkLog);
        };
    const methodDescriptor_GateService_Location = new grpc$b.web.MethodDescriptor('/Gate.GateService/Location', grpc$b.web.MethodType.UNARY, proto$c.Gate.LocationGet, proto$c.Gate.LocationAck, function (request) {
        return request.serializeBinary();
    }, proto$c.Gate.LocationAck.deserializeBinary);
    proto$c.Gate.GateServiceClient.prototype.location =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Gate.GateService/Location', request, metadata || {}, methodDescriptor_GateService_Location, callback);
        };
    proto$c.Gate.GateServicePromiseClient.prototype.location =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Gate.GateService/Location', request, metadata || {}, methodDescriptor_GateService_Location);
        };
    var Gate_grpc_web_pb = proto$c.Gate;
    var Gate_grpc_web_pb_1 = Gate_grpc_web_pb.GateServiceClient;

    var Mail_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Common_pb);

    goog.object.extend(proto, AwardService_pb);
    goog.exportSymbol('proto.Mail.AnnoInfo', null, global);
    goog.exportSymbol('proto.Mail.BatchMailOperaRequest', null, global);
    goog.exportSymbol('proto.Mail.MailInfo', null, global);
    goog.exportSymbol('proto.Mail.MailOpcode', null, global);
    goog.exportSymbol('proto.Mail.MailStatus', null, global);
    goog.exportSymbol('proto.Mail.QueryMailListRequest', null, global);
    goog.exportSymbol('proto.Mail.QueryMailListResponse', null, global);
    goog.exportSymbol('proto.Mail.SendAnnoRequest', null, global);
    goog.exportSymbol('proto.Mail.SendMailRequest', null, global);
    goog.exportSymbol('proto.Mail.SingleMailOperaRequest', null, global);
    goog.exportSymbol('proto.Mail.UnReadInfoNotify', null, global);
    proto.Mail.MailInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Mail.MailInfo.repeatedFields_, null);
    };
    goog.inherits(proto.Mail.MailInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Mail.MailInfo.displayName = 'proto.Mail.MailInfo';
    }
    proto.Mail.AnnoInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Mail.AnnoInfo.repeatedFields_, null);
    };
    goog.inherits(proto.Mail.AnnoInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Mail.AnnoInfo.displayName = 'proto.Mail.AnnoInfo';
    }
    proto.Mail.SendMailRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Mail.SendMailRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Mail.SendMailRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Mail.SendMailRequest.displayName = 'proto.Mail.SendMailRequest';
    }
    proto.Mail.SendAnnoRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Mail.SendAnnoRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Mail.SendAnnoRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Mail.SendAnnoRequest.displayName = 'proto.Mail.SendAnnoRequest';
    }
    proto.Mail.QueryMailListRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Mail.QueryMailListRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Mail.QueryMailListRequest.displayName = 'proto.Mail.QueryMailListRequest';
    }
    proto.Mail.QueryMailListResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Mail.QueryMailListResponse.repeatedFields_, null);
    };
    goog.inherits(proto.Mail.QueryMailListResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Mail.QueryMailListResponse.displayName = 'proto.Mail.QueryMailListResponse';
    }
    proto.Mail.SingleMailOperaRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Mail.SingleMailOperaRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Mail.SingleMailOperaRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Mail.SingleMailOperaRequest.displayName = 'proto.Mail.SingleMailOperaRequest';
    }
    proto.Mail.BatchMailOperaRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Mail.BatchMailOperaRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Mail.BatchMailOperaRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Mail.BatchMailOperaRequest.displayName = 'proto.Mail.BatchMailOperaRequest';
    }
    proto.Mail.UnReadInfoNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Mail.UnReadInfoNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Mail.UnReadInfoNotify.displayName = 'proto.Mail.UnReadInfoNotify';
    }
    proto.Mail.MailInfo.repeatedFields_ = [7];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Mail.MailInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Mail.MailInfo.toObject(opt_includeInstance, this);
        };
        proto.Mail.MailInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                id: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                sendid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                recvpid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                category: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                title: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                content: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                itemsList: googleProtobuf.Message.toObjectList(msg.getItemsList(), AwardService_pb.AwardItem.toObject, includeInstance),
                readstatus: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                sendtime: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                deadline: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                nawardsource: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Mail.MailInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Mail.MailInfo;
        return proto.Mail.MailInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Mail.MailInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setId(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSendid(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setRecvpid(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setCategory(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setTitle(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setContent(value);
                    break;
                case 7:
                    var value = new AwardService_pb.AwardItem;
                    reader.readMessage(value, AwardService_pb.AwardItem.deserializeBinaryFromReader);
                    msg.addItems(value);
                    break;
                case 8:
                    var value = (reader.readInt32());
                    msg.setReadstatus(value);
                    break;
                case 9:
                    var value = (reader.readInt64());
                    msg.setSendtime(value);
                    break;
                case 10:
                    var value = (reader.readInt64());
                    msg.setDeadline(value);
                    break;
                case 11:
                    var value = (reader.readUint32());
                    msg.setNawardsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Mail.MailInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Mail.MailInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Mail.MailInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getId();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getSendid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getRecvpid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getCategory();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getTitle();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getContent();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getItemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(7, f, AwardService_pb.AwardItem.serializeBinaryToWriter);
        }
        f = message.getReadstatus();
        if (f !== 0) {
            writer.writeInt32(8, f);
        }
        f = message.getSendtime();
        if (f !== 0) {
            writer.writeInt64(9, f);
        }
        f = message.getDeadline();
        if (f !== 0) {
            writer.writeInt64(10, f);
        }
        f = message.getNawardsource();
        if (f !== 0) {
            writer.writeUint32(11, f);
        }
    };
    proto.Mail.MailInfo.prototype.getId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Mail.MailInfo.prototype.setId = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Mail.MailInfo.prototype.getSendid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Mail.MailInfo.prototype.setSendid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Mail.MailInfo.prototype.getRecvpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Mail.MailInfo.prototype.setRecvpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Mail.MailInfo.prototype.getCategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Mail.MailInfo.prototype.setCategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Mail.MailInfo.prototype.getTitle = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Mail.MailInfo.prototype.setTitle = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Mail.MailInfo.prototype.getContent = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Mail.MailInfo.prototype.setContent = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Mail.MailInfo.prototype.getItemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, AwardService_pb.AwardItem, 7));
    };
    proto.Mail.MailInfo.prototype.setItemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 7, value);
    };
    proto.Mail.MailInfo.prototype.addItems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Mail.MailInfo.prototype.clearItemsList = function () {
        return this.setItemsList([]);
    };
    proto.Mail.MailInfo.prototype.getReadstatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Mail.MailInfo.prototype.setReadstatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Mail.MailInfo.prototype.getSendtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Mail.MailInfo.prototype.setSendtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Mail.MailInfo.prototype.getDeadline = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Mail.MailInfo.prototype.setDeadline = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Mail.MailInfo.prototype.getNawardsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Mail.MailInfo.prototype.setNawardsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Mail.AnnoInfo.repeatedFields_ = [6];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Mail.AnnoInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Mail.AnnoInfo.toObject(opt_includeInstance, this);
        };
        proto.Mail.AnnoInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                annoid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                sendid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                category: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                title: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                content: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                itemsList: googleProtobuf.Message.toObjectList(msg.getItemsList(), AwardService_pb.AwardItem.toObject, includeInstance),
                sendtime: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                deadline: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                nawardsource: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Mail.AnnoInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Mail.AnnoInfo;
        return proto.Mail.AnnoInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Mail.AnnoInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setAnnoid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSendid(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setCategory(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setTitle(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setContent(value);
                    break;
                case 6:
                    var value = new AwardService_pb.AwardItem;
                    reader.readMessage(value, AwardService_pb.AwardItem.deserializeBinaryFromReader);
                    msg.addItems(value);
                    break;
                case 7:
                    var value = (reader.readInt64());
                    msg.setSendtime(value);
                    break;
                case 8:
                    var value = (reader.readInt64());
                    msg.setDeadline(value);
                    break;
                case 9:
                    var value = (reader.readUint32());
                    msg.setNawardsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Mail.AnnoInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Mail.AnnoInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Mail.AnnoInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAnnoid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getSendid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getCategory();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getTitle();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getContent();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getItemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(6, f, AwardService_pb.AwardItem.serializeBinaryToWriter);
        }
        f = message.getSendtime();
        if (f !== 0) {
            writer.writeInt64(7, f);
        }
        f = message.getDeadline();
        if (f !== 0) {
            writer.writeInt64(8, f);
        }
        f = message.getNawardsource();
        if (f !== 0) {
            writer.writeUint32(9, f);
        }
    };
    proto.Mail.AnnoInfo.prototype.getAnnoid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Mail.AnnoInfo.prototype.setAnnoid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Mail.AnnoInfo.prototype.getSendid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Mail.AnnoInfo.prototype.setSendid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Mail.AnnoInfo.prototype.getCategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Mail.AnnoInfo.prototype.setCategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Mail.AnnoInfo.prototype.getTitle = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Mail.AnnoInfo.prototype.setTitle = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Mail.AnnoInfo.prototype.getContent = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Mail.AnnoInfo.prototype.setContent = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Mail.AnnoInfo.prototype.getItemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, AwardService_pb.AwardItem, 6));
    };
    proto.Mail.AnnoInfo.prototype.setItemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 6, value);
    };
    proto.Mail.AnnoInfo.prototype.addItems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Mail.AnnoInfo.prototype.clearItemsList = function () {
        return this.setItemsList([]);
    };
    proto.Mail.AnnoInfo.prototype.getSendtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Mail.AnnoInfo.prototype.setSendtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Mail.AnnoInfo.prototype.getDeadline = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Mail.AnnoInfo.prototype.setDeadline = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Mail.AnnoInfo.prototype.getNawardsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Mail.AnnoInfo.prototype.setNawardsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Mail.SendMailRequest.repeatedFields_ = [5];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Mail.SendMailRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Mail.SendMailRequest.toObject(opt_includeInstance, this);
        };
        proto.Mail.SendMailRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                sendid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                recvpid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                category: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                mailid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                itemsList: googleProtobuf.Message.toObjectList(msg.getItemsList(), AwardService_pb.AwardItem.toObject, includeInstance),
                nawardsource: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Mail.SendMailRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Mail.SendMailRequest;
        return proto.Mail.SendMailRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Mail.SendMailRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setSendid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setRecvpid(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setCategory(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setMailid(value);
                    break;
                case 5:
                    var value = new AwardService_pb.AwardItem;
                    reader.readMessage(value, AwardService_pb.AwardItem.deserializeBinaryFromReader);
                    msg.addItems(value);
                    break;
                case 6:
                    var value = (reader.readUint32());
                    msg.setNawardsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Mail.SendMailRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Mail.SendMailRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Mail.SendMailRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getSendid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getRecvpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getCategory();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getMailid();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getItemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(5, f, AwardService_pb.AwardItem.serializeBinaryToWriter);
        }
        f = message.getNawardsource();
        if (f !== 0) {
            writer.writeUint32(6, f);
        }
    };
    proto.Mail.SendMailRequest.prototype.getSendid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Mail.SendMailRequest.prototype.setSendid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Mail.SendMailRequest.prototype.getRecvpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Mail.SendMailRequest.prototype.setRecvpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Mail.SendMailRequest.prototype.getCategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Mail.SendMailRequest.prototype.setCategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Mail.SendMailRequest.prototype.getMailid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Mail.SendMailRequest.prototype.setMailid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Mail.SendMailRequest.prototype.getItemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, AwardService_pb.AwardItem, 5));
    };
    proto.Mail.SendMailRequest.prototype.setItemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
    };
    proto.Mail.SendMailRequest.prototype.addItems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Mail.SendMailRequest.prototype.clearItemsList = function () {
        return this.setItemsList([]);
    };
    proto.Mail.SendMailRequest.prototype.getNawardsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Mail.SendMailRequest.prototype.setNawardsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Mail.SendAnnoRequest.repeatedFields_ = [5];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Mail.SendAnnoRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Mail.SendAnnoRequest.toObject(opt_includeInstance, this);
        };
        proto.Mail.SendAnnoRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                sendid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                category: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                title: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                content: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                arritemsList: googleProtobuf.Message.toObjectList(msg.getArritemsList(), AwardService_pb.AwardItem.toObject, includeInstance),
                sendtime: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                deadline: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                nawardsource: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Mail.SendAnnoRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Mail.SendAnnoRequest;
        return proto.Mail.SendAnnoRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Mail.SendAnnoRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setSendid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setCategory(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setTitle(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setContent(value);
                    break;
                case 5:
                    var value = new AwardService_pb.AwardItem;
                    reader.readMessage(value, AwardService_pb.AwardItem.deserializeBinaryFromReader);
                    msg.addArritems(value);
                    break;
                case 6:
                    var value = (reader.readInt64());
                    msg.setSendtime(value);
                    break;
                case 7:
                    var value = (reader.readInt64());
                    msg.setDeadline(value);
                    break;
                case 8:
                    var value = (reader.readUint32());
                    msg.setNawardsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Mail.SendAnnoRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Mail.SendAnnoRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Mail.SendAnnoRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getSendid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getCategory();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getTitle();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getContent();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getArritemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(5, f, AwardService_pb.AwardItem.serializeBinaryToWriter);
        }
        f = message.getSendtime();
        if (f !== 0) {
            writer.writeInt64(6, f);
        }
        f = message.getDeadline();
        if (f !== 0) {
            writer.writeInt64(7, f);
        }
        f = message.getNawardsource();
        if (f !== 0) {
            writer.writeUint32(8, f);
        }
    };
    proto.Mail.SendAnnoRequest.prototype.getSendid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Mail.SendAnnoRequest.prototype.setSendid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Mail.SendAnnoRequest.prototype.getCategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Mail.SendAnnoRequest.prototype.setCategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Mail.SendAnnoRequest.prototype.getTitle = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Mail.SendAnnoRequest.prototype.setTitle = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Mail.SendAnnoRequest.prototype.getContent = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Mail.SendAnnoRequest.prototype.setContent = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Mail.SendAnnoRequest.prototype.getArritemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, AwardService_pb.AwardItem, 5));
    };
    proto.Mail.SendAnnoRequest.prototype.setArritemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
    };
    proto.Mail.SendAnnoRequest.prototype.addArritems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Mail.SendAnnoRequest.prototype.clearArritemsList = function () {
        return this.setArritemsList([]);
    };
    proto.Mail.SendAnnoRequest.prototype.getSendtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Mail.SendAnnoRequest.prototype.setSendtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Mail.SendAnnoRequest.prototype.getDeadline = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Mail.SendAnnoRequest.prototype.setDeadline = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Mail.SendAnnoRequest.prototype.getNawardsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Mail.SendAnnoRequest.prototype.setNawardsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Mail.QueryMailListRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Mail.QueryMailListRequest.toObject(opt_includeInstance, this);
        };
        proto.Mail.QueryMailListRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                category: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                curpage: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                pagesize: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Mail.QueryMailListRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Mail.QueryMailListRequest;
        return proto.Mail.QueryMailListRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Mail.QueryMailListRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setCategory(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setCurpage(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setPagesize(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Mail.QueryMailListRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Mail.QueryMailListRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Mail.QueryMailListRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getCategory();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getCurpage();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getPagesize();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
    };
    proto.Mail.QueryMailListRequest.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Mail.QueryMailListRequest.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Mail.QueryMailListRequest.prototype.getCategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Mail.QueryMailListRequest.prototype.setCategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Mail.QueryMailListRequest.prototype.getCurpage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Mail.QueryMailListRequest.prototype.setCurpage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Mail.QueryMailListRequest.prototype.getPagesize = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Mail.QueryMailListRequest.prototype.setPagesize = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Mail.QueryMailListResponse.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Mail.QueryMailListResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Mail.QueryMailListResponse.toObject(opt_includeInstance, this);
        };
        proto.Mail.QueryMailListResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                mailsList: googleProtobuf.Message.toObjectList(msg.getMailsList(), proto.Mail.MailInfo.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Mail.QueryMailListResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Mail.QueryMailListResponse;
        return proto.Mail.QueryMailListResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Mail.QueryMailListResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Mail.MailInfo;
                    reader.readMessage(value, proto.Mail.MailInfo.deserializeBinaryFromReader);
                    msg.addMails(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Mail.QueryMailListResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Mail.QueryMailListResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Mail.QueryMailListResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getMailsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Mail.MailInfo.serializeBinaryToWriter);
        }
    };
    proto.Mail.QueryMailListResponse.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Mail.QueryMailListResponse.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Mail.QueryMailListResponse.prototype.getMailsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Mail.MailInfo, 2));
    };
    proto.Mail.QueryMailListResponse.prototype.setMailsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Mail.QueryMailListResponse.prototype.addMails = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Mail.MailInfo, opt_index);
    };
    proto.Mail.QueryMailListResponse.prototype.clearMailsList = function () {
        return this.setMailsList([]);
    };
    proto.Mail.SingleMailOperaRequest.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Mail.SingleMailOperaRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Mail.SingleMailOperaRequest.toObject(opt_includeInstance, this);
        };
        proto.Mail.SingleMailOperaRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                id: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                opcodesList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Mail.SingleMailOperaRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Mail.SingleMailOperaRequest;
        return proto.Mail.SingleMailOperaRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Mail.SingleMailOperaRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setId(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 3:
                    var values = (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addOpcodes(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Mail.SingleMailOperaRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Mail.SingleMailOperaRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Mail.SingleMailOperaRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getId();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getOpcodesList();
        if (f.length > 0) {
            writer.writePackedEnum(3, f);
        }
    };
    proto.Mail.SingleMailOperaRequest.prototype.getId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Mail.SingleMailOperaRequest.prototype.setId = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Mail.SingleMailOperaRequest.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Mail.SingleMailOperaRequest.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Mail.SingleMailOperaRequest.prototype.getOpcodesList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 3));
    };
    proto.Mail.SingleMailOperaRequest.prototype.setOpcodesList = function (value) {
        return googleProtobuf.Message.setField(this, 3, value || []);
    };
    proto.Mail.SingleMailOperaRequest.prototype.addOpcodes = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
    };
    proto.Mail.SingleMailOperaRequest.prototype.clearOpcodesList = function () {
        return this.setOpcodesList([]);
    };
    proto.Mail.BatchMailOperaRequest.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Mail.BatchMailOperaRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Mail.BatchMailOperaRequest.toObject(opt_includeInstance, this);
        };
        proto.Mail.BatchMailOperaRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                category: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                opcodesList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Mail.BatchMailOperaRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Mail.BatchMailOperaRequest;
        return proto.Mail.BatchMailOperaRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Mail.BatchMailOperaRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setCategory(value);
                    break;
                case 3:
                    var values = (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addOpcodes(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Mail.BatchMailOperaRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Mail.BatchMailOperaRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Mail.BatchMailOperaRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getCategory();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getOpcodesList();
        if (f.length > 0) {
            writer.writePackedEnum(3, f);
        }
    };
    proto.Mail.BatchMailOperaRequest.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Mail.BatchMailOperaRequest.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Mail.BatchMailOperaRequest.prototype.getCategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Mail.BatchMailOperaRequest.prototype.setCategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Mail.BatchMailOperaRequest.prototype.getOpcodesList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 3));
    };
    proto.Mail.BatchMailOperaRequest.prototype.setOpcodesList = function (value) {
        return googleProtobuf.Message.setField(this, 3, value || []);
    };
    proto.Mail.BatchMailOperaRequest.prototype.addOpcodes = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
    };
    proto.Mail.BatchMailOperaRequest.prototype.clearOpcodesList = function () {
        return this.setOpcodesList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Mail.UnReadInfoNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Mail.UnReadInfoNotify.toObject(opt_includeInstance, this);
        };
        proto.Mail.UnReadInfoNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                unreadcountMap: (f = msg.getUnreadcountMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Mail.UnReadInfoNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Mail.UnReadInfoNotify;
        return proto.Mail.UnReadInfoNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Mail.UnReadInfoNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = msg.getUnreadcountMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readUint32, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Mail.UnReadInfoNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Mail.UnReadInfoNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Mail.UnReadInfoNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getUnreadcountMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeUint32);
        }
    };
    proto.Mail.UnReadInfoNotify.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Mail.UnReadInfoNotify.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Mail.UnReadInfoNotify.prototype.getUnreadcountMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate, null));
    };
    proto.Mail.UnReadInfoNotify.prototype.clearUnreadcountMap = function () {
        this.getUnreadcountMap().clear();
        return this;
    };
    proto.Mail.MailOpcode = {
        EN_READ_MAIL: 0,
        EN_GET_AWARD: 1,
        EN_DEL_MAIL: 2,
        EN_READ_MAIL_BATCH: 3,
        EN_GET_AWARD_BATCH: 4,
        EN_DEL_MAIL_BATCH: 5
    };
    proto.Mail.MailStatus = {
        S_NONE: 0,
        S_NOT_READ: 1,
        S_HAS_READ: 2
    };
    goog.object.extend(exports, proto.Mail);

    });
    var Mail_pb_1 = Mail_pb.MailInfo;
    var Mail_pb_2 = Mail_pb.MailStatus;
    var Mail_pb_3 = Mail_pb.UnReadInfoNotify;
    var Mail_pb_4 = Mail_pb.QueryMailListRequest;
    var Mail_pb_5 = Mail_pb.QueryMailListResponse;
    var Mail_pb_6 = Mail_pb.SingleMailOperaRequest;
    var Mail_pb_7 = Mail_pb.BatchMailOperaRequest;
    var Mail_pb_8 = Mail_pb.MailOpcode;

    var Task_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Common_pb);

    goog.object.extend(proto, AwardService_pb);
    goog.exportSymbol('proto.Task.AcceptTaskRequest', null, global);
    goog.exportSymbol('proto.Task.CategoryTaskCount', null, global);
    goog.exportSymbol('proto.Task.CompleteTaskNoti', null, global);
    goog.exportSymbol('proto.Task.CompleteTaskRequest', null, global);
    goog.exportSymbol('proto.Task.CompleteTaskResponse', null, global);
    goog.exportSymbol('proto.Task.CompleteTaskResponse.Result', null, global);
    goog.exportSymbol('proto.Task.EVENT_ID', null, global);
    goog.exportSymbol('proto.Task.QueryTaskRequest', null, global);
    goog.exportSymbol('proto.Task.QueryTaskResponse', null, global);
    goog.exportSymbol('proto.Task.RemoveTaskRequest', null, global);
    goog.exportSymbol('proto.Task.TASK_CATEGORY', null, global);
    goog.exportSymbol('proto.Task.TaskCheckEvent', null, global);
    goog.exportSymbol('proto.Task.TaskFilter', null, global);
    goog.exportSymbol('proto.Task.TaskInfo', null, global);
    goog.exportSymbol('proto.Task.TaskInfo.Status', null, global);
    goog.exportSymbol('proto.Task.TaskUpdateNoti', null, global);
    proto.Task.TaskInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Task.TaskInfo.repeatedFields_, null);
    };
    goog.inherits(proto.Task.TaskInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.TaskInfo.displayName = 'proto.Task.TaskInfo';
    }
    proto.Task.TaskFilter = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Task.TaskFilter, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.TaskFilter.displayName = 'proto.Task.TaskFilter';
    }
    proto.Task.QueryTaskRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Task.QueryTaskRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.QueryTaskRequest.displayName = 'proto.Task.QueryTaskRequest';
    }
    proto.Task.QueryTaskResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Task.QueryTaskResponse.repeatedFields_, null);
    };
    goog.inherits(proto.Task.QueryTaskResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.QueryTaskResponse.displayName = 'proto.Task.QueryTaskResponse';
    }
    proto.Task.AcceptTaskRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Task.AcceptTaskRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Task.AcceptTaskRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.AcceptTaskRequest.displayName = 'proto.Task.AcceptTaskRequest';
    }
    proto.Task.RemoveTaskRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Task.RemoveTaskRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Task.RemoveTaskRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.RemoveTaskRequest.displayName = 'proto.Task.RemoveTaskRequest';
    }
    proto.Task.CompleteTaskRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Task.CompleteTaskRequest.repeatedFields_, null);
    };
    goog.inherits(proto.Task.CompleteTaskRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.CompleteTaskRequest.displayName = 'proto.Task.CompleteTaskRequest';
    }
    proto.Task.CompleteTaskResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Task.CompleteTaskResponse.repeatedFields_, null);
    };
    goog.inherits(proto.Task.CompleteTaskResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.CompleteTaskResponse.displayName = 'proto.Task.CompleteTaskResponse';
    }
    proto.Task.TaskCheckEvent = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Task.TaskCheckEvent, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.TaskCheckEvent.displayName = 'proto.Task.TaskCheckEvent';
    }
    proto.Task.TaskUpdateNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Task.TaskUpdateNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Task.TaskUpdateNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.TaskUpdateNoti.displayName = 'proto.Task.TaskUpdateNoti';
    }
    proto.Task.CategoryTaskCount = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Task.CategoryTaskCount, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.CategoryTaskCount.displayName = 'proto.Task.CategoryTaskCount';
    }
    proto.Task.CompleteTaskNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Task.CompleteTaskNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Task.CompleteTaskNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Task.CompleteTaskNoti.displayName = 'proto.Task.CompleteTaskNoti';
    }
    proto.Task.TaskInfo.repeatedFields_ = [12, 14];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.TaskInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.TaskInfo.toObject(opt_includeInstance, this);
        };
        proto.Task.TaskInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                strid: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ntaskid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                ncategory: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                nsubcategory: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                strname: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                strdesc: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
                nprogress: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                ntarget: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                nstatus: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                nexpire: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                arrawardsList: googleProtobuf.Message.toObjectList(msg.getArrawardsList(), AwardService_pb.AwardItem.toObject, includeInstance),
                strlink: googleProtobuf.Message.getFieldWithDefault(msg, 13, ""),
                arrplatformsList: (f = googleProtobuf.Message.getRepeatedField(msg, 14)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.TaskInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.TaskInfo;
        return proto.Task.TaskInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.TaskInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNtaskid(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNcategory(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNsubcategory(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setStrname(value);
                    break;
                case 7:
                    var value = (reader.readString());
                    msg.setStrdesc(value);
                    break;
                case 8:
                    var value = (reader.readInt64());
                    msg.setNprogress(value);
                    break;
                case 9:
                    var value = (reader.readInt64());
                    msg.setNtarget(value);
                    break;
                case 10:
                    var value = (reader.readInt32());
                    msg.setNstatus(value);
                    break;
                case 11:
                    var value = (reader.readInt64());
                    msg.setNexpire(value);
                    break;
                case 12:
                    var value = new AwardService_pb.AwardItem;
                    reader.readMessage(value, AwardService_pb.AwardItem.deserializeBinaryFromReader);
                    msg.addArrawards(value);
                    break;
                case 13:
                    var value = (reader.readString());
                    msg.setStrlink(value);
                    break;
                case 14:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addArrplatforms(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.TaskInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.TaskInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.TaskInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrid();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNtaskid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNcategory();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getNsubcategory();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getStrname();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getStrdesc();
        if (f.length > 0) {
            writer.writeString(7, f);
        }
        f = message.getNprogress();
        if (f !== 0) {
            writer.writeInt64(8, f);
        }
        f = message.getNtarget();
        if (f !== 0) {
            writer.writeInt64(9, f);
        }
        f = message.getNstatus();
        if (f !== 0) {
            writer.writeInt32(10, f);
        }
        f = message.getNexpire();
        if (f !== 0) {
            writer.writeInt64(11, f);
        }
        f = message.getArrawardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(12, f, AwardService_pb.AwardItem.serializeBinaryToWriter);
        }
        f = message.getStrlink();
        if (f.length > 0) {
            writer.writeString(13, f);
        }
        f = message.getArrplatformsList();
        if (f.length > 0) {
            writer.writePackedUint32(14, f);
        }
    };
    proto.Task.TaskInfo.Status = {
        ACCEPT: 0,
        COMPLETE: 1,
        AWARDED: 2
    };
    proto.Task.TaskInfo.prototype.getStrid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Task.TaskInfo.prototype.setStrid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Task.TaskInfo.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Task.TaskInfo.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Task.TaskInfo.prototype.getNtaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Task.TaskInfo.prototype.setNtaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Task.TaskInfo.prototype.getNcategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Task.TaskInfo.prototype.setNcategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Task.TaskInfo.prototype.getNsubcategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Task.TaskInfo.prototype.setNsubcategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Task.TaskInfo.prototype.getStrname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Task.TaskInfo.prototype.setStrname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Task.TaskInfo.prototype.getStrdesc = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
    };
    proto.Task.TaskInfo.prototype.setStrdesc = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 7, value);
    };
    proto.Task.TaskInfo.prototype.getNprogress = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Task.TaskInfo.prototype.setNprogress = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Task.TaskInfo.prototype.getNtarget = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Task.TaskInfo.prototype.setNtarget = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Task.TaskInfo.prototype.getNstatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Task.TaskInfo.prototype.setNstatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Task.TaskInfo.prototype.getNexpire = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Task.TaskInfo.prototype.setNexpire = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Task.TaskInfo.prototype.getArrawardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, AwardService_pb.AwardItem, 12));
    };
    proto.Task.TaskInfo.prototype.setArrawardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 12, value);
    };
    proto.Task.TaskInfo.prototype.addArrawards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Task.TaskInfo.prototype.clearArrawardsList = function () {
        return this.setArrawardsList([]);
    };
    proto.Task.TaskInfo.prototype.getStrlink = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, ""));
    };
    proto.Task.TaskInfo.prototype.setStrlink = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 13, value);
    };
    proto.Task.TaskInfo.prototype.getArrplatformsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 14));
    };
    proto.Task.TaskInfo.prototype.setArrplatformsList = function (value) {
        return googleProtobuf.Message.setField(this, 14, value || []);
    };
    proto.Task.TaskInfo.prototype.addArrplatforms = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 14, value, opt_index);
    };
    proto.Task.TaskInfo.prototype.clearArrplatformsList = function () {
        return this.setArrplatformsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.TaskFilter.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.TaskFilter.toObject(opt_includeInstance, this);
        };
        proto.Task.TaskFilter.toObject = function (includeInstance, msg) {
            var f, obj = {
                nplatform: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ncategory: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nsubcategory: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                ntaskid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.TaskFilter.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.TaskFilter;
        return proto.Task.TaskFilter.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.TaskFilter.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNplatform(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNcategory(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNsubcategory(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNtaskid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.TaskFilter.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.TaskFilter.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.TaskFilter.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNplatform();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNcategory();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNsubcategory();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNtaskid();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
    };
    proto.Task.TaskFilter.prototype.getNplatform = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Task.TaskFilter.prototype.setNplatform = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Task.TaskFilter.prototype.getNcategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Task.TaskFilter.prototype.setNcategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Task.TaskFilter.prototype.getNsubcategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Task.TaskFilter.prototype.setNsubcategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Task.TaskFilter.prototype.getNtaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Task.TaskFilter.prototype.setNtaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.QueryTaskRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.QueryTaskRequest.toObject(opt_includeInstance, this);
        };
        proto.Task.QueryTaskRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                stfilter: (f = msg.getStfilter()) && proto.Task.TaskFilter.toObject(includeInstance, f),
                npage: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                npagesize: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.QueryTaskRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.QueryTaskRequest;
        return proto.Task.QueryTaskRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.QueryTaskRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = new proto.Task.TaskFilter;
                    reader.readMessage(value, proto.Task.TaskFilter.deserializeBinaryFromReader);
                    msg.setStfilter(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNpage(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNpagesize(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.QueryTaskRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.QueryTaskRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.QueryTaskRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStfilter();
        if (f != null) {
            writer.writeMessage(2, f, proto.Task.TaskFilter.serializeBinaryToWriter);
        }
        f = message.getNpage();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNpagesize();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
    };
    proto.Task.QueryTaskRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Task.QueryTaskRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Task.QueryTaskRequest.prototype.getStfilter = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Task.TaskFilter, 2));
    };
    proto.Task.QueryTaskRequest.prototype.setStfilter = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Task.QueryTaskRequest.prototype.clearStfilter = function () {
        return this.setStfilter(undefined);
    };
    proto.Task.QueryTaskRequest.prototype.hasStfilter = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Task.QueryTaskRequest.prototype.getNpage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Task.QueryTaskRequest.prototype.setNpage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Task.QueryTaskRequest.prototype.getNpagesize = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Task.QueryTaskRequest.prototype.setNpagesize = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Task.QueryTaskResponse.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.QueryTaskResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.QueryTaskResponse.toObject(opt_includeInstance, this);
        };
        proto.Task.QueryTaskResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                arrtasksList: googleProtobuf.Message.toObjectList(msg.getArrtasksList(), proto.Task.TaskInfo.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.QueryTaskResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.QueryTaskResponse;
        return proto.Task.QueryTaskResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.QueryTaskResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Task.TaskInfo;
                    reader.readMessage(value, proto.Task.TaskInfo.deserializeBinaryFromReader);
                    msg.addArrtasks(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.QueryTaskResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.QueryTaskResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.QueryTaskResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getArrtasksList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(1, f, proto.Task.TaskInfo.serializeBinaryToWriter);
        }
    };
    proto.Task.QueryTaskResponse.prototype.getArrtasksList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Task.TaskInfo, 1));
    };
    proto.Task.QueryTaskResponse.prototype.setArrtasksList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
    };
    proto.Task.QueryTaskResponse.prototype.addArrtasks = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Task.TaskInfo, opt_index);
    };
    proto.Task.QueryTaskResponse.prototype.clearArrtasksList = function () {
        return this.setArrtasksList([]);
    };
    proto.Task.AcceptTaskRequest.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.AcceptTaskRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.AcceptTaskRequest.toObject(opt_includeInstance, this);
        };
        proto.Task.AcceptTaskRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                arrtaskidList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.AcceptTaskRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.AcceptTaskRequest;
        return proto.Task.AcceptTaskRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.AcceptTaskRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addArrtaskid(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.AcceptTaskRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.AcceptTaskRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.AcceptTaskRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getArrtaskidList();
        if (f.length > 0) {
            writer.writePackedUint32(2, f);
        }
    };
    proto.Task.AcceptTaskRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Task.AcceptTaskRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Task.AcceptTaskRequest.prototype.getArrtaskidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 2));
    };
    proto.Task.AcceptTaskRequest.prototype.setArrtaskidList = function (value) {
        return googleProtobuf.Message.setField(this, 2, value || []);
    };
    proto.Task.AcceptTaskRequest.prototype.addArrtaskid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.Task.AcceptTaskRequest.prototype.clearArrtaskidList = function () {
        return this.setArrtaskidList([]);
    };
    proto.Task.RemoveTaskRequest.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.RemoveTaskRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.RemoveTaskRequest.toObject(opt_includeInstance, this);
        };
        proto.Task.RemoveTaskRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                arrtaskidList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.RemoveTaskRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.RemoveTaskRequest;
        return proto.Task.RemoveTaskRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.RemoveTaskRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addArrtaskid(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.RemoveTaskRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.RemoveTaskRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.RemoveTaskRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getArrtaskidList();
        if (f.length > 0) {
            writer.writePackedUint32(2, f);
        }
    };
    proto.Task.RemoveTaskRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Task.RemoveTaskRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Task.RemoveTaskRequest.prototype.getArrtaskidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 2));
    };
    proto.Task.RemoveTaskRequest.prototype.setArrtaskidList = function (value) {
        return googleProtobuf.Message.setField(this, 2, value || []);
    };
    proto.Task.RemoveTaskRequest.prototype.addArrtaskid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.Task.RemoveTaskRequest.prototype.clearArrtaskidList = function () {
        return this.setArrtaskidList([]);
    };
    proto.Task.CompleteTaskRequest.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.CompleteTaskRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.CompleteTaskRequest.toObject(opt_includeInstance, this);
        };
        proto.Task.CompleteTaskRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                arrtaskidList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.CompleteTaskRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.CompleteTaskRequest;
        return proto.Task.CompleteTaskRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.CompleteTaskRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addArrtaskid(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.CompleteTaskRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.CompleteTaskRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.CompleteTaskRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getArrtaskidList();
        if (f.length > 0) {
            writer.writePackedUint32(3, f);
        }
    };
    proto.Task.CompleteTaskRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Task.CompleteTaskRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Task.CompleteTaskRequest.prototype.getArrtaskidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 3));
    };
    proto.Task.CompleteTaskRequest.prototype.setArrtaskidList = function (value) {
        return googleProtobuf.Message.setField(this, 3, value || []);
    };
    proto.Task.CompleteTaskRequest.prototype.addArrtaskid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
    };
    proto.Task.CompleteTaskRequest.prototype.clearArrtaskidList = function () {
        return this.setArrtaskidList([]);
    };
    proto.Task.CompleteTaskResponse.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.CompleteTaskResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.CompleteTaskResponse.toObject(opt_includeInstance, this);
        };
        proto.Task.CompleteTaskResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                mapresultMap: (f = msg.getMapresultMap()) ? f.toObject(includeInstance, undefined) : [],
                arrawardsList: googleProtobuf.Message.toObjectList(msg.getArrawardsList(), AwardService_pb.AwardItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.CompleteTaskResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.CompleteTaskResponse;
        return proto.Task.CompleteTaskResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.CompleteTaskResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = msg.getMapresultMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readInt32, null, 0, 0);
                    });
                    break;
                case 2:
                    var value = new AwardService_pb.AwardItem;
                    reader.readMessage(value, AwardService_pb.AwardItem.deserializeBinaryFromReader);
                    msg.addArrawards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.CompleteTaskResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.CompleteTaskResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.CompleteTaskResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getMapresultMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeInt32);
        }
        f = message.getArrawardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, AwardService_pb.AwardItem.serializeBinaryToWriter);
        }
    };
    proto.Task.CompleteTaskResponse.Result = {
        SUCCESS: 0,
        INTERNAL_ERR: -1,
        NOT_COMPLETE: 1,
        ALREADY_COMPLETED: 2,
        NOT_EXIST: 3
    };
    proto.Task.CompleteTaskResponse.prototype.getMapresultMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate, null));
    };
    proto.Task.CompleteTaskResponse.prototype.clearMapresultMap = function () {
        this.getMapresultMap().clear();
        return this;
    };
    proto.Task.CompleteTaskResponse.prototype.getArrawardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, AwardService_pb.AwardItem, 2));
    };
    proto.Task.CompleteTaskResponse.prototype.setArrawardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Task.CompleteTaskResponse.prototype.addArrawards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.Task.CompleteTaskResponse.prototype.clearArrawardsList = function () {
        return this.setArrawardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.TaskCheckEvent.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.TaskCheckEvent.toObject(opt_includeInstance, this);
        };
        proto.Task.TaskCheckEvent.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                neventid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strdata: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.TaskCheckEvent.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.TaskCheckEvent;
        return proto.Task.TaskCheckEvent.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.TaskCheckEvent.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNeventid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrdata(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.TaskCheckEvent.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.TaskCheckEvent.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.TaskCheckEvent.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNeventid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrdata();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Task.TaskCheckEvent.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Task.TaskCheckEvent.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Task.TaskCheckEvent.prototype.getNeventid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Task.TaskCheckEvent.prototype.setNeventid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Task.TaskCheckEvent.prototype.getStrdata = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Task.TaskCheckEvent.prototype.setStrdata = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Task.TaskUpdateNoti.repeatedFields_ = [2, 3, 4];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.TaskUpdateNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.TaskUpdateNoti.toObject(opt_includeInstance, this);
        };
        proto.Task.TaskUpdateNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                arrupdatedList: googleProtobuf.Message.toObjectList(msg.getArrupdatedList(), proto.Task.TaskInfo.toObject, includeInstance),
                arrremovedList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
                arrnewList: googleProtobuf.Message.toObjectList(msg.getArrnewList(), proto.Task.TaskInfo.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.TaskUpdateNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.TaskUpdateNoti;
        return proto.Task.TaskUpdateNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.TaskUpdateNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 2:
                    var value = new proto.Task.TaskInfo;
                    reader.readMessage(value, proto.Task.TaskInfo.deserializeBinaryFromReader);
                    msg.addArrupdated(value);
                    break;
                case 3:
                    var values = (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addArrremoved(values[i]);
                    }
                    break;
                case 4:
                    var value = new proto.Task.TaskInfo;
                    reader.readMessage(value, proto.Task.TaskInfo.deserializeBinaryFromReader);
                    msg.addArrnew(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.TaskUpdateNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.TaskUpdateNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.TaskUpdateNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getArrupdatedList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Task.TaskInfo.serializeBinaryToWriter);
        }
        f = message.getArrremovedList();
        if (f.length > 0) {
            writer.writePackedUint32(3, f);
        }
        f = message.getArrnewList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(4, f, proto.Task.TaskInfo.serializeBinaryToWriter);
        }
    };
    proto.Task.TaskUpdateNoti.prototype.getArrupdatedList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Task.TaskInfo, 2));
    };
    proto.Task.TaskUpdateNoti.prototype.setArrupdatedList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Task.TaskUpdateNoti.prototype.addArrupdated = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Task.TaskInfo, opt_index);
    };
    proto.Task.TaskUpdateNoti.prototype.clearArrupdatedList = function () {
        return this.setArrupdatedList([]);
    };
    proto.Task.TaskUpdateNoti.prototype.getArrremovedList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 3));
    };
    proto.Task.TaskUpdateNoti.prototype.setArrremovedList = function (value) {
        return googleProtobuf.Message.setField(this, 3, value || []);
    };
    proto.Task.TaskUpdateNoti.prototype.addArrremoved = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
    };
    proto.Task.TaskUpdateNoti.prototype.clearArrremovedList = function () {
        return this.setArrremovedList([]);
    };
    proto.Task.TaskUpdateNoti.prototype.getArrnewList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Task.TaskInfo, 4));
    };
    proto.Task.TaskUpdateNoti.prototype.setArrnewList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
    };
    proto.Task.TaskUpdateNoti.prototype.addArrnew = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Task.TaskInfo, opt_index);
    };
    proto.Task.TaskUpdateNoti.prototype.clearArrnewList = function () {
        return this.setArrnewList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.CategoryTaskCount.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.CategoryTaskCount.toObject(opt_includeInstance, this);
        };
        proto.Task.CategoryTaskCount.toObject = function (includeInstance, msg) {
            var f, obj = {
                ncategory: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nsubcategory: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ncount: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.CategoryTaskCount.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.CategoryTaskCount;
        return proto.Task.CategoryTaskCount.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.CategoryTaskCount.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNcategory(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNsubcategory(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNcount(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.CategoryTaskCount.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.CategoryTaskCount.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.CategoryTaskCount.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNcategory();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNsubcategory();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNcount();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
    };
    proto.Task.CategoryTaskCount.prototype.getNcategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Task.CategoryTaskCount.prototype.setNcategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Task.CategoryTaskCount.prototype.getNsubcategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Task.CategoryTaskCount.prototype.setNsubcategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Task.CategoryTaskCount.prototype.getNcount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Task.CategoryTaskCount.prototype.setNcount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Task.CompleteTaskNoti.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Task.CompleteTaskNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Task.CompleteTaskNoti.toObject(opt_includeInstance, this);
        };
        proto.Task.CompleteTaskNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                arrcategoriesList: googleProtobuf.Message.toObjectList(msg.getArrcategoriesList(), proto.Task.CategoryTaskCount.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Task.CompleteTaskNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Task.CompleteTaskNoti;
        return proto.Task.CompleteTaskNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Task.CompleteTaskNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = new proto.Task.CategoryTaskCount;
                    reader.readMessage(value, proto.Task.CategoryTaskCount.deserializeBinaryFromReader);
                    msg.addArrcategories(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Task.CompleteTaskNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Task.CompleteTaskNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Task.CompleteTaskNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getArrcategoriesList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Task.CategoryTaskCount.serializeBinaryToWriter);
        }
    };
    proto.Task.CompleteTaskNoti.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Task.CompleteTaskNoti.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Task.CompleteTaskNoti.prototype.getArrcategoriesList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Task.CategoryTaskCount, 2));
    };
    proto.Task.CompleteTaskNoti.prototype.setArrcategoriesList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Task.CompleteTaskNoti.prototype.addArrcategories = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Task.CategoryTaskCount, opt_index);
    };
    proto.Task.CompleteTaskNoti.prototype.clearArrcategoriesList = function () {
        return this.setArrcategoriesList([]);
    };
    proto.Task.TASK_CATEGORY = {
        UNCATEGORIZED: 0,
        ACHIEVEMENT: 1,
        ONLINE_AWARD: 2,
        DAILY_TASK: 3,
        INVITE_TASK: 4
    };
    proto.Task.EVENT_ID = {
        UNKNOWN_EVT: 0,
        TASK_COMPLETE: 1,
        GAME_RESULT: 2,
        MJ_HU_PAI: 3,
        GAME_OVER: 4,
        RELIEVE_RECEIVE: 5,
        SIGNIN: 6,
        CURRENCY_CHANGE: 7,
        LUCKY_WHEEL: 8,
        WEEK_CARD: 9,
        STORE_BUY: 10,
        ITEM_GET: 11,
        ITEM_USE: 12,
        ONLINE_TIME: 13,
        DAILY_ACTIVITY: 14,
        LOGIN: 15,
        CHARGE: 16,
        TASK_ACCEPT: 17,
        REAL_NAME: 18,
        INVITE_SHARE: 19,
        INVITE_SUCCESS: 20
    };
    goog.object.extend(exports, proto.Task);

    });
    var Task_pb_1 = Task_pb.QueryTaskResponse;
    var Task_pb_2 = Task_pb.TaskInfo;
    var Task_pb_3 = Task_pb.TaskUpdateNoti;
    var Task_pb_4 = Task_pb.CompleteTaskNoti;
    var Task_pb_5 = Task_pb.TASK_CATEGORY;
    var Task_pb_6 = Task_pb.CompleteTaskRequest;
    var Task_pb_7 = Task_pb.CompleteTaskResponse;

    var LuckyRoulette_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Common_pb);

    goog.object.extend(proto, AwardService_pb);
    goog.exportSymbol('proto.LuckyRoulette.DoTurnRequest', null, global);
    goog.exportSymbol('proto.LuckyRoulette.DoTurnResponse', null, global);
    goog.exportSymbol('proto.LuckyRoulette.QueryRouletteInfoRequest', null, global);
    goog.exportSymbol('proto.LuckyRoulette.QueryRouletteInfoResponse', null, global);
    goog.exportSymbol('proto.LuckyRoulette.RouletteInfoNotify', null, global);
    proto.LuckyRoulette.RouletteInfoNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.LuckyRoulette.RouletteInfoNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.LuckyRoulette.RouletteInfoNotify.displayName = 'proto.LuckyRoulette.RouletteInfoNotify';
    }
    proto.LuckyRoulette.QueryRouletteInfoRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.LuckyRoulette.QueryRouletteInfoRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.LuckyRoulette.QueryRouletteInfoRequest.displayName = 'proto.LuckyRoulette.QueryRouletteInfoRequest';
    }
    proto.LuckyRoulette.QueryRouletteInfoResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.LuckyRoulette.QueryRouletteInfoResponse.repeatedFields_, null);
    };
    goog.inherits(proto.LuckyRoulette.QueryRouletteInfoResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.LuckyRoulette.QueryRouletteInfoResponse.displayName = 'proto.LuckyRoulette.QueryRouletteInfoResponse';
    }
    proto.LuckyRoulette.DoTurnRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.LuckyRoulette.DoTurnRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.LuckyRoulette.DoTurnRequest.displayName = 'proto.LuckyRoulette.DoTurnRequest';
    }
    proto.LuckyRoulette.DoTurnResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.LuckyRoulette.DoTurnResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.LuckyRoulette.DoTurnResponse.displayName = 'proto.LuckyRoulette.DoTurnResponse';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.LuckyRoulette.RouletteInfoNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.LuckyRoulette.RouletteInfoNotify.toObject(opt_includeInstance, this);
        };
        proto.LuckyRoulette.RouletteInfoNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                nlefttimes: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.LuckyRoulette.RouletteInfoNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.LuckyRoulette.RouletteInfoNotify;
        return proto.LuckyRoulette.RouletteInfoNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.LuckyRoulette.RouletteInfoNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNlefttimes(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.LuckyRoulette.RouletteInfoNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.LuckyRoulette.RouletteInfoNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.LuckyRoulette.RouletteInfoNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNlefttimes();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.LuckyRoulette.RouletteInfoNotify.prototype.getNlefttimes = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.LuckyRoulette.RouletteInfoNotify.prototype.setNlefttimes = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.LuckyRoulette.QueryRouletteInfoRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.LuckyRoulette.QueryRouletteInfoRequest.toObject(opt_includeInstance, this);
        };
        proto.LuckyRoulette.QueryRouletteInfoRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.LuckyRoulette.QueryRouletteInfoRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.LuckyRoulette.QueryRouletteInfoRequest;
        return proto.LuckyRoulette.QueryRouletteInfoRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.LuckyRoulette.QueryRouletteInfoRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.LuckyRoulette.QueryRouletteInfoRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.LuckyRoulette.QueryRouletteInfoRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.LuckyRoulette.QueryRouletteInfoRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.LuckyRoulette.QueryRouletteInfoRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.LuckyRoulette.QueryRouletteInfoRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.LuckyRoulette.QueryRouletteInfoResponse.toObject(opt_includeInstance, this);
        };
        proto.LuckyRoulette.QueryRouletteInfoResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nlefttimes: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                itemsList: googleProtobuf.Message.toObjectList(msg.getItemsList(), AwardService_pb.AwardItem.toObject, includeInstance),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.LuckyRoulette.QueryRouletteInfoResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.LuckyRoulette.QueryRouletteInfoResponse;
        return proto.LuckyRoulette.QueryRouletteInfoResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNlefttimes(value);
                    break;
                case 2:
                    var value = new AwardService_pb.AwardItem;
                    reader.readMessage(value, AwardService_pb.AwardItem.deserializeBinaryFromReader);
                    msg.addItems(value);
                    break;
                case 3:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.LuckyRoulette.QueryRouletteInfoResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNlefttimes();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getItemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, AwardService_pb.AwardItem.serializeBinaryToWriter);
        }
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(3, f);
        }
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.getNlefttimes = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.setNlefttimes = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.getItemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, AwardService_pb.AwardItem, 2));
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.setItemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.addItems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Award.AwardItem, opt_index);
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.clearItemsList = function () {
        return this.setItemsList([]);
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.LuckyRoulette.QueryRouletteInfoResponse.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.LuckyRoulette.DoTurnRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.LuckyRoulette.DoTurnRequest.toObject(opt_includeInstance, this);
        };
        proto.LuckyRoulette.DoTurnRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.LuckyRoulette.DoTurnRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.LuckyRoulette.DoTurnRequest;
        return proto.LuckyRoulette.DoTurnRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.LuckyRoulette.DoTurnRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.LuckyRoulette.DoTurnRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.LuckyRoulette.DoTurnRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.LuckyRoulette.DoTurnRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
    };
    proto.LuckyRoulette.DoTurnRequest.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.LuckyRoulette.DoTurnRequest.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.LuckyRoulette.DoTurnResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.LuckyRoulette.DoTurnResponse.toObject(opt_includeInstance, this);
        };
        proto.LuckyRoulette.DoTurnResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                item: (f = msg.getItem()) && AwardService_pb.AwardItem.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.LuckyRoulette.DoTurnResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.LuckyRoulette.DoTurnResponse;
        return proto.LuckyRoulette.DoTurnResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.LuckyRoulette.DoTurnResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new AwardService_pb.AwardItem;
                    reader.readMessage(value, AwardService_pb.AwardItem.deserializeBinaryFromReader);
                    msg.setItem(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.LuckyRoulette.DoTurnResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.LuckyRoulette.DoTurnResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.LuckyRoulette.DoTurnResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getItem();
        if (f != null) {
            writer.writeMessage(2, f, AwardService_pb.AwardItem.serializeBinaryToWriter);
        }
    };
    proto.LuckyRoulette.DoTurnResponse.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.LuckyRoulette.DoTurnResponse.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.LuckyRoulette.DoTurnResponse.prototype.getItem = function () {
        return (googleProtobuf.Message.getWrapperField(this, AwardService_pb.AwardItem, 2));
    };
    proto.LuckyRoulette.DoTurnResponse.prototype.setItem = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.LuckyRoulette.DoTurnResponse.prototype.clearItem = function () {
        return this.setItem(undefined);
    };
    proto.LuckyRoulette.DoTurnResponse.prototype.hasItem = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    goog.object.extend(exports, proto.LuckyRoulette);

    });
    var LuckyRoulette_pb_1 = LuckyRoulette_pb.QueryRouletteInfoRequest;
    var LuckyRoulette_pb_2 = LuckyRoulette_pb.QueryRouletteInfoResponse;
    var LuckyRoulette_pb_3 = LuckyRoulette_pb.RouletteInfoNotify;
    var LuckyRoulette_pb_4 = LuckyRoulette_pb.RouletteInfo;
    var LuckyRoulette_pb_5 = LuckyRoulette_pb.DoTurnRequest;
    var LuckyRoulette_pb_6 = LuckyRoulette_pb.DoTurnResponse;

    class BulletinManager extends Singleton {
        constructor() {
            super();
            this.bulletin = null;
        }
        init() {
            if (this.bulletin == null && GlobalData.getInstance().lobbyScene) {
                let prefab = new Laya.Prefab();
                prefab.json = Laya.loader.getRes(PREFAB_LOBBY.BULLETIN);
                this.bulletin = prefab.create();
                this.bulletin.zOrder = STAGE_Z_ORDER.BULLETIN;
                GlobalData.getInstance().lobbyScene.m_subLayers[0].nodeBullet.addChild(this.bulletin);
            }
        }
        addBulletin(content) {
            this.init();
            this.bulletin.addBulletin(content);
        }
        hide() {
            this.bulletin.hide();
        }
        removeBulletin() {
            if (this.bulletin) {
                this.bulletin.destroy();
            }
            this.bulletin = null;
        }
    }

    var connectisland_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.ConnectIsland.Currency', null, global);
    goog.exportSymbol('proto.ConnectIsland.GetDMDRequest', null, global);
    goog.exportSymbol('proto.ConnectIsland.GetDMDResponse', null, global);
    goog.exportSymbol('proto.ConnectIsland.GetRoundDataRequest', null, global);
    goog.exportSymbol('proto.ConnectIsland.GetRoundDataResponse', null, global);
    goog.exportSymbol('proto.ConnectIsland.GetTimeStampRequest', null, global);
    goog.exportSymbol('proto.ConnectIsland.GetTimeStampResponse', null, global);
    goog.exportSymbol('proto.ConnectIsland.GetTokenRequest', null, global);
    goog.exportSymbol('proto.ConnectIsland.GetTokenResponse', null, global);
    goog.exportSymbol('proto.ConnectIsland.Players', null, global);
    proto.ConnectIsland.GetTimeStampRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.ConnectIsland.GetTimeStampRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.GetTimeStampRequest.displayName = 'proto.ConnectIsland.GetTimeStampRequest';
    }
    proto.ConnectIsland.GetTimeStampResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.ConnectIsland.GetTimeStampResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.GetTimeStampResponse.displayName = 'proto.ConnectIsland.GetTimeStampResponse';
    }
    proto.ConnectIsland.GetTokenRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.ConnectIsland.GetTokenRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.GetTokenRequest.displayName = 'proto.ConnectIsland.GetTokenRequest';
    }
    proto.ConnectIsland.GetTokenResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.ConnectIsland.GetTokenResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.GetTokenResponse.displayName = 'proto.ConnectIsland.GetTokenResponse';
    }
    proto.ConnectIsland.GetDMDRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.ConnectIsland.GetDMDRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.GetDMDRequest.displayName = 'proto.ConnectIsland.GetDMDRequest';
    }
    proto.ConnectIsland.GetDMDResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.ConnectIsland.GetDMDResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.GetDMDResponse.displayName = 'proto.ConnectIsland.GetDMDResponse';
    }
    proto.ConnectIsland.GetRoundDataRequest = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.ConnectIsland.GetRoundDataRequest.repeatedFields_, null);
    };
    goog.inherits(proto.ConnectIsland.GetRoundDataRequest, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.GetRoundDataRequest.displayName = 'proto.ConnectIsland.GetRoundDataRequest';
    }
    proto.ConnectIsland.GetRoundDataResponse = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.ConnectIsland.GetRoundDataResponse.repeatedFields_, null);
    };
    goog.inherits(proto.ConnectIsland.GetRoundDataResponse, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.GetRoundDataResponse.displayName = 'proto.ConnectIsland.GetRoundDataResponse';
    }
    proto.ConnectIsland.Players = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.ConnectIsland.Players, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.Players.displayName = 'proto.ConnectIsland.Players';
    }
    proto.ConnectIsland.Currency = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.ConnectIsland.Currency, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.ConnectIsland.Currency.displayName = 'proto.ConnectIsland.Currency';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.GetTimeStampRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.GetTimeStampRequest.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.GetTimeStampRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                stamp: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.GetTimeStampRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.GetTimeStampRequest;
        return proto.ConnectIsland.GetTimeStampRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.GetTimeStampRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStamp(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.GetTimeStampRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.GetTimeStampRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.GetTimeStampRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStamp();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.ConnectIsland.GetTimeStampRequest.prototype.getStamp = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.ConnectIsland.GetTimeStampRequest.prototype.setStamp = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.GetTimeStampResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.GetTimeStampResponse.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.GetTimeStampResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                stamp: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.GetTimeStampResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.GetTimeStampResponse;
        return proto.ConnectIsland.GetTimeStampResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.GetTimeStampResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStamp(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.GetTimeStampResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.GetTimeStampResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.GetTimeStampResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStamp();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.ConnectIsland.GetTimeStampResponse.prototype.getStamp = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.ConnectIsland.GetTimeStampResponse.prototype.setStamp = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.GetTokenRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.GetTokenRequest.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.GetTokenRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                clientId: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                token: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.GetTokenRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.GetTokenRequest;
        return proto.ConnectIsland.GetTokenRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.GetTokenRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setClientId(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setToken(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.GetTokenRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.GetTokenRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.GetTokenRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getClientId();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getToken();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.ConnectIsland.GetTokenRequest.prototype.getClientId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.ConnectIsland.GetTokenRequest.prototype.setClientId = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.ConnectIsland.GetTokenRequest.prototype.getToken = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.ConnectIsland.GetTokenRequest.prototype.setToken = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.GetTokenResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.GetTokenResponse.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.GetTokenResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                token: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.GetTokenResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.GetTokenResponse;
        return proto.ConnectIsland.GetTokenResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.GetTokenResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setToken(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.GetTokenResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.GetTokenResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.GetTokenResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getToken();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.ConnectIsland.GetTokenResponse.prototype.getToken = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.ConnectIsland.GetTokenResponse.prototype.setToken = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.GetDMDRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.GetDMDRequest.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.GetDMDRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                clientId: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.GetDMDRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.GetDMDRequest;
        return proto.ConnectIsland.GetDMDRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.GetDMDRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setClientId(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.GetDMDRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.GetDMDRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.GetDMDRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getClientId();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.ConnectIsland.GetDMDRequest.prototype.getClientId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.ConnectIsland.GetDMDRequest.prototype.setClientId = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.GetDMDResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.GetDMDResponse.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.GetDMDResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                dmd: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.GetDMDResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.GetDMDResponse;
        return proto.ConnectIsland.GetDMDResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.GetDMDResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setDmd(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.GetDMDResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.GetDMDResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.GetDMDResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getDmd();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.ConnectIsland.GetDMDResponse.prototype.getDmd = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.ConnectIsland.GetDMDResponse.prototype.setDmd = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.ConnectIsland.GetRoundDataRequest.repeatedFields_ = [4];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.GetRoundDataRequest.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.GetRoundDataRequest.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.GetRoundDataRequest.toObject = function (includeInstance, msg) {
            var f, obj = {
                matchKeyId: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                finalRound: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 2, false),
                round: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                playersList: googleProtobuf.Message.toObjectList(msg.getPlayersList(), proto.ConnectIsland.Players.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.GetRoundDataRequest.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.GetRoundDataRequest;
        return proto.ConnectIsland.GetRoundDataRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.GetRoundDataRequest.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setMatchKeyId(value);
                    break;
                case 2:
                    var value = (reader.readBool());
                    msg.setFinalRound(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setRound(value);
                    break;
                case 4:
                    var value = new proto.ConnectIsland.Players;
                    reader.readMessage(value, proto.ConnectIsland.Players.deserializeBinaryFromReader);
                    msg.addPlayers(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.GetRoundDataRequest.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.GetRoundDataRequest.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getMatchKeyId();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getFinalRound();
        if (f) {
            writer.writeBool(2, f);
        }
        f = message.getRound();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
        f = message.getPlayersList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(4, f, proto.ConnectIsland.Players.serializeBinaryToWriter);
        }
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.getMatchKeyId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.setMatchKeyId = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.getFinalRound = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 2, false));
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.setFinalRound = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 2, value);
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.getRound = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.setRound = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.getPlayersList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.ConnectIsland.Players, 4));
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.setPlayersList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.addPlayers = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ConnectIsland.Players, opt_index);
    };
    proto.ConnectIsland.GetRoundDataRequest.prototype.clearPlayersList = function () {
        return this.setPlayersList([]);
    };
    proto.ConnectIsland.GetRoundDataResponse.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.GetRoundDataResponse.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.GetRoundDataResponse.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.GetRoundDataResponse.toObject = function (includeInstance, msg) {
            var f, obj = {
                currencyList: googleProtobuf.Message.toObjectList(msg.getCurrencyList(), proto.ConnectIsland.Currency.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.GetRoundDataResponse.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.GetRoundDataResponse;
        return proto.ConnectIsland.GetRoundDataResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.GetRoundDataResponse.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.ConnectIsland.Currency;
                    reader.readMessage(value, proto.ConnectIsland.Currency.deserializeBinaryFromReader);
                    msg.addCurrency(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.GetRoundDataResponse.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.GetRoundDataResponse.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.GetRoundDataResponse.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCurrencyList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(1, f, proto.ConnectIsland.Currency.serializeBinaryToWriter);
        }
    };
    proto.ConnectIsland.GetRoundDataResponse.prototype.getCurrencyList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.ConnectIsland.Currency, 1));
    };
    proto.ConnectIsland.GetRoundDataResponse.prototype.setCurrencyList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
    };
    proto.ConnectIsland.GetRoundDataResponse.prototype.addCurrency = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ConnectIsland.Currency, opt_index);
    };
    proto.ConnectIsland.GetRoundDataResponse.prototype.clearCurrencyList = function () {
        return this.setCurrencyList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.Players.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.Players.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.Players.toObject = function (includeInstance, msg) {
            var f, obj = {
                clientId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                score: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                fee: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.Players.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.Players;
        return proto.ConnectIsland.Players.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.Players.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setClientId(value);
                    break;
                case 2:
                    var value = (reader.readInt64());
                    msg.setScore(value);
                    break;
                case 3:
                    var value = (reader.readInt64());
                    msg.setFee(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.Players.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.Players.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.Players.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getClientId();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getScore();
        if (f !== 0) {
            writer.writeInt64(2, f);
        }
        f = message.getFee();
        if (f !== 0) {
            writer.writeInt64(3, f);
        }
    };
    proto.ConnectIsland.Players.prototype.getClientId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.ConnectIsland.Players.prototype.setClientId = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.ConnectIsland.Players.prototype.getScore = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.ConnectIsland.Players.prototype.setScore = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.ConnectIsland.Players.prototype.getFee = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.ConnectIsland.Players.prototype.setFee = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.ConnectIsland.Currency.prototype.toObject = function (opt_includeInstance) {
            return proto.ConnectIsland.Currency.toObject(opt_includeInstance, this);
        };
        proto.ConnectIsland.Currency.toObject = function (includeInstance, msg) {
            var f, obj = {
                clientId: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                moneyReturn: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                moneyLucky: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                dmd: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.ConnectIsland.Currency.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.ConnectIsland.Currency;
        return proto.ConnectIsland.Currency.deserializeBinaryFromReader(msg, reader);
    };
    proto.ConnectIsland.Currency.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setClientId(value);
                    break;
                case 2:
                    var value = (reader.readInt64());
                    msg.setMoneyReturn(value);
                    break;
                case 3:
                    var value = (reader.readInt64());
                    msg.setMoneyLucky(value);
                    break;
                case 4:
                    var value = (reader.readInt64());
                    msg.setDmd(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.ConnectIsland.Currency.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.ConnectIsland.Currency.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.ConnectIsland.Currency.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getClientId();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getMoneyReturn();
        if (f !== 0) {
            writer.writeInt64(2, f);
        }
        f = message.getMoneyLucky();
        if (f !== 0) {
            writer.writeInt64(3, f);
        }
        f = message.getDmd();
        if (f !== 0) {
            writer.writeInt64(4, f);
        }
    };
    proto.ConnectIsland.Currency.prototype.getClientId = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.ConnectIsland.Currency.prototype.setClientId = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.ConnectIsland.Currency.prototype.getMoneyReturn = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.ConnectIsland.Currency.prototype.setMoneyReturn = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.ConnectIsland.Currency.prototype.getMoneyLucky = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.ConnectIsland.Currency.prototype.setMoneyLucky = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.ConnectIsland.Currency.prototype.getDmd = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.ConnectIsland.Currency.prototype.setDmd = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    goog.object.extend(exports, proto.ConnectIsland);

    });
    var connectisland_pb_1 = connectisland_pb.GetTokenRequest;
    var connectisland_pb_2 = connectisland_pb.GetTokenResponse;
    var connectisland_pb_3 = connectisland_pb.GetDMDRequest;
    var connectisland_pb_4 = connectisland_pb.GetDMDResponse;
    var connectisland_pb_5 = connectisland_pb.GetRoundDataRequest;
    var connectisland_pb_6 = connectisland_pb.GetRoundDataResponse;

    var Login_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Login.IMLogin', null, global);
    proto.Login.IMLogin = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Login.IMLogin, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Login.IMLogin.displayName = 'proto.Login.IMLogin';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Login.IMLogin.prototype.toObject = function (opt_includeInstance) {
            return proto.Login.IMLogin.toObject(opt_includeInstance, this);
        };
        proto.Login.IMLogin.toObject = function (includeInstance, msg) {
            var f, obj = {
                type: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                datas: msg.getDatas_asB64(),
                extra: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Login.IMLogin.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Login.IMLogin;
        return proto.Login.IMLogin.deserializeBinaryFromReader(msg, reader);
    };
    proto.Login.IMLogin.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setType(value);
                    break;
                case 2:
                    var value = (reader.readBytes());
                    msg.setDatas(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setExtra(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Login.IMLogin.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Login.IMLogin.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Login.IMLogin.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getType();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getDatas_asU8();
        if (f.length > 0) {
            writer.writeBytes(2, f);
        }
        f = message.getExtra();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Login.IMLogin.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Login.IMLogin.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Login.IMLogin.prototype.getDatas = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Login.IMLogin.prototype.getDatas_asB64 = function () {
        return (googleProtobuf.Message.bytesAsB64(this.getDatas()));
    };
    proto.Login.IMLogin.prototype.getDatas_asU8 = function () {
        return (googleProtobuf.Message.bytesAsU8(this.getDatas()));
    };
    proto.Login.IMLogin.prototype.setDatas = function (value) {
        return googleProtobuf.Message.setProto3BytesField(this, 2, value);
    };
    proto.Login.IMLogin.prototype.getExtra = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Login.IMLogin.prototype.setExtra = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    goog.object.extend(exports, proto.Login);

    });
    var Login_pb_1 = Login_pb.IMLogin;

    var Exchange_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Exchange.AwardAck', null, global);
    goog.exportSymbol('proto.Exchange.AwardGet', null, global);
    goog.exportSymbol('proto.Exchange.ExcInfo', null, global);
    goog.exportSymbol('proto.Exchange.ExchangeAck', null, global);
    goog.exportSymbol('proto.Exchange.ExchangeGet', null, global);
    goog.exportSymbol('proto.Exchange.ExtInfo', null, global);
    goog.exportSymbol('proto.Exchange.HistoryAck', null, global);
    goog.exportSymbol('proto.Exchange.HistoryGet', null, global);
    goog.exportSymbol('proto.Exchange.InfoAck', null, global);
    goog.exportSymbol('proto.Exchange.InfoGet', null, global);
    goog.exportSymbol('proto.Exchange.MotifyAck', null, global);
    goog.exportSymbol('proto.Exchange.MotifyGet', null, global);
    goog.exportSymbol('proto.Exchange.PriceAck', null, global);
    goog.exportSymbol('proto.Exchange.PriceGet', null, global);
    goog.exportSymbol('proto.Exchange.Record', null, global);
    goog.exportSymbol('proto.Exchange.Status', null, global);
    proto.Exchange.Record = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.Record, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.Record.displayName = 'proto.Exchange.Record';
    }
    proto.Exchange.ExtInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.ExtInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.ExtInfo.displayName = 'proto.Exchange.ExtInfo';
    }
    proto.Exchange.ExcInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.ExcInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.ExcInfo.displayName = 'proto.Exchange.ExcInfo';
    }
    proto.Exchange.InfoGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.InfoGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.InfoGet.displayName = 'proto.Exchange.InfoGet';
    }
    proto.Exchange.InfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.InfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.InfoAck.displayName = 'proto.Exchange.InfoAck';
    }
    proto.Exchange.AwardGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.AwardGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.AwardGet.displayName = 'proto.Exchange.AwardGet';
    }
    proto.Exchange.AwardAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.AwardAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.AwardAck.displayName = 'proto.Exchange.AwardAck';
    }
    proto.Exchange.ExchangeGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.ExchangeGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.ExchangeGet.displayName = 'proto.Exchange.ExchangeGet';
    }
    proto.Exchange.ExchangeAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.ExchangeAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.ExchangeAck.displayName = 'proto.Exchange.ExchangeAck';
    }
    proto.Exchange.MotifyGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.MotifyGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.MotifyGet.displayName = 'proto.Exchange.MotifyGet';
    }
    proto.Exchange.MotifyAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.MotifyAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.MotifyAck.displayName = 'proto.Exchange.MotifyAck';
    }
    proto.Exchange.HistoryGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.HistoryGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.HistoryGet.displayName = 'proto.Exchange.HistoryGet';
    }
    proto.Exchange.HistoryAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Exchange.HistoryAck.repeatedFields_, null);
    };
    goog.inherits(proto.Exchange.HistoryAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.HistoryAck.displayName = 'proto.Exchange.HistoryAck';
    }
    proto.Exchange.PriceGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Exchange.PriceGet.repeatedFields_, null);
    };
    goog.inherits(proto.Exchange.PriceGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.PriceGet.displayName = 'proto.Exchange.PriceGet';
    }
    proto.Exchange.PriceAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Exchange.PriceAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Exchange.PriceAck.displayName = 'proto.Exchange.PriceAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.Record.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.Record.toObject(opt_includeInstance, this);
        };
        proto.Exchange.Record.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                orderid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                num: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                real: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                time: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                extra: googleProtobuf.Message.getFieldWithDefault(msg, 10, ""),
                channel: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                trainid: googleProtobuf.Message.getFieldWithDefault(msg, 12, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.Record.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.Record;
        return proto.Exchange.Record.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.Record.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setOrderid(value);
                    break;
                case 3:
                    var value = (reader.readInt64());
                    msg.setNum(value);
                    break;
                case 4:
                    var value = (reader.readInt64());
                    msg.setReal(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setTime(value);
                    break;
                case 6:
                    var value = (reader.readEnum());
                    msg.setStatus(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 9:
                    var value = (reader.readSint32());
                    msg.setItemnum(value);
                    break;
                case 10:
                    var value = (reader.readString());
                    msg.setExtra(value);
                    break;
                case 11:
                    var value = (reader.readSint32());
                    msg.setChannel(value);
                    break;
                case 12:
                    var value = (reader.readString());
                    msg.setTrainid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.Record.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.Record.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.Record.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getOrderid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNum();
        if (f !== 0) {
            writer.writeInt64(3, f);
        }
        f = message.getReal();
        if (f !== 0) {
            writer.writeInt64(4, f);
        }
        f = message.getTime();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getStatus();
        if (f !== 0.0) {
            writer.writeEnum(6, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint32(9, f);
        }
        f = message.getExtra();
        if (f.length > 0) {
            writer.writeString(10, f);
        }
        f = message.getChannel();
        if (f !== 0) {
            writer.writeSint32(11, f);
        }
        f = message.getTrainid();
        if (f.length > 0) {
            writer.writeString(12, f);
        }
    };
    proto.Exchange.Record.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.Record.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.Record.prototype.getOrderid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Exchange.Record.prototype.setOrderid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Exchange.Record.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Exchange.Record.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Exchange.Record.prototype.getReal = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Exchange.Record.prototype.setReal = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Exchange.Record.prototype.getTime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Exchange.Record.prototype.setTime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Exchange.Record.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Exchange.Record.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 6, value);
    };
    proto.Exchange.Record.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Exchange.Record.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Exchange.Record.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Exchange.Record.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Exchange.Record.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Exchange.Record.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Exchange.Record.prototype.getExtra = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
    };
    proto.Exchange.Record.prototype.setExtra = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 10, value);
    };
    proto.Exchange.Record.prototype.getChannel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Exchange.Record.prototype.setChannel = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Exchange.Record.prototype.getTrainid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, ""));
    };
    proto.Exchange.Record.prototype.setTrainid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 12, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.ExtInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.ExtInfo.toObject(opt_includeInstance, this);
        };
        proto.Exchange.ExtInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                cpf: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                mobile: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                email: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.ExtInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.ExtInfo;
        return proto.Exchange.ExtInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.ExtInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setCpf(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setMobile(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setEmail(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.ExtInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.ExtInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.ExtInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCpf();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getMobile();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getEmail();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Exchange.ExtInfo.prototype.getCpf = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Exchange.ExtInfo.prototype.setCpf = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Exchange.ExtInfo.prototype.getMobile = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Exchange.ExtInfo.prototype.setMobile = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Exchange.ExtInfo.prototype.getEmail = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Exchange.ExtInfo.prototype.setEmail = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.ExcInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.ExcInfo.toObject(opt_includeInstance, this);
        };
        proto.Exchange.ExcInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                card: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                bank: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                ctimes: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                cnum: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                mtime: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                phone: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
                mail: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
                first: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                mtimes: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                mnum: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                fee: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0),
                day: googleProtobuf.Message.getFieldWithDefault(msg, 21, 0),
                allnum: googleProtobuf.Message.getFieldWithDefault(msg, 22, 0),
                betall: googleProtobuf.Message.getFieldWithDefault(msg, 23, 0),
                betcur: googleProtobuf.Message.getFieldWithDefault(msg, 24, 0),
                finish: googleProtobuf.Message.getFieldWithDefault(msg, 31, 0),
                amount: googleProtobuf.Message.getFieldWithDefault(msg, 32, 0),
                extras: (f = msg.getExtras()) && proto.Exchange.ExtInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.ExcInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.ExcInfo;
        return proto.Exchange.ExcInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.ExcInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setCard(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setBank(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setCtimes(value);
                    break;
                case 6:
                    var value = (reader.readSint64());
                    msg.setCnum(value);
                    break;
                case 7:
                    var value = (reader.readSint64());
                    msg.setMtime(value);
                    break;
                case 8:
                    var value = (reader.readString());
                    msg.setPhone(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setMail(value);
                    break;
                case 10:
                    var value = (reader.readSint64());
                    msg.setFirst(value);
                    break;
                case 11:
                    var value = (reader.readSint32());
                    msg.setMtimes(value);
                    break;
                case 12:
                    var value = (reader.readSint64());
                    msg.setMnum(value);
                    break;
                case 13:
                    var value = (reader.readSint32());
                    msg.setFee(value);
                    break;
                case 21:
                    var value = (reader.readUint32());
                    msg.setDay(value);
                    break;
                case 22:
                    var value = (reader.readInt64());
                    msg.setAllnum(value);
                    break;
                case 23:
                    var value = (reader.readInt64());
                    msg.setBetall(value);
                    break;
                case 24:
                    var value = (reader.readInt64());
                    msg.setBetcur(value);
                    break;
                case 31:
                    var value = (reader.readSint32());
                    msg.setFinish(value);
                    break;
                case 32:
                    var value = (reader.readSint64());
                    msg.setAmount(value);
                    break;
                case 41:
                    var value = new proto.Exchange.ExtInfo;
                    reader.readMessage(value, proto.Exchange.ExtInfo.deserializeBinaryFromReader);
                    msg.setExtras(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.ExcInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.ExcInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.ExcInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getCard();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getBank();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getCtimes();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getCnum();
        if (f !== 0) {
            writer.writeSint64(6, f);
        }
        f = message.getMtime();
        if (f !== 0) {
            writer.writeSint64(7, f);
        }
        f = message.getPhone();
        if (f.length > 0) {
            writer.writeString(8, f);
        }
        f = message.getMail();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
        f = message.getFirst();
        if (f !== 0) {
            writer.writeSint64(10, f);
        }
        f = message.getMtimes();
        if (f !== 0) {
            writer.writeSint32(11, f);
        }
        f = message.getMnum();
        if (f !== 0) {
            writer.writeSint64(12, f);
        }
        f = message.getFee();
        if (f !== 0) {
            writer.writeSint32(13, f);
        }
        f = message.getDay();
        if (f !== 0) {
            writer.writeUint32(21, f);
        }
        f = message.getAllnum();
        if (f !== 0) {
            writer.writeInt64(22, f);
        }
        f = message.getBetall();
        if (f !== 0) {
            writer.writeInt64(23, f);
        }
        f = message.getBetcur();
        if (f !== 0) {
            writer.writeInt64(24, f);
        }
        f = message.getFinish();
        if (f !== 0) {
            writer.writeSint32(31, f);
        }
        f = message.getAmount();
        if (f !== 0) {
            writer.writeSint64(32, f);
        }
        f = message.getExtras();
        if (f != null) {
            writer.writeMessage(41, f, proto.Exchange.ExtInfo.serializeBinaryToWriter);
        }
    };
    proto.Exchange.ExcInfo.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.ExcInfo.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.ExcInfo.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Exchange.ExcInfo.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Exchange.ExcInfo.prototype.getCard = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Exchange.ExcInfo.prototype.setCard = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Exchange.ExcInfo.prototype.getBank = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Exchange.ExcInfo.prototype.setBank = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Exchange.ExcInfo.prototype.getCtimes = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Exchange.ExcInfo.prototype.setCtimes = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Exchange.ExcInfo.prototype.getCnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Exchange.ExcInfo.prototype.setCnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Exchange.ExcInfo.prototype.getMtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Exchange.ExcInfo.prototype.setMtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Exchange.ExcInfo.prototype.getPhone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
    };
    proto.Exchange.ExcInfo.prototype.setPhone = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 8, value);
    };
    proto.Exchange.ExcInfo.prototype.getMail = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Exchange.ExcInfo.prototype.setMail = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    proto.Exchange.ExcInfo.prototype.getFirst = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Exchange.ExcInfo.prototype.setFirst = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Exchange.ExcInfo.prototype.getMtimes = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Exchange.ExcInfo.prototype.setMtimes = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Exchange.ExcInfo.prototype.getMnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Exchange.ExcInfo.prototype.setMnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.Exchange.ExcInfo.prototype.getFee = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
    };
    proto.Exchange.ExcInfo.prototype.setFee = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 13, value);
    };
    proto.Exchange.ExcInfo.prototype.getDay = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 21, 0));
    };
    proto.Exchange.ExcInfo.prototype.setDay = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 21, value);
    };
    proto.Exchange.ExcInfo.prototype.getAllnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 22, 0));
    };
    proto.Exchange.ExcInfo.prototype.setAllnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 22, value);
    };
    proto.Exchange.ExcInfo.prototype.getBetall = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 23, 0));
    };
    proto.Exchange.ExcInfo.prototype.setBetall = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 23, value);
    };
    proto.Exchange.ExcInfo.prototype.getBetcur = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 24, 0));
    };
    proto.Exchange.ExcInfo.prototype.setBetcur = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 24, value);
    };
    proto.Exchange.ExcInfo.prototype.getFinish = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 31, 0));
    };
    proto.Exchange.ExcInfo.prototype.setFinish = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 31, value);
    };
    proto.Exchange.ExcInfo.prototype.getAmount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 32, 0));
    };
    proto.Exchange.ExcInfo.prototype.setAmount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 32, value);
    };
    proto.Exchange.ExcInfo.prototype.getExtras = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Exchange.ExtInfo, 41));
    };
    proto.Exchange.ExcInfo.prototype.setExtras = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 41, value);
    };
    proto.Exchange.ExcInfo.prototype.clearExtras = function () {
        return this.setExtras(undefined);
    };
    proto.Exchange.ExcInfo.prototype.hasExtras = function () {
        return googleProtobuf.Message.getField(this, 41) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.InfoGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.InfoGet.toObject(opt_includeInstance, this);
        };
        proto.Exchange.InfoGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                channel: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                hasshop: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 2, false)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.InfoGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.InfoGet;
        return proto.Exchange.InfoGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.InfoGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setChannel(value);
                    break;
                case 2:
                    var value = (reader.readBool());
                    msg.setHasshop(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.InfoGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.InfoGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.InfoGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getChannel();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getHasshop();
        if (f) {
            writer.writeBool(2, f);
        }
    };
    proto.Exchange.InfoGet.prototype.getChannel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Exchange.InfoGet.prototype.setChannel = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Exchange.InfoGet.prototype.getHasshop = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 2, false));
    };
    proto.Exchange.InfoGet.prototype.setHasshop = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.InfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.InfoAck.toObject(opt_includeInstance, this);
        };
        proto.Exchange.InfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                info: (f = msg.getInfo()) && proto.Exchange.ExcInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.InfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.InfoAck;
        return proto.Exchange.InfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.InfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = new proto.Exchange.ExcInfo;
                    reader.readMessage(value, proto.Exchange.ExcInfo.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.InfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.InfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.InfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(2, f, proto.Exchange.ExcInfo.serializeBinaryToWriter);
        }
    };
    proto.Exchange.InfoAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.InfoAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.InfoAck.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Exchange.ExcInfo, 2));
    };
    proto.Exchange.InfoAck.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Exchange.InfoAck.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Exchange.InfoAck.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.AwardGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.AwardGet.toObject(opt_includeInstance, this);
        };
        proto.Exchange.AwardGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                num: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.AwardGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.AwardGet;
        return proto.Exchange.AwardGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.AwardGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt64());
                    msg.setNum(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setItemnum(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.AwardGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.AwardGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.AwardGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNum();
        if (f !== 0) {
            writer.writeInt64(1, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
    };
    proto.Exchange.AwardGet.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.AwardGet.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.AwardGet.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Exchange.AwardGet.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Exchange.AwardGet.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Exchange.AwardGet.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Exchange.AwardGet.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Exchange.AwardGet.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Exchange.AwardGet.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Exchange.AwardGet.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.AwardAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.AwardAck.toObject(opt_includeInstance, this);
        };
        proto.Exchange.AwardAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                record: (f = msg.getRecord()) && proto.Exchange.Record.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.AwardAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.AwardAck;
        return proto.Exchange.AwardAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.AwardAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setItemnum(value);
                    break;
                case 11:
                    var value = new proto.Exchange.Record;
                    reader.readMessage(value, proto.Exchange.Record.deserializeBinaryFromReader);
                    msg.setRecord(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.AwardAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.AwardAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.AwardAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getRecord();
        if (f != null) {
            writer.writeMessage(11, f, proto.Exchange.Record.serializeBinaryToWriter);
        }
    };
    proto.Exchange.AwardAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.AwardAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.AwardAck.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Exchange.AwardAck.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Exchange.AwardAck.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Exchange.AwardAck.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Exchange.AwardAck.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Exchange.AwardAck.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Exchange.AwardAck.prototype.getRecord = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Exchange.Record, 11));
    };
    proto.Exchange.AwardAck.prototype.setRecord = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.Exchange.AwardAck.prototype.clearRecord = function () {
        return this.setRecord(undefined);
    };
    proto.Exchange.AwardAck.prototype.hasRecord = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.ExchangeGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.ExchangeGet.toObject(opt_includeInstance, this);
        };
        proto.Exchange.ExchangeGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                type: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.ExchangeGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.ExchangeGet;
        return proto.Exchange.ExchangeGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.ExchangeGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setItemnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.ExchangeGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.ExchangeGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.ExchangeGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
    };
    proto.Exchange.ExchangeGet.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.ExchangeGet.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.ExchangeGet.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Exchange.ExchangeGet.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Exchange.ExchangeGet.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Exchange.ExchangeGet.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Exchange.ExchangeGet.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Exchange.ExchangeGet.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.ExchangeAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.ExchangeAck.toObject(opt_includeInstance, this);
        };
        proto.Exchange.ExchangeAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.ExchangeAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.ExchangeAck;
        return proto.Exchange.ExchangeAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.ExchangeAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setItemnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.ExchangeAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.ExchangeAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.ExchangeAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
    };
    proto.Exchange.ExchangeAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.ExchangeAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.ExchangeAck.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Exchange.ExchangeAck.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Exchange.ExchangeAck.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Exchange.ExchangeAck.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Exchange.ExchangeAck.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Exchange.ExchangeAck.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Exchange.ExchangeAck.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Exchange.ExchangeAck.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.MotifyGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.MotifyGet.toObject(opt_includeInstance, this);
        };
        proto.Exchange.MotifyGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                info: (f = msg.getInfo()) && proto.Exchange.ExcInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.MotifyGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.MotifyGet;
        return proto.Exchange.MotifyGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.MotifyGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Exchange.ExcInfo;
                    reader.readMessage(value, proto.Exchange.ExcInfo.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.MotifyGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.MotifyGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.MotifyGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(1, f, proto.Exchange.ExcInfo.serializeBinaryToWriter);
        }
    };
    proto.Exchange.MotifyGet.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Exchange.ExcInfo, 1));
    };
    proto.Exchange.MotifyGet.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 1, value);
    };
    proto.Exchange.MotifyGet.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Exchange.MotifyGet.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 1) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.MotifyAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.MotifyAck.toObject(opt_includeInstance, this);
        };
        proto.Exchange.MotifyAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                info: (f = msg.getInfo()) && proto.Exchange.ExcInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.MotifyAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.MotifyAck;
        return proto.Exchange.MotifyAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.MotifyAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = new proto.Exchange.ExcInfo;
                    reader.readMessage(value, proto.Exchange.ExcInfo.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.MotifyAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.MotifyAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.MotifyAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(2, f, proto.Exchange.ExcInfo.serializeBinaryToWriter);
        }
    };
    proto.Exchange.MotifyAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.MotifyAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.MotifyAck.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Exchange.ExcInfo, 2));
    };
    proto.Exchange.MotifyAck.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Exchange.MotifyAck.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Exchange.MotifyAck.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.HistoryGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.HistoryGet.toObject(opt_includeInstance, this);
        };
        proto.Exchange.HistoryGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                page: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                item: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.HistoryGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.HistoryGet;
        return proto.Exchange.HistoryGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.HistoryGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setItem(value);
                    break;
                case 3:
                    var value = (reader.readEnum());
                    msg.setStatus(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.HistoryGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.HistoryGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.HistoryGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getItem();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getStatus();
        if (f !== 0.0) {
            writer.writeEnum(3, f);
        }
    };
    proto.Exchange.HistoryGet.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.HistoryGet.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.HistoryGet.prototype.getItem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Exchange.HistoryGet.prototype.setItem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Exchange.HistoryGet.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Exchange.HistoryGet.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 3, value);
    };
    proto.Exchange.HistoryAck.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.HistoryAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.HistoryAck.toObject(opt_includeInstance, this);
        };
        proto.Exchange.HistoryAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                page: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                item: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                recordsList: googleProtobuf.Message.toObjectList(msg.getRecordsList(), proto.Exchange.Record.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.HistoryAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.HistoryAck;
        return proto.Exchange.HistoryAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.HistoryAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItem(value);
                    break;
                case 4:
                    var value = (reader.readEnum());
                    msg.setStatus(value);
                    break;
                case 11:
                    var value = new proto.Exchange.Record;
                    reader.readMessage(value, proto.Exchange.Record.deserializeBinaryFromReader);
                    msg.addRecords(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.HistoryAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.HistoryAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.HistoryAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItem();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getStatus();
        if (f !== 0.0) {
            writer.writeEnum(4, f);
        }
        f = message.getRecordsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.Exchange.Record.serializeBinaryToWriter);
        }
    };
    proto.Exchange.HistoryAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.HistoryAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.HistoryAck.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Exchange.HistoryAck.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Exchange.HistoryAck.prototype.getItem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Exchange.HistoryAck.prototype.setItem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Exchange.HistoryAck.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Exchange.HistoryAck.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 4, value);
    };
    proto.Exchange.HistoryAck.prototype.getRecordsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Exchange.Record, 11));
    };
    proto.Exchange.HistoryAck.prototype.setRecordsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Exchange.HistoryAck.prototype.addRecords = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Exchange.Record, opt_index);
    };
    proto.Exchange.HistoryAck.prototype.clearRecordsList = function () {
        return this.setRecordsList([]);
    };
    proto.Exchange.PriceGet.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.PriceGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.PriceGet.toObject(opt_includeInstance, this);
        };
        proto.Exchange.PriceGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                itemidsList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.PriceGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.PriceGet;
        return proto.Exchange.PriceGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.PriceGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var values = (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addItemids(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.PriceGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.PriceGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.PriceGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getItemidsList();
        if (f.length > 0) {
            writer.writePackedSint32(1, f);
        }
    };
    proto.Exchange.PriceGet.prototype.getItemidsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Exchange.PriceGet.prototype.setItemidsList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Exchange.PriceGet.prototype.addItemids = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Exchange.PriceGet.prototype.clearItemidsList = function () {
        return this.setItemidsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Exchange.PriceAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Exchange.PriceAck.toObject(opt_includeInstance, this);
        };
        proto.Exchange.PriceAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                pricesMap: (f = msg.getPricesMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Exchange.PriceAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Exchange.PriceAck;
        return proto.Exchange.PriceAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Exchange.PriceAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = msg.getPricesMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readSint32, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Exchange.PriceAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Exchange.PriceAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Exchange.PriceAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPricesMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeSint32);
        }
    };
    proto.Exchange.PriceAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Exchange.PriceAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Exchange.PriceAck.prototype.getPricesMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate, null));
    };
    proto.Exchange.PriceAck.prototype.clearPricesMap = function () {
        this.getPricesMap().clear();
        return this;
    };
    proto.Exchange.Status = {
        NONE: 0,
        WAIT: 1,
        VERIFY: 2,
        FAIL: 3,
        CANCEL: 4,
        SUCCESS: 5
    };
    goog.object.extend(exports, proto.Exchange);

    });
    var Exchange_pb_1 = Exchange_pb.ExchangeGet;
    var Exchange_pb_2 = Exchange_pb.ExchangeAck;
    var Exchange_pb_3 = Exchange_pb.PriceGet;
    var Exchange_pb_4 = Exchange_pb.PriceAck;
    var Exchange_pb_5 = Exchange_pb.InfoGet;
    var Exchange_pb_6 = Exchange_pb.InfoAck;
    var Exchange_pb_7 = Exchange_pb.AwardGet;
    var Exchange_pb_8 = Exchange_pb.AwardAck;
    var Exchange_pb_9 = Exchange_pb.MotifyGet;
    var Exchange_pb_10 = Exchange_pb.MotifyAck;
    var Exchange_pb_11 = Exchange_pb.HistoryGet;
    var Exchange_pb_12 = Exchange_pb.HistoryAck;
    var Exchange_pb_13 = Exchange_pb.ExcInfo;
    var Exchange_pb_14 = Exchange_pb.Status;
    var Exchange_pb_15 = Exchange_pb.ExtInfo;

    var Activs_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Exchange_pb);

    goog.object.extend(proto, OutInvite_pb);
    goog.exportSymbol('proto.Activs.ActInfo', null, global);
    goog.exportSymbol('proto.Activs.ActiItem', null, global);
    goog.exportSymbol('proto.Activs.ActiLogAck', null, global);
    goog.exportSymbol('proto.Activs.ActiLogGet', null, global);
    goog.exportSymbol('proto.Activs.AwardAck', null, global);
    goog.exportSymbol('proto.Activs.AwardGet', null, global);
    goog.exportSymbol('proto.Activs.InfoAck', null, global);
    goog.exportSymbol('proto.Activs.InfoGet', null, global);
    goog.exportSymbol('proto.Activs.RecordAck', null, global);
    goog.exportSymbol('proto.Activs.RecordGet', null, global);
    goog.exportSymbol('proto.Activs.Status', null, global);
    goog.exportSymbol('proto.Activs.StatusAck', null, global);
    goog.exportSymbol('proto.Activs.StatusGet', null, global);
    proto.Activs.ActiItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Activs.ActiItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.ActiItem.displayName = 'proto.Activs.ActiItem';
    }
    proto.Activs.ActInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Activs.ActInfo.repeatedFields_, null);
    };
    goog.inherits(proto.Activs.ActInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.ActInfo.displayName = 'proto.Activs.ActInfo';
    }
    proto.Activs.InfoGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Activs.InfoGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.InfoGet.displayName = 'proto.Activs.InfoGet';
    }
    proto.Activs.InfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Activs.InfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.InfoAck.displayName = 'proto.Activs.InfoAck';
    }
    proto.Activs.StatusGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Activs.StatusGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.StatusGet.displayName = 'proto.Activs.StatusGet';
    }
    proto.Activs.StatusAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Activs.StatusAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.StatusAck.displayName = 'proto.Activs.StatusAck';
    }
    proto.Activs.AwardGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Activs.AwardGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.AwardGet.displayName = 'proto.Activs.AwardGet';
    }
    proto.Activs.AwardAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Activs.AwardAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.AwardAck.displayName = 'proto.Activs.AwardAck';
    }
    proto.Activs.RecordGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Activs.RecordGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.RecordGet.displayName = 'proto.Activs.RecordGet';
    }
    proto.Activs.RecordAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Activs.RecordAck.repeatedFields_, null);
    };
    goog.inherits(proto.Activs.RecordAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.RecordAck.displayName = 'proto.Activs.RecordAck';
    }
    proto.Activs.ActiLogGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Activs.ActiLogGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.ActiLogGet.displayName = 'proto.Activs.ActiLogGet';
    }
    proto.Activs.ActiLogAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Activs.ActiLogAck.repeatedFields_, null);
    };
    goog.inherits(proto.Activs.ActiLogAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Activs.ActiLogAck.displayName = 'proto.Activs.ActiLogAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.ActiItem.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.ActiItem.toObject(opt_includeInstance, this);
        };
        proto.Activs.ActiItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                value: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                amin: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                amax: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.ActiItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.ActiItem;
        return proto.Activs.ActiItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.ActiItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setValue(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setItemnum(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setAmin(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setAmax(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.ActiItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.ActiItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.ActiItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getValue();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getAmin();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getAmax();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
    };
    proto.Activs.ActiItem.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Activs.ActiItem.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Activs.ActiItem.prototype.getValue = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Activs.ActiItem.prototype.setValue = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Activs.ActiItem.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Activs.ActiItem.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Activs.ActiItem.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Activs.ActiItem.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Activs.ActiItem.prototype.getAmin = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Activs.ActiItem.prototype.setAmin = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Activs.ActiItem.prototype.getAmax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Activs.ActiItem.prototype.setAmax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Activs.ActInfo.repeatedFields_ = [31];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.ActInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.ActInfo.toObject(opt_includeInstance, this);
        };
        proto.Activs.ActInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                rollid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                procur: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                promax: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                proadd: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                finish: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                limit: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                stime: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                etime: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                count: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 21, ""),
                inited: googleProtobuf.Message.getFieldWithDefault(msg, 22, 0),
                donate: googleProtobuf.Message.getFieldWithDefault(msg, 23, 0),
                nextrt: googleProtobuf.Message.getFieldWithDefault(msg, 24, 0),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.Activs.ActiItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.ActInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.ActInfo;
        return proto.Activs.ActInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.ActInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setRollid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setProcur(value);
                    break;
                case 5:
                    var value = (reader.readSint64());
                    msg.setPromax(value);
                    break;
                case 6:
                    var value = (reader.readSint64());
                    msg.setProadd(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setFinish(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setLimit(value);
                    break;
                case 9:
                    var value = (reader.readSint64());
                    msg.setStime(value);
                    break;
                case 10:
                    var value = (reader.readSint64());
                    msg.setEtime(value);
                    break;
                case 11:
                    var value = (reader.readSint32());
                    msg.setStatus(value);
                    break;
                case 12:
                    var value = (reader.readSint32());
                    msg.setCount(value);
                    break;
                case 21:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 22:
                    var value = (reader.readSint32());
                    msg.setInited(value);
                    break;
                case 23:
                    var value = (reader.readSint32());
                    msg.setDonate(value);
                    break;
                case 24:
                    var value = (reader.readSint32());
                    msg.setNextrt(value);
                    break;
                case 31:
                    var value = new proto.Activs.ActiItem;
                    reader.readMessage(value, proto.Activs.ActiItem.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.ActInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.ActInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.ActInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getRollid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getProcur();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getPromax();
        if (f !== 0) {
            writer.writeSint64(5, f);
        }
        f = message.getProadd();
        if (f !== 0) {
            writer.writeSint64(6, f);
        }
        f = message.getFinish();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getLimit();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
        f = message.getStime();
        if (f !== 0) {
            writer.writeSint64(9, f);
        }
        f = message.getEtime();
        if (f !== 0) {
            writer.writeSint64(10, f);
        }
        f = message.getStatus();
        if (f !== 0) {
            writer.writeSint32(11, f);
        }
        f = message.getCount();
        if (f !== 0) {
            writer.writeSint32(12, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(21, f);
        }
        f = message.getInited();
        if (f !== 0) {
            writer.writeSint32(22, f);
        }
        f = message.getDonate();
        if (f !== 0) {
            writer.writeSint32(23, f);
        }
        f = message.getNextrt();
        if (f !== 0) {
            writer.writeSint32(24, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(31, f, proto.Activs.ActiItem.serializeBinaryToWriter);
        }
    };
    proto.Activs.ActInfo.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Activs.ActInfo.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Activs.ActInfo.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Activs.ActInfo.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Activs.ActInfo.prototype.getRollid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Activs.ActInfo.prototype.setRollid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Activs.ActInfo.prototype.getProcur = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Activs.ActInfo.prototype.setProcur = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Activs.ActInfo.prototype.getPromax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Activs.ActInfo.prototype.setPromax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Activs.ActInfo.prototype.getProadd = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Activs.ActInfo.prototype.setProadd = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Activs.ActInfo.prototype.getFinish = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Activs.ActInfo.prototype.setFinish = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Activs.ActInfo.prototype.getLimit = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Activs.ActInfo.prototype.setLimit = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Activs.ActInfo.prototype.getStime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Activs.ActInfo.prototype.setStime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Activs.ActInfo.prototype.getEtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Activs.ActInfo.prototype.setEtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Activs.ActInfo.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Activs.ActInfo.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Activs.ActInfo.prototype.getCount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Activs.ActInfo.prototype.setCount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.Activs.ActInfo.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 21, ""));
    };
    proto.Activs.ActInfo.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 21, value);
    };
    proto.Activs.ActInfo.prototype.getInited = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 22, 0));
    };
    proto.Activs.ActInfo.prototype.setInited = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 22, value);
    };
    proto.Activs.ActInfo.prototype.getDonate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 23, 0));
    };
    proto.Activs.ActInfo.prototype.setDonate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 23, value);
    };
    proto.Activs.ActInfo.prototype.getNextrt = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 24, 0));
    };
    proto.Activs.ActInfo.prototype.setNextrt = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 24, value);
    };
    proto.Activs.ActInfo.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Activs.ActiItem, 31));
    };
    proto.Activs.ActInfo.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 31, value);
    };
    proto.Activs.ActInfo.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 31, opt_value, proto.Activs.ActiItem, opt_index);
    };
    proto.Activs.ActInfo.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.InfoGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.InfoGet.toObject(opt_includeInstance, this);
        };
        proto.Activs.InfoGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                source: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.InfoGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.InfoGet;
        return proto.Activs.InfoGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.InfoGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.InfoGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.InfoGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.InfoGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Activs.InfoGet.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Activs.InfoGet.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.InfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.InfoAck.toObject(opt_includeInstance, this);
        };
        proto.Activs.InfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                info: (f = msg.getInfo()) && proto.Activs.ActInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.InfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.InfoAck;
        return proto.Activs.InfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.InfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 11:
                    var value = new proto.Activs.ActInfo;
                    reader.readMessage(value, proto.Activs.ActInfo.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.InfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.InfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.InfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(11, f, proto.Activs.ActInfo.serializeBinaryToWriter);
        }
    };
    proto.Activs.InfoAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Activs.InfoAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Activs.InfoAck.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Activs.InfoAck.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Activs.InfoAck.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Activs.ActInfo, 11));
    };
    proto.Activs.InfoAck.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.Activs.InfoAck.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Activs.InfoAck.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.StatusGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.StatusGet.toObject(opt_includeInstance, this);
        };
        proto.Activs.StatusGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                source: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.StatusGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.StatusGet;
        return proto.Activs.StatusGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.StatusGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 2:
                    var value = (reader.readEnum());
                    msg.setStatus(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.StatusGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.StatusGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.StatusGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getStatus();
        if (f !== 0.0) {
            writer.writeEnum(2, f);
        }
    };
    proto.Activs.StatusGet.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Activs.StatusGet.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Activs.StatusGet.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Activs.StatusGet.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.StatusAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.StatusAck.toObject(opt_includeInstance, this);
        };
        proto.Activs.StatusAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                info: (f = msg.getInfo()) && proto.Activs.ActInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.StatusAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.StatusAck;
        return proto.Activs.StatusAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.StatusAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 3:
                    var value = (reader.readEnum());
                    msg.setStatus(value);
                    break;
                case 11:
                    var value = new proto.Activs.ActInfo;
                    reader.readMessage(value, proto.Activs.ActInfo.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.StatusAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.StatusAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.StatusAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStatus();
        if (f !== 0.0) {
            writer.writeEnum(3, f);
        }
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(11, f, proto.Activs.ActInfo.serializeBinaryToWriter);
        }
    };
    proto.Activs.StatusAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Activs.StatusAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Activs.StatusAck.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Activs.StatusAck.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Activs.StatusAck.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Activs.StatusAck.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 3, value);
    };
    proto.Activs.StatusAck.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Activs.ActInfo, 11));
    };
    proto.Activs.StatusAck.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.Activs.StatusAck.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Activs.StatusAck.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.AwardGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.AwardGet.toObject(opt_includeInstance, this);
        };
        proto.Activs.AwardGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                source: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.AwardGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.AwardGet;
        return proto.Activs.AwardGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.AwardGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.AwardGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.AwardGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.AwardGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
    };
    proto.Activs.AwardGet.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Activs.AwardGet.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Activs.AwardGet.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Activs.AwardGet.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Activs.AwardGet.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Activs.AwardGet.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.AwardAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.AwardAck.toObject(opt_includeInstance, this);
        };
        proto.Activs.AwardAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                record: (f = msg.getRecord()) && Exchange_pb.Record.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.AwardAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.AwardAck;
        return proto.Activs.AwardAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.AwardAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 11:
                    var value = new Exchange_pb.Record;
                    reader.readMessage(value, Exchange_pb.Record.deserializeBinaryFromReader);
                    msg.setRecord(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.AwardAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.AwardAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.AwardAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getRecord();
        if (f != null) {
            writer.writeMessage(11, f, Exchange_pb.Record.serializeBinaryToWriter);
        }
    };
    proto.Activs.AwardAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Activs.AwardAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Activs.AwardAck.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Activs.AwardAck.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Activs.AwardAck.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Activs.AwardAck.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Activs.AwardAck.prototype.getRecord = function () {
        return (googleProtobuf.Message.getWrapperField(this, Exchange_pb.Record, 11));
    };
    proto.Activs.AwardAck.prototype.setRecord = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.Activs.AwardAck.prototype.clearRecord = function () {
        return this.setRecord(undefined);
    };
    proto.Activs.AwardAck.prototype.hasRecord = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.RecordGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.RecordGet.toObject(opt_includeInstance, this);
        };
        proto.Activs.RecordGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                page: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                item: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.RecordGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.RecordGet;
        return proto.Activs.RecordGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.RecordGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setItem(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 11:
                    var value = (reader.readEnum());
                    msg.setStatus(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.RecordGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.RecordGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.RecordGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getItem();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStatus();
        if (f !== 0.0) {
            writer.writeEnum(11, f);
        }
    };
    proto.Activs.RecordGet.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Activs.RecordGet.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Activs.RecordGet.prototype.getItem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Activs.RecordGet.prototype.setItem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Activs.RecordGet.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Activs.RecordGet.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Activs.RecordGet.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Activs.RecordGet.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 11, value);
    };
    proto.Activs.RecordAck.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.RecordAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.RecordAck.toObject(opt_includeInstance, this);
        };
        proto.Activs.RecordAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                page: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                item: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                recordsList: googleProtobuf.Message.toObjectList(msg.getRecordsList(), Exchange_pb.Record.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.RecordAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.RecordAck;
        return proto.Activs.RecordAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.RecordAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItem(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 5:
                    var value = (reader.readEnum());
                    msg.setStatus(value);
                    break;
                case 11:
                    var value = new Exchange_pb.Record;
                    reader.readMessage(value, Exchange_pb.Record.deserializeBinaryFromReader);
                    msg.addRecords(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.RecordAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.RecordAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.RecordAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItem();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getStatus();
        if (f !== 0.0) {
            writer.writeEnum(5, f);
        }
        f = message.getRecordsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, Exchange_pb.Record.serializeBinaryToWriter);
        }
    };
    proto.Activs.RecordAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Activs.RecordAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Activs.RecordAck.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Activs.RecordAck.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Activs.RecordAck.prototype.getItem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Activs.RecordAck.prototype.setItem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Activs.RecordAck.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Activs.RecordAck.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Activs.RecordAck.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Activs.RecordAck.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 5, value);
    };
    proto.Activs.RecordAck.prototype.getRecordsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, Exchange_pb.Record, 11));
    };
    proto.Activs.RecordAck.prototype.setRecordsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Activs.RecordAck.prototype.addRecords = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Exchange.Record, opt_index);
    };
    proto.Activs.RecordAck.prototype.clearRecordsList = function () {
        return this.setRecordsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.ActiLogGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.ActiLogGet.toObject(opt_includeInstance, this);
        };
        proto.Activs.ActiLogGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                page: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                item: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.ActiLogGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.ActiLogGet;
        return proto.Activs.ActiLogGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.ActiLogGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setItem(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.ActiLogGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.ActiLogGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.ActiLogGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getItem();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Activs.ActiLogGet.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Activs.ActiLogGet.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Activs.ActiLogGet.prototype.getItem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Activs.ActiLogGet.prototype.setItem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Activs.ActiLogAck.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Activs.ActiLogAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Activs.ActiLogAck.toObject(opt_includeInstance, this);
        };
        proto.Activs.ActiLogAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                page: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                item: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                logsList: googleProtobuf.Message.toObjectList(msg.getLogsList(), OutInvite_pb.Bind.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Activs.ActiLogAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Activs.ActiLogAck;
        return proto.Activs.ActiLogAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Activs.ActiLogAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItem(value);
                    break;
                case 11:
                    var value = new OutInvite_pb.Bind;
                    reader.readMessage(value, OutInvite_pb.Bind.deserializeBinaryFromReader);
                    msg.addLogs(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Activs.ActiLogAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Activs.ActiLogAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Activs.ActiLogAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItem();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getLogsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, OutInvite_pb.Bind.serializeBinaryToWriter);
        }
    };
    proto.Activs.ActiLogAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Activs.ActiLogAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Activs.ActiLogAck.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Activs.ActiLogAck.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Activs.ActiLogAck.prototype.getItem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Activs.ActiLogAck.prototype.setItem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Activs.ActiLogAck.prototype.getLogsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, OutInvite_pb.Bind, 11));
    };
    proto.Activs.ActiLogAck.prototype.setLogsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Activs.ActiLogAck.prototype.addLogs = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Invite.Bind, opt_index);
    };
    proto.Activs.ActiLogAck.prototype.clearLogsList = function () {
        return this.setLogsList([]);
    };
    proto.Activs.Status = {
        NONE: 0,
        JOIN: 1,
        WAIT: 2,
        STOP: 3,
        OVER: 4
    };
    goog.object.extend(exports, proto.Activs);

    });
    var Activs_pb_1 = Activs_pb.ActInfo;
    var Activs_pb_2 = Activs_pb.Status;
    var Activs_pb_3 = Activs_pb.InfoGet;
    var Activs_pb_4 = Activs_pb.InfoAck;
    var Activs_pb_5 = Activs_pb.AwardGet;
    var Activs_pb_6 = Activs_pb.AwardAck;
    var Activs_pb_7 = Activs_pb.StatusGet;
    var Activs_pb_8 = Activs_pb.StatusAck;
    var Activs_pb_9 = Activs_pb.RecordGet;
    var Activs_pb_10 = Activs_pb.RecordAck;
    var Activs_pb_11 = Activs_pb.ActiLogGet;
    var Activs_pb_12 = Activs_pb.ActiLogAck;

    const grpc$c = {};
    grpc$c.web = grpcWeb;


    const proto$d = {};
    proto$d.Activs = Activs_pb;
    proto$d.Activs.ActivsServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$c.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$d.Activs.ActivsServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$c.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_ActivsService_Info = new grpc$c.web.MethodDescriptor('/Activs.ActivsService/Info', grpc$c.web.MethodType.UNARY, proto$d.Activs.InfoGet, proto$d.Activs.InfoAck, function (request) {
        return request.serializeBinary();
    }, proto$d.Activs.InfoAck.deserializeBinary);
    proto$d.Activs.ActivsServiceClient.prototype.info =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Activs.ActivsService/Info', request, metadata || {}, methodDescriptor_ActivsService_Info, callback);
        };
    proto$d.Activs.ActivsServicePromiseClient.prototype.info =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Activs.ActivsService/Info', request, metadata || {}, methodDescriptor_ActivsService_Info);
        };
    const methodDescriptor_ActivsService_Status = new grpc$c.web.MethodDescriptor('/Activs.ActivsService/Status', grpc$c.web.MethodType.UNARY, proto$d.Activs.StatusGet, proto$d.Activs.StatusAck, function (request) {
        return request.serializeBinary();
    }, proto$d.Activs.StatusAck.deserializeBinary);
    proto$d.Activs.ActivsServiceClient.prototype.status =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Activs.ActivsService/Status', request, metadata || {}, methodDescriptor_ActivsService_Status, callback);
        };
    proto$d.Activs.ActivsServicePromiseClient.prototype.status =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Activs.ActivsService/Status', request, metadata || {}, methodDescriptor_ActivsService_Status);
        };
    const methodDescriptor_ActivsService_Award = new grpc$c.web.MethodDescriptor('/Activs.ActivsService/Award', grpc$c.web.MethodType.UNARY, proto$d.Activs.AwardGet, proto$d.Activs.AwardAck, function (request) {
        return request.serializeBinary();
    }, proto$d.Activs.AwardAck.deserializeBinary);
    proto$d.Activs.ActivsServiceClient.prototype.award =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Activs.ActivsService/Award', request, metadata || {}, methodDescriptor_ActivsService_Award, callback);
        };
    proto$d.Activs.ActivsServicePromiseClient.prototype.award =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Activs.ActivsService/Award', request, metadata || {}, methodDescriptor_ActivsService_Award);
        };
    const methodDescriptor_ActivsService_Record = new grpc$c.web.MethodDescriptor('/Activs.ActivsService/Record', grpc$c.web.MethodType.UNARY, proto$d.Activs.RecordGet, proto$d.Activs.RecordAck, function (request) {
        return request.serializeBinary();
    }, proto$d.Activs.RecordAck.deserializeBinary);
    proto$d.Activs.ActivsServiceClient.prototype.record =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Activs.ActivsService/Record', request, metadata || {}, methodDescriptor_ActivsService_Record, callback);
        };
    proto$d.Activs.ActivsServicePromiseClient.prototype.record =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Activs.ActivsService/Record', request, metadata || {}, methodDescriptor_ActivsService_Record);
        };
    const methodDescriptor_ActivsService_ActiLog = new grpc$c.web.MethodDescriptor('/Activs.ActivsService/ActiLog', grpc$c.web.MethodType.UNARY, proto$d.Activs.ActiLogGet, proto$d.Activs.ActiLogAck, function (request) {
        return request.serializeBinary();
    }, proto$d.Activs.ActiLogAck.deserializeBinary);
    proto$d.Activs.ActivsServiceClient.prototype.actiLog =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Activs.ActivsService/ActiLog', request, metadata || {}, methodDescriptor_ActivsService_ActiLog, callback);
        };
    proto$d.Activs.ActivsServicePromiseClient.prototype.actiLog =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Activs.ActivsService/ActiLog', request, metadata || {}, methodDescriptor_ActivsService_ActiLog);
        };
    var Activs_grpc_web_pb = proto$d.Activs;
    var Activs_grpc_web_pb_1 = Activs_grpc_web_pb.ActivsServiceClient;

    class ActivsService extends Singleton {
        constructor() {
            super();
            this.activService = null;
            this.activService = new Activs_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.setSourcByLang();
            this.getActInfo();
        }
        setSourcByLang() {
            switch (GlobalVariables.DEF_LANG) {
                case LANG_T.VN:
                    this.m_source = "vicoin";
                    break;
                case LANG_T.RU:
                    this.m_source = "rucoin";
                    break;
                case LANG_T.EN:
                case LANG_T.IND:
                    this.m_source = "incoin";
                    break;
                default:
                    this.m_source = "incoin";
                    break;
            }
        }
        getItemNum(__srcNum) {
            let resNum = __srcNum;
            if (this.m_info) {
                let amin = this.m_info.getAwardsList()[0].getAmin() || 0;
                resNum = Math.ceil(100 * amin * __srcNum / this.m_info.getPromax()) / 100;
            }
            return resNum;
        }
        getActInfo(__callBack) {
            let req = new Activs_pb_3();
            req.setSource(this.m_source);
            this.activService.info(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err != null) {
                    CC.Loge("InfoGet failed: ", err);
                    if (__callBack) {
                        __callBack(null);
                    }
                    return;
                }
                if (ack.getCret() == 0) {
                    this.m_info = ack.getInfo();
                }
                if (__callBack) {
                    __callBack(ack);
                }
            });
        }
        statusGet(__status, __callBack) {
            let req = new Activs_pb_7();
            req.setSource(this.m_source);
            req.setStatus(__status);
            this.activService.status(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err != null) {
                    CC.Loge("StatusGet failed: ", err);
                    if (__callBack) {
                        __callBack(null);
                    }
                    return;
                }
                if (ack.getCret() == 0) {
                    this.m_info = ack.getInfo();
                }
                if (__callBack) {
                    __callBack(ack);
                }
            });
        }
        getRecord(__page, __item, __status, __callBack) {
            let req = new Activs_pb_9();
            req.setPage(__page);
            req.setItem(__item);
            req.setStatus(__status);
            req.setSource(this.m_source);
            this.activService.record(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err != null) {
                    CC.Loge("RecordGet failed: ", err);
                    if (__callBack) {
                        __callBack(null);
                    }
                    return;
                }
                if (__callBack) {
                    __callBack(ack);
                }
            });
        }
        getActLog(__page, __item, __callBack) {
            let req = new Activs_pb_11();
            req.setPage(__page);
            req.setItem(__item);
            this.activService.actiLog(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err != null) {
                    CC.Loge("ActiLogGet failed: ", err);
                    if (__callBack) {
                        __callBack(null);
                    }
                    return;
                }
                if (__callBack) {
                    __callBack(ack);
                }
            });
        }
        awardGet(__awardId, __callBack) {
            let req = new Activs_pb_5();
            req.setAppid(Number(GlobalVariables.APP_ID));
            req.setAwardid(__awardId);
            req.setSource(this.m_source);
            this.activService.award(req, GlobalData.getInstance().baseMeta, (err, ack) => {
                if (err != null) {
                    CC.Loge("AwardGet failed: ", err);
                    if (__callBack) {
                        __callBack(null);
                    }
                    return;
                }
                if (__callBack) {
                    __callBack(ack);
                }
            });
        }
    }

    var Bulletin_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Bulletin.Info', null, global);
    goog.exportSymbol('proto.Bulletin.InfoAck', null, global);
    goog.exportSymbol('proto.Bulletin.InfoGet', null, global);
    proto.Bulletin.Info = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Bulletin.Info, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Bulletin.Info.displayName = 'proto.Bulletin.Info';
    }
    proto.Bulletin.InfoGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Bulletin.InfoGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Bulletin.InfoGet.displayName = 'proto.Bulletin.InfoGet';
    }
    proto.Bulletin.InfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Bulletin.InfoAck.repeatedFields_, null);
    };
    goog.inherits(proto.Bulletin.InfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Bulletin.InfoAck.displayName = 'proto.Bulletin.InfoAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Bulletin.Info.prototype.toObject = function (opt_includeInstance) {
            return proto.Bulletin.Info.toObject(opt_includeInstance, this);
        };
        proto.Bulletin.Info.toObject = function (includeInstance, msg) {
            var f, obj = {
                source: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                tmplid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                proxy: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                time: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                times: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                second: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Bulletin.Info.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Bulletin.Info;
        return proto.Bulletin.Info.deserializeBinaryFromReader(msg, reader);
    };
    proto.Bulletin.Info.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setTmplid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setProxy(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setTime(value);
                    break;
                case 11:
                    var value = (reader.readSint32());
                    msg.setTimes(value);
                    break;
                case 12:
                    var value = (reader.readSint32());
                    msg.setSecond(value);
                    break;
                case 21:
                    var value = msg.getParamsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readString, null, "", "");
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Bulletin.Info.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Bulletin.Info.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Bulletin.Info.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getTmplid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getProxy();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getTime();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getTimes();
        if (f !== 0) {
            writer.writeSint32(11, f);
        }
        f = message.getSecond();
        if (f !== 0) {
            writer.writeSint32(12, f);
        }
        f = message.getParamsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(21, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeString);
        }
    };
    proto.Bulletin.Info.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Bulletin.Info.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Bulletin.Info.prototype.getTmplid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Bulletin.Info.prototype.setTmplid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Bulletin.Info.prototype.getProxy = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Bulletin.Info.prototype.setProxy = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Bulletin.Info.prototype.getTime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Bulletin.Info.prototype.setTime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Bulletin.Info.prototype.getTimes = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Bulletin.Info.prototype.setTimes = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Bulletin.Info.prototype.getSecond = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Bulletin.Info.prototype.setSecond = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.Bulletin.Info.prototype.getParamsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 21, opt_noLazyCreate, null));
    };
    proto.Bulletin.Info.prototype.clearParamsMap = function () {
        this.getParamsMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Bulletin.InfoGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Bulletin.InfoGet.toObject(opt_includeInstance, this);
        };
        proto.Bulletin.InfoGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                source: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Bulletin.InfoGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Bulletin.InfoGet;
        return proto.Bulletin.InfoGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Bulletin.InfoGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Bulletin.InfoGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Bulletin.InfoGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Bulletin.InfoGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Bulletin.InfoGet.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Bulletin.InfoGet.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Bulletin.InfoAck.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Bulletin.InfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Bulletin.InfoAck.toObject(opt_includeInstance, this);
        };
        proto.Bulletin.InfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                source: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                infosList: googleProtobuf.Message.toObjectList(msg.getInfosList(), proto.Bulletin.Info.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Bulletin.InfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Bulletin.InfoAck;
        return proto.Bulletin.InfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Bulletin.InfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setSource(value);
                    break;
                case 11:
                    var value = new proto.Bulletin.Info;
                    reader.readMessage(value, proto.Bulletin.Info.deserializeBinaryFromReader);
                    msg.addInfos(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Bulletin.InfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Bulletin.InfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Bulletin.InfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getSource();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getInfosList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.Bulletin.Info.serializeBinaryToWriter);
        }
    };
    proto.Bulletin.InfoAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Bulletin.InfoAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Bulletin.InfoAck.prototype.getSource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Bulletin.InfoAck.prototype.setSource = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Bulletin.InfoAck.prototype.getInfosList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Bulletin.Info, 11));
    };
    proto.Bulletin.InfoAck.prototype.setInfosList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Bulletin.InfoAck.prototype.addInfos = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Bulletin.Info, opt_index);
    };
    proto.Bulletin.InfoAck.prototype.clearInfosList = function () {
        return this.setInfosList([]);
    };
    goog.object.extend(exports, proto.Bulletin);

    });
    var Bulletin_pb_1 = Bulletin_pb.Info;
    var Bulletin_pb_2 = Bulletin_pb.InfoGet;
    var Bulletin_pb_3 = Bulletin_pb.InfoAck;

    var Lucky_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, OutInvite_pb);
    goog.exportSymbol('proto.Lucky.Award', null, global);
    goog.exportSymbol('proto.Lucky.AwardAck', null, global);
    goog.exportSymbol('proto.Lucky.AwardGet', null, global);
    goog.exportSymbol('proto.Lucky.AwardsNoti', null, global);
    goog.exportSymbol('proto.Lucky.ClientAck', null, global);
    goog.exportSymbol('proto.Lucky.ClientGet', null, global);
    goog.exportSymbol('proto.Lucky.ConsumeAck', null, global);
    goog.exportSymbol('proto.Lucky.ConsumeGet', null, global);
    goog.exportSymbol('proto.Lucky.InviteAck', null, global);
    goog.exportSymbol('proto.Lucky.InviteGet', null, global);
    goog.exportSymbol('proto.Lucky.Lucky', null, global);
    goog.exportSymbol('proto.Lucky.LuckyAck', null, global);
    goog.exportSymbol('proto.Lucky.LuckyGet', null, global);
    goog.exportSymbol('proto.Lucky.Server', null, global);
    goog.exportSymbol('proto.Lucky.Task', null, global);
    goog.exportSymbol('proto.Lucky.TaskAck', null, global);
    goog.exportSymbol('proto.Lucky.TaskGet', null, global);
    proto.Lucky.Lucky = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.Lucky, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.Lucky.displayName = 'proto.Lucky.Lucky';
    }
    proto.Lucky.Award = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.Award, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.Award.displayName = 'proto.Lucky.Award';
    }
    proto.Lucky.Task = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Lucky.Task.repeatedFields_, null);
    };
    goog.inherits(proto.Lucky.Task, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.Task.displayName = 'proto.Lucky.Task';
    }
    proto.Lucky.Server = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.Server, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.Server.displayName = 'proto.Lucky.Server';
    }
    proto.Lucky.AwardsNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Lucky.AwardsNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Lucky.AwardsNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.AwardsNoti.displayName = 'proto.Lucky.AwardsNoti';
    }
    proto.Lucky.LuckyGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Lucky.LuckyGet.repeatedFields_, null);
    };
    goog.inherits(proto.Lucky.LuckyGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.LuckyGet.displayName = 'proto.Lucky.LuckyGet';
    }
    proto.Lucky.LuckyAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Lucky.LuckyAck.repeatedFields_, null);
    };
    goog.inherits(proto.Lucky.LuckyAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.LuckyAck.displayName = 'proto.Lucky.LuckyAck';
    }
    proto.Lucky.TaskGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.TaskGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.TaskGet.displayName = 'proto.Lucky.TaskGet';
    }
    proto.Lucky.TaskAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.TaskAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.TaskAck.displayName = 'proto.Lucky.TaskAck';
    }
    proto.Lucky.AwardGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.AwardGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.AwardGet.displayName = 'proto.Lucky.AwardGet';
    }
    proto.Lucky.AwardAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Lucky.AwardAck.repeatedFields_, null);
    };
    goog.inherits(proto.Lucky.AwardAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.AwardAck.displayName = 'proto.Lucky.AwardAck';
    }
    proto.Lucky.ClientGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.ClientGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.ClientGet.displayName = 'proto.Lucky.ClientGet';
    }
    proto.Lucky.ClientAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.ClientAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.ClientAck.displayName = 'proto.Lucky.ClientAck';
    }
    proto.Lucky.ConsumeGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.ConsumeGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.ConsumeGet.displayName = 'proto.Lucky.ConsumeGet';
    }
    proto.Lucky.ConsumeAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Lucky.ConsumeAck.repeatedFields_, null);
    };
    goog.inherits(proto.Lucky.ConsumeAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.ConsumeAck.displayName = 'proto.Lucky.ConsumeAck';
    }
    proto.Lucky.InviteGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Lucky.InviteGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.InviteGet.displayName = 'proto.Lucky.InviteGet';
    }
    proto.Lucky.InviteAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Lucky.InviteAck.repeatedFields_, null);
    };
    goog.inherits(proto.Lucky.InviteAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Lucky.InviteAck.displayName = 'proto.Lucky.InviteAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.Lucky.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.Lucky.toObject(opt_includeInstance, this);
        };
        proto.Lucky.Lucky.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                times: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                daynum: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                dayturn: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                nexts: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                tnext: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                mtimes: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.Lucky.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.Lucky;
        return proto.Lucky.Lucky.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.Lucky.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setTimes(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setDaynum(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setDayturn(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setNexts(value);
                    break;
                case 6:
                    var value = (reader.readSint64());
                    msg.setTnext(value);
                    break;
                case 13:
                    var value = (reader.readSint32());
                    msg.setMtimes(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.Lucky.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.Lucky.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.Lucky.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getTimes();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getDaynum();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getDayturn();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getNexts();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getTnext();
        if (f !== 0) {
            writer.writeSint64(6, f);
        }
        f = message.getMtimes();
        if (f !== 0) {
            writer.writeSint32(13, f);
        }
    };
    proto.Lucky.Lucky.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.Lucky.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.Lucky.prototype.getTimes = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Lucky.Lucky.prototype.setTimes = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Lucky.Lucky.prototype.getDaynum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Lucky.Lucky.prototype.setDaynum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Lucky.Lucky.prototype.getDayturn = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Lucky.Lucky.prototype.setDayturn = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Lucky.Lucky.prototype.getNexts = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Lucky.Lucky.prototype.setNexts = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Lucky.Lucky.prototype.getTnext = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Lucky.Lucky.prototype.setTnext = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Lucky.Lucky.prototype.getMtimes = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
    };
    proto.Lucky.Lucky.prototype.setMtimes = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 13, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.Award.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.Award.toObject(opt_includeInstance, this);
        };
        proto.Lucky.Award.toObject = function (includeInstance, msg) {
            var f, obj = {
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                value: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.Award.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.Award;
        return proto.Lucky.Award.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.Award.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setValue(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setItemnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.Award.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.Award.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.Award.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getValue();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
    };
    proto.Lucky.Award.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.Award.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.Award.prototype.getValue = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Lucky.Award.prototype.setValue = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Lucky.Award.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Lucky.Award.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Lucky.Award.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Lucky.Award.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Lucky.Task.repeatedFields_ = [31, 41];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.Task.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.Task.toObject(opt_includeInstance, this);
        };
        proto.Lucky.Task.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                procur: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                promax: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                daynum: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                finish: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                limit: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                stime: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                etime: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                state: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 21, ""),
                stateall: googleProtobuf.Message.getFieldWithDefault(msg, 22, 0),
                auto: googleProtobuf.Message.getFieldWithDefault(msg, 23, 0),
                init: googleProtobuf.Message.getFieldWithDefault(msg, 24, 0),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.Lucky.Award.toObject, includeInstance),
                sourcesList: (f = googleProtobuf.Message.getRepeatedField(msg, 41)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.Task.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.Task;
        return proto.Lucky.Task.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.Task.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setProcur(value);
                    break;
                case 5:
                    var value = (reader.readSint64());
                    msg.setPromax(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setDaynum(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setFinish(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setLimit(value);
                    break;
                case 9:
                    var value = (reader.readSint64());
                    msg.setStime(value);
                    break;
                case 10:
                    var value = (reader.readSint64());
                    msg.setEtime(value);
                    break;
                case 11:
                    var value = (reader.readSint32());
                    msg.setState(value);
                    break;
                case 21:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 22:
                    var value = (reader.readSint32());
                    msg.setStateall(value);
                    break;
                case 23:
                    var value = (reader.readSint32());
                    msg.setAuto(value);
                    break;
                case 24:
                    var value = (reader.readSint32());
                    msg.setInit(value);
                    break;
                case 31:
                    var value = new proto.Lucky.Award;
                    reader.readMessage(value, proto.Lucky.Award.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                case 41:
                    var values = (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addSources(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.Task.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.Task.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.Task.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getProcur();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getPromax();
        if (f !== 0) {
            writer.writeSint64(5, f);
        }
        f = message.getDaynum();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getFinish();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getLimit();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
        f = message.getStime();
        if (f !== 0) {
            writer.writeSint64(9, f);
        }
        f = message.getEtime();
        if (f !== 0) {
            writer.writeSint64(10, f);
        }
        f = message.getState();
        if (f !== 0) {
            writer.writeSint32(11, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(21, f);
        }
        f = message.getStateall();
        if (f !== 0) {
            writer.writeSint32(22, f);
        }
        f = message.getAuto();
        if (f !== 0) {
            writer.writeSint32(23, f);
        }
        f = message.getInit();
        if (f !== 0) {
            writer.writeSint32(24, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(31, f, proto.Lucky.Award.serializeBinaryToWriter);
        }
        f = message.getSourcesList();
        if (f.length > 0) {
            writer.writePackedSint32(41, f);
        }
    };
    proto.Lucky.Task.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.Task.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.Task.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Lucky.Task.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Lucky.Task.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Lucky.Task.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Lucky.Task.prototype.getProcur = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Lucky.Task.prototype.setProcur = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Lucky.Task.prototype.getPromax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Lucky.Task.prototype.setPromax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Lucky.Task.prototype.getDaynum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Lucky.Task.prototype.setDaynum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Lucky.Task.prototype.getFinish = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Lucky.Task.prototype.setFinish = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Lucky.Task.prototype.getLimit = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Lucky.Task.prototype.setLimit = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Lucky.Task.prototype.getStime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Lucky.Task.prototype.setStime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Lucky.Task.prototype.getEtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Lucky.Task.prototype.setEtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Lucky.Task.prototype.getState = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Lucky.Task.prototype.setState = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Lucky.Task.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 21, ""));
    };
    proto.Lucky.Task.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 21, value);
    };
    proto.Lucky.Task.prototype.getStateall = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 22, 0));
    };
    proto.Lucky.Task.prototype.setStateall = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 22, value);
    };
    proto.Lucky.Task.prototype.getAuto = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 23, 0));
    };
    proto.Lucky.Task.prototype.setAuto = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 23, value);
    };
    proto.Lucky.Task.prototype.getInit = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 24, 0));
    };
    proto.Lucky.Task.prototype.setInit = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 24, value);
    };
    proto.Lucky.Task.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Lucky.Award, 31));
    };
    proto.Lucky.Task.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 31, value);
    };
    proto.Lucky.Task.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 31, opt_value, proto.Lucky.Award, opt_index);
    };
    proto.Lucky.Task.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    proto.Lucky.Task.prototype.getSourcesList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 41));
    };
    proto.Lucky.Task.prototype.setSourcesList = function (value) {
        return googleProtobuf.Message.setField(this, 41, value || []);
    };
    proto.Lucky.Task.prototype.addSources = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 41, value, opt_index);
    };
    proto.Lucky.Task.prototype.clearSourcesList = function () {
        return this.setSourcesList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.Server.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.Server.toObject(opt_includeInstance, this);
        };
        proto.Lucky.Server.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                itemsMap: (f = msg.getItemsMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.Server.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.Server;
        return proto.Lucky.Server.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.Server.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = msg.getItemsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readSint32, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.Server.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.Server.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.Server.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getItemsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeSint32);
        }
    };
    proto.Lucky.Server.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.Server.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.Server.prototype.getItemsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate, null));
    };
    proto.Lucky.Server.prototype.clearItemsMap = function () {
        this.getItemsMap().clear();
        return this;
    };
    proto.Lucky.AwardsNoti.repeatedFields_ = [31];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.AwardsNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.AwardsNoti.toObject(opt_includeInstance, this);
        };
        proto.Lucky.AwardsNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.Lucky.Award.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.AwardsNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.AwardsNoti;
        return proto.Lucky.AwardsNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.AwardsNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 31:
                    var value = new proto.Lucky.Award;
                    reader.readMessage(value, proto.Lucky.Award.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.AwardsNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.AwardsNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.AwardsNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(31, f, proto.Lucky.Award.serializeBinaryToWriter);
        }
    };
    proto.Lucky.AwardsNoti.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.AwardsNoti.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.AwardsNoti.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Lucky.Award, 31));
    };
    proto.Lucky.AwardsNoti.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 31, value);
    };
    proto.Lucky.AwardsNoti.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 31, opt_value, proto.Lucky.Award, opt_index);
    };
    proto.Lucky.AwardsNoti.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    proto.Lucky.LuckyGet.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.LuckyGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.LuckyGet.toObject(opt_includeInstance, this);
        };
        proto.Lucky.LuckyGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                taskidsList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.LuckyGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.LuckyGet;
        return proto.Lucky.LuckyGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.LuckyGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var values = (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addTaskids(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.LuckyGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.LuckyGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.LuckyGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getTaskidsList();
        if (f.length > 0) {
            writer.writePackedSint32(1, f);
        }
    };
    proto.Lucky.LuckyGet.prototype.getTaskidsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Lucky.LuckyGet.prototype.setTaskidsList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Lucky.LuckyGet.prototype.addTaskids = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Lucky.LuckyGet.prototype.clearTaskidsList = function () {
        return this.setTaskidsList([]);
    };
    proto.Lucky.LuckyAck.repeatedFields_ = [12];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.LuckyAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.LuckyAck.toObject(opt_includeInstance, this);
        };
        proto.Lucky.LuckyAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                lucky: (f = msg.getLucky()) && proto.Lucky.Lucky.toObject(includeInstance, f),
                tasksMap: (f = msg.getTasksMap()) ? f.toObject(includeInstance, proto.Lucky.Task.toObject) : [],
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.Lucky.Award.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.LuckyAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.LuckyAck;
        return proto.Lucky.LuckyAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.LuckyAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = new proto.Lucky.Lucky;
                    reader.readMessage(value, proto.Lucky.Lucky.deserializeBinaryFromReader);
                    msg.setLucky(value);
                    break;
                case 11:
                    var value = msg.getTasksMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Lucky.Task.deserializeBinaryFromReader, 0, new proto.Lucky.Task());
                    });
                    break;
                case 12:
                    var value = new proto.Lucky.Award;
                    reader.readMessage(value, proto.Lucky.Award.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.LuckyAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.LuckyAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.LuckyAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getLucky();
        if (f != null) {
            writer.writeMessage(2, f, proto.Lucky.Lucky.serializeBinaryToWriter);
        }
        f = message.getTasksMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Lucky.Task.serializeBinaryToWriter);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(12, f, proto.Lucky.Award.serializeBinaryToWriter);
        }
    };
    proto.Lucky.LuckyAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.LuckyAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.LuckyAck.prototype.getLucky = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Lucky.Lucky, 2));
    };
    proto.Lucky.LuckyAck.prototype.setLucky = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Lucky.LuckyAck.prototype.clearLucky = function () {
        return this.setLucky(undefined);
    };
    proto.Lucky.LuckyAck.prototype.hasLucky = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Lucky.LuckyAck.prototype.getTasksMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, proto.Lucky.Task));
    };
    proto.Lucky.LuckyAck.prototype.clearTasksMap = function () {
        this.getTasksMap().clear();
        return this;
    };
    proto.Lucky.LuckyAck.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Lucky.Award, 12));
    };
    proto.Lucky.LuckyAck.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 12, value);
    };
    proto.Lucky.LuckyAck.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.Lucky.Award, opt_index);
    };
    proto.Lucky.LuckyAck.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.TaskGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.TaskGet.toObject(opt_includeInstance, this);
        };
        proto.Lucky.TaskGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.TaskGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.TaskGet;
        return proto.Lucky.TaskGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.TaskGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setType(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.TaskGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.TaskGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.TaskGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getType();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Lucky.TaskGet.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.TaskGet.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.TaskGet.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Lucky.TaskGet.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.TaskAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.TaskAck.toObject(opt_includeInstance, this);
        };
        proto.Lucky.TaskAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                tasksMap: (f = msg.getTasksMap()) ? f.toObject(includeInstance, proto.Lucky.Task.toObject) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.TaskAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.TaskAck;
        return proto.Lucky.TaskAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.TaskAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 11:
                    var value = msg.getTasksMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Lucky.Task.deserializeBinaryFromReader, 0, new proto.Lucky.Task());
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.TaskAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.TaskAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.TaskAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getTasksMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Lucky.Task.serializeBinaryToWriter);
        }
    };
    proto.Lucky.TaskAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.TaskAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.TaskAck.prototype.getTasksMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, proto.Lucky.Task));
    };
    proto.Lucky.TaskAck.prototype.clearTasksMap = function () {
        this.getTasksMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.AwardGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.AwardGet.toObject(opt_includeInstance, this);
        };
        proto.Lucky.AwardGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.AwardGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.AwardGet;
        return proto.Lucky.AwardGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.AwardGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.AwardGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.AwardGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.AwardGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Lucky.AwardGet.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.AwardGet.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.AwardGet.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Lucky.AwardGet.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Lucky.AwardAck.repeatedFields_ = [31];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.AwardAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.AwardAck.toObject(opt_includeInstance, this);
        };
        proto.Lucky.AwardAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.Lucky.Award.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.AwardAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.AwardAck;
        return proto.Lucky.AwardAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.AwardAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 31:
                    var value = new proto.Lucky.Award;
                    reader.readMessage(value, proto.Lucky.Award.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.AwardAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.AwardAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.AwardAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(31, f, proto.Lucky.Award.serializeBinaryToWriter);
        }
    };
    proto.Lucky.AwardAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.AwardAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.AwardAck.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Lucky.AwardAck.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Lucky.AwardAck.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Lucky.AwardAck.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Lucky.AwardAck.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Lucky.Award, 31));
    };
    proto.Lucky.AwardAck.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 31, value);
    };
    proto.Lucky.AwardAck.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 31, opt_value, proto.Lucky.Award, opt_index);
    };
    proto.Lucky.AwardAck.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.ClientGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.ClientGet.toObject(opt_includeInstance, this);
        };
        proto.Lucky.ClientGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                itemsMap: (f = msg.getItemsMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.ClientGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.ClientGet;
        return proto.Lucky.ClientGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.ClientGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = msg.getItemsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readSint32, null, 0, 0);
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.ClientGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.ClientGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.ClientGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getItemsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeSint32);
        }
    };
    proto.Lucky.ClientGet.prototype.getItemsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate, null));
    };
    proto.Lucky.ClientGet.prototype.clearItemsMap = function () {
        this.getItemsMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.ClientAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.ClientAck.toObject(opt_includeInstance, this);
        };
        proto.Lucky.ClientAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                tasksMap: (f = msg.getTasksMap()) ? f.toObject(includeInstance, proto.Lucky.Task.toObject) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.ClientAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.ClientAck;
        return proto.Lucky.ClientAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.ClientAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 11:
                    var value = msg.getTasksMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Lucky.Task.deserializeBinaryFromReader, 0, new proto.Lucky.Task());
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.ClientAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.ClientAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.ClientAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getTasksMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Lucky.Task.serializeBinaryToWriter);
        }
    };
    proto.Lucky.ClientAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.ClientAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.ClientAck.prototype.getTasksMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, proto.Lucky.Task));
    };
    proto.Lucky.ClientAck.prototype.clearTasksMap = function () {
        this.getTasksMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.ConsumeGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.ConsumeGet.toObject(opt_includeInstance, this);
        };
        proto.Lucky.ConsumeGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                fromid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                destid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.ConsumeGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.ConsumeGet;
        return proto.Lucky.ConsumeGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.ConsumeGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setFromid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setDestid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.ConsumeGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.ConsumeGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.ConsumeGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getFromid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getDestid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Lucky.ConsumeGet.prototype.getFromid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.ConsumeGet.prototype.setFromid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.ConsumeGet.prototype.getDestid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Lucky.ConsumeGet.prototype.setDestid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Lucky.ConsumeAck.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.ConsumeAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.ConsumeAck.toObject(opt_includeInstance, this);
        };
        proto.Lucky.ConsumeAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.Lucky.Award.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.ConsumeAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.ConsumeAck;
        return proto.Lucky.ConsumeAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.ConsumeAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 11:
                    var value = new proto.Lucky.Award;
                    reader.readMessage(value, proto.Lucky.Award.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.ConsumeAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.ConsumeAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.ConsumeAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.Lucky.Award.serializeBinaryToWriter);
        }
    };
    proto.Lucky.ConsumeAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.ConsumeAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.ConsumeAck.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Lucky.Award, 11));
    };
    proto.Lucky.ConsumeAck.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Lucky.ConsumeAck.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Lucky.Award, opt_index);
    };
    proto.Lucky.ConsumeAck.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.InviteGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.InviteGet.toObject(opt_includeInstance, this);
        };
        proto.Lucky.InviteGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                page: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                item: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.InviteGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.InviteGet;
        return proto.Lucky.InviteGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.InviteGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setItem(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.InviteGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.InviteGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.InviteGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getItem();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Lucky.InviteGet.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.InviteGet.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.InviteGet.prototype.getItem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Lucky.InviteGet.prototype.setItem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Lucky.InviteAck.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Lucky.InviteAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Lucky.InviteAck.toObject(opt_includeInstance, this);
        };
        proto.Lucky.InviteAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                page: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                item: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                vecusersList: googleProtobuf.Message.toObjectList(msg.getVecusersList(), OutInvite_pb.Bind.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Lucky.InviteAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Lucky.InviteAck;
        return proto.Lucky.InviteAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Lucky.InviteAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setPage(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItem(value);
                    break;
                case 11:
                    var value = new OutInvite_pb.Bind;
                    reader.readMessage(value, OutInvite_pb.Bind.deserializeBinaryFromReader);
                    msg.addVecusers(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Lucky.InviteAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Lucky.InviteAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Lucky.InviteAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPage();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItem();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getVecusersList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, OutInvite_pb.Bind.serializeBinaryToWriter);
        }
    };
    proto.Lucky.InviteAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Lucky.InviteAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Lucky.InviteAck.prototype.getPage = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Lucky.InviteAck.prototype.setPage = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Lucky.InviteAck.prototype.getItem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Lucky.InviteAck.prototype.setItem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Lucky.InviteAck.prototype.getVecusersList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, OutInvite_pb.Bind, 11));
    };
    proto.Lucky.InviteAck.prototype.setVecusersList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.Lucky.InviteAck.prototype.addVecusers = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Invite.Bind, opt_index);
    };
    proto.Lucky.InviteAck.prototype.clearVecusersList = function () {
        return this.setVecusersList([]);
    };
    goog.object.extend(exports, proto.Lucky);

    });
    var Lucky_pb_1 = Lucky_pb.LuckyGet;
    var Lucky_pb_2 = Lucky_pb.LuckyAck;
    var Lucky_pb_3 = Lucky_pb.ConsumeGet;
    var Lucky_pb_4 = Lucky_pb.ConsumeAck;
    var Lucky_pb_5 = Lucky_pb.Lucky;
    var Lucky_pb_6 = Lucky_pb.Task;
    var Lucky_pb_7 = Lucky_pb.AwardsNoti;
    var Lucky_pb_8 = Lucky_pb.ClientGet;
    var Lucky_pb_9 = Lucky_pb.ClinetAck;
    var Lucky_pb_10 = Lucky_pb.TaskGet;
    var Lucky_pb_11 = Lucky_pb.TaskAck;
    var Lucky_pb_12 = Lucky_pb.AwardGet;
    var Lucky_pb_13 = Lucky_pb.AwardAck;

    var Aggrg_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Activs_pb);
    goog.exportSymbol('proto.Aggrg.AggInfo', null, global);
    goog.exportSymbol('proto.Aggrg.AwardAck', null, global);
    goog.exportSymbol('proto.Aggrg.AwardGet', null, global);
    goog.exportSymbol('proto.Aggrg.InfoAck', null, global);
    goog.exportSymbol('proto.Aggrg.InfoGet', null, global);
    goog.exportSymbol('proto.Aggrg.SubChange', null, global);
    proto.Aggrg.AggInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Aggrg.AggInfo.repeatedFields_, null);
    };
    goog.inherits(proto.Aggrg.AggInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Aggrg.AggInfo.displayName = 'proto.Aggrg.AggInfo';
    }
    proto.Aggrg.InfoGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Aggrg.InfoGet.repeatedFields_, null);
    };
    goog.inherits(proto.Aggrg.InfoGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Aggrg.InfoGet.displayName = 'proto.Aggrg.InfoGet';
    }
    proto.Aggrg.InfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Aggrg.InfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Aggrg.InfoAck.displayName = 'proto.Aggrg.InfoAck';
    }
    proto.Aggrg.AwardGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Aggrg.AwardGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Aggrg.AwardGet.displayName = 'proto.Aggrg.AwardGet';
    }
    proto.Aggrg.AwardAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Aggrg.AwardAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Aggrg.AwardAck.displayName = 'proto.Aggrg.AwardAck';
    }
    proto.Aggrg.SubChange = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Aggrg.SubChange, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Aggrg.SubChange.displayName = 'proto.Aggrg.SubChange';
    }
    proto.Aggrg.AggInfo.repeatedFields_ = [12];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Aggrg.AggInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Aggrg.AggInfo.toObject(opt_includeInstance, this);
        };
        proto.Aggrg.AggInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                aggid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                dayall: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                daycur: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                daycnt: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                lasttime: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                inittime: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                procur: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                active: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), Activs_pb.ActiItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Aggrg.AggInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Aggrg.AggInfo;
        return proto.Aggrg.AggInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Aggrg.AggInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setAggid(value);
                    break;
                case 3:
                    var value = (reader.readSint64());
                    msg.setDayall(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setDaycur(value);
                    break;
                case 5:
                    var value = (reader.readSint64());
                    msg.setDaycnt(value);
                    break;
                case 6:
                    var value = (reader.readSint64());
                    msg.setLasttime(value);
                    break;
                case 7:
                    var value = (reader.readSint64());
                    msg.setInittime(value);
                    break;
                case 8:
                    var value = (reader.readSint64());
                    msg.setProcur(value);
                    break;
                case 9:
                    var value = (reader.readSint64());
                    msg.setActive(value);
                    break;
                case 12:
                    var value = new Activs_pb.ActiItem;
                    reader.readMessage(value, Activs_pb.ActiItem.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Aggrg.AggInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Aggrg.AggInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Aggrg.AggInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getAggid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getDayall();
        if (f !== 0) {
            writer.writeSint64(3, f);
        }
        f = message.getDaycur();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getDaycnt();
        if (f !== 0) {
            writer.writeSint64(5, f);
        }
        f = message.getLasttime();
        if (f !== 0) {
            writer.writeSint64(6, f);
        }
        f = message.getInittime();
        if (f !== 0) {
            writer.writeSint64(7, f);
        }
        f = message.getProcur();
        if (f !== 0) {
            writer.writeSint64(8, f);
        }
        f = message.getActive();
        if (f !== 0) {
            writer.writeSint64(9, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(12, f, Activs_pb.ActiItem.serializeBinaryToWriter);
        }
    };
    proto.Aggrg.AggInfo.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Aggrg.AggInfo.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Aggrg.AggInfo.prototype.getAggid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Aggrg.AggInfo.prototype.setAggid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Aggrg.AggInfo.prototype.getDayall = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Aggrg.AggInfo.prototype.setDayall = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Aggrg.AggInfo.prototype.getDaycur = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Aggrg.AggInfo.prototype.setDaycur = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Aggrg.AggInfo.prototype.getDaycnt = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Aggrg.AggInfo.prototype.setDaycnt = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Aggrg.AggInfo.prototype.getLasttime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Aggrg.AggInfo.prototype.setLasttime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Aggrg.AggInfo.prototype.getInittime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Aggrg.AggInfo.prototype.setInittime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Aggrg.AggInfo.prototype.getProcur = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Aggrg.AggInfo.prototype.setProcur = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Aggrg.AggInfo.prototype.getActive = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Aggrg.AggInfo.prototype.setActive = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Aggrg.AggInfo.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, Activs_pb.ActiItem, 12));
    };
    proto.Aggrg.AggInfo.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 12, value);
    };
    proto.Aggrg.AggInfo.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.Activs.ActiItem, opt_index);
    };
    proto.Aggrg.AggInfo.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    proto.Aggrg.InfoGet.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Aggrg.InfoGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Aggrg.InfoGet.toObject(opt_includeInstance, this);
        };
        proto.Aggrg.InfoGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                aggidList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
                adid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                channel: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Aggrg.InfoGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Aggrg.InfoGet;
        return proto.Aggrg.InfoGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Aggrg.InfoGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readPackedSint32());
                    msg.setAggidList(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setAdid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setChannel(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Aggrg.InfoGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Aggrg.InfoGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Aggrg.InfoGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAggidList();
        if (f.length > 0) {
            writer.writePackedSint32(1, f);
        }
        f = message.getAdid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getChannel();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
    };
    proto.Aggrg.InfoGet.prototype.getAggidList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 1));
    };
    proto.Aggrg.InfoGet.prototype.setAggidList = function (value) {
        return googleProtobuf.Message.setField(this, 1, value || []);
    };
    proto.Aggrg.InfoGet.prototype.addAggid = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.Aggrg.InfoGet.prototype.clearAggidList = function () {
        return this.setAggidList([]);
    };
    proto.Aggrg.InfoGet.prototype.getAdid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Aggrg.InfoGet.prototype.setAdid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Aggrg.InfoGet.prototype.getChannel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Aggrg.InfoGet.prototype.setChannel = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Aggrg.InfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Aggrg.InfoAck.toObject(opt_includeInstance, this);
        };
        proto.Aggrg.InfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                infosMap: (f = msg.getInfosMap()) ? f.toObject(includeInstance, proto.Aggrg.AggInfo.toObject) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Aggrg.InfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Aggrg.InfoAck;
        return proto.Aggrg.InfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Aggrg.InfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 11:
                    var value = msg.getInfosMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.Aggrg.AggInfo.deserializeBinaryFromReader, 0, new proto.Aggrg.AggInfo());
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Aggrg.InfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Aggrg.InfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Aggrg.InfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getInfosMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.Aggrg.AggInfo.serializeBinaryToWriter);
        }
    };
    proto.Aggrg.InfoAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Aggrg.InfoAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Aggrg.InfoAck.prototype.getInfosMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, proto.Aggrg.AggInfo));
    };
    proto.Aggrg.InfoAck.prototype.clearInfosMap = function () {
        this.getInfosMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Aggrg.AwardGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Aggrg.AwardGet.toObject(opt_includeInstance, this);
        };
        proto.Aggrg.AwardGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                aggid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Aggrg.AwardGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Aggrg.AwardGet;
        return proto.Aggrg.AwardGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Aggrg.AwardGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAggid(value);
                    break;
                case 11:
                    var value = msg.getParamsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readString, null, "", "");
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Aggrg.AwardGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Aggrg.AwardGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Aggrg.AwardGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAggid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getParamsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(11, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeString);
        }
    };
    proto.Aggrg.AwardGet.prototype.getAggid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Aggrg.AwardGet.prototype.setAggid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Aggrg.AwardGet.prototype.getParamsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 11, opt_noLazyCreate, null));
    };
    proto.Aggrg.AwardGet.prototype.clearParamsMap = function () {
        this.getParamsMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Aggrg.AwardAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Aggrg.AwardAck.toObject(opt_includeInstance, this);
        };
        proto.Aggrg.AwardAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                aggid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                award: (f = msg.getAward()) && Activs_pb.ActiItem.toObject(includeInstance, f),
                paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, undefined) : []
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Aggrg.AwardAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Aggrg.AwardAck;
        return proto.Aggrg.AwardAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Aggrg.AwardAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setAggid(value);
                    break;
                case 11:
                    var value = new Activs_pb.ActiItem;
                    reader.readMessage(value, Activs_pb.ActiItem.deserializeBinaryFromReader);
                    msg.setAward(value);
                    break;
                case 12:
                    var value = msg.getParamsMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readString, null, "", "");
                    });
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Aggrg.AwardAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Aggrg.AwardAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Aggrg.AwardAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAggid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getAward();
        if (f != null) {
            writer.writeMessage(11, f, Activs_pb.ActiItem.serializeBinaryToWriter);
        }
        f = message.getParamsMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(12, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeString);
        }
    };
    proto.Aggrg.AwardAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Aggrg.AwardAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Aggrg.AwardAck.prototype.getAggid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Aggrg.AwardAck.prototype.setAggid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Aggrg.AwardAck.prototype.getAward = function () {
        return (googleProtobuf.Message.getWrapperField(this, Activs_pb.ActiItem, 11));
    };
    proto.Aggrg.AwardAck.prototype.setAward = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.Aggrg.AwardAck.prototype.clearAward = function () {
        return this.setAward(undefined);
    };
    proto.Aggrg.AwardAck.prototype.hasAward = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    proto.Aggrg.AwardAck.prototype.getParamsMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 12, opt_noLazyCreate, null));
    };
    proto.Aggrg.AwardAck.prototype.clearParamsMap = function () {
        this.getParamsMap().clear();
        return this;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Aggrg.SubChange.prototype.toObject = function (opt_includeInstance) {
            return proto.Aggrg.SubChange.toObject(opt_includeInstance, this);
        };
        proto.Aggrg.SubChange.toObject = function (includeInstance, msg) {
            var f, obj = {
                info: (f = msg.getInfo()) && proto.Aggrg.AggInfo.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Aggrg.SubChange.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Aggrg.SubChange;
        return proto.Aggrg.SubChange.deserializeBinaryFromReader(msg, reader);
    };
    proto.Aggrg.SubChange.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Aggrg.AggInfo;
                    reader.readMessage(value, proto.Aggrg.AggInfo.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Aggrg.SubChange.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Aggrg.SubChange.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Aggrg.SubChange.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(1, f, proto.Aggrg.AggInfo.serializeBinaryToWriter);
        }
    };
    proto.Aggrg.SubChange.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Aggrg.AggInfo, 1));
    };
    proto.Aggrg.SubChange.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 1, value);
    };
    proto.Aggrg.SubChange.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Aggrg.SubChange.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 1) != null;
    };
    goog.object.extend(exports, proto.Aggrg);

    });
    var Aggrg_pb_1 = Aggrg_pb.AggInfo;
    var Aggrg_pb_2 = Aggrg_pb.InfoGet;
    var Aggrg_pb_3 = Aggrg_pb.InfoAck;
    var Aggrg_pb_4 = Aggrg_pb.AwardGet;
    var Aggrg_pb_5 = Aggrg_pb.AwardAck;
    var Aggrg_pb_6 = Aggrg_pb.SubChange;

    var ConnectStatus;
    (function (ConnectStatus) {
        ConnectStatus[ConnectStatus["IDLE"] = 0] = "IDLE";
        ConnectStatus[ConnectStatus["CONNECTING"] = 1] = "CONNECTING";
        ConnectStatus[ConnectStatus["CONNECTED"] = 2] = "CONNECTED";
        ConnectStatus[ConnectStatus["RECONNECT"] = 3] = "RECONNECT";
        ConnectStatus[ConnectStatus["FAILED"] = 4] = "FAILED";
        ConnectStatus[ConnectStatus["CLOSED"] = 5] = "CLOSED";
    })(ConnectStatus || (ConnectStatus = {}));
    class LobbySocket {
        constructor() {
            this.client = null;
            this._call = null;
            this.status = ConnectStatus.IDLE;
            this.retryTimes = 0;
            this.onDataCallback = null;
            this.onStatusCallback = null;
            this.onErrorCallback = null;
            this.onEndCallback = null;
            this._seq = 0;
            this.m_saveDatas = [];
            this.notiMap = new Map();
            this.initLobby();
            this.client = new Gate_grpc_web_pb_1(GlobalVariables.SERVER_URL);
            this.connect();
            this.syncTime();
            Laya.timer.loop(3600000, this, this.syncTime);
            if (DeviceData.getInstance().isNative) {
                window.document.addEventListener("network", (event) => {
                    CC.Log('DeviceData.getInstance().isNative network change: ' + event['code']);
                    EventManager.getInstance().emit(LobbyEvent.LOBBY_SERVER_DISCONNECT);
                    if (this.status == ConnectStatus.CONNECTED) {
                        this.cancelCall();
                        HeartManager.getInstance().stopHeartTimer();
                    }
                    if (event['code'] > 0 && this.status != ConnectStatus.CONNECTING) {
                        this.connect();
                    }
                }, false);
            }
        }
        connect() {
            this.cancelCall();
            HeartManager.getInstance().stopHeartTimer();
            this.status = ConnectStatus.CONNECTING;
            if (!GlobalData.getInstance().myPid || GlobalData.getInstance().myPid == 1) {
                return;
            }
            let delay = this._seq == 0 ? 0 : 2000;
            setTimeout(() => {
                CC.Log("try connect... status: ", this.status);
                let req = new Gate_pb_1();
                req.setNpid(GlobalData.getInstance().myPid);
                req.setStrticket(GlobalData.getInstance().myTicket);
                this._call = this.client.listenNotify(req);
                let self = this;
                let serial = this._seq++;
                this.onDataCallback = function (response) {
                    self.onReceviedData(response.getOpcode(), response.getMsg());
                };
                this.onStatusCallback = function (status) {
                    CC.Log('lobbySocket status = ' + JSON.stringify(status) + " serial: " + serial);
                };
                this.onErrorCallback = function (error) {
                    CC.Log('lobbySocket error = ' + error + " serial: " + serial);
                    UploadManager.getInstance().uploadError(JSON.stringify(error), "错误");
                    if (error.message.indexOf("-40002") >= 0) {
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NO_PLYINFO);
                        GlobalData.getInstance().lobbyScene.exitToLogin();
                        GlobalData.getInstance().loginScene.visible = true;
                    }
                    else {
                        self.onConnectErr();
                    }
                };
                this.onEndCallback = function () {
                    CC.Log('lobbySocket end' + " serial: " + serial);
                };
                this._call.on('data', this.onDataCallback);
                this._call.on('status', this.onStatusCallback);
                this._call.on('error', this.onErrorCallback);
                this._call.on('end', this.onEndCallback);
            }, delay);
        }
        cancelCall() {
            if (this._call) {
                this._call.removeListener('data', this.onDataCallback);
                this._call.removeListener('status', this.onStatusCallback);
                this._call.removeListener('error', this.onErrorCallback);
                this._call.removeListener('end', this.onEndCallback);
                this._call.cancel();
                this._call = null;
            }
        }
        onConnectErr(isHeartCheck = false) {
            if (isHeartCheck && this.status == ConnectStatus.CONNECTING) {
                return;
            }
            if (this.status == ConnectStatus.IDLE) {
                PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [WARNING.NETWORK_EXCEPTION], Laya.stage, STAGE_Z_ORDER.POPUP);
            }
            else if (this.status == ConnectStatus.CONNECTED) {
                EventManager.getInstance().emit(LobbyEvent.LOBBY_SERVER_DISCONNECT);
                CC.Log('lobbySocket start reconnect');
                this.retryTimes = 0;
                this.connect();
            }
            else if (this.status == ConnectStatus.CONNECTING) {
                if (this.retryTimes < 30) {
                    this.status = ConnectStatus.RECONNECT;
                    this.retryTimes++;
                    this.connect();
                    CC.Log('lobbySocket start try again');
                }
                else {
                    this.status = ConnectStatus.FAILED;
                    EventManager.getInstance().emit(LobbyEvent.LOBBY_SERVER_CONNECT_FAILED);
                }
            }
            else {
                CC.Log("onConnectErr status:", this.status);
            }
        }
        syncTime() {
            let req = new Gate_pb_3();
            req.setNclienttime(Date.now());
            this.client.syncTime(req, null, (err, resp) => {
                if (err != null) {
                    CC.Loge(err);
                    return;
                }
                let now = Date.now();
                GlobalData.getInstance().serverTimeDelta = (now + resp.getNclienttime()) / 2 - resp.getNservertime();
            });
        }
        qRCode(url, size, callback) {
            let req = new Gate_pb_5();
            req.setUrl(url);
            req.setSize(size);
            this.client.qRCode(req, null, (err, resp) => {
                if (err != null) {
                    callback(null);
                    return;
                }
                callback(resp.getResult());
            });
        }
        sendMarkLogGet(__logType, __msg) {
            __msg = __msg || "";
            let myVipLv = VipManager.getInstance().playerVipInfo.nVipLevel;
            __msg += " VIP: " + myVipLv;
            let nowT = Math.floor(new Date().getTime() / 1000);
            let sourceID = 0;
            if (DeviceData.getInstance().isAndroid) {
                sourceID = GlobalVariables.SOURCE_ID_ANDROID;
            }
            else if (DeviceData.getInstance().isIOS) {
                sourceID = GlobalVariables.SOURCE_ID_IOS;
            }
            else {
                sourceID = GlobalVariables.SOURCE_ID_H5;
            }
            let mac = GameStorage.getGuestAccount();
            if (mac == "") {
                mac = DeviceData.getInstance().GetDeviceID();
            }
            let req = new Gate_pb_7();
            req.setPid(GlobalData.getInstance().myPid);
            req.setLogtype(__logType);
            req.setMessage(__msg);
            req.setAppid(Number(GlobalVariables.APP_ID));
            req.setUptime(nowT);
            req.setPlatform(sourceID);
            req.setGameid(GlobalVariables.GAME_ID_MJ_XLMJ);
            req.setStrip(GlobalVariables.G_MY_IP);
            req.setStrmac(mac);
            CC.Log("sendMarkLogGet ID = " + __logType + " msg = ", __msg);
            this.client.markLog(req, null, (err, resp) => {
                CC.Log("sendMarkLogGet ack = ", err, resp);
                if (err != null) {
                    return;
                }
            });
        }
        guestLogin(callback) {
            let req = new Gate_pb_9();
            let mac = GameStorage.getGuestAccount();
            if (mac == "") {
                mac = DeviceData.getInstance().GetDeviceID();
            }
            if (DeviceData.getInstance().isIOS) {
                req.setChannel(GlobalVariables.SOURCE_ID_IOS + "");
            }
            else if (DeviceData.getInstance().isAndroid) {
                req.setChannel(GlobalVariables.SOURCE_ID_ANDROID + "");
            }
            else {
                req.setChannel(GlobalVariables.SOURCE_ID_H5 + "");
            }
            req.setAddr(mac);
            req.setIp(GlobalVariables.G_MY_IP);
            this.client.guest(req, null, (err, ack) => {
                if (err || (ack && ack.getNpid() === 0)) {
                    CC.Loge("GuestGet fail" + JSON.stringify(err));
                    callback(false);
                    return;
                }
                else {
                    CC.Log("GuestGet  ack ==> ", ack.toObject());
                    let pid = ack.getNpid();
                    GameStorage.saveGuestAccount(mac);
                    GlobalData.getInstance().myPid = pid;
                    GlobalData.getInstance().myTicket = ack.getStrticket();
                    GlobalData.getInstance().baseMeta = { "ticket": GlobalData.getInstance().myPid + "_" + GlobalData.getInstance().myTicket };
                    this.sendMarkLogGet(MARK_LOG.LOG_1001);
                    callback(ack);
                }
            });
        }
        onReceviedData(opcode, data) {
            CC.Log("大厅服务器收到消息 _opcode = " + opcode);
            if (this.notiMap.has(opcode)) {
                this.notiMap.get(opcode)(data);
            }
            if (opcode == Opcode.MatchUpdateNoti ||
                opcode == Opcode.MatchEndNoti) {
                this.saveGameDatas(opcode, data);
            }
        }
        cleanSaveDatas() {
            this.m_saveDatas = [];
        }
        saveGameDatas(opcode, data) {
            if (!window.G_GameScene || !window.G_GameScene.m_gameLogic) {
                this.m_saveDatas[this.m_saveDatas.length] = [opcode, data];
            }
        }
        onReSendSaveDatas() {
            for (let i = 0; i < this.m_saveDatas.length; i++) {
                let elem = this.m_saveDatas[i];
                let opcode = elem[0];
                let data = elem[1];
                if (this.notiMap.has(opcode)) {
                    this.notiMap.get(opcode)(data);
                }
            }
        }
        registerNotify(opcode, classType, callback) {
            if (this.notiMap.has(opcode)) {
                CC.Loge("opcode %d duplicate register", opcode);
                return;
            }
            this.notiMap.set(opcode, (msg) => {
                if (msg) {
                    CC.Log("msg type url", msg.getTypeUrl());
                    callback(msg.unpack(classType.deserializeBinary, msg.getTypeName()));
                }
                else {
                    callback(null);
                }
            });
        }
        initLobby() {
            this.registerNotify(Common_pb_2.IM_LOGIN_NOTI, Login_pb_1, this.onIMLoginNoti);
            this.registerNotify(Common_pb_2.NOTIFY_UNKNOWN, null, this.onHeartBeatNoti);
            this.registerNotify(Common_pb_2.LOGIN_NOTI, null, this.onLoginSuccess.bind(this));
            this.registerNotify(Common_pb_2.CY_CURRENCY_CHANGE_NOTI, Currency_pb_9, this.onCurrencyChange);
            this.registerNotify(Common_pb_2.MAIL_INFO_NOTI, Mail_pb_3, this.onMailInfoNoti);
            this.registerNotify(Common_pb_2.TASK_UPDATE_NOTI, Task_pb_3, this.onTaskUpdateNoti);
            this.registerNotify(Common_pb_2.KICKOUT_NOTI, Common_pb_3, this.onKickoutNoti.bind(this));
            this.registerNotify(Common_pb_2.STORE_ORDER_COMPLETE, Common_pb_4, this.onStoreOrderComplete);
            this.registerNotify(Common_pb_2.AWARD_INFO_NOTI, AwardService_pb_5, this.onGetAwardSuccess);
            this.registerNotify(Common_pb_2.TASK_COMPLETE_NOTI, Task_pb_4, this.onTaskCompleteNoti);
            this.registerNotify(Common_pb_2.ROULETTE_INFO_NOTI, LuckyRoulette_pb_3, this.onTurnTableNoti);
            this.registerNotify(Common_pb_2.BULLETIN_NOTI, Bulletin_pb_1, this.onBulletinNoti);
            this.registerNotify(Common_pb_2.VIP_INFO_NOTI, Vip_pb_3, this.onVipInfoNoti);
            this.registerNotify(Opcode.MatchUpdateNoti, Match_pb_5, this.onMatchUpdateNoti);
            this.registerNotify(Opcode.MatchTableNotify, Match_pb_6, this.onMatchTableNotify);
            this.registerNotify(Opcode.MatchOverNoti, Match_pb_7, this.onMatchOverNoti);
            this.registerNotify(Opcode.MatchEndNoti, connectisland_pb_5, this.onMatchEndNoti);
            this.registerNotify(Opcode.ThirdListRefreshNoti, Third_pb_8, this.onThirdListRefreshNoti);
        }
        onIMLoginNoti(noti) {
            let type = noti.getType();
            let datas = noti.getDatas();
            let res = null;
            if (type == "Activs.Info") {
                res = Activs_pb_1.deserializeBinary(datas);
                ActivsService.getInstance().m_info = res;
            }
            else if (type == "Bulletin.Info") {
            }
            else if (type == "Lucky.Lucky") {
                res = Lucky_pb_5.deserializeBinary(datas);
            }
            else if (type == "Lucky.Task") {
                res = Lucky_pb_6.deserializeBinary(datas);
            }
            else if (type == "Gate.LoginAck") {
                let res = Gate_pb_8.deserializeBinary(datas);
                let country = res.getCountry();
                DeviceData.getInstance().JLog("onLoginSuccess country = " + country);
                if (country == "vi" || country == "ru" || country == "in") {
                    GlobalVariables.IS_VERIFY = false;
                }
            }
            else if (type == "Lucky.AwardsNoti") {
                res = Lucky_pb_7.deserializeBinary(datas);
            }
            else if (type == "Aggrg.AggInfo") {
                res = Aggrg_pb_1.deserializeBinary(datas);
            }
            EventManager.getInstance().emit(LobbyEvent.IM_LOGIN_NOTI, [type, res]);
        }
        onHeartBeatNoti() {
            HeartManager.getInstance().resetHeartTimer();
        }
        lobbyStatus() {
            return this.status;
        }
        onLoginSuccess() {
            GlobalData.getInstance().loadingAni.Close(WARNING.NET_RECONNECT_SUC);
            this.status = ConnectStatus.CONNECTED;
            HeartManager.getInstance().resetHeartTimer();
            EventManager.getInstance().emit(LobbyEvent.LOGIN_SUCCESS);
        }
        onCurrencyChange(data) {
            EventManager.getInstance().emit(LobbyEvent.CURRENCY_CHANGE_NOTI, [data]);
        }
        onMatchUpdateNoti(data) {
            return __awaiter(this, void 0, void 0, function* () {
                CC.Log("onMatchUpdateNoti  = " + JSON.stringify(data.toObject()));
                let table = data.getTable();
                if (table && table.getOwner() != 0) {
                    let mkRule = table.getRule();
                    if (mkRule && mkRule.getRoomid() && mkRule.getRoomid() != '') {
                        DataMatch.getInstance().m_gameTable = table;
                        let users = table.getUsersMap();
                        let tmpArr = [];
                        users.forEach((pid, chair) => {
                            tmpArr[tmpArr.length] = pid;
                        });
                        let charge = table.getChargeMap();
                        DataMatch.getInstance().setChargeUser(charge);
                        if (window.G_PokerMgr) {
                            let curRound = table.getNumcur() || 0;
                            window.G_PokerMgr.setCurRound(curRound);
                            let state = table.getStatus();
                            window.G_PokerMgr.setTblStatus(state);
                            let plyNum = table.getNumply();
                            window.G_PokerMgr.setPlyNum(plyNum);
                        }
                        DataMatch.getInstance().m_dissolve = table.getCancelMap();
                        let mypid = GlobalData.getInstance().myPid;
                        if (Array.from(users.values()).includes(mypid)) {
                            if (!LobbyDefine$1.isMiniGame(table.getGameid())) {
                                DataMatch.getInstance().addPlayer(tmpArr);
                            }
                            EventManager.getInstance().emit(LobbyEvent.MATCH_UPDATE_NOTI, [data]);
                        }
                        else {
                            if (window.G_GameScene) {
                                window.G_GameScene.goFinishUIExit();
                            }
                        }
                    }
                }
                else {
                    CC.Loge("onMatchUpdateNoti no table data!!!!!!");
                }
            });
        }
        onMatchTableNotify(data) {
            CC.Log("onMatchTableNotify  = " + JSON.stringify(data.toObject()));
            DataMatch.getInstance().m_tableInfo = data.getSttable();
            let players = data.getSttable().getArrplayersList();
            let table = data.getTable();
            if (!LobbyDefine$1.isMiniGame(table.getGameid())) {
                DataMatch.getInstance().addPlayer(players);
            }
            if (table) {
                table.setStatus(3);
                DataMatch.getInstance().m_gameTable = table;
                if (window.G_PokerMgr) {
                    window.G_PokerMgr.setTableData(table);
                }
                let charge = table.getChargeMap();
                DataMatch.getInstance().setChargeUser(charge);
                DataMatch.getInstance().m_dissolve = table.getCancelMap();
            }
            EventManager.getInstance().emit(LobbyEvent.MATCH_TABLE_NOTI, [data]);
        }
        onMatchOverNoti(data) {
            CC.Log('匹配的游戏已经结束: ' + JSON.stringify(data));
            DataMatch.getInstance().m_tableInfo = null;
            EventManager.getInstance().emit(LobbyEvent.MATCH_OVER_NOTI, [data]);
        }
        onMatchEndNoti(data) {
            let plys = data.getPlayersList();
            if (plys) {
                for (let i = 0; i < plys.length; i++) {
                    let plyInfo = plys[i];
                    let pid = plyInfo.getClientId();
                    DataMatch.getInstance().m_overScore[pid] = plyInfo.getScore();
                }
            }
        }
        onThirdListRefreshNoti(data) {
            EventManager.getInstance().emit(LobbyEvent.THIRD_LIST_REFRESH_NOTI, [data]);
        }
        onMailInfoNoti(data) {
            EventManager.getInstance().emit(LobbyEvent.MAIL_INFO_NOTI, [data]);
        }
        onTaskUpdateNoti(data) {
            EventManager.getInstance().emit(LobbyEvent.TASK_UPDATE_NOTI, [data]);
        }
        onKickoutNoti(data) {
            this.status = ConnectStatus.CLOSED;
            EventManager.getInstance().emit(LobbyEvent.KICK_OUT_NOTI, [data]);
        }
        onStoreOrderComplete(data) {
            EventManager.getInstance().emit(LobbyEvent.STORE_ORDER_COMPLETE, [data]);
        }
        onGetAwardSuccess(data) {
            EventManager.getInstance().emit(LobbyEvent.GET_AWARD_SUCCESS, [data]);
        }
        onTaskCompleteNoti(data) {
            EventManager.getInstance().emit(LobbyEvent.COMPLETE_TASK_NOTI, [data]);
        }
        onTurnTableNoti(data) {
            EventManager.getInstance().emit(LobbyEvent.TURN_TABLE_NOTI, [data]);
        }
        onBulletinNoti(data) {
            if (!GlobalVariables.IS_VERIFY) {
                BulletinManager.getInstance().addBulletin(data);
            }
        }
        onVipInfoNoti(p_data) {
            VipManager.getInstance().setPlayerVipInfo(p_data);
            AFUtil.reportVipLVAndPay();
            AFUtil.reportBetValue();
        }
        existToLogin() {
            Laya.timer.clear(this, this.syncTime);
            this.cancelCall();
            HeartManager.getInstance().stopHeartTimer();
            this._seq = 0;
            GlobalData.getInstance().lobbySocket = null;
        }
    }

    const grpc$d = {};
    grpc$d.web = grpcWeb;

    const proto$e = {};
    proto$e.Third = Third_pb;
    proto$e.Third.ThirdServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$d.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$e.Third.ThirdServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$d.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_ThirdService_Query = new grpc$d.web.MethodDescriptor('/Third.ThirdService/Query', grpc$d.web.MethodType.UNARY, proto$e.Third.QueryGet, proto$e.Third.QueryAck, function (request) {
        return request.serializeBinary();
    }, proto$e.Third.QueryAck.deserializeBinary);
    proto$e.Third.ThirdServiceClient.prototype.query =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Third.ThirdService/Query', request, metadata || {}, methodDescriptor_ThirdService_Query, callback);
        };
    proto$e.Third.ThirdServicePromiseClient.prototype.query =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Third.ThirdService/Query', request, metadata || {}, methodDescriptor_ThirdService_Query);
        };
    const methodDescriptor_ThirdService_Enter = new grpc$d.web.MethodDescriptor('/Third.ThirdService/Enter', grpc$d.web.MethodType.UNARY, proto$e.Third.EnterGet, proto$e.Third.EnterAck, function (request) {
        return request.serializeBinary();
    }, proto$e.Third.EnterAck.deserializeBinary);
    proto$e.Third.ThirdServiceClient.prototype.enter =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Third.ThirdService/Enter', request, metadata || {}, methodDescriptor_ThirdService_Enter, callback);
        };
    proto$e.Third.ThirdServicePromiseClient.prototype.enter =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Third.ThirdService/Enter', request, metadata || {}, methodDescriptor_ThirdService_Enter);
        };
    const methodDescriptor_ThirdService_Refresh = new grpc$d.web.MethodDescriptor('/Third.ThirdService/Refresh', grpc$d.web.MethodType.UNARY, proto$e.Third.RefreshGet, proto$e.Third.RefreshAck, function (request) {
        return request.serializeBinary();
    }, proto$e.Third.RefreshAck.deserializeBinary);
    proto$e.Third.ThirdServiceClient.prototype.refresh =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Third.ThirdService/Refresh', request, metadata || {}, methodDescriptor_ThirdService_Refresh, callback);
        };
    proto$e.Third.ThirdServicePromiseClient.prototype.refresh =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Third.ThirdService/Refresh', request, metadata || {}, methodDescriptor_ThirdService_Refresh);
        };
    const methodDescriptor_ThirdService_Valid = new grpc$d.web.MethodDescriptor('/Third.ThirdService/Valid', grpc$d.web.MethodType.UNARY, proto$e.Third.ValidGet, proto$e.Third.ValidAck, function (request) {
        return request.serializeBinary();
    }, proto$e.Third.ValidAck.deserializeBinary);
    proto$e.Third.ThirdServiceClient.prototype.valid =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Third.ThirdService/Valid', request, metadata || {}, methodDescriptor_ThirdService_Valid, callback);
        };
    proto$e.Third.ThirdServicePromiseClient.prototype.valid =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Third.ThirdService/Valid', request, metadata || {}, methodDescriptor_ThirdService_Valid);
        };
    const methodDescriptor_ThirdService_CyRank = new grpc$d.web.MethodDescriptor('/Third.ThirdService/CyRank', grpc$d.web.MethodType.UNARY, proto$e.Third.CyRankGet, proto$e.Third.CyRankAck, function (request) {
        return request.serializeBinary();
    }, proto$e.Third.CyRankAck.deserializeBinary);
    proto$e.Third.ThirdServiceClient.prototype.cyRank =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Third.ThirdService/CyRank', request, metadata || {}, methodDescriptor_ThirdService_CyRank, callback);
        };
    proto$e.Third.ThirdServicePromiseClient.prototype.cyRank =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Third.ThirdService/CyRank', request, metadata || {}, methodDescriptor_ThirdService_CyRank);
        };
    var Third_grpc_web_pb = proto$e.Third;
    var Third_grpc_web_pb_1 = Third_grpc_web_pb.ThirdServicePromiseClient;

    class ThirdGameService extends Singleton {
        constructor() {
            super();
            this.m_taxRate = 3;
            this.tienLenService = null;
            this.tienLenService = new Third_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        queryGame(type, source) {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let request = new Third_pb_2();
                    request.setType(type);
                    request.setSource(source);
                    let queryGameAck = yield this.tienLenService.query(request);
                    if (queryGameAck) {
                        this.m_taxRate = queryGameAck.getTaxrate();
                    }
                    return queryGameAck.getListsMap();
                }
                catch (error) {
                    CC.Loge("queryGame::error ", error);
                }
                return null;
            });
        }
        enterGame(gameId, name, source, lang) {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let request = new Third_pb_4();
                    request.setGameid(gameId);
                    request.setName(name);
                    request.setSource(source);
                    request.setIp(GlobalVariables.G_MY_IP);
                    if (lang) {
                        request.setLang(lang);
                    }
                    let enterGameAck = yield this.tienLenService.enter(request, GlobalData.getInstance().baseMeta);
                    return enterGameAck;
                }
                catch (error) {
                    CC.Loge("queryGame::error ", error);
                }
                return null;
            });
        }
        refreshCy() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    GlobalData.getInstance().loadingAni.Show("");
                    let request = new Third_pb_6();
                    let refreshCyAck = yield this.tienLenService.refresh(request, GlobalData.getInstance().baseMeta);
                    if (refreshCyAck.getCret() != 0) {
                        let msg = WARNING.REQUEST_FAIL;
                        if (refreshCyAck.getCret() == -1) {
                            if (refreshCyAck.getCode() == 0 || refreshCyAck.getCode() == 200) {
                                msg = WARNING.SERVER_BUSY;
                            }
                            else if (refreshCyAck.getCode() != 200) {
                                msg = WARNING.SERVER_MAINTAIN;
                            }
                        }
                        let exitHandler = Laya.Handler.create(this, (yes) => __awaiter(this, void 0, void 0, function* () { }));
                        PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [msg, MSG_TYPE.NORMAL, exitHandler], Laya.stage);
                        return null;
                    }
                    return refreshCyAck;
                }
                catch (error) {
                    CC.Loge("refreshCyGet::error ", error);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
                return null;
            });
        }
        valid() {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Third_pb_9();
                request.setPid(GlobalData.getInstance().myPid);
                let ack = yield this.tienLenService.valid(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
    }

    var SIDE_ITEM;
    (function (SIDE_ITEM) {
        SIDE_ITEM[SIDE_ITEM["RECOMMEND"] = 0] = "RECOMMEND";
        SIDE_ITEM[SIDE_ITEM["DISCOUNT"] = 1] = "DISCOUNT";
        SIDE_ITEM[SIDE_ITEM["PROP"] = 2] = "PROP";
        SIDE_ITEM[SIDE_ITEM["GOLD"] = 3] = "GOLD";
        SIDE_ITEM[SIDE_ITEM["DIAMOND"] = 4] = "DIAMOND";
        SIDE_ITEM[SIDE_ITEM["PEARL"] = 5] = "PEARL";
    })(SIDE_ITEM || (SIDE_ITEM = {}));
    var REFRESH_ORDER;
    (function (REFRESH_ORDER) {
        REFRESH_ORDER[REFRESH_ORDER["ONE_BUY"] = 0] = "ONE_BUY";
        REFRESH_ORDER[REFRESH_ORDER["DISCOUNT"] = 1] = "DISCOUNT";
        REFRESH_ORDER[REFRESH_ORDER["DIAMOND"] = 2] = "DIAMOND";
    })(REFRESH_ORDER || (REFRESH_ORDER = {}));
    class Shop extends Laya.Box {
        constructor() {
            super();
            this.goldLabel = null;
            this.goodsListView = null;
            this.goodsListData = null;
            this.vnTypeList = ['momo', 'zalo', 'vietcombank', 'vietinbankipay', 'techcombank', 'bidv', 'mbbank'];
            this.vnType = this.vnTypeList[0];
            this.m_type = 0;
            this.m_curSel = -1;
            EventManager.getInstance().on(LobbyDefine.CURRENCY_CHANGE_NOTI, this, this.onCurrencyChange);
            EventManager.getInstance().on(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
            EventManager.getInstance().on(LobbyDefine.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().on(LobbyDefine.LOADED_USERINFO, this, this.onLoadedUserinfo);
        }
        onCurrencyChange(data) {
            if (data.getNtype() === Currency_pb_10.GAMEMONEY) {
                let strNum = window.formatNum(data.getNamount());
                this.goldLabel.text = strNum;
                this.initGoods();
                this.initVip();
            }
            else if (data.getNtype() == Currency_pb_10.ORB) {
            }
        }
        onStoreOrderComplete(data) {
            AFUtil.reportUserOrder();
            TopTipsManager.getInstance().showTopTips(WARNING.RECHARGE_SUCC);
        }
        onLoginSuccess() {
            if (this.visible) {
                if (!this.goodsListData || this.goodsListData.length == 0) {
                    this.initGoods();
                    this.initVip();
                }
            }
        }
        onLoadedUserinfo() {
        }
        Show(index) {
            if (!this.inited) {
                this.init();
            }
            else {
                if (!this.goodsListData || this.goodsListData.length == 0) {
                    this.initGoods();
                }
            }
            this.visible = true;
            this.m_type = index || 0;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            this.root.x = Laya.stage.width;
            Laya.Tween.to(this.root, { x: 0 }, 200, Laya.Ease.circOut);
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1009);
        }
        init() {
            this.visible = false;
            Shop.instance = this;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("closeBtn");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            this.goldLabel = window.findNodeByName(this.root, "num");
            let btnServer = window.findNodeByName(this.root, "goldBox");
            btnServer.on(Laya.Event.CLICK, this, this.onServer);
            this.inited = true;
            if (DeviceData.getInstance().isAndroidNotchScreen) {
            }
            this.goodsListView = this.root.getChildByName("goodsListView");
            this.goodsListView.array = [];
            this.goodsListView.hScrollBarSkin = "";
            this.goodsListView.vScrollBarSkin = "";
            this.goodsListView.renderHandler = new Laya.Handler(this, this.updateGoodsItem);
            this.goodsListView.selectHandler = new Laya.Handler(this, this.onItemGoodsSelect);
            this.btnSubmit = this.root.getChildByName("bottom").getChildByName("btnSubmit");
            this.btnSubmit.on(Laya.Event.MOUSE_DOWN, this, this.onBtnMomo);
            this.lblTotal = window.findNodeByName(this.root, "lblTotal");
            this.initData();
        }
        initData() {
            return __awaiter(this, void 0, void 0, function* () {
                this.initVip();
                GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
                if (yield this.isIosPay()) {
                    this.payType = Constants_pb_2.APPLE_PAY;
                }
                else {
                    this.payType = Constants_pb_2.EQS_PAY;
                }
                console.log("this.payType  ", this.payType);
                this.initGoods();
            });
        }
        isIosPay() {
            return __awaiter(this, void 0, void 0, function* () {
                return false;
            });
        }
        initGoods() {
            let category = this.payType == Constants_pb_2.APPLE_PAY ? 1026 : 1025;
            DataStore.getInstance().queryGoodsList(category, 1, 20, (res) => {
                GlobalData.getInstance().loadingAni.Close();
                if (null != res) {
                    let list = res.getMerchandiselistList();
                    list = list.filter(e => {
                        let attrObj = JSON.parse(e.getAttribute());
                        return !(attrObj["totalLimit"] == 1 && attrObj["uOrders"] == 1);
                    });
                    this.goodsListData = list;
                    this.initPay();
                }
            });
        }
        initVip() {
        }
        initPay() {
            if (null == this.goodsListData) {
                return;
            }
            this.goodsListView.dataSource = this.goodsListData;
            this.goodsListView.array = this.goodsListData;
            this.goodsListView.refresh();
        }
        onBtnMomo() {
            if (this.m_curItem) {
                this.recharge(this.m_curItem);
            }
        }
        updateGoodsItem(cell, index) {
            let item = this.goodsListView.dataSource[index];
            let attrObj = JSON.parse(item.getAttribute());
            window.InitialNode(cell);
            let nodeExtra = cell.nodeExtra;
            if (attrObj && attrObj["firstPayVIP"]) {
                nodeExtra.visible = true;
                let total = attrObj["giftTitle"] || 0;
                let extra = total - parseInt(item.getName());
                nodeExtra.imgExtra.lblExtra.text = attrObj["tag"] || "";
                nodeExtra.imgExtra1.lblExtra.text = "+" + extra + "trao";
            }
            else {
                nodeExtra.visible = false;
            }
            let amountLab = cell.getChildByName("amountLab");
            amountLab.text = item.getName();
            let priceLab = cell.getChildByName("priceLab");
            priceLab.text = (item.getPrice() / 100) + "";
        }
        checkLocalImageExist(url) {
            if (Laya.loader.getRes(url)) {
                if (Laya.loader.getRes(url) instanceof Laya.Texture) {
                    return true;
                }
            }
            return false;
        }
        onItemGoodsSelect(index) {
            if (index < 0)
                return;
            if (index == this.m_curSel) {
                return;
            }
            let item = this.goodsListData[index];
            this.m_curItem = item;
            let cell = this.goodsListView.getCell(index);
            if (cell && cell["imgBG"]) {
                cell["imgBG"].skin = "2d/ui/nShangcheng/btn_sc_kuang_xuanzhong.png";
            }
            if (this.m_curSel >= 0) {
                let oldCell = this.goodsListView.getCell(this.m_curSel);
                if (oldCell && oldCell["imgBG"]) {
                    oldCell["imgBG"].skin = "2d/ui/nShangcheng/SP_kuangjia.png";
                }
            }
            this.m_curSel = index;
            let attrObj = JSON.parse(item.getAttribute());
            window.InitialNode(cell);
            let total = (item.getPrice() / 100);
            if (attrObj && attrObj["giftTitle"]) {
                total = attrObj["giftTitle"];
                total /= 100;
                this.lblTotal.text = "R$ " + total;
            }
        }
        recharge(data) {
            GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
            let payType = this.payType;
            DataStore.getInstance().unifiedOrder(payType, data.getId(), data.getPrice(), data.getName(), (orderNo) => {
                if (orderNo) {
                    AFUtil.reportPurchase(data.getId(), orderNo, data.getPrice());
                }
                if (payType === Constants_pb_2.EQS_PAY) {
                    GlobalData.getInstance().loadingAni.Close();
                    return;
                }
                if (orderNo) {
                    if (DeviceData.getInstance().isIOS) {
                        DeviceData.getInstance().tsBridge.callWithBack((result) => {
                            CC.Log("onApplePayRequest callWithBack: " + result);
                            if (result == 'false') {
                                TopTipsManager.getInstance().showTopTips(WARNING.RECHARGE_FAIL);
                                GlobalData.getInstance().loadingAni.Close();
                                return;
                            }
                            DataStore.getInstance().verifyAppleOrder(orderNo, result, (orderNo1) => {
                                CC.Log("onApplePayRequest verifyAppleOrder: " + orderNo1);
                                GlobalData.getInstance().loadingAni.Close();
                                if (orderNo1) {
                                }
                            });
                        }, 'doApplePay:', data.getId());
                        return;
                    }
                    if (DeviceData.getInstance().isAndroid) {
                        let params = {
                            "orderNo": orderNo,
                            "goodsId": data.getId()
                        };
                        DeviceData.getInstance().tsBridge.callWithBack((result) => {
                            CC.Log("doGooglePay   ------->>  ", result);
                            let payResult = JSON.parse(result);
                            if (payResult['code'] < 0) {
                                TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                                GlobalData.getInstance().loadingAni.Close();
                                return;
                            }
                            DataStore.getInstance().verifyGoogleOrder(payResult["orderNo"], payResult["purchaseToken"], payResult["goodsId"], (orderNo) => {
                                CC.Log("doGooglePay verifyHWOrder: " + orderNo);
                                GlobalData.getInstance().loadingAni.Close();
                            });
                        }, 'doGooglePay', JSON.stringify(params));
                        return;
                    }
                    GlobalData.getInstance().loadingAni.Close();
                }
                else {
                    GlobalData.getInstance().loadingAni.Close();
                }
            }, null, this.vnType);
        }
        onServer() {
            GameAudio.getInstance().playClick();
            window.gotoService();
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            if (this.m_type == 1) {
                let document = Laya.Browser.window.document;
                document.getElementById("h5Div").style.display = "block";
                document.getElementById("ctrlDiv").style.display = "flex";
            }
            this.visible = false;
            Laya.timer.clearAll(this);
            PopupManager.Hide(PREFAB_LOBBY.SHOP);
        }
        onDestroy() {
            EventManager.getInstance().off(LobbyDefine.CURRENCY_CHANGE_NOTI, this, this.onCurrencyChange);
            EventManager.getInstance().off(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
            EventManager.getInstance().off(LobbyDefine.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().off(LobbyDefine.LOADED_USERINFO, this, this.onLoadedUserinfo);
        }
    }

    class Utils {
        constructor() {
            try {
                var os = window["conchConfig"].getOS();
            }
            catch (error) {
                CC.Loge("");
            }
        }
        getNetType() {
            let l_conch = Laya.Browser.window.conch;
            if (l_conch) {
                var l_nType = l_conch.config.getNetworkType();
                CC.Log("l_nType" + l_nType);
                switch (l_nType) {
                    case 0:
                        break;
                    case 1:
                        break;
                    case 2:
                        break;
                    case 3:
                        break;
                    case 4:
                        break;
                    case 5:
                        break;
                    default:
                        break;
                }
            }
        }
        static getNetworkType() {
            var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
            let effectiveType = "";
            if (connection && connection["effectiveType"]) {
                effectiveType = connection["effectiveType"];
            }
            var networkType;
            switch (effectiveType) {
                case 'wifi':
                    networkType = 'wifi';
                    break;
                case '5g':
                    networkType = '5g';
                    break;
                case '4g':
                    networkType = '4g';
                    break;
                case '3g':
                    networkType = '3g';
                    break;
                case '2g':
                case 'slow-2g':
                    networkType = '2g';
                    break;
                default:
                    networkType = 'unknown';
            }
            return networkType;
        }
        static getLangStr() {
            let lang = "pt";
            if (GlobalVariables.DEF_LANG == LANG_T.EN || GlobalVariables.DEF_LANG == LANG_T.IND) {
                lang = "en";
            }
            else if (GlobalVariables.DEF_LANG == LANG_T.RU) {
                lang = "ru";
            }
            return lang;
        }
    }

    class JieliGameView extends Laya.Script {
        constructor() {
            super();
            this.intType = 0;
            this.data = [];
            this.listView = null;
            this.selfVipLv = 0;
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().on(LobbyEvent.THIRD_LIST_REFRESH_NOTI, this, this.onThirdListRefresh);
            let playerInfo = VipManager.getInstance().playerVipInfo;
            if (playerInfo) {
                this.selfVipLv = playerInfo.nVipLevel;
            }
            var listView = this.owner.getChildByName("listView");
            listView.hScrollBarSkin = "";
            this.listView = listView;
            this.listView.renderHandler = new Laya.Handler(this, this.updateItem);
            this.initGameData();
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().off(LobbyEvent.THIRD_LIST_REFRESH_NOTI, this, this.onThirdListRefresh);
        }
        onLoginSuccess() {
            if (!this.data || this.data.length == 0) {
                this.initGameData();
            }
        }
        onThirdListRefresh(data) {
            let listsMap = data.getListsMap();
            let gameList = this.sortGameList(listsMap);
            this.data = gameList;
            this.listView.updateArray(gameList);
        }
        initGameData() {
            return __awaiter(this, void 0, void 0, function* () {
                let gameList = yield ThirdGameService.getInstance().queryGame(-1, "main");
                let tmpGames = this.sortGameList(gameList);
                this.data = tmpGames;
                this.listView.array = this.data;
            });
        }
        sortGameList(gameList) {
            if (gameList.getLength() > 0) {
                let tmpGames = [];
                gameList.forEach((v, k) => {
                    let tmpList = v.getGamesList();
                    let len = tmpList.length;
                    let arr1 = [];
                    let tmpArr = [];
                    for (let i = 0; i < len; i++) {
                        let data1 = tmpList[i];
                        if (data1.getBig()) {
                            arr1[arr1.length] = data1;
                        }
                        else {
                            tmpArr[tmpArr.length] = data1;
                            if (tmpArr.length == 2 || i == len - 1) {
                                arr1[arr1.length] = tmpArr.slice(0);
                                tmpArr = [];
                            }
                        }
                    }
                    tmpGames = tmpGames.concat(arr1);
                });
                return tmpGames;
            }
        }
        scrollToType(__type) {
            let tmpData = this.data;
            if (tmpData) {
                let len = tmpData.length;
                let itemIndex = 0;
                for (let i = 0; i < len; i++) {
                    let data1 = tmpData[i];
                    let bExist = false;
                    if (data1 instanceof Array) {
                        for (let j = 0; j < data1.length; j++) {
                            let data2 = data1[j];
                            if (data2.getType() == __type) {
                                bExist = true;
                                this.listView.scrollTo(i);
                                break;
                            }
                        }
                    }
                    else {
                        if (data1.getType() == __type) {
                            bExist = true;
                            this.listView.scrollTo(i);
                        }
                    }
                    if (bExist) {
                        itemIndex = i;
                        break;
                    }
                }
                let cellLen = this.listView.cells.length;
                for (let i = 0; i < cellLen; i++) {
                    let cell = this.listView.cells[i];
                    Laya.Tween.clearAll(cell);
                    cell.alpha = 0;
                    Laya.Tween.to(cell, { alpha: 1 }, 200, null, null, (i) * 50);
                }
            }
        }
        updateItem(cell, index) {
            let itemData = cell.dataSource;
            let pathArr = [
                "2d/ui/nGameIcon",
                "2d/ui/nGameIcon_vi",
                "2d/ui/nGameIcon_ru",
                "2d/ui/nGameIcon_en",
            ];
            window.InitialNode(cell);
            if (itemData instanceof Array) {
                cell.node_pool.visible = false;
                cell.node_1.visible = false;
                cell.node_2.visible = true;
                cell.node_2.imgIcon1.y = 332;
                for (let i = 0; i < itemData.length; i++) {
                    let item = itemData[i];
                    let icon = item.getIcon();
                    let bExist = false;
                    for (let j = 0; j < pathArr.length; j++) {
                        let path = pathArr[j];
                        let iconPath = path + icon.substring(icon.lastIndexOf("/"));
                        if (this.checkLocalImageExist(iconPath)) {
                            cell.node_2["imgIcon" + i].skin = iconPath;
                            bExist = true;
                            break;
                        }
                    }
                    if (!bExist) {
                        cell.node_2["imgIcon" + i].skin = icon;
                    }
                    cell.node_2["imgIcon" + i].on(Laya.Event.CLICK, this, this.onItemSelect, [item]);
                }
                for (let i = 0; i < 2; i++) {
                    if (i > itemData.length - 1) {
                        cell.node_2["imgIcon" + i].visible = false;
                        cell.node_2["imgBG" + i].visible = false;
                    }
                    else {
                        cell.node_2["imgIcon" + i].visible = true;
                        cell.node_2["imgBG" + i].visible = true;
                    }
                }
            }
            else {
                cell.node_1.visible = true;
                cell.node_2.visible = false;
                let animNum = itemData.getAnim();
                cell.node_pool.visible = animNum;
                if (animNum == 1) {
                    cell.node_pool.pool0.visible = false;
                    cell.node_pool.pool1.visible = true;
                }
                else if (animNum == 2) {
                    cell.node_pool.pool0.visible = true;
                    cell.node_pool.pool1.visible = true;
                }
                let item = itemData;
                let icon = item.getIcon();
                let gameid = item.getGameid();
                if (gameid == 4001 || gameid == 4004 || gameid == 152 || gameid == GlobalVariables.GAME_ID_MINI_BET) {
                    cell.node_1.anim1.visible = (gameid == 4001 || gameid == GlobalVariables.GAME_ID_MINI_BET);
                    cell.node_1.anim2.visible = (gameid == 4004 || gameid == 152);
                }
                else {
                    cell.node_1.anim1.visible = false;
                    cell.node_1.anim2.visible = false;
                    let bExist = false;
                    for (let i = 0; i < pathArr.length; i++) {
                        let path = pathArr[i];
                        let iconPath = path + icon.substring(icon.lastIndexOf("/"));
                        if (this.checkLocalImageExist(iconPath)) {
                            cell.node_1.imgIcon.skin = iconPath;
                            bExist = true;
                            break;
                        }
                    }
                    if (!bExist) {
                        cell.node_1.imgIcon.skin = icon;
                    }
                }
                cell.node_1.imgIcon.on(Laya.Event.CLICK, this, this.onItemSelect, [item]);
            }
        }
        checkLocalImageExist(url) {
            if (Laya.loader.getRes(url)) {
                if (Laya.loader.getRes(url) instanceof Laya.Texture) {
                    return true;
                }
            }
            return false;
        }
        onItemSelect(item) {
            JieliGameView.startGame(item);
        }
        static startGame(gameInfo, isNeedValid = true, hideBack = false, attach = null) {
            return __awaiter(this, void 0, void 0, function* () {
                if (gameInfo.getSource() == "zyyx") {
                    if (gameInfo.getGameid() == GlobalVariables.GAME_ID_MJ_XLMJ) {
                        PopupManager.Show(PREFAB_LOBBY.GOLD_SELECT, null, GlobalData.getInstance().lobbyScene);
                    }
                    else if (gameInfo.getGameid() == GlobalVariables.GAME_ID_MINI_BET) {
                        GlobalData.getInstance().lobbyScene.onbtnBetDice();
                    }
                    else if (gameInfo.getGameid() == GlobalVariables.GAME_ID_MINI_YXX) {
                        GlobalData.getInstance().lobbyScene.onbtnYXX();
                    }
                    return;
                }
                let userInfo = DataPlayer.getInstance().userInfo;
                if (isNeedValid) {
                    if (userInfo.gold < gameInfo.getMin()) {
                        if (GlobalVariables.IS_VERIFY) {
                            let exitHandler = Laya.Handler.create(this, (yes) => __awaiter(this, void 0, void 0, function* () {
                            }));
                            PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [WARNING.NOT_ENOUGH, MSG_TYPE.NORMAL, exitHandler], Laya.stage);
                        }
                        else {
                            let exitHandler = Laya.Handler.create(this, (yes) => __awaiter(this, void 0, void 0, function* () {
                                if (yes) {
                                    PopupManager.Show(PREFAB_LOBBY.SHOP, SIDE_ITEM.GOLD, Laya.stage);
                                }
                            }));
                            PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [WARNING.NOT_ENOUGH_2, MSG_TYPE.YES_NO, exitHandler], Laya.stage);
                        }
                        return;
                    }
                }
                try {
                    GlobalData.getInstance().loadingAni.Show("");
                    let userInfo = DataPlayer.getInstance().userInfo;
                    let userName = window.formatString(window.GetRealName(userInfo.nickname), 9);
                    let enterGameAck = yield ThirdGameService.getInstance().enterGame(gameInfo.getGameid(), userName, gameInfo.getSource(), Utils.getLangStr());
                    if (enterGameAck.getCret() != 0) {
                        let msg = WARNING.REQUEST_FAIL;
                        if (enterGameAck.getCret() == -1) {
                            if (enterGameAck.getCode() == 0 || enterGameAck.getCode() == 200) {
                                msg = WARNING.SERVER_BUSY;
                            }
                            else if (enterGameAck.getCode() != 200) {
                                msg = WARNING.SERVER_MAINTAIN;
                            }
                        }
                        let exitHandler = Laya.Handler.create(this, (yes) => __awaiter(this, void 0, void 0, function* () { }));
                        PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [msg, MSG_TYPE.NORMAL, exitHandler], Laya.stage);
                        return;
                    }
                    let obj = {
                        GameID: gameInfo.getGameid(),
                        GameName: gameInfo.getName(),
                        Provider: gameInfo.getSource(),
                    };
                    let msg = JSON.stringify(obj);
                    GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1006, msg);
                    let url = enterGameAck.getEntry();
                    if (attach) {
                        url = url + (url.indexOf("?") > -1 ? "&" : "?") + "attach=" + attach;
                    }
                    let conch = Laya.Browser.window['conch'];
                    if (conch) {
                        let params = {
                            "orientation": gameInfo.getMode(),
                            "h5Url": url,
                            "hideBack": hideBack,
                        };
                        DeviceData.getInstance().tsBridge.callWithBack((ret) => {
                            ThirdGameService.getInstance().refreshCy();
                        }, DeviceData.getInstance().isAndroid ? 'doWebView' : 'doWebView:', JSON.stringify(params));
                    }
                    else {
                        let verGameIdList = [32, 152, 42, 1, 79, 152];
                        let deg = verGameIdList.indexOf(gameInfo.getGameid()) > -1 ? 90 : 0;
                        window.openH5Url(url, "#000000", deg, () => {
                            ThirdGameService.getInstance().refreshCy();
                        });
                    }
                }
                catch (ex) {
                    CC.Loge("enterGame:: error ", ex);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
    }

    var Authen_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Authen.Account', null, global);
    goog.exportSymbol('proto.Authen.AccountChangeNotify', null, global);
    goog.exportSymbol('proto.Authen.AccountVerifyNotify', null, global);
    goog.exportSymbol('proto.Authen.BindCPAccountAck', null, global);
    goog.exportSymbol('proto.Authen.BindCPAccountReq', null, global);
    goog.exportSymbol('proto.Authen.BindPhoneAck', null, global);
    goog.exportSymbol('proto.Authen.BindPhoneReq', null, global);
    goog.exportSymbol('proto.Authen.BindThirdAccountAck', null, global);
    goog.exportSymbol('proto.Authen.BindThirdAccountReq', null, global);
    goog.exportSymbol('proto.Authen.CancelAccountAck', null, global);
    goog.exportSymbol('proto.Authen.CancelAccountReq', null, global);
    goog.exportSymbol('proto.Authen.FindPasswordAck', null, global);
    goog.exportSymbol('proto.Authen.FindPasswordReq', null, global);
    goog.exportSymbol('proto.Authen.GetCodeAck', null, global);
    goog.exportSymbol('proto.Authen.GetCodeReq', null, global);
    goog.exportSymbol('proto.Authen.ModifyPasswordAck', null, global);
    goog.exportSymbol('proto.Authen.ModifyPasswordByGMReq', null, global);
    goog.exportSymbol('proto.Authen.ModifyPasswordReq', null, global);
    goog.exportSymbol('proto.Authen.ModifyPhoneAck', null, global);
    goog.exportSymbol('proto.Authen.ModifyPhoneByGMReq', null, global);
    goog.exportSymbol('proto.Authen.ModifyPhoneReq', null, global);
    goog.exportSymbol('proto.Authen.QueryByCPAccountAck', null, global);
    goog.exportSymbol('proto.Authen.QueryByCPAccountReq', null, global);
    goog.exportSymbol('proto.Authen.QueryByDeviceAck', null, global);
    goog.exportSymbol('proto.Authen.QueryByDeviceReq', null, global);
    goog.exportSymbol('proto.Authen.QueryCPAccountByPIDAck', null, global);
    goog.exportSymbol('proto.Authen.QueryCPAccountByPIDReq', null, global);
    goog.exportSymbol('proto.Authen.ThirdInfo', null, global);
    goog.exportSymbol('proto.Authen.UnbindCPAccountAck', null, global);
    goog.exportSymbol('proto.Authen.UnbindCPAccountReq', null, global);
    goog.exportSymbol('proto.Authen.UnbindThirdAccountAck', null, global);
    goog.exportSymbol('proto.Authen.UnbindThirdAccountReq', null, global);
    goog.exportSymbol('proto.Authen.UnidQueryAck', null, global);
    goog.exportSymbol('proto.Authen.UnidQueryReq', null, global);
    goog.exportSymbol('proto.Authen.VerifyAccountAck', null, global);
    goog.exportSymbol('proto.Authen.VerifyAnonymousReq', null, global);
    goog.exportSymbol('proto.Authen.VerifyPhoneReq', null, global);
    goog.exportSymbol('proto.Authen.VerifyThirdAccountReq', null, global);
    proto.Authen.VerifyAnonymousReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.VerifyAnonymousReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.VerifyAnonymousReq.displayName = 'proto.Authen.VerifyAnonymousReq';
    }
    proto.Authen.VerifyPhoneReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.VerifyPhoneReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.VerifyPhoneReq.displayName = 'proto.Authen.VerifyPhoneReq';
    }
    proto.Authen.VerifyThirdAccountReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.VerifyThirdAccountReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.VerifyThirdAccountReq.displayName = 'proto.Authen.VerifyThirdAccountReq';
    }
    proto.Authen.VerifyAccountAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.VerifyAccountAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.VerifyAccountAck.displayName = 'proto.Authen.VerifyAccountAck';
    }
    proto.Authen.ModifyPasswordReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.ModifyPasswordReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.ModifyPasswordReq.displayName = 'proto.Authen.ModifyPasswordReq';
    }
    proto.Authen.ModifyPasswordByGMReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.ModifyPasswordByGMReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.ModifyPasswordByGMReq.displayName = 'proto.Authen.ModifyPasswordByGMReq';
    }
    proto.Authen.ModifyPasswordAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.ModifyPasswordAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.ModifyPasswordAck.displayName = 'proto.Authen.ModifyPasswordAck';
    }
    proto.Authen.ThirdInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.ThirdInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.ThirdInfo.displayName = 'proto.Authen.ThirdInfo';
    }
    proto.Authen.Account = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Authen.Account.repeatedFields_, null);
    };
    goog.inherits(proto.Authen.Account, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.Account.displayName = 'proto.Authen.Account';
    }
    proto.Authen.UnidQueryReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.UnidQueryReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.UnidQueryReq.displayName = 'proto.Authen.UnidQueryReq';
    }
    proto.Authen.UnidQueryAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Authen.UnidQueryAck.repeatedFields_, null);
    };
    goog.inherits(proto.Authen.UnidQueryAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.UnidQueryAck.displayName = 'proto.Authen.UnidQueryAck';
    }
    proto.Authen.ModifyPhoneReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.ModifyPhoneReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.ModifyPhoneReq.displayName = 'proto.Authen.ModifyPhoneReq';
    }
    proto.Authen.ModifyPhoneByGMReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.ModifyPhoneByGMReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.ModifyPhoneByGMReq.displayName = 'proto.Authen.ModifyPhoneByGMReq';
    }
    proto.Authen.ModifyPhoneAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.ModifyPhoneAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.ModifyPhoneAck.displayName = 'proto.Authen.ModifyPhoneAck';
    }
    proto.Authen.BindPhoneReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.BindPhoneReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.BindPhoneReq.displayName = 'proto.Authen.BindPhoneReq';
    }
    proto.Authen.BindPhoneAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.BindPhoneAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.BindPhoneAck.displayName = 'proto.Authen.BindPhoneAck';
    }
    proto.Authen.BindThirdAccountReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.BindThirdAccountReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.BindThirdAccountReq.displayName = 'proto.Authen.BindThirdAccountReq';
    }
    proto.Authen.BindThirdAccountAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.BindThirdAccountAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.BindThirdAccountAck.displayName = 'proto.Authen.BindThirdAccountAck';
    }
    proto.Authen.UnbindThirdAccountReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.UnbindThirdAccountReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.UnbindThirdAccountReq.displayName = 'proto.Authen.UnbindThirdAccountReq';
    }
    proto.Authen.UnbindThirdAccountAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.UnbindThirdAccountAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.UnbindThirdAccountAck.displayName = 'proto.Authen.UnbindThirdAccountAck';
    }
    proto.Authen.GetCodeReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.GetCodeReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.GetCodeReq.displayName = 'proto.Authen.GetCodeReq';
    }
    proto.Authen.GetCodeAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.GetCodeAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.GetCodeAck.displayName = 'proto.Authen.GetCodeAck';
    }
    proto.Authen.FindPasswordReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.FindPasswordReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.FindPasswordReq.displayName = 'proto.Authen.FindPasswordReq';
    }
    proto.Authen.FindPasswordAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.FindPasswordAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.FindPasswordAck.displayName = 'proto.Authen.FindPasswordAck';
    }
    proto.Authen.BindCPAccountReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.BindCPAccountReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.BindCPAccountReq.displayName = 'proto.Authen.BindCPAccountReq';
    }
    proto.Authen.BindCPAccountAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.BindCPAccountAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.BindCPAccountAck.displayName = 'proto.Authen.BindCPAccountAck';
    }
    proto.Authen.UnbindCPAccountReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.UnbindCPAccountReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.UnbindCPAccountReq.displayName = 'proto.Authen.UnbindCPAccountReq';
    }
    proto.Authen.UnbindCPAccountAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.UnbindCPAccountAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.UnbindCPAccountAck.displayName = 'proto.Authen.UnbindCPAccountAck';
    }
    proto.Authen.QueryByCPAccountReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.QueryByCPAccountReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.QueryByCPAccountReq.displayName = 'proto.Authen.QueryByCPAccountReq';
    }
    proto.Authen.QueryByCPAccountAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.QueryByCPAccountAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.QueryByCPAccountAck.displayName = 'proto.Authen.QueryByCPAccountAck';
    }
    proto.Authen.QueryCPAccountByPIDReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.QueryCPAccountByPIDReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.QueryCPAccountByPIDReq.displayName = 'proto.Authen.QueryCPAccountByPIDReq';
    }
    proto.Authen.QueryCPAccountByPIDAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.QueryCPAccountByPIDAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.QueryCPAccountByPIDAck.displayName = 'proto.Authen.QueryCPAccountByPIDAck';
    }
    proto.Authen.CancelAccountReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.CancelAccountReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.CancelAccountReq.displayName = 'proto.Authen.CancelAccountReq';
    }
    proto.Authen.CancelAccountAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.CancelAccountAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.CancelAccountAck.displayName = 'proto.Authen.CancelAccountAck';
    }
    proto.Authen.QueryByDeviceReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.QueryByDeviceReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.QueryByDeviceReq.displayName = 'proto.Authen.QueryByDeviceReq';
    }
    proto.Authen.QueryByDeviceAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Authen.QueryByDeviceAck.repeatedFields_, null);
    };
    goog.inherits(proto.Authen.QueryByDeviceAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.QueryByDeviceAck.displayName = 'proto.Authen.QueryByDeviceAck';
    }
    proto.Authen.AccountChangeNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.AccountChangeNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.AccountChangeNotify.displayName = 'proto.Authen.AccountChangeNotify';
    }
    proto.Authen.AccountVerifyNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Authen.AccountVerifyNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Authen.AccountVerifyNotify.displayName = 'proto.Authen.AccountVerifyNotify';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.VerifyAnonymousReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.VerifyAnonymousReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.VerifyAnonymousReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strdeviceid: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.VerifyAnonymousReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.VerifyAnonymousReq;
        return proto.Authen.VerifyAnonymousReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.VerifyAnonymousReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrdeviceid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.VerifyAnonymousReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.VerifyAnonymousReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.VerifyAnonymousReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrdeviceid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Authen.VerifyAnonymousReq.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.VerifyAnonymousReq.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.VerifyAnonymousReq.prototype.getStrdeviceid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.VerifyAnonymousReq.prototype.setStrdeviceid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.VerifyAnonymousReq.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.VerifyAnonymousReq.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.VerifyPhoneReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.VerifyPhoneReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.VerifyPhoneReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nphone: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strpassword: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strdeviceid: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                strcodetype: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                ncode: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                strphone: googleProtobuf.Message.getFieldWithDefault(msg, 8, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.VerifyPhoneReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.VerifyPhoneReq;
        return proto.Authen.VerifyPhoneReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.VerifyPhoneReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint64());
                    msg.setNphone(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrpassword(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrdeviceid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setStrcodetype(value);
                    break;
                case 7:
                    var value = (reader.readUint32());
                    msg.setNcode(value);
                    break;
                case 8:
                    var value = (reader.readString());
                    msg.setStrphone(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.VerifyPhoneReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.VerifyPhoneReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.VerifyPhoneReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNphone();
        if (f !== 0) {
            writer.writeUint64(1, f);
        }
        f = message.getStrpassword();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrdeviceid();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getStrcodetype();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getNcode();
        if (f !== 0) {
            writer.writeUint32(7, f);
        }
        f = message.getStrphone();
        if (f.length > 0) {
            writer.writeString(8, f);
        }
    };
    proto.Authen.VerifyPhoneReq.prototype.getNphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.VerifyPhoneReq.prototype.setNphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.VerifyPhoneReq.prototype.getStrpassword = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.VerifyPhoneReq.prototype.setStrpassword = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.VerifyPhoneReq.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.VerifyPhoneReq.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.VerifyPhoneReq.prototype.getStrdeviceid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.VerifyPhoneReq.prototype.setStrdeviceid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.VerifyPhoneReq.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Authen.VerifyPhoneReq.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Authen.VerifyPhoneReq.prototype.getStrcodetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Authen.VerifyPhoneReq.prototype.setStrcodetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Authen.VerifyPhoneReq.prototype.getNcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Authen.VerifyPhoneReq.prototype.setNcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Authen.VerifyPhoneReq.prototype.getStrphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
    };
    proto.Authen.VerifyPhoneReq.prototype.setStrphone = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 8, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.VerifyThirdAccountReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.VerifyThirdAccountReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.VerifyThirdAccountReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strcode: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                nauthentype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strdeviceid: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.VerifyThirdAccountReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.VerifyThirdAccountReq;
        return proto.Authen.VerifyThirdAccountReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.VerifyThirdAccountReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrcode(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNauthentype(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrdeviceid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.VerifyThirdAccountReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.VerifyThirdAccountReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.VerifyThirdAccountReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrcode();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNauthentype();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrdeviceid();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
    };
    proto.Authen.VerifyThirdAccountReq.prototype.getStrcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Authen.VerifyThirdAccountReq.prototype.setStrcode = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Authen.VerifyThirdAccountReq.prototype.getNauthentype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.VerifyThirdAccountReq.prototype.setNauthentype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.VerifyThirdAccountReq.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.VerifyThirdAccountReq.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.VerifyThirdAccountReq.prototype.getStrdeviceid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.VerifyThirdAccountReq.prototype.setStrdeviceid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.VerifyThirdAccountReq.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Authen.VerifyThirdAccountReq.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.VerifyAccountAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.VerifyAccountAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.VerifyAccountAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                ext: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                ncanceltime: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.VerifyAccountAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.VerifyAccountAck;
        return proto.Authen.VerifyAccountAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.VerifyAccountAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setExt(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNcanceltime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.VerifyAccountAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.VerifyAccountAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.VerifyAccountAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getExt();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNcanceltime();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
    };
    proto.Authen.VerifyAccountAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.VerifyAccountAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.VerifyAccountAck.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.VerifyAccountAck.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.VerifyAccountAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.VerifyAccountAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.VerifyAccountAck.prototype.getExt = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.VerifyAccountAck.prototype.setExt = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.VerifyAccountAck.prototype.getNcanceltime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Authen.VerifyAccountAck.prototype.setNcanceltime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.ModifyPasswordReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.ModifyPasswordReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.ModifyPasswordReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nphone: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                stroldpassword: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                strnewpassword: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.ModifyPasswordReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.ModifyPasswordReq;
        return proto.Authen.ModifyPasswordReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.ModifyPasswordReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint64());
                    msg.setNphone(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStroldpassword(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrnewpassword(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.ModifyPasswordReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.ModifyPasswordReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.ModifyPasswordReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNphone();
        if (f !== 0) {
            writer.writeUint64(1, f);
        }
        f = message.getStroldpassword();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStrnewpassword();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
    };
    proto.Authen.ModifyPasswordReq.prototype.getNphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.ModifyPasswordReq.prototype.setNphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.ModifyPasswordReq.prototype.getStroldpassword = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.ModifyPasswordReq.prototype.setStroldpassword = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.ModifyPasswordReq.prototype.getStrnewpassword = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.ModifyPasswordReq.prototype.setStrnewpassword = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Authen.ModifyPasswordReq.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.ModifyPasswordReq.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.ModifyPasswordReq.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Authen.ModifyPasswordReq.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.ModifyPasswordByGMReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.ModifyPasswordByGMReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.ModifyPasswordByGMReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nphone: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strnewpassword: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.ModifyPasswordByGMReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.ModifyPasswordByGMReq;
        return proto.Authen.ModifyPasswordByGMReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.ModifyPasswordByGMReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint64());
                    msg.setNphone(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrnewpassword(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.ModifyPasswordByGMReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.ModifyPasswordByGMReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNphone();
        if (f !== 0) {
            writer.writeUint64(1, f);
        }
        f = message.getStrnewpassword();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.getNphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.setNphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.getStrnewpassword = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.setStrnewpassword = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Authen.ModifyPasswordByGMReq.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.ModifyPasswordAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.ModifyPasswordAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.ModifyPasswordAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.ModifyPasswordAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.ModifyPasswordAck;
        return proto.Authen.ModifyPasswordAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.ModifyPasswordAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.ModifyPasswordAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.ModifyPasswordAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.ModifyPasswordAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Authen.ModifyPasswordAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.ModifyPasswordAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.ThirdInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.ThirdInfo.toObject(opt_includeInstance, this);
        };
        proto.Authen.ThirdInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                strthirdaccount: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                nthirdaccounttype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.ThirdInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.ThirdInfo;
        return proto.Authen.ThirdInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.ThirdInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrthirdaccount(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNthirdaccounttype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.ThirdInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.ThirdInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.ThirdInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrthirdaccount();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNthirdaccounttype();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Authen.ThirdInfo.prototype.getStrthirdaccount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Authen.ThirdInfo.prototype.setStrthirdaccount = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Authen.ThirdInfo.prototype.getNthirdaccounttype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.ThirdInfo.prototype.setNthirdaccounttype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.Account.repeatedFields_ = [4];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.Account.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.Account.toObject(opt_includeInstance, this);
        };
        proto.Authen.Account.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nphone: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                infosList: googleProtobuf.Message.toObjectList(msg.getInfosList(), proto.Authen.ThirdInfo.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.Account.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.Account;
        return proto.Authen.Account.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.Account.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint64());
                    msg.setNphone(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                case 4:
                    var value = new proto.Authen.ThirdInfo;
                    reader.readMessage(value, proto.Authen.ThirdInfo.deserializeBinaryFromReader);
                    msg.addInfos(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.Account.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.Account.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.Account.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNphone();
        if (f !== 0) {
            writer.writeUint64(2, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getInfosList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(4, f, proto.Authen.ThirdInfo.serializeBinaryToWriter);
        }
    };
    proto.Authen.Account.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.Account.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.Account.prototype.getNphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.Account.prototype.setNphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.Account.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.Account.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.Account.prototype.getInfosList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Authen.ThirdInfo, 4));
    };
    proto.Authen.Account.prototype.setInfosList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
    };
    proto.Authen.Account.prototype.addInfos = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Authen.ThirdInfo, opt_index);
    };
    proto.Authen.Account.prototype.clearInfosList = function () {
        return this.setInfosList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.UnidQueryReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.UnidQueryReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.UnidQueryReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                naccount: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strpassword: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                bincludethird: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 3, false)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.UnidQueryReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.UnidQueryReq;
        return proto.Authen.UnidQueryReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.UnidQueryReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint64());
                    msg.setNaccount(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrpassword(value);
                    break;
                case 3:
                    var value = (reader.readBool());
                    msg.setBincludethird(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.UnidQueryReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.UnidQueryReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.UnidQueryReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNaccount();
        if (f !== 0) {
            writer.writeSint64(1, f);
        }
        f = message.getStrpassword();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getBincludethird();
        if (f) {
            writer.writeBool(3, f);
        }
    };
    proto.Authen.UnidQueryReq.prototype.getNaccount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.UnidQueryReq.prototype.setNaccount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.UnidQueryReq.prototype.getStrpassword = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.UnidQueryReq.prototype.setStrpassword = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.UnidQueryReq.prototype.getBincludethird = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 3, false));
    };
    proto.Authen.UnidQueryReq.prototype.setBincludethird = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 3, value);
    };
    proto.Authen.UnidQueryAck.repeatedFields_ = [5];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.UnidQueryAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.UnidQueryAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.UnidQueryAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nphone: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                thirdsList: googleProtobuf.Message.toObjectList(msg.getThirdsList(), proto.Authen.ThirdInfo.toObject, includeInstance),
                strphone: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                nregtime: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                strregip: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
                strregdevice: googleProtobuf.Message.getFieldWithDefault(msg, 9, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.UnidQueryAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.UnidQueryAck;
        return proto.Authen.UnidQueryAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.UnidQueryAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = (reader.readUint64());
                    msg.setNphone(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                case 5:
                    var value = new proto.Authen.ThirdInfo;
                    reader.readMessage(value, proto.Authen.ThirdInfo.deserializeBinaryFromReader);
                    msg.addThirds(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setStrphone(value);
                    break;
                case 7:
                    var value = (reader.readUint32());
                    msg.setNregtime(value);
                    break;
                case 8:
                    var value = (reader.readString());
                    msg.setStrregip(value);
                    break;
                case 9:
                    var value = (reader.readString());
                    msg.setStrregdevice(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.UnidQueryAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.UnidQueryAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.UnidQueryAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNphone();
        if (f !== 0) {
            writer.writeUint64(3, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getThirdsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(5, f, proto.Authen.ThirdInfo.serializeBinaryToWriter);
        }
        f = message.getStrphone();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getNregtime();
        if (f !== 0) {
            writer.writeUint32(7, f);
        }
        f = message.getStrregip();
        if (f.length > 0) {
            writer.writeString(8, f);
        }
        f = message.getStrregdevice();
        if (f.length > 0) {
            writer.writeString(9, f);
        }
    };
    proto.Authen.UnidQueryAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.UnidQueryAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.UnidQueryAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.UnidQueryAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.UnidQueryAck.prototype.getNphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.UnidQueryAck.prototype.setNphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.UnidQueryAck.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Authen.UnidQueryAck.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Authen.UnidQueryAck.prototype.getThirdsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Authen.ThirdInfo, 5));
    };
    proto.Authen.UnidQueryAck.prototype.setThirdsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
    };
    proto.Authen.UnidQueryAck.prototype.addThirds = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Authen.ThirdInfo, opt_index);
    };
    proto.Authen.UnidQueryAck.prototype.clearThirdsList = function () {
        return this.setThirdsList([]);
    };
    proto.Authen.UnidQueryAck.prototype.getStrphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Authen.UnidQueryAck.prototype.setStrphone = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Authen.UnidQueryAck.prototype.getNregtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Authen.UnidQueryAck.prototype.setNregtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Authen.UnidQueryAck.prototype.getStrregip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
    };
    proto.Authen.UnidQueryAck.prototype.setStrregip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 8, value);
    };
    proto.Authen.UnidQueryAck.prototype.getStrregdevice = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
    };
    proto.Authen.UnidQueryAck.prototype.setStrregdevice = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 9, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.ModifyPhoneReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.ModifyPhoneReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.ModifyPhoneReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                noldphone: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                stroldpassword: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nnewphone: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strcodetype: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                ncode: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.ModifyPhoneReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.ModifyPhoneReq;
        return proto.Authen.ModifyPhoneReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.ModifyPhoneReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint64());
                    msg.setNoldphone(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStroldpassword(value);
                    break;
                case 3:
                    var value = (reader.readUint64());
                    msg.setNnewphone(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrcodetype(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNcode(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                case 7:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.ModifyPhoneReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.ModifyPhoneReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.ModifyPhoneReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNoldphone();
        if (f !== 0) {
            writer.writeUint64(1, f);
        }
        f = message.getStroldpassword();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNnewphone();
        if (f !== 0) {
            writer.writeUint64(3, f);
        }
        f = message.getStrcodetype();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNcode();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(7, f);
        }
    };
    proto.Authen.ModifyPhoneReq.prototype.getNoldphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.ModifyPhoneReq.prototype.setNoldphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.ModifyPhoneReq.prototype.getStroldpassword = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.ModifyPhoneReq.prototype.setStroldpassword = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.ModifyPhoneReq.prototype.getNnewphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.ModifyPhoneReq.prototype.setNnewphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.ModifyPhoneReq.prototype.getStrcodetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.ModifyPhoneReq.prototype.setStrcodetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.ModifyPhoneReq.prototype.getNcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Authen.ModifyPhoneReq.prototype.setNcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Authen.ModifyPhoneReq.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Authen.ModifyPhoneReq.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Authen.ModifyPhoneReq.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Authen.ModifyPhoneReq.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.ModifyPhoneByGMReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.ModifyPhoneByGMReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.ModifyPhoneByGMReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                noldphone: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nnewphone: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.ModifyPhoneByGMReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.ModifyPhoneByGMReq;
        return proto.Authen.ModifyPhoneByGMReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.ModifyPhoneByGMReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint64());
                    msg.setNoldphone(value);
                    break;
                case 2:
                    var value = (reader.readUint64());
                    msg.setNnewphone(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.ModifyPhoneByGMReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.ModifyPhoneByGMReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNoldphone();
        if (f !== 0) {
            writer.writeUint64(1, f);
        }
        f = message.getNnewphone();
        if (f !== 0) {
            writer.writeUint64(2, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.getNoldphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.setNoldphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.getNnewphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.setNnewphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Authen.ModifyPhoneByGMReq.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.ModifyPhoneAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.ModifyPhoneAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.ModifyPhoneAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.ModifyPhoneAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.ModifyPhoneAck;
        return proto.Authen.ModifyPhoneAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.ModifyPhoneAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.ModifyPhoneAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.ModifyPhoneAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.ModifyPhoneAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Authen.ModifyPhoneAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.ModifyPhoneAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.BindPhoneReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.BindPhoneReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.BindPhoneReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nphone: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strpassword: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                strcodetype: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                ncode: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                strphone: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                bforce: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 7, false)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.BindPhoneReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.BindPhoneReq;
        return proto.Authen.BindPhoneReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.BindPhoneReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint64());
                    msg.setNphone(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrpassword(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrcodetype(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNcode(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setStrphone(value);
                    break;
                case 7:
                    var value = (reader.readBool());
                    msg.setBforce(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.BindPhoneReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.BindPhoneReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.BindPhoneReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNphone();
        if (f !== 0) {
            writer.writeUint64(2, f);
        }
        f = message.getStrpassword();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStrcodetype();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNcode();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getStrphone();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getBforce();
        if (f) {
            writer.writeBool(7, f);
        }
    };
    proto.Authen.BindPhoneReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.BindPhoneReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.BindPhoneReq.prototype.getNphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.BindPhoneReq.prototype.setNphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.BindPhoneReq.prototype.getStrpassword = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.BindPhoneReq.prototype.setStrpassword = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Authen.BindPhoneReq.prototype.getStrcodetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.BindPhoneReq.prototype.setStrcodetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.BindPhoneReq.prototype.getNcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Authen.BindPhoneReq.prototype.setNcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Authen.BindPhoneReq.prototype.getStrphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Authen.BindPhoneReq.prototype.setStrphone = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Authen.BindPhoneReq.prototype.getBforce = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 7, false));
    };
    proto.Authen.BindPhoneReq.prototype.setBforce = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 7, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.BindPhoneAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.BindPhoneAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.BindPhoneAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nphone: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strphone: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.BindPhoneAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.BindPhoneAck;
        return proto.Authen.BindPhoneAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.BindPhoneAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 3:
                    var value = (reader.readUint64());
                    msg.setNphone(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrphone(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.BindPhoneAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.BindPhoneAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.BindPhoneAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getNphone();
        if (f !== 0) {
            writer.writeUint64(3, f);
        }
        f = message.getStrphone();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Authen.BindPhoneAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.BindPhoneAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.BindPhoneAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.BindPhoneAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.BindPhoneAck.prototype.getNphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.BindPhoneAck.prototype.setNphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.BindPhoneAck.prototype.getStrphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.BindPhoneAck.prototype.setStrphone = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.BindThirdAccountReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.BindThirdAccountReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.BindThirdAccountReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strcode: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nauthentype: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.BindThirdAccountReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.BindThirdAccountReq;
        return proto.Authen.BindThirdAccountReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.BindThirdAccountReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrcode(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNauthentype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.BindThirdAccountReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.BindThirdAccountReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.BindThirdAccountReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrcode();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNauthentype();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
    };
    proto.Authen.BindThirdAccountReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.BindThirdAccountReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.BindThirdAccountReq.prototype.getStrcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.BindThirdAccountReq.prototype.setStrcode = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.BindThirdAccountReq.prototype.getNauthentype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.BindThirdAccountReq.prototype.setNauthentype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.BindThirdAccountAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.BindThirdAccountAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.BindThirdAccountAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                straccount: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                strtoken: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                nauthentype: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.BindThirdAccountAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.BindThirdAccountAck;
        return proto.Authen.BindThirdAccountAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.BindThirdAccountAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStraccount(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrtoken(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNauthentype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.BindThirdAccountAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.BindThirdAccountAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.BindThirdAccountAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getStraccount();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStrtoken();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNauthentype();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
    };
    proto.Authen.BindThirdAccountAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.BindThirdAccountAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.BindThirdAccountAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.BindThirdAccountAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.BindThirdAccountAck.prototype.getStraccount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.BindThirdAccountAck.prototype.setStraccount = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Authen.BindThirdAccountAck.prototype.getStrtoken = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.BindThirdAccountAck.prototype.setStrtoken = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.BindThirdAccountAck.prototype.getNauthentype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Authen.BindThirdAccountAck.prototype.setNauthentype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.UnbindThirdAccountReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.UnbindThirdAccountReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.UnbindThirdAccountReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nauthentype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.UnbindThirdAccountReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.UnbindThirdAccountReq;
        return proto.Authen.UnbindThirdAccountReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.UnbindThirdAccountReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNauthentype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.UnbindThirdAccountReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.UnbindThirdAccountReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.UnbindThirdAccountReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNauthentype();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Authen.UnbindThirdAccountReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.UnbindThirdAccountReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.UnbindThirdAccountReq.prototype.getNauthentype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.UnbindThirdAccountReq.prototype.setNauthentype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.UnbindThirdAccountAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.UnbindThirdAccountAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.UnbindThirdAccountAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.UnbindThirdAccountAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.UnbindThirdAccountAck;
        return proto.Authen.UnbindThirdAccountAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.UnbindThirdAccountAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.UnbindThirdAccountAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.UnbindThirdAccountAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.UnbindThirdAccountAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Authen.UnbindThirdAccountAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.UnbindThirdAccountAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.UnbindThirdAccountAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.UnbindThirdAccountAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.GetCodeReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.GetCodeReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.GetCodeReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strcodetype: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
                nphonenum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strphone: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.GetCodeReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.GetCodeReq;
        return proto.Authen.GetCodeReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.GetCodeReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrcodetype(value);
                    break;
                case 2:
                    var value = (reader.readUint64());
                    msg.setNphonenum(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrphone(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.GetCodeReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.GetCodeReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.GetCodeReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrcodetype();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getNphonenum();
        if (f !== 0) {
            writer.writeUint64(2, f);
        }
        f = message.getStrphone();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Authen.GetCodeReq.prototype.getStrcodetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Authen.GetCodeReq.prototype.setStrcodetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Authen.GetCodeReq.prototype.getNphonenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.GetCodeReq.prototype.setNphonenum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.GetCodeReq.prototype.getStrphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.GetCodeReq.prototype.setStrphone = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.GetCodeAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.GetCodeAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.GetCodeAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strcodetype: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.GetCodeAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.GetCodeAck;
        return proto.Authen.GetCodeAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.GetCodeAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrcodetype(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.GetCodeAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.GetCodeAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.GetCodeAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getStrcodetype();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Authen.GetCodeAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.GetCodeAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.GetCodeAck.prototype.getStrcodetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.GetCodeAck.prototype.setStrcodetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.FindPasswordReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.FindPasswordReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.FindPasswordReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nphone: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ncode: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strcodetype: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                strnewpassword: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.FindPasswordReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.FindPasswordReq;
        return proto.Authen.FindPasswordReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.FindPasswordReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint64());
                    msg.setNphone(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNcode(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrcodetype(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrnewpassword(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.FindPasswordReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.FindPasswordReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.FindPasswordReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNphone();
        if (f !== 0) {
            writer.writeUint64(1, f);
        }
        f = message.getNcode();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrcodetype();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStrnewpassword();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
    };
    proto.Authen.FindPasswordReq.prototype.getNphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.FindPasswordReq.prototype.setNphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.FindPasswordReq.prototype.getNcode = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.FindPasswordReq.prototype.setNcode = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.FindPasswordReq.prototype.getStrcodetype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.FindPasswordReq.prototype.setStrcodetype = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Authen.FindPasswordReq.prototype.getStrnewpassword = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.FindPasswordReq.prototype.setStrnewpassword = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.FindPasswordReq.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Authen.FindPasswordReq.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.FindPasswordAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.FindPasswordAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.FindPasswordAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.FindPasswordAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.FindPasswordAck;
        return proto.Authen.FindPasswordAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.FindPasswordAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.FindPasswordAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.FindPasswordAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.FindPasswordAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Authen.FindPasswordAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.FindPasswordAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.BindCPAccountReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.BindCPAccountReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.BindCPAccountReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strcpuserid: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                strcpusernickname: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                nphone: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.BindCPAccountReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.BindCPAccountReq;
        return proto.Authen.BindCPAccountReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.BindCPAccountReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrcpuserid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrcpusernickname(value);
                    break;
                case 6:
                    var value = (reader.readUint64());
                    msg.setNphone(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.BindCPAccountReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.BindCPAccountReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.BindCPAccountReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrcpuserid();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getStrcpusernickname();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getNphone();
        if (f !== 0) {
            writer.writeUint64(6, f);
        }
    };
    proto.Authen.BindCPAccountReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.BindCPAccountReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.BindCPAccountReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.BindCPAccountReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.BindCPAccountReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.BindCPAccountReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.BindCPAccountReq.prototype.getStrcpuserid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.BindCPAccountReq.prototype.setStrcpuserid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.BindCPAccountReq.prototype.getStrcpusernickname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Authen.BindCPAccountReq.prototype.setStrcpusernickname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Authen.BindCPAccountReq.prototype.getNphone = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Authen.BindCPAccountReq.prototype.setNphone = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.BindCPAccountAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.BindCPAccountAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.BindCPAccountAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                strcpuserid: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                strcpusernickname: googleProtobuf.Message.getFieldWithDefault(msg, 6, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.BindCPAccountAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.BindCPAccountAck;
        return proto.Authen.BindCPAccountAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.BindCPAccountAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrcpuserid(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setStrcpusernickname(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.BindCPAccountAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.BindCPAccountAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.BindCPAccountAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getStrcpuserid();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getStrcpusernickname();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
    };
    proto.Authen.BindCPAccountAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.BindCPAccountAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.BindCPAccountAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.BindCPAccountAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.BindCPAccountAck.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.BindCPAccountAck.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Authen.BindCPAccountAck.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Authen.BindCPAccountAck.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Authen.BindCPAccountAck.prototype.getStrcpuserid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Authen.BindCPAccountAck.prototype.setStrcpuserid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Authen.BindCPAccountAck.prototype.getStrcpusernickname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Authen.BindCPAccountAck.prototype.setStrcpusernickname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.UnbindCPAccountReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.UnbindCPAccountReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.UnbindCPAccountReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                ncpappid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                strcpuserid: googleProtobuf.Message.getFieldWithDefault(msg, 6, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.UnbindCPAccountReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.UnbindCPAccountReq;
        return proto.Authen.UnbindCPAccountReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.UnbindCPAccountReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNcpappid(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setStrcpuserid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.UnbindCPAccountReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.UnbindCPAccountReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.UnbindCPAccountReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNcpappid();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getStrcpuserid();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
    };
    proto.Authen.UnbindCPAccountReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.UnbindCPAccountReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.UnbindCPAccountReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.UnbindCPAccountReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.UnbindCPAccountReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.UnbindCPAccountReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.UnbindCPAccountReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.UnbindCPAccountReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.UnbindCPAccountReq.prototype.getNcpappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Authen.UnbindCPAccountReq.prototype.setNcpappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Authen.UnbindCPAccountReq.prototype.getStrcpuserid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Authen.UnbindCPAccountReq.prototype.setStrcpuserid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.UnbindCPAccountAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.UnbindCPAccountAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.UnbindCPAccountAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.UnbindCPAccountAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.UnbindCPAccountAck;
        return proto.Authen.UnbindCPAccountAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.UnbindCPAccountAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.UnbindCPAccountAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.UnbindCPAccountAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.UnbindCPAccountAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Authen.UnbindCPAccountAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.UnbindCPAccountAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.UnbindCPAccountAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.UnbindCPAccountAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.QueryByCPAccountReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.QueryByCPAccountReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.QueryByCPAccountReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strcpuserid: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.QueryByCPAccountReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.QueryByCPAccountReq;
        return proto.Authen.QueryByCPAccountReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.QueryByCPAccountReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrcpuserid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.QueryByCPAccountReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.QueryByCPAccountReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.QueryByCPAccountReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrcpuserid();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Authen.QueryByCPAccountReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.QueryByCPAccountReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.QueryByCPAccountReq.prototype.getStrcpuserid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.QueryByCPAccountReq.prototype.setStrcpuserid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.QueryByCPAccountAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.QueryByCPAccountAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.QueryByCPAccountAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.QueryByCPAccountAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.QueryByCPAccountAck;
        return proto.Authen.QueryByCPAccountAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.QueryByCPAccountAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.QueryByCPAccountAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.QueryByCPAccountAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.QueryByCPAccountAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Authen.QueryByCPAccountAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.QueryByCPAccountAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.QueryByCPAccountAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.QueryByCPAccountAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.QueryByCPAccountAck.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.QueryByCPAccountAck.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.QueryCPAccountByPIDReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.QueryCPAccountByPIDReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.QueryCPAccountByPIDReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.QueryCPAccountByPIDReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.QueryCPAccountByPIDReq;
        return proto.Authen.QueryCPAccountByPIDReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.QueryCPAccountByPIDReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.QueryCPAccountByPIDReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.QueryCPAccountByPIDReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.QueryCPAccountByPIDReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Authen.QueryCPAccountByPIDReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.QueryCPAccountByPIDReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.QueryCPAccountByPIDReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.QueryCPAccountByPIDReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.QueryCPAccountByPIDAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.QueryCPAccountByPIDAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.QueryCPAccountByPIDAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strcpuserid: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                strcpname: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.QueryCPAccountByPIDAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.QueryCPAccountByPIDAck;
        return proto.Authen.QueryCPAccountByPIDAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.QueryCPAccountByPIDAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrcpuserid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrcpname(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.QueryCPAccountByPIDAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.QueryCPAccountByPIDAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.QueryCPAccountByPIDAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrcpuserid();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getStrcpname();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
    };
    proto.Authen.QueryCPAccountByPIDAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.QueryCPAccountByPIDAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.QueryCPAccountByPIDAck.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.QueryCPAccountByPIDAck.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.QueryCPAccountByPIDAck.prototype.getStrcpuserid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.QueryCPAccountByPIDAck.prototype.setStrcpuserid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Authen.QueryCPAccountByPIDAck.prototype.getStrcpname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.QueryCPAccountByPIDAck.prototype.setStrcpname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.CancelAccountReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.CancelAccountReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.CancelAccountReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.CancelAccountReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.CancelAccountReq;
        return proto.Authen.CancelAccountReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.CancelAccountReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.CancelAccountReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.CancelAccountReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.CancelAccountReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
    };
    proto.Authen.CancelAccountReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.CancelAccountReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.CancelAccountReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Authen.CancelAccountReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Authen.CancelAccountReq.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.CancelAccountReq.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Authen.CancelAccountReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Authen.CancelAccountReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.CancelAccountAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.CancelAccountAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.CancelAccountAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.CancelAccountAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.CancelAccountAck;
        return proto.Authen.CancelAccountAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.CancelAccountAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.CancelAccountAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.CancelAccountAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.CancelAccountAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.Authen.CancelAccountAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.CancelAccountAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.CancelAccountAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.CancelAccountAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.QueryByDeviceReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.QueryByDeviceReq.toObject(opt_includeInstance, this);
        };
        proto.Authen.QueryByDeviceReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                strdevice: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.QueryByDeviceReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.QueryByDeviceReq;
        return proto.Authen.QueryByDeviceReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.QueryByDeviceReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setStrdevice(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.QueryByDeviceReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.QueryByDeviceReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.QueryByDeviceReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getStrdevice();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.Authen.QueryByDeviceReq.prototype.getStrdevice = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.Authen.QueryByDeviceReq.prototype.setStrdevice = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    proto.Authen.QueryByDeviceAck.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.QueryByDeviceAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.QueryByDeviceAck.toObject(opt_includeInstance, this);
        };
        proto.Authen.QueryByDeviceAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                infosList: googleProtobuf.Message.toObjectList(msg.getInfosList(), proto.Authen.Account.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.QueryByDeviceAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.QueryByDeviceAck;
        return proto.Authen.QueryByDeviceAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.QueryByDeviceAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Authen.Account;
                    reader.readMessage(value, proto.Authen.Account.deserializeBinaryFromReader);
                    msg.addInfos(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.QueryByDeviceAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.QueryByDeviceAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.QueryByDeviceAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getInfosList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(1, f, proto.Authen.Account.serializeBinaryToWriter);
        }
    };
    proto.Authen.QueryByDeviceAck.prototype.getInfosList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Authen.Account, 1));
    };
    proto.Authen.QueryByDeviceAck.prototype.setInfosList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
    };
    proto.Authen.QueryByDeviceAck.prototype.addInfos = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Authen.Account, opt_index);
    };
    proto.Authen.QueryByDeviceAck.prototype.clearInfosList = function () {
        return this.setInfosList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.AccountChangeNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.AccountChangeNotify.toObject(opt_includeInstance, this);
        };
        proto.Authen.AccountChangeNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strdetail: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                ntime: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.AccountChangeNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.AccountChangeNotify;
        return proto.Authen.AccountChangeNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.AccountChangeNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNtype(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrdetail(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                case 6:
                    var value = (reader.readUint32());
                    msg.setNtime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.AccountChangeNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.AccountChangeNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.AccountChangeNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrdetail();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getNtime();
        if (f !== 0) {
            writer.writeUint32(6, f);
        }
    };
    proto.Authen.AccountChangeNotify.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.AccountChangeNotify.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.AccountChangeNotify.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.AccountChangeNotify.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.AccountChangeNotify.prototype.getStrdetail = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Authen.AccountChangeNotify.prototype.setStrdetail = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Authen.AccountChangeNotify.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Authen.AccountChangeNotify.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Authen.AccountChangeNotify.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Authen.AccountChangeNotify.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Authen.AccountChangeNotify.prototype.getNtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Authen.AccountChangeNotify.prototype.setNtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Authen.AccountVerifyNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Authen.AccountVerifyNotify.toObject(opt_includeInstance, this);
        };
        proto.Authen.AccountVerifyNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nsource: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strip: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                strdeviceid: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                ntime: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Authen.AccountVerifyNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Authen.AccountVerifyNotify;
        return proto.Authen.AccountVerifyNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Authen.AccountVerifyNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNtype(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNsource(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrip(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrdeviceid(value);
                    break;
                case 6:
                    var value = (reader.readUint32());
                    msg.setNtime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Authen.AccountVerifyNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Authen.AccountVerifyNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Authen.AccountVerifyNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNtype();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNsource();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getStrip();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getStrdeviceid();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getNtime();
        if (f !== 0) {
            writer.writeUint32(6, f);
        }
    };
    proto.Authen.AccountVerifyNotify.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Authen.AccountVerifyNotify.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Authen.AccountVerifyNotify.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Authen.AccountVerifyNotify.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Authen.AccountVerifyNotify.prototype.getNsource = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Authen.AccountVerifyNotify.prototype.setNsource = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Authen.AccountVerifyNotify.prototype.getStrip = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Authen.AccountVerifyNotify.prototype.setStrip = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Authen.AccountVerifyNotify.prototype.getStrdeviceid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Authen.AccountVerifyNotify.prototype.setStrdeviceid = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Authen.AccountVerifyNotify.prototype.getNtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Authen.AccountVerifyNotify.prototype.setNtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    goog.object.extend(exports, proto.Authen);

    });
    var Authen_pb_1 = Authen_pb.VerifyAnonymousReq;
    var Authen_pb_2 = Authen_pb.VerifyAccountAck;
    var Authen_pb_3 = Authen_pb.GetCodeAck;
    var Authen_pb_4 = Authen_pb.GetCodeReq;
    var Authen_pb_5 = Authen_pb.VerifyPhoneReq;
    var Authen_pb_6 = Authen_pb.VerifyThirdAccountReq;
    var Authen_pb_7 = Authen_pb.CancelAccountAck;
    var Authen_pb_8 = Authen_pb.CancelAccountReq;
    var Authen_pb_9 = Authen_pb.UnidQueryReq;
    var Authen_pb_10 = Authen_pb.UnidQueryAck;
    var Authen_pb_11 = Authen_pb.BindPhoneReq;
    var Authen_pb_12 = Authen_pb.BindPhoneAck;
    var Authen_pb_13 = Authen_pb.QueryByDeviceReq;
    var Authen_pb_14 = Authen_pb.QueryByDeviceAck;
    var Authen_pb_15 = Authen_pb.Account;
    var Authen_pb_16 = Authen_pb.ModifyPasswordReq;
    var Authen_pb_17 = Authen_pb.ModifyPasswordAck;
    var Authen_pb_18 = Authen_pb.FindPasswordReq;
    var Authen_pb_19 = Authen_pb.FindPasswordAck;

    const grpc$e = {};
    grpc$e.web = grpcWeb;
    const proto$f = {};
    proto$f.Authen = Authen_pb;
    proto$f.Authen.AuthenServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$e.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$f.Authen.AuthenServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$e.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_AuthenService_VerifyAnonymous = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/VerifyAnonymous', grpc$e.web.MethodType.UNARY, proto$f.Authen.VerifyAnonymousReq, proto$f.Authen.VerifyAccountAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.VerifyAccountAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.verifyAnonymous =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/VerifyAnonymous', request, metadata || {}, methodDescriptor_AuthenService_VerifyAnonymous, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.verifyAnonymous =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/VerifyAnonymous', request, metadata || {}, methodDescriptor_AuthenService_VerifyAnonymous);
        };
    const methodDescriptor_AuthenService_VerifyPhone = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/VerifyPhone', grpc$e.web.MethodType.UNARY, proto$f.Authen.VerifyPhoneReq, proto$f.Authen.VerifyAccountAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.VerifyAccountAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.verifyPhone =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/VerifyPhone', request, metadata || {}, methodDescriptor_AuthenService_VerifyPhone, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.verifyPhone =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/VerifyPhone', request, metadata || {}, methodDescriptor_AuthenService_VerifyPhone);
        };
    const methodDescriptor_AuthenService_VerifyThirdAccount = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/VerifyThirdAccount', grpc$e.web.MethodType.UNARY, proto$f.Authen.VerifyThirdAccountReq, proto$f.Authen.VerifyAccountAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.VerifyAccountAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.verifyThirdAccount =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/VerifyThirdAccount', request, metadata || {}, methodDescriptor_AuthenService_VerifyThirdAccount, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.verifyThirdAccount =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/VerifyThirdAccount', request, metadata || {}, methodDescriptor_AuthenService_VerifyThirdAccount);
        };
    const methodDescriptor_AuthenService_ModifyPassword = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/ModifyPassword', grpc$e.web.MethodType.UNARY, proto$f.Authen.ModifyPasswordReq, proto$f.Authen.ModifyPasswordAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.ModifyPasswordAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.modifyPassword =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/ModifyPassword', request, metadata || {}, methodDescriptor_AuthenService_ModifyPassword, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.modifyPassword =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/ModifyPassword', request, metadata || {}, methodDescriptor_AuthenService_ModifyPassword);
        };
    const methodDescriptor_AuthenService_ModifyPhone = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/ModifyPhone', grpc$e.web.MethodType.UNARY, proto$f.Authen.ModifyPhoneReq, proto$f.Authen.ModifyPhoneAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.ModifyPhoneAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.modifyPhone =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/ModifyPhone', request, metadata || {}, methodDescriptor_AuthenService_ModifyPhone, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.modifyPhone =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/ModifyPhone', request, metadata || {}, methodDescriptor_AuthenService_ModifyPhone);
        };
    const methodDescriptor_AuthenService_UnidQuery = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/UnidQuery', grpc$e.web.MethodType.UNARY, proto$f.Authen.UnidQueryReq, proto$f.Authen.UnidQueryAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.UnidQueryAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.unidQuery =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/UnidQuery', request, metadata || {}, methodDescriptor_AuthenService_UnidQuery, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.unidQuery =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/UnidQuery', request, metadata || {}, methodDescriptor_AuthenService_UnidQuery);
        };
    const methodDescriptor_AuthenService_BindPhone = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/BindPhone', grpc$e.web.MethodType.UNARY, proto$f.Authen.BindPhoneReq, proto$f.Authen.BindPhoneAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.BindPhoneAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.bindPhone =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/BindPhone', request, metadata || {}, methodDescriptor_AuthenService_BindPhone, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.bindPhone =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/BindPhone', request, metadata || {}, methodDescriptor_AuthenService_BindPhone);
        };
    const methodDescriptor_AuthenService_BindThirdAccount = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/BindThirdAccount', grpc$e.web.MethodType.UNARY, proto$f.Authen.BindThirdAccountReq, proto$f.Authen.BindThirdAccountAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.BindThirdAccountAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.bindThirdAccount =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/BindThirdAccount', request, metadata || {}, methodDescriptor_AuthenService_BindThirdAccount, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.bindThirdAccount =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/BindThirdAccount', request, metadata || {}, methodDescriptor_AuthenService_BindThirdAccount);
        };
    const methodDescriptor_AuthenService_UnbindThirdAccount = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/UnbindThirdAccount', grpc$e.web.MethodType.UNARY, proto$f.Authen.UnbindThirdAccountReq, proto$f.Authen.UnbindThirdAccountAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.UnbindThirdAccountAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.unbindThirdAccount =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/UnbindThirdAccount', request, metadata || {}, methodDescriptor_AuthenService_UnbindThirdAccount, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.unbindThirdAccount =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/UnbindThirdAccount', request, metadata || {}, methodDescriptor_AuthenService_UnbindThirdAccount);
        };
    const methodDescriptor_AuthenService_GetCode = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/GetCode', grpc$e.web.MethodType.UNARY, proto$f.Authen.GetCodeReq, proto$f.Authen.GetCodeAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.GetCodeAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.getCode =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/GetCode', request, metadata || {}, methodDescriptor_AuthenService_GetCode, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.getCode =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/GetCode', request, metadata || {}, methodDescriptor_AuthenService_GetCode);
        };
    const methodDescriptor_AuthenService_FindPassword = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/FindPassword', grpc$e.web.MethodType.UNARY, proto$f.Authen.FindPasswordReq, proto$f.Authen.FindPasswordAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.FindPasswordAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.findPassword =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/FindPassword', request, metadata || {}, methodDescriptor_AuthenService_FindPassword, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.findPassword =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/FindPassword', request, metadata || {}, methodDescriptor_AuthenService_FindPassword);
        };
    const methodDescriptor_AuthenService_ModifyPasswordByGM = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/ModifyPasswordByGM', grpc$e.web.MethodType.UNARY, proto$f.Authen.ModifyPasswordByGMReq, proto$f.Authen.ModifyPasswordAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.ModifyPasswordAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.modifyPasswordByGM =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/ModifyPasswordByGM', request, metadata || {}, methodDescriptor_AuthenService_ModifyPasswordByGM, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.modifyPasswordByGM =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/ModifyPasswordByGM', request, metadata || {}, methodDescriptor_AuthenService_ModifyPasswordByGM);
        };
    const methodDescriptor_AuthenService_ModifyPhoneByGM = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/ModifyPhoneByGM', grpc$e.web.MethodType.UNARY, proto$f.Authen.ModifyPhoneByGMReq, proto$f.Authen.ModifyPhoneAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.ModifyPhoneAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.modifyPhoneByGM =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/ModifyPhoneByGM', request, metadata || {}, methodDescriptor_AuthenService_ModifyPhoneByGM, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.modifyPhoneByGM =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/ModifyPhoneByGM', request, metadata || {}, methodDescriptor_AuthenService_ModifyPhoneByGM);
        };
    const methodDescriptor_AuthenService_BindCPAccount = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/BindCPAccount', grpc$e.web.MethodType.UNARY, proto$f.Authen.BindCPAccountReq, proto$f.Authen.BindCPAccountAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.BindCPAccountAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.bindCPAccount =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/BindCPAccount', request, metadata || {}, methodDescriptor_AuthenService_BindCPAccount, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.bindCPAccount =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/BindCPAccount', request, metadata || {}, methodDescriptor_AuthenService_BindCPAccount);
        };
    const methodDescriptor_AuthenService_UnbindCPAccount = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/UnbindCPAccount', grpc$e.web.MethodType.UNARY, proto$f.Authen.UnbindCPAccountReq, proto$f.Authen.UnbindCPAccountAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.UnbindCPAccountAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.unbindCPAccount =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/UnbindCPAccount', request, metadata || {}, methodDescriptor_AuthenService_UnbindCPAccount, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.unbindCPAccount =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/UnbindCPAccount', request, metadata || {}, methodDescriptor_AuthenService_UnbindCPAccount);
        };
    const methodDescriptor_AuthenService_QueryByCPAccount = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/QueryByCPAccount', grpc$e.web.MethodType.UNARY, proto$f.Authen.QueryByCPAccountReq, proto$f.Authen.QueryByCPAccountAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.QueryByCPAccountAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.queryByCPAccount =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/QueryByCPAccount', request, metadata || {}, methodDescriptor_AuthenService_QueryByCPAccount, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.queryByCPAccount =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/QueryByCPAccount', request, metadata || {}, methodDescriptor_AuthenService_QueryByCPAccount);
        };
    const methodDescriptor_AuthenService_QueryCPAccountByPID = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/QueryCPAccountByPID', grpc$e.web.MethodType.UNARY, proto$f.Authen.QueryCPAccountByPIDReq, proto$f.Authen.QueryCPAccountByPIDAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.QueryCPAccountByPIDAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.queryCPAccountByPID =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/QueryCPAccountByPID', request, metadata || {}, methodDescriptor_AuthenService_QueryCPAccountByPID, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.queryCPAccountByPID =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/QueryCPAccountByPID', request, metadata || {}, methodDescriptor_AuthenService_QueryCPAccountByPID);
        };
    const methodDescriptor_AuthenService_CancelAccount = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/CancelAccount', grpc$e.web.MethodType.UNARY, proto$f.Authen.CancelAccountReq, proto$f.Authen.CancelAccountAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.CancelAccountAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.cancelAccount =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/CancelAccount', request, metadata || {}, methodDescriptor_AuthenService_CancelAccount, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.cancelAccount =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/CancelAccount', request, metadata || {}, methodDescriptor_AuthenService_CancelAccount);
        };
    const methodDescriptor_AuthenService_QueryByDevice = new grpc$e.web.MethodDescriptor('/Authen.AuthenService/QueryByDevice', grpc$e.web.MethodType.UNARY, proto$f.Authen.QueryByDeviceReq, proto$f.Authen.QueryByDeviceAck, function (request) {
        return request.serializeBinary();
    }, proto$f.Authen.QueryByDeviceAck.deserializeBinary);
    proto$f.Authen.AuthenServiceClient.prototype.queryByDevice =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Authen.AuthenService/QueryByDevice', request, metadata || {}, methodDescriptor_AuthenService_QueryByDevice, callback);
        };
    proto$f.Authen.AuthenServicePromiseClient.prototype.queryByDevice =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Authen.AuthenService/QueryByDevice', request, metadata || {}, methodDescriptor_AuthenService_QueryByDevice);
        };
    var Authen_grpc_web_pb = proto$f.Authen;
    var Authen_grpc_web_pb_1 = Authen_grpc_web_pb.AuthenServiceClient;
    var Authen_grpc_web_pb_2 = Authen_grpc_web_pb.AuthenServicePromiseClient;

    var THIRD_LOGIN;
    (function (THIRD_LOGIN) {
        THIRD_LOGIN[THIRD_LOGIN["WX"] = 1] = "WX";
        THIRD_LOGIN[THIRD_LOGIN["QQ"] = 2] = "QQ";
        THIRD_LOGIN[THIRD_LOGIN["SINA"] = 3] = "SINA";
        THIRD_LOGIN[THIRD_LOGIN["TIKTOK"] = 4] = "TIKTOK";
        THIRD_LOGIN[THIRD_LOGIN["APPLE"] = 5] = "APPLE";
        THIRD_LOGIN[THIRD_LOGIN["WGAME"] = 6] = "WGAME";
        THIRD_LOGIN[THIRD_LOGIN["HW"] = 7] = "HW";
        THIRD_LOGIN[THIRD_LOGIN["VK"] = 8] = "VK";
    })(THIRD_LOGIN || (THIRD_LOGIN = {}));
    class LoginSocket extends Singleton {
        constructor() {
            super();
            this.authenService = null;
            this.authenServiceSync = null;
            this.accountInfos = [];
            this.authenService = new Authen_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
            this.authenServiceSync = new Authen_grpc_web_pb_2(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        visitorLogin(callback) {
            let req = new Authen_pb_1();
            let mac = GameStorage.getGuestAccount();
            if (mac == "") {
                mac = DeviceData.getInstance().GetDeviceID();
            }
            if (DeviceData.getInstance().isIOS) {
                req.setNsource(GlobalVariables.SOURCE_ID_IOS);
            }
            else if (DeviceData.getInstance().isAndroid) {
                req.setNsource(GlobalVariables.SOURCE_ID_ANDROID);
            }
            else {
                req.setNsource(GlobalVariables.SOURCE_ID_H5);
            }
            req.setStrdeviceid(mac);
            req.setStrip(GlobalVariables.G_MY_IP);
            this.authenService.verifyAnonymous(req, {}, (err, ack) => {
                CC.Log("verifyAnonymous  err => ", err, "ack ==> ", ack);
                if (err || (ack && ack.getNpid() === 0)) {
                    CC.Loge("visitorLogin fail" + JSON.stringify(err));
                    callback(false);
                    return;
                }
                else {
                    let pid = ack.getNpid();
                    DeviceData.getInstance().setAFCustomerID(pid);
                    CC.Log("visitorLogin suc, Pid: " + pid);
                    GameStorage.saveGuestAccount(mac);
                    GameStorage.saveLastLoginTime(GlobalFunc.getNow());
                    GameStorage.saveUserPid(pid);
                    GameStorage.saveUserTicket(ack.getStrticket());
                    GlobalData.getInstance().myPid = pid;
                    GlobalData.getInstance().myTicket = ack.getStrticket();
                    GlobalData.getInstance().baseMeta = { "ticket": GlobalData.getInstance().myPid + "_" + GlobalData.getInstance().myTicket };
                    GameStorage.saveIsFirstLogin(false);
                    if (ack.getNret() == 1) {
                        AFUtil.registerFDPurchase();
                        AFUtil.reportRegistVisitor();
                        AFUtil.reportRegistAll();
                        AFUtil.reportAFRegistAll(pid + "", "visitor");
                    }
                    callback(ack);
                }
            });
        }
        GetCode(codeType, phone, callback) {
            phone = parseInt(phone) + "";
            let req = new Authen_pb_4();
            req.setStrphone(phone);
            req.setStrcodetype(codeType);
            this.authenService.getCode(req, {}, (err, res) => {
                if (err) {
                    CC.Loge('GetCode err' + JSON.stringify(err));
                    callback(null);
                    return;
                }
                callback(res);
            });
        }
        phoneLogin(phone, code, pwd, callback) {
            phone = parseInt(phone) + "";
            let req = new Authen_pb_5();
            let mac = DeviceData.getInstance().GetDeviceID();
            req.setStrdeviceid(mac);
            req.setStrip(GlobalVariables.G_MY_IP);
            req.setStrphone(phone);
            if ((code) != null) {
                req.setNcode(code);
                req.setStrcodetype('phone');
            }
            if (pwd) {
                req.setStrpassword(pwd);
            }
            if (DeviceData.getInstance().isIOS) {
                req.setNsource(GlobalVariables.SOURCE_ID_IOS);
            }
            else if (DeviceData.getInstance().isAndroid) {
                req.setNsource(GlobalVariables.SOURCE_ID_ANDROID);
            }
            else {
                req.setNsource(GlobalVariables.SOURCE_ID_H5);
            }
            CC.Log("phoneLogin = " + JSON.stringify(req.toObject()));
            this.authenService.verifyPhone(req, {}, (err, res) => {
                if (err) {
                    CC.Loge('phoneLogin err' + JSON.stringify(err));
                    callback(null);
                    return;
                }
                if (res.getNret() == 1) {
                    AFUtil.registerFDPurchase();
                    AFUtil.reportRegistPhone();
                    AFUtil.reportRegistAll();
                    let pid = res.getNpid() + "";
                    AFUtil.reportAFRegistAll(pid, "phone");
                }
                if (res.getNret() == 1 || res.getNret() == 0) {
                    let pid = res.getNpid();
                    GlobalData.getInstance().myPid = pid;
                    if (res.getNret() == 1) {
                        GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1003);
                    }
                    else {
                        GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1005);
                    }
                }
                callback(res);
            });
        }
        thirdAccountLogin(code, type, channelID, callback) {
            let req = new Authen_pb_6();
            req.setStrcode(code);
            req.setNauthentype(type);
            req.setNsource(channelID);
            let mac = DeviceData.getInstance().GetDeviceID();
            req.setStrdeviceid(mac);
            req.setStrip(GlobalVariables.G_MY_IP);
            this.authenService.verifyThirdAccount(req, {}, (err, res) => {
                if (err) {
                    CC.Log('thirdAccountLogin err' + JSON.stringify(err));
                    callback(null);
                    return;
                }
                if (res.getNret() == 1) {
                    AFUtil.registerFDPurchase();
                    AFUtil.reportRegistAll();
                    if (type == 5) {
                        let pid = res.getNpid() + "";
                        AFUtil.reportRegistApple();
                        AFUtil.reportAFRegistAll(pid, "apple");
                    }
                }
                callback(res);
            });
        }
        cancelAccount(callback) {
            let req = new Authen_pb_8();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrip(GlobalVariables.G_MY_IP);
            req.setStrticket(GlobalData.getInstance().myTicket);
            req.setNappid(Number(GlobalVariables.APP_ID));
            this.authenService.cancelAccount(req, {}, (err, res) => {
                if (err) {
                    CC.Log('cancelAccount err' + JSON.stringify(err));
                    callback(null);
                    return;
                }
                callback(res);
            });
        }
        unidQueryReq(account, callback) {
            let req = new Authen_pb_9();
            req.setNaccount(account);
            this.authenService.unidQuery(req, {}, (err, res) => {
                if (err || res.getNret() != 0) {
                    CC.Log('unidQuery err' + JSON.stringify(err));
                    callback(null);
                    return;
                }
                GlobalData.getInstance().phone = res.getNphone();
                callback(res);
            });
        }
        unidQueryReqSync(account) {
            return __awaiter(this, void 0, void 0, function* () {
                let req = new Authen_pb_9();
                req.setNaccount(account);
                let res = yield this.authenServiceSync.unidQuery(req);
                if (res) {
                    GlobalData.getInstance().phone = res.getNphone();
                }
                return res;
            });
        }
        bindPhone(phone, code, codeType, callback) {
            phone = parseInt(phone) + "";
            let req = new Authen_pb_11();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setStrphone(phone);
            req.setNcode(code);
            req.setStrcodetype(codeType);
            this.authenService.bindPhone(req, {}, (err, res) => {
                CC.Log("bindPhone  ======>>  err = ", err, " res = ", res);
                if (err) {
                    CC.Log('bindPhone err' + JSON.stringify(err));
                    callback(null);
                    return;
                }
                if (res && res.getNret() == 0) {
                    GameStorage.saveLastPhoneLoginTime(GlobalFunc.getNow());
                    GameStorage.savePhoneUserPid(GlobalData.getInstance().myPid);
                    GameStorage.savePhoneUserTicket(GlobalData.getInstance().myTicket);
                    GlobalData.getInstance().phone = res.getNphone();
                }
                callback(res);
            });
        }
        queryByDeviceID() {
            return __awaiter(this, void 0, void 0, function* () {
                let deviceId = GameStorage.getGuestAccount();
                if (deviceId == "") {
                    deviceId = DeviceData.getInstance().GetDeviceID();
                }
                let req = new Authen_pb_13();
                req.setStrdevice(deviceId);
                let res = yield this.authenServiceSync.queryByDevice(req, {});
                if (res) {
                    this.accountInfos = res.getInfosList();
                }
            });
        }
        canRegistPhone(phoneNum) {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.queryByDeviceID();
                phoneNum = parseInt(phoneNum);
                if (this.accountInfos && this.accountInfos.length > 0) {
                    let hasPhone = false;
                    for (let i = 0; i < this.accountInfos.length; i++) {
                        let info = this.accountInfos[i];
                        let srcPhone = info.getNphone();
                        if (srcPhone) {
                            hasPhone = true;
                            if (srcPhone == phoneNum) {
                                return true;
                            }
                        }
                    }
                    if (!hasPhone) {
                        return true;
                    }
                    return false;
                }
                return true;
            });
        }
        checkOldPhone(phoneNum) {
            return __awaiter(this, void 0, void 0, function* () {
                phoneNum = parseInt(phoneNum);
                let res = yield this.unidQueryReqSync(phoneNum);
                if (!res || res.getNret() != 0) {
                    return false;
                }
                return true;
            });
        }
        canBindPhone(phoneNum) {
            return __awaiter(this, void 0, void 0, function* () {
                phoneNum = parseInt(phoneNum);
                let res = yield this.unidQueryReqSync(phoneNum);
                if (res && res.getNret() == -40002) {
                    return true;
                }
                return false;
            });
        }
        checkDeviceNoBind() {
            return __awaiter(this, void 0, void 0, function* () {
                yield this.queryByDeviceID();
                let hasPhone = false;
                if (this.accountInfos && this.accountInfos.length > 0) {
                    for (let i = 0; i < this.accountInfos.length; i++) {
                        let info = this.accountInfos[i];
                        let srcPhone = info.getNphone();
                        if (srcPhone) {
                            hasPhone = true;
                        }
                    }
                }
                if (!hasPhone) {
                    return true;
                }
                return false;
            });
        }
        changePwd(oldPwd, newPwd, callback) {
            let req = new Authen_pb_16();
            req.setNphone(GlobalData.getInstance().phone);
            req.setStroldpassword(oldPwd);
            req.setStrnewpassword(newPwd);
            req.setStrip(GlobalVariables.G_MY_IP);
            if (DeviceData.getInstance().isIOS) {
                req.setNsource(GlobalVariables.SOURCE_ID_IOS);
            }
            else if (DeviceData.getInstance().isAndroid) {
                req.setNsource(GlobalVariables.SOURCE_ID_ANDROID);
            }
            else {
                req.setNsource(GlobalVariables.SOURCE_ID_H5);
            }
            this.authenService.modifyPassword(req, {}, (err, res) => {
                if (err) {
                    CC.Log('ModifyPasswordAck err' + JSON.stringify(err));
                    callback && callback(null);
                    return;
                }
                if (res && res.getNret() == 0) {
                    CC.Log("ModifyPasswordAck  ======>>  res = " + JSON.stringify(res.toObject()));
                }
                callback && callback(res);
            });
        }
        findPwd(phone, code, pwd, callback) {
            let req = new Authen_pb_18();
            req.setNphone(Number(phone));
            req.setNcode(Number(code));
            req.setStrnewpassword(pwd);
            req.setStrcodetype("findpwd");
            if (DeviceData.getInstance().isIOS) {
                req.setNsource(GlobalVariables.SOURCE_ID_IOS);
            }
            else if (DeviceData.getInstance().isAndroid) {
                req.setNsource(GlobalVariables.SOURCE_ID_ANDROID);
            }
            else {
                req.setNsource(GlobalVariables.SOURCE_ID_H5);
            }
            this.authenService.findPassword(req, {}, (err, res) => {
                if (err) {
                    CC.Log('FindPasswordAck err' + JSON.stringify(err));
                    callback && callback(null);
                    return;
                }
                if (res && res.getNret() == 0) {
                    CC.Log("FindPasswordAck  ======>>  res = " + JSON.stringify(res.toObject()));
                }
                callback && callback(res);
            });
        }
    }

    class LobbyScene extends Laya.View {
        constructor() {
            super();
            this.luckyBtn = null;
            this.hasReliefTimes = false;
            this.isBuyGoldCard = false;
            this.m_subLayers = [];
            this.m_isRefreshGold = false;
            this.luckTurnInterval = null;
            this.reachargeActInterval = null;
            this.m_curSel = 0;
            this.initEventListener();
            let gameConfigs = Laya.loader.getRes(GameRes.CONFIGS);
            GlobalData.getInstance().lobbyConfigs = gameConfigs;
            CC.Log(JSON.stringify(gameConfigs));
            if (gameConfigs) {
                this.charityData = gameConfigs['charityData'];
                this.gameModeConfig = gameConfigs['gameModeData'];
            }
            GlobalData.getInstance().lobbyScene = this;
            if (!GlobalData.getInstance().lobbySocket) {
                GlobalData.getInstance().lobbySocket = new LobbySocket();
            }
        }
        onAwake() {
            this.init();
            AFUtil.reportArriveResult();
        }
        loadLobbyData() {
            this.refreshLoginState();
            this.setSelfPlayerData(DataPlayer.getInstance().userInfo);
            ThirdGameService.getInstance().valid().then((ack) => {
                if (ack.getCret() == 400) {
                    let gameInfo = new Third_pb_1();
                    gameInfo.setSource(ack.getSource());
                    gameInfo.setGameid(ack.getCret());
                    JieliGameView.startGame(gameInfo, false, false);
                }
            }).catch((err) => {
            });
            DeviceData.getInstance().getScheme((scheme) => {
                DeviceData.getInstance().log("getScheme " + scheme);
                if (scheme) {
                    try {
                        DeviceData.getInstance().log("解析启动参数 " + scheme);
                        let queries = scheme.split("?")[1].split("&");
                        const params = {};
                        for (const query of queries) {
                            const [key, value] = query.split("=");
                            params[key] = value;
                        }
                        this.processDeepLink(params);
                    }
                    catch (error) {
                    }
                }
                else {
                    DeviceData.getInstance().getClipboard((clipData) => __awaiter(this, void 0, void 0, function* () {
                        if (clipData) {
                            DeviceData.getInstance().log("获取剪切板 " + clipData);
                            try {
                                this.processDeepLink(JSON.parse(clipData));
                            }
                            catch (error) {
                                CC.Loge("解析剪切板内容报错: ", error);
                                DeviceData.getInstance().setClipboard("");
                            }
                        }
                    }));
                }
            });
            let pid = GlobalVariables.IVITE_CODE;
            if (pid) {
                OutInviteService.getInstance().bind(pid);
                GlobalVariables.IVITE_CODE = null;
            }
            let newPwd = GlobalVariables.NEW_PWD;
            if (newPwd) {
                LoginSocket.getInstance().changePwd("", newPwd);
            }
        }
        processDeepLink(content) {
            try {
                DeviceData.getInstance().JLog("processDeepLink " + JSON.stringify(content));
                let pid = content["pid"];
                if (pid == GlobalData.getInstance().myPid) {
                    return;
                }
                let type = content["type"];
                let attach = content["attach"];
                if (type == 'durak') {
                    let gameInfo = new Third_pb_1();
                    gameInfo.setSource("durk");
                    gameInfo.setGameid(GlobalVariables.GAME_ID_MJ_XLMJ);
                    JieliGameView.startGame(gameInfo, false, false, attach);
                }
                else {
                    if (pid) {
                        OutInviteService.getInstance().bind(Number(pid));
                    }
                }
            }
            catch (error) {
            }
        }
        initEventListener() {
            Laya.stage.on(Laya.Event.VISIBILITY_CHANGE, this, this.onVisionChange);
            EventManager.getInstance().on(LobbyEvent.APP_RESUME, this, this.onAppResume);
            EventManager.getInstance().on(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().on(LobbyEvent.UPDATE_PLAYER_INFO, this, this.setSelfPlayerData);
            EventManager.getInstance().on(LobbyEvent.CURRENCY_CHANGE_NOTI, this, this.onCurrencyChange);
            EventManager.getInstance().on(LobbyEvent.LOBBY_SERVER_DISCONNECT, this, this.onServerDisconnect);
            EventManager.getInstance().on(LobbyEvent.GAME_TO_LOBBY, this, this.onBackToLobby);
            EventManager.getInstance().on(LobbyEvent.MAIL_INFO_NOTI, this, this.onMailInfoNoti);
            EventManager.getInstance().on(LobbyEvent.KICK_OUT_NOTI, this, this.onKickoutNoti);
            EventManager.getInstance().on(LobbyEvent.GET_AWARD_SUCCESS, this, this.onGetAwardSuccess);
            EventManager.getInstance().on(LobbyEvent.TURN_TABLE_NOTI, this, this.onTurnTableNoti);
            EventManager.getInstance().on(LobbyEvent.LOBBY_SERVER_CONNECT_FAILED, this, this.onServerConnectFailed);
            EventManager.getInstance().on(LobbyEvent.VIP_INFO_NOTI, this, this.setVipBtnTypeHandler);
            EventManager.getInstance().on(LoadManager.LOAD_NETERROR, this, this.onLoadNetworkError);
            EventManager.getInstance().on(LobbyEvent.GAMEGUIDE_GOBACK_HOME, this, this.onGameGuideGoBackHome);
            EventManager.getInstance().on(LobbyEvent.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
            EventManager.getInstance().on(LobbyEvent.Redeem_Code_ack, this, this.onRedeemCode);
            EventManager.getInstance().on(LobbyEvent.IM_LOGIN_NOTI, this, this.onIMLoginNoti);
            EventManager.getInstance().on(LobbyEvent.MATCH_UPDATE_NOTI, this, this.onMatchUpdateNoti);
            EventManager.getInstance().on(LobbyEvent.MATCH_TABLE_NOTI, this, this.onMatchTableNoti);
            EventManager.getInstance().on(LobbyEvent.MATCH_USER_NOTI, this, this.onMatchUserNoti);
            EventManager.getInstance().on(LobbyEvent.MATCH_OVER_NOTI, this, this.onMatchOverNoti);
            EventManager.getInstance().on(LobbyEvent.INVITE_AWARD_EVENT, this, this.onInviteAward);
        }
        closeEventListener() {
            Laya.stage.off(Laya.Event.VISIBILITY_CHANGE, this, this.onVisionChange);
            EventManager.getInstance().off(LobbyEvent.APP_RESUME, this, this.onAppResume);
            EventManager.getInstance().off(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().off(LobbyEvent.UPDATE_PLAYER_INFO, this, this.setSelfPlayerData);
            EventManager.getInstance().off(LobbyEvent.CURRENCY_CHANGE_NOTI, this, this.onCurrencyChange);
            EventManager.getInstance().off(LobbyEvent.LOBBY_SERVER_DISCONNECT, this, this.onServerDisconnect);
            EventManager.getInstance().off(LobbyEvent.LOBBY_SERVER_CONNECT_FAILED, this, this.onServerConnectFailed);
            EventManager.getInstance().off(LobbyEvent.GAME_TO_LOBBY, this, this.onBackToLobby);
            EventManager.getInstance().off(LobbyEvent.MAIL_INFO_NOTI, this, this.onMailInfoNoti);
            EventManager.getInstance().off(LobbyEvent.KICK_OUT_NOTI, this, this.onKickoutNoti);
            EventManager.getInstance().off(LobbyEvent.GET_AWARD_SUCCESS, this, this.onGetAwardSuccess);
            EventManager.getInstance().off(LobbyEvent.TURN_TABLE_NOTI, this, this.onTurnTableNoti);
            EventManager.getInstance().off(LoadManager.LOAD_NETERROR, this, this.onLoadNetworkError);
            EventManager.getInstance().off(LobbyEvent.GAMEGUIDE_GOBACK_HOME, this, this.onGameGuideGoBackHome);
            EventManager.getInstance().off(LobbyEvent.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
            EventManager.getInstance().off(LobbyEvent.Redeem_Code_ack, this, this.onRedeemCode);
            EventManager.getInstance().off(LobbyEvent.VIP_INFO_NOTI, this, this.setVipBtnTypeHandler);
            EventManager.getInstance().off(LobbyEvent.IM_LOGIN_NOTI, this, this.onIMLoginNoti);
            EventManager.getInstance().off(LobbyEvent.MATCH_UPDATE_NOTI, this, this.onMatchUpdateNoti);
            EventManager.getInstance().off(LobbyEvent.MATCH_TABLE_NOTI, this, this.onMatchTableNoti);
            EventManager.getInstance().off(LobbyEvent.MATCH_USER_NOTI, this, this.onMatchUserNoti);
            EventManager.getInstance().off(LobbyEvent.MATCH_OVER_NOTI, this, this.onMatchOverNoti);
            EventManager.getInstance().off(LobbyEvent.INVITE_AWARD_EVENT, this, this.onInviteAward);
        }
        onDestroy() {
            GlobalData.getInstance().lobbyScene = null;
            this.closeEventListener();
            if (this.luckTurnInterval) {
                clearInterval(this.luckTurnInterval);
                this.luckTurnInterval = null;
            }
            if (this.reachargeActInterval) {
                clearInterval(this.reachargeActInterval);
                this.reachargeActInterval = null;
            }
        }
        onAppResume() {
            ThirdGameService.getInstance().refreshCy();
        }
        onVisionChange() {
            if (Laya.stage.isVisibility) {
                this.onAppResume();
            }
        }
        onLoginSuccess() {
            AFUtil.reportUserOrder();
            AFUtil.reportInvite();
            this.intiGuideLayer();
            this.checkVerify();
            if (!this.visible && GlobalData.getInstance().loginScene.visible) {
                return;
            }
            CC.Log('登录大厅成功');
            DataPlayer.getInstance().getUserInfo((success) => {
                if (!success) {
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NO_PLYINFO);
                    return;
                }
                this.setSelfPlayerData(DataPlayer.getInstance().userInfo);
            });
        }
        onIMLoginNoti(type, res) {
            if (type == "Lucky.Lucky") {
            }
            else if (type == "Gate.LoginAck") {
                this.checkVerify();
                this.checkGift();
            }
            else if (type == "Lucky.AwardsNoti") {
                let awardsNoti = res;
                if (awardsNoti.getTaskid() == GlobalVariables.TASK_7002 || awardsNoti.getTaskid() == GlobalVariables.TASK_7003
                    || awardsNoti.getTaskid() == GlobalVariables.TASK_7004 || awardsNoti.getTaskid() == GlobalVariables.TASK_4001) {
                    let awardList = awardsNoti.getAwardsList();
                    let data = awardList && awardList.map((item) => {
                        let awardItem = new AwardService_pb_1();
                        awardItem.setNitemtype(0);
                        awardItem.setNamount(item.getItemnum());
                        return awardItem;
                    });
                    if (awardList) {
                        this.showReceiveSuccess(data, Currency_pb_7.GIFTS);
                    }
                }
            }
            else if (type == "Aggrg.AggInfo") {
            }
        }
        onServerDisconnect() {
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_DISCONNECT);
        }
        onServerConnectFailed() {
            GlobalData.getInstance().loadingAni.Close();
            this.showMessageBox(WARNING.NET_SERVER_FAIL);
        }
        onCurrencyChange(data) {
            CC.Log('玩家金币金豆宝珠发生变化 result = ' + JSON.stringify(data.toObject()));
            if (data.getNtype() === Currency_pb_10.GAMEMONEY || data.getNtype() == Currency_pb_10.ORB || data.getNtype() === Currency_pb_10.GOLDBEAN) {
                this.isBuyGoldCard = false;
                this.refreshSelfMoney(data);
            }
        }
        onMatchUpdateNoti(data) {
            if (!window.G_GameScene) {
                this.goIntoGame();
            }
        }
        onMatchTableNoti(data) {
            AdapterGame.getInstance().enterGame();
        }
        onMatchUserNoti(data) {
        }
        onMatchOverNoti(data) {
        }
        onBackToLobby() {
            GameAudio.getInstance().playMusic('hall.mp3');
        }
        onMailInfoNoti(data) {
            CC.Log('邮件信息: ' + JSON.stringify(data));
            this.unReadMailInfo = data;
            let bottomRightBox = window.findNodeByName(this.getChildByName("topBox"), "topRightBox");
            bottomRightBox.getChildByName("mailBtn").getChildByName('dot').visible = data.getUnreadcountMap().getLength() > 0;
        }
        setMailDot(isShow) {
            let bottomRightBox = window.findNodeByName(this.getChildByName("topBox"), "topRightBox");
            bottomRightBox.getChildByName("mailBtn").getChildByName('dot').visible = isShow;
        }
        onKickoutNoti(data) {
            CC.Log('玩家被踢出账号: ' + JSON.stringify(data));
            if (data.getNret() === Common_pb_1.E_GATE_KICK_DUPLICATE_LOGIN) {
                GlobalData.getInstance().loadingAni.Close();
                if (window.G_GameSocket != null && window.G_GameSocket != undefined) {
                    window.G_GameSocket.closeSocket(true);
                }
                this.showMessageBox(WARNING.LOGIN_ERROR);
            }
            else if (data.getNret() === Common_pb_1.E_GATE_KICK_SERVER_CLOSED) {
                GlobalData.getInstance().loadingAni.Close();
                this.showMessageBox(WARNING.NET_SERVER_FIX);
            }
            else if (data.getNret() === Common_pb_1.E_ANTI_ADDICTION_NO_REALNAME) {
            }
            else if (data.getNret() === Common_pb_1.E_ANTI_ADDICTION_NOT_PLAY_TIME) {
                this.showMessageBox('Please take a break as you’ve reached the maximum gameplay time.');
            }
            else if (data.getNret() === Common_pb_1.E_GATE_KICK_BANNED) {
                let msg = JSON.parse(data.getStrmsg());
                let utilTime = GlobalFunc.formatDate(Number.parseInt(msg['until']), 'yyyy-MM-DD HH:mm:ss');
                this.showMessageBox('This account has been suspended, suspension end time:' + utilTime + '. Contact customer service for any questions.');
            }
        }
        onGetAwardSuccess(data) {
            console.log('onGetAwardSuccess: ', data.toObject());
            if (data && data.getNawardsource() !== 0) {
                if (data.getArritemsList().length > 0) {
                    this.showReceiveSuccess(data.getArritemsList(), data.getNawardsource());
                }
            }
        }
        onTurnTableNoti(data) {
            CC.Log('转盘通知: ' + JSON.stringify(data));
        }
        onStoreOrderComplete() {
            this.checkGift();
        }
        onRedeemCode() {
        }
        onInviteAward(ack) {
            this.checkAffilateRed(ack);
        }
        refreshSelfMoney(data) {
            if (data.getNtype() === Currency_pb_10.GAMEMONEY) {
                let strNum = window.formatNum(data.getNamount() / 100);
                this.txt_gold.text = strNum;
                DataPlayer.getInstance().userInfo.gold = data.getNamount() / 100;
                this.hasReliefTimes = this.charityData && DataPlayer.getInstance().userInfo.gold <= this.charityData['moneylimit'] && this.charityData['count'] < this.charityData['totalCount'];
            }
            else if (data.getNtype() == Currency_pb_10.ORB) {
            }
        }
        refreshSelfGold(num) {
            let strNum = window.formatNum(num);
            this.txt_gold.text = strNum;
        }
        setSelfPlayerData(data) {
            return __awaiter(this, void 0, void 0, function* () {
                if (!data) {
                    return;
                }
                let path = data.nGender === 1 ? GameRes.DEFAULT_MAN : GameRes.DEFAULT_WOMAN;
                if (data.strAvatar) {
                    path = data.strAvatar;
                }
                let strNum = window.formatNum(data.gold);
                this.txt_gold.text = strNum;
                AFUtil.reportGood(data.gold);
                if (!this.m_isRefreshGold && data.gold == 0) {
                    ThirdGameService.getInstance().refreshCy();
                }
                this.m_isRefreshGold = true;
                ActivsService.getInstance();
            });
        }
        init() {
            this.m_bg = this.getChildByName("Bg");
            let ccc = Number((Laya.Browser.width / Laya.Browser.height).toFixed(2));
            if (Laya.Browser.width < Laya.Browser.height) {
                ccc = Number((Laya.Browser.height / Laya.Browser.width).toFixed(2));
            }
            let topBox = this.getChildByName("topBox");
            let playerInfoBtn = topBox.getChildByName("playerInfoBtn");
            let btnMail = window.findNodeByName(topBox, "mailBtn");
            this.btnMain = window.findNodeByName(topBox, "btnMain");
            this.btnSport = window.findNodeByName(topBox, "btnSport");
            let goldBox = window.findNodeByName(topBox, "goldBox");
            goldBox.getChildByName("refreshBtn").on(Laya.Event.CLICK, this, this.onGoldBtnClick);
            this.txt_gold = goldBox.getChildByName('num');
            this.txt_gold.on(Laya.Event.CLICK, this, this.onGoldBtnClick);
            let centerBox = this.getChildByName("centerBox");
            let bottomBox = this.getChildByName("bottomBox");
            let leftBox = this.getChildByName("leftBox");
            this.m_tabSel = window.findNodeByName(bottomBox, "tabSel");
            this.m_tabSel.selectHandler = new Laya.Handler(this, this.onSelTab);
            this.m_subLayers[0] = window.findNodeByName(this, "LayerMain");
            this.btnSignIn = window.findNodeByName(this, "btnSignIn");
            this.btnSignUp = window.findNodeByName(this, "btnSignUp");
            this.btnMenu = window.findNodeByName(this, "btnMenu");
            this.btnBonus = window.findNodeByName(leftBox, "btnAct");
            let btnArr = [this.btnSignIn, this.btnSignUp, this.btnMenu, btnMail,
                this.btnBonus, this.btnMain, this.btnSport];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
            this.txt_gold.text = '0';
            this.loadSubLayerRes();
            BulletinManager.getInstance().init();
            this.refreshTabByLang();
            this.checkVerify();
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnSignIn") {
                this.onBtnSignIn();
            }
            else if (node.name == "btnSignUp") {
                this.onbtnSignUp();
            }
            else if (node.name == "btnMenu") {
                this.onbtnMenu();
            }
            else if (node.name == "mailBtn") {
                this.onbtnMail();
            }
            else if (node.name == "btnBonus") {
                this.onbtnBonus();
            }
            else if (node.name == "btnMain") {
                this.onbtnMain();
            }
            else if (node.name == "btnSport") {
                this.onbtnSport();
            }
        }
        refreshTabByLang() {
            if (GlobalVariables.DEF_LANG == LANG_T.EN) {
            }
            else {
            }
        }
        refreshLoginState() {
            let topRight = window.findNodeByName(this, "topRightBox");
            let nodeVisitor = window.findNodeByName(this, "nodeVisitor");
            let imgTip = this.btnBonus.getChildByName("imgTip");
            if (GlobalData.getInstance().myPid > 1000) {
                topRight.visible = true;
                nodeVisitor.visible = false;
                imgTip.visible = true;
            }
            else {
                topRight.visible = false;
                nodeVisitor.visible = true;
                imgTip.visible = false;
            }
            if (!(GlobalData.getInstance().myPid > 1000)) {
                for (let i = 0; i < this.m_subLayers.length; i++) {
                    let layer = this.m_subLayers[i];
                    if (layer && layer.setLoginState) {
                        layer.setLoginState();
                    }
                }
            }
        }
        loadSubLayerRes() {
            let resArr = [
                PREFAB_LOBBY.SUB_LAYER_BONUS,
                PREFAB_LOBBY.SUB_LAYER_GAMESEL,
                PREFAB_LOBBY.SUB_LAYER_PROFILE,
                PREFAB_LOBBY.SUB_LAYER_AFFIL,
                PREFAB_LOBBY.GAME_BRIEF,
                PREFAB_LOBBY.HALL_MENU,
                PREFAB_LOBBY.HALL_SIGN,
                PREFAB_LOBBY.SHOP,
            ];
            for (let i = 0; i < resArr.length; i++) {
                let resUrl = resArr[i];
                Laya.loader.load(resUrl, Laya.Handler.create(this, function (pref) {
                    GlobalData.getInstance().loadingAni.Close();
                    if (pref) {
                        return;
                    }
                    else {
                        Laya.loader.clearRes(resUrl);
                        EventManager.getInstance().emit(LoadManager.LOAD_NETERROR);
                        return;
                    }
                }));
            }
        }
        onSelTab(__index) {
            let centerBox = this.getChildByName("centerBox");
            GameAudio.getInstance().playClick();
            PopupManager.Hide(PREFAB_LOBBY.HALL_MENU);
            if (__index == -1) {
                return;
            }
            if (__index == 1) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1007);
            }
            else if (__index == 2) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1008);
            }
            else if (__index == 4) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1010);
            }
            if (__index == 1) {
                if (!this.m_subLayers[1]) {
                    let prefab = new Laya.Prefab();
                    prefab.json = Laya.loader.getRes(PREFAB_LOBBY.SUB_LAYER_BONUS);
                    let layer = prefab.create();
                    if (layer) {
                        centerBox.addChild(layer);
                        this.m_subLayers[__index] = layer;
                    }
                }
            }
            else if (__index == 2) {
                if (!this.m_subLayers[2]) {
                    let prefab = new Laya.Prefab();
                    prefab.json = Laya.loader.getRes(PREFAB_LOBBY.SUB_LAYER_AFFIL);
                    let layer = prefab.create();
                    if (layer) {
                        centerBox.addChild(layer);
                        this.m_subLayers[__index] = layer;
                    }
                }
            }
            else if (__index == 3) {
                if (GlobalData.getInstance().myPid > 1000) {
                    PopupManager.Show(PREFAB_LOBBY.SHOP, null);
                }
                else {
                    PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
                }
                this.m_tabSel.selectedIndex = this.m_curSel;
                return;
            }
            else if (__index == 4) {
                if (!this.m_subLayers[4]) {
                    let prefab = new Laya.Prefab();
                    prefab.json = Laya.loader.getRes(PREFAB_LOBBY.SUB_LAYER_PROFILE);
                    let layer = prefab.create();
                    if (layer) {
                        centerBox.addChild(layer);
                        this.m_subLayers[__index] = layer;
                    }
                }
            }
            for (let i = 0; i < this.m_subLayers.length; i++) {
                let layer = this.m_subLayers[i];
                if (layer) {
                    layer.visible = (i == __index);
                }
            }
            this.m_curSel = __index;
        }
        showGameSelLayer(use, type, gameList, prv) {
            let layer = PopupManager.isLayerExist(PREFAB_LOBBY.HALL_MENU);
            if (layer) {
                layer.Close();
            }
            let centerBox = this.getChildByName("centerBox");
            this.m_tabSel.selectedIndex = -1;
            let __index = 5;
            if (!this.m_subLayers[__index]) {
                let prefab = new Laya.Prefab();
                prefab.json = Laya.loader.getRes(PREFAB_LOBBY.SUB_LAYER_GAMESEL);
                let layer = prefab.create();
                if (layer) {
                    centerBox.addChild(layer);
                    this.m_subLayers[__index] = layer;
                }
            }
            this.m_subLayers[__index].setGameInfo(use, type, gameList, prv);
            let screenW = Laya.stage.width;
            let curLayer = this.m_subLayers[this.m_curSel];
            let nextLayer = this.m_subLayers[__index];
            if (curLayer && nextLayer && this.m_curSel != __index) {
                curLayer.visible = true;
                nextLayer.visible = true;
                if (this.m_curSel > __index) {
                    nextLayer.x = -screenW;
                    Laya.Tween.to(nextLayer, { x: 0 }, 200, null, Laya.Handler.create(this, () => {
                        nextLayer.visible = true;
                    }));
                    Laya.Tween.to(curLayer, { x: screenW }, 200, null, Laya.Handler.create(this, () => {
                        curLayer.visible = false;
                    }));
                }
                else {
                    nextLayer.x = screenW;
                    Laya.Tween.to(nextLayer, { x: 0 }, 200, null, Laya.Handler.create(this, () => {
                        nextLayer.visible = true;
                    }));
                    Laya.Tween.to(curLayer, { x: -screenW }, 200, null, Laya.Handler.create(this, () => {
                        curLayer.visible = false;
                    }));
                }
            }
            this.m_curSel = __index;
        }
        jumpToSub(__index) {
            this.m_tabSel.selectedIndex = __index;
            if (__index == 1) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1007);
            }
            else if (__index == 2) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1008);
            }
            else if (__index == 4) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1010);
            }
        }
        showShop(type) {
            PopupManager.Show(PREFAB_LOBBY.SHOP, type);
        }
        checkVerify() {
            let bottomBox = this.getChildByName("bottomBox");
            let topBox = this.getChildByName("topBox");
            window.InitialNode(topBox);
            window.InitialNode(bottomBox);
            if (GlobalVariables.IS_VERIFY) {
            }
            else {
            }
        }
        intiGuideLayer() {
            return __awaiter(this, void 0, void 0, function* () {
                let pid = GlobalData.getInstance().myPid * -1;
                let res = yield GlobalData.getInstance().loginScene.loginService.unidQueryReqSync(pid);
                if (!GameStorage.getDailyEvent()) {
                    GameStorage.setDailyEvent();
                }
            });
        }
        checkAffilateRed(ack) {
            let item2 = this.m_tabSel.getChildAt(2);
            let imgTip = item2.getChildByName("imgTip");
            imgTip.visible = false;
            if (GlobalData.getInstance().myPid > 1000 && ack) {
                let info = ack.getInfo();
                let adCurAll = info.getAdcur1() + info.getAdcur2();
                imgTip.visible = adCurAll > 0;
            }
        }
        checkGift(__callBack) {
            if (GlobalVariables.IS_VERIFY && DeviceData.getInstance().isAndroid) {
                return;
            }
            let category = 1038;
            DataStore.getInstance().queryGoodsList(category, 1, 20, (res) => {
                if (null != res) {
                    let list = res.getMerchandiselistList();
                    list = list.filter(e => {
                        let attrObj = JSON.parse(e.getAttribute());
                        return !(attrObj["totalLimit"] == 1 && attrObj["uOrders"] == 1);
                    });
                    (list.length > 0);
                    if (__callBack) {
                        __callBack(list.length > 0);
                    }
                }
                if (__callBack) {
                    __callBack(false);
                }
            });
        }
        onLoadNetworkError() {
            PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [WARNING.DOWNLOAD_FAIL, MSG_TYPE.NORMAL, Laya.Handler.create(this, () => {
                    if (Laya.Browser.onQQBrowser || Laya.Browser.onMQQBrowser || Laya.Browser.onSafari || Laya.Browser.onEdge || Laya.Browser.onIE || Laya.Browser.onPC) {
                        GlobalData.getInstance().loadingAni.Close();
                        this.exitToLogin();
                    }
                })], Laya.stage, STAGE_Z_ORDER.POPUP);
        }
        goIntoGame() {
            GlobalVariables.CUR_GAME_ID = GlobalVariables.GAME_ID_MJ_XLMJ;
            AdapterGame.getInstance().createGame();
        }
        onGoldBtnClick() {
            if (GlobalData.getInstance().myPid > 1000) {
                PopupManager.Show(PREFAB_LOBBY.SHOP, null);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
            }
        }
        showReceiveSuccess(data, source) {
            let l_isCard = false;
            for (let i = 0; i < data.length; i++) {
                if (data[i].getNitemid() == 5001 || data[i].getNitemid() == 5002) {
                    l_isCard = true;
                }
            }
            if (window.G_GameScene && l_isCard) {
                return;
            }
            else {
                PopupManager.ShowWithQueue(PREFAB_LOBBY.RECEIVE_SUCCESS, [data, source], null, STAGE_Z_ORDER.POPUP);
            }
        }
        showMessageBox(msg, type = MSG_TYPE.NORMAL, callback) {
            let exitHandler = Laya.Handler.create(this, (ok) => {
                if (ok) {
                    this.exitToLogin();
                }
            });
            let callHandler = callback ? callback : exitHandler;
            PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [msg, type, callHandler], Laya.stage, STAGE_Z_ORDER.POPUP);
        }
        lobbyMenu() {
            return this.getChildByName("menu");
        }
        lobbyHall() {
            return this.getChildByName("hall");
        }
        setVipBtnTypeHandler(p_vipInfo, isChange) {
            if (p_vipInfo) {
            }
        }
        onBtnSignIn() {
            PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 0);
        }
        onbtnSignUp() {
            PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
        }
        onbtnMenu(type) {
            let leftBox = this.getChildByName("leftBox");
            let centerBox = this.getChildByName("centerBox");
            let sizeType = 0;
            if (this.btnMenu.selected) {
                leftBox.visible = false;
                centerBox.left = 50;
                sizeType = 1;
            }
            else {
                leftBox.visible = true;
                centerBox.left = 285;
            }
            for (let i = 0; i < this.m_subLayers.length; i++) {
                let layer = this.m_subLayers[i];
                if (layer && layer.setLeftSizeChange) {
                    layer.setLeftSizeChange(sizeType);
                }
            }
        }
        closeMenu() {
            PopupManager.Hide(PREFAB_LOBBY.HALL_MENU);
        }
        onbtnMail() {
            PopupManager.Show(PREFAB_LOBBY.MAIL, null);
        }
        onbtnBonus() {
            this.jumpToSub(1);
        }
        onbtnMain() {
            if (window["deferredPrompt"]) {
                let deferredPrompt = window["deferredPrompt"];
                deferredPrompt.prompt();
                deferredPrompt.userChoice.then((choiceResult) => {
                    if (choiceResult.outcome === 'accepted') {
                        console.log('点击添加');
                    }
                    else {
                        console.log('取消添加');
                    }
                    deferredPrompt = null;
                });
            }
        }
        onbtnSport() {
        }
        onGameGuideGoBackHome() {
            return __awaiter(this, void 0, void 0, function* () {
            });
        }
        loginOpenWinHandler() {
        }
        exitToLogin() {
            let gameScene = window.G_GameScene;
            if (gameScene && gameScene.visible) {
                GameAudio.getInstance().playMusic('hall.mp3');
                gameScene.exitGameSceneBeforeLogout();
            }
            GlobalData.getInstance().lobbySocket && GlobalData.getInstance().lobbySocket.existToLogin();
            GlobalData.getInstance().baseMeta = null;
            GlobalData.getInstance().myPid = null;
            if (DeviceData.getInstance().isAndroid) {
                DeviceData.getInstance().tsBridge.call("setUserID", "");
            }
            else if (DeviceData.getInstance().isIOS) {
                DeviceData.getInstance().tsBridge.call("setUserID:", null);
            }
            GlobalData.getInstance().myTicket = null;
            GlobalData.getInstance().shareCode = null;
            GlobalData.getInstance().shareFriendPID = null;
            GlobalData.getInstance().gameName = "";
            GlobalData.getInstance().gameId = -1;
            GlobalData.getInstance().gameType = 0;
            GlobalData.getInstance().heartTime = 0;
            GlobalData.getInstance().phone = null;
            DataPlayer.getInstance().userInfo = new BasicInfo();
            GlobalData.getInstance().wxJson = null;
            BulletinManager.getInstance().removeBulletin();
            GameStorage.saveAccount("");
            GameStorage.saveUserPid(-1);
            GameStorage.saveLastLoginTime(-1);
            GameStorage.saveUserTicket("-1");
            GameStorage.setGameMode(0);
            VipManager.getInstance().clearData();
            GlobalData.getInstance().clearData();
            DataStore.getInstance().clearGoods();
            PopupManager.destroyAllLayers();
            this.closeEventListener();
            this.visible = false;
            GlobalData.getInstance().loadingAni.Close();
            GlobalData.getInstance().loginScene.visible = true;
        }
        clearPhone() {
            GameStorage.saveLastPhoneLoginTime(-1);
            GameStorage.savePhoneUserPid(-1);
            GameStorage.savePhoneUserTicket("-1");
            GameStorage.saveVKUserPid(-1);
            GameStorage.saveVKUserTicket("-1");
            GameStorage.saveLastVKLoginTime(-1);
            GameStorage.saveTGUserPid(-1);
            GameStorage.saveTGUserTicket("-1");
            GameStorage.saveLastTGLoginTime(-1);
        }
    }

    class LayerMain extends Laya.Box {
        constructor() {
            super();
            this.m_nodeGameArr = [];
            this.m_curSel = 0;
            this.conH = 730;
            this.gameConH = 340;
            this.totalH1 = 0;
            this.m_sizeType = 0;
            this.bCheck = false;
        }
        onAwake() {
            this.adapteScreen();
            this.initData();
            this.initUI();
        }
        onDestroy() {
            this.root.off(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
            this.root.off(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
            this.root.off(Laya.Event.MOUSE_UP, this, this.onMouseUp);
            this.root.off(Laya.Event.MOUSE_OUT, this, this.onMouseOut1);
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().on(LobbyEvent.THIRD_LIST_REFRESH_NOTI, this, this.onThirdListRefresh);
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().off(LobbyEvent.THIRD_LIST_REFRESH_NOTI, this, this.onThirdListRefresh);
        }
        onLoginSuccess() {
            if (!this.m_gameDatas) {
                this.getGameList();
            }
        }
        onThirdListRefresh(data) {
            let listsMap = data.getListsMap();
        }
        adapteScreen() {
        }
        initData() {
        }
        initUI() {
            this.nodeContent = window.findNodeByName(this, "content");
            this.root = window.findNodeByName(this, "root");
            this.root.vScrollBarSkin = "";
            let nodeTabs = window.findNodeByName(this, "nodeTabs");
            nodeTabs.hScrollBarSkin = "";
            this.m_tabGames = window.findNodeByName(this, "tabGames");
            this.m_tabGames.selectHandler = new Laya.Handler(this, this.onSelGameTab);
            this.nodeAllGames = window.findNodeByName(this, "nodeAllGames");
            window.InitialNode(this.nodeAllGames);
            this.nodeGameType = window.findNodeByName(this, "nodeGameType");
            window.InitialNode(this.nodeGameType);
            this.nodeEnter = window.findNodeByName(this, "nodeEnter");
            window.InitialNode(this.nodeEnter);
            this.nodeInstall = window.findNodeByName(this, "nodeInstall");
            window.InitialNode(this.nodeInstall);
            this.nodeBoard = window.findNodeByName(this, "node_board");
            this.nodeBullet = window.findNodeByName(this, "nodeBullet");
            this.nodeEnter.nodeJackPot.btnClose.clickHandler = Laya.Handler.create(this, this.onCloseEnter, [0]);
            this.nodeEnter.nodeAct.btnClose.clickHandler = Laya.Handler.create(this, this.onCloseEnter, [1]);
            this.nodeInstall.btnClose.clickHandler = Laya.Handler.create(this, this.onCloseEnter, [2]);
            let btnArr = [this.nodeEnter.nodeJackPot, this.nodeEnter.nodeAct, this.nodeInstall,];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
            this.root.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
            this.root.on(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
            this.root.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
            this.root.on(Laya.Event.MOUSE_OUT, this, this.onMouseOut1);
            this.checkH5();
            this.getGameList();
        }
        checkH5() {
            if (DeviceData.getInstance().checkAppEnv()) {
                this.nodeInstall.visible = false;
            }
        }
        setLeftSizeChange(type) {
            this.m_sizeType = type || 0;
            let itemH = 0;
            if (this.m_sizeType == 0) {
                this.gameConH = 340;
                itemH = 280;
            }
            else {
                this.gameConH = 377;
                itemH = 321;
            }
            let totalH = this.conH;
            for (let i = 0; i < 5; i++) {
                let nodeGame = this.m_nodeGameArr[i];
                if (nodeGame) {
                    nodeGame.setLeftSizeChange(type);
                    nodeGame.y = i * this.gameConH;
                    totalH += this.gameConH;
                }
            }
            this.totalH1 = totalH + 30;
            if (this.m_curSel == 0) {
                this.nodeContent.height = this.totalH1;
            }
            else {
                this.nodeGameType.setLeftSizeChange(type);
                let gameList = this.m_gameDatas.get(this.m_curSel - 1);
                if (gameList) {
                    let gameDatas = gameList.getGamesList();
                    this.nodeContent.height = this.conH + Math.ceil(gameDatas.length / 7) * itemH + 30;
                }
            }
            this.nodeBoard.setLeftSizeChange(this.m_sizeType);
        }
        getGameList() {
            return __awaiter(this, void 0, void 0, function* () {
                let totalH = this.conH;
                for (let i = 0; i < 5; i++) {
                    let nodeGame = this.m_nodeGameArr[i];
                    if (nodeGame) {
                        nodeGame.visible = false;
                    }
                }
                let gameList = yield ThirdGameService.getInstance().queryGame(-1, "main");
                if (this.m_sizeType == 0) {
                    this.gameConH = 340;
                }
                else {
                    this.gameConH = 377;
                }
                if (gameList.getLength() > 0) {
                    let totalNum = 0;
                    this.m_gameDatas = gameList;
                    gameList.forEach((v, k) => {
                        if (k != 5) {
                            let gameDatas = v.getGamesList();
                            totalNum += gameDatas.length;
                            let itemNode = this.m_tabGames.getChildAt(k + 1);
                            if (itemNode) {
                                let lblNum = itemNode.getChildByName("lblNum");
                                lblNum.text = gameDatas.length;
                            }
                            let nodeGame = this.m_nodeGameArr[k];
                            if (!nodeGame) {
                                let prefab = new Laya.Prefab();
                                prefab.json = Laya.loader.getRes(PREFAB_LOBBY.NODE_GAME_ITEM);
                                nodeGame = prefab.create();
                                if (nodeGame) {
                                    nodeGame.y = k * this.gameConH;
                                    this.nodeAllGames.addChild(nodeGame);
                                    this.m_nodeGameArr[k] = nodeGame;
                                }
                            }
                            totalH += this.gameConH;
                            nodeGame.visible = true;
                            nodeGame.setGameInfo(k, gameDatas);
                        }
                    });
                    let itemNode = this.m_tabGames.getChildAt(0);
                    if (itemNode) {
                        let lblNum = itemNode.getChildByName("lblNum");
                        lblNum.text = totalNum;
                    }
                }
                this.nodeContent.height = totalH + 30;
                this.totalH1 = totalH + 30;
                CC.Log("layerMain totalH1=" + this.totalH1);
            });
        }
        onSelGameTab(__index) {
            this.m_curSel = __index;
            GameAudio.getInstance().playClick();
            for (let i = 0; i < 6; i++) {
                let itemNode = this.m_tabGames.getChildAt(i);
                if (itemNode) {
                    let lblNum = itemNode.getChildByName("lblNum");
                    lblNum.visible = (__index == i);
                }
            }
            if (this.m_gameDatas) {
                this.nodeAllGames.visible = (__index == 0);
                this.nodeGameType.visible = (__index != 0);
                if (__index == 0) {
                    this.nodeContent.height = this.totalH1;
                    for (let i = 0; i < 5; i++) {
                        let nodeGame = this.m_nodeGameArr[i];
                        if (nodeGame) {
                            nodeGame.setLeftSizeChange(this.m_sizeType);
                        }
                    }
                    CC.Log("layerMain 11111 totalH1=" + this.totalH1);
                }
                else {
                    let itemH = 0;
                    if (this.m_sizeType == 0) {
                        itemH = 280;
                    }
                    else {
                        itemH = 321;
                    }
                    let gameList = this.m_gameDatas.get(__index - 1);
                    if (gameList) {
                        let gameDatas = gameList.getGamesList();
                        let nodeGame = this.nodeGameType;
                        nodeGame.setGameInfo(__index - 1, gameDatas, this.m_sizeType);
                        let totalH = this.conH;
                        let dataLen = gameDatas.length;
                        this.nodeContent.height = totalH + Math.ceil(dataLen / 7) * itemH + 30;
                    }
                }
            }
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnClose") {
                return;
            }
            if (node.name == "nodeInstall" || node.name == "imgDown") {
                this.onNodeInstall();
                return;
            }
            if (!(GlobalData.getInstance().myPid > 1000)) {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
                return;
            }
            if (node.name == "nodeJackPot") {
                PopupManager.Show(PREFAB_LOBBY.JACKPOT_MAIN, null);
            }
            else if (node.name == "nodeAct") {
                PopupManager.Show(PREFAB_LOBBY.NEW_GIFT, null);
            }
        }
        onCloseEnter(index) {
            if (index == 0) {
                this.nodeEnter.nodeJackPot.visible = false;
            }
            else if (index == 1) {
                this.nodeEnter.nodeAct.visible = false;
            }
            else if (index == 2) {
                this.nodeInstall.visible = false;
            }
        }
        onNodeInstall() {
            if (Laya.Browser.onIOS || Laya.Browser.onMac) {
                PopupManager.Show(PREFAB_LOBBY.DOWN_APP, null);
            }
            else {
                let downUrl = "https://www.winfun.love/pixel/download/WinFun-1.apk";
                if (GlobalVariables.SOURCE_ID_ANDROID == 1100204) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-1.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1100205) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-2.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1100206) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-3.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1102002) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-official.apk";
                }
                window.open(downUrl);
            }
        }
        onMouseDown() {
            let s_x = Laya.stage.mouseX;
            let s_y = Laya.stage.mouseY;
            this.sPos = new Laya.Point(s_x, s_y);
            this.bCheck = false;
        }
        onMouseMove(event) {
            if (!this.sPos || this.bCheck) {
                return;
            }
            let s_x = Laya.stage.mouseX;
            let s_y = Laya.stage.mouseY;
            let dtX = Math.abs(this.sPos.x - s_x);
            let dtY = Math.abs(this.sPos.y - s_y);
            if (dtX > dtY) {
                this.root.vScrollBar.stopScroll();
                this.bCheck = true;
            }
            else {
                this.root.vScrollBar.touchScrollEnable = (true);
                for (let i = 0; i < 5; i++) {
                    let nodeGame = this.m_nodeGameArr[i];
                    if (nodeGame) {
                        nodeGame.stopScroll();
                    }
                }
                this.bCheck = true;
            }
        }
        onMouseUp(e) {
            this.sPos = null;
            this.bCheck = false;
        }
        onMouseOut1(e) {
            this.sPos = null;
            this.bCheck = false;
        }
    }

    class BoardShow extends Laya.Box {
        constructor() {
            super();
            this.imgDots = [];
        }
        onAwake() {
            this.initData();
            this.initUI();
        }
        onDestroy() {
        }
        initData() {
            this.m_page = 0;
        }
        initUI() {
            for (let i = 0; i < 5; i++) {
                this.imgDots[i] = window.findNodeByName(this, "imgDot" + i);
            }
            this.m_list = window.findNodeByName(this, "listBaner");
            this.m_list.renderHandler = new Laya.Handler(this, this.updateItem);
            this.m_list.hScrollBarSkin = "";
            this.m_list.scrollBar.tick = 1;
            this.m_list.onPageChangeHandler = new Laya.Handler(this, this.onPageChange);
            let datas = [
                DYNO_IMAGES.BANNER_1,
                DYNO_IMAGES.BANNER_2,
                DYNO_IMAGES.BANNER_3,
                DYNO_IMAGES.BANNER_4,
                DYNO_IMAGES.BANNER_5,
            ];
            this.m_list.array = datas;
            this.m_list.autoShow = true;
            this.parent.parent.parent.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
            this.parent.parent.parent.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        }
        setLeftSizeChange(type) {
            let cells = this.m_list.cells;
            let l_w = 1696;
            let c_w = 552;
            let c_h = 250;
            if (type == 1) {
            }
            else {
                l_w = 1485;
                c_w = 483;
                c_h = 220;
            }
            for (let i = 0; i < cells.length; i++) {
                let cell = cells[i];
                if (cell) {
                    cell.width = c_w;
                    cell.height = c_h;
                }
            }
            this.m_list.width = l_w;
            this.m_list.height = c_h;
            this.m_list.refresh();
        }
        onMouseDown() {
            let s_x = Laya.stage.mouseX;
            let s_y = Laya.stage.mouseY;
            this.sPos = new Laya.Point(s_x, s_y);
            let localPos = this.globalToLocal(this.sPos, true);
            if (localPos.x > 0 && localPos.x < this.width &&
                localPos.y > 0 && localPos.y < this.height) {
                Laya.timer.clearAll(this.m_list);
            }
        }
        onMouseUp() {
            let e_x = Laya.stage.mouseX;
            if (this.sPos) {
                let localPos = this.globalToLocal(this.sPos, true);
                if (localPos.x > 0 && localPos.x < this.width &&
                    localPos.y > 0 && localPos.y < this.height) {
                    let curPage = this.m_list.pageId;
                    if (this.sPos.x < e_x) {
                        this.m_list.pageId = curPage - 1;
                    }
                    else if (this.sPos.x > e_x) {
                        this.m_list.pageId = curPage + 1;
                    }
                    if (this.m_list.autoShow) {
                        this.m_list.startAutoShow();
                    }
                }
                this.sPos = null;
            }
        }
        updateItem(cell, index) {
            window.InitialNode(cell);
            cell.imgIcon.skin = cell.dataSource;
            cell.imgIcon.on(Laya.Event.CLICK, this, this.onItemClick, [index]);
        }
        onPageChange(__page) {
            this.m_page = __page;
            for (let i = 0; i < 5; i++) {
                if (__page == i) {
                    this.imgDots[i].skin = "2d/ui/nShouye/icon_lunbo_1.png";
                }
                else {
                    this.imgDots[i].skin = "2d/ui/nShouye/icon_lunbo_2.png";
                }
            }
        }
        onItemClick(index) {
            if (!(GlobalData.getInstance().myPid > 1000)) {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
                return;
            }
            switch (index) {
                case 0:
                    GlobalData.getInstance().lobbyScene.jumpToSub(2);
                    break;
                case 1:
                    PopupManager.Show(PREFAB_LOBBY.SHOP, null);
                    break;
                case 2:
                    PopupManager.Show(PREFAB_LOBBY.JACKPOT_MAIN, null);
                    break;
                case 3:
                    GlobalData.getInstance().lobbyScene.jumpToSub(2);
                    break;
                case 4:
                    PopupManager.Show(PREFAB_LOBBY.VIP_RATE, null);
                    break;
                default:
                    break;
            }
        }
    }

    const PAGE_COUNT = 2;
    class PageView extends Laya.List {
        constructor() {
            super();
            this._autoShow = false;
            this._currentPage = 0;
            this.renderHandler = Laya.Handler.create(this, this.renderItem);
        }
        onEnable() {
        }
        get autoShow() {
            return this._autoShow;
        }
        set autoShow(state) {
            this._autoShow = state;
            if (state) {
                this.startAutoShow();
            }
            else {
                Laya.timer.clearAll(this);
            }
        }
        startAutoShow() {
            Laya.timer.loop(3000, this, this.scheduleTimer);
        }
        scheduleTimer() {
            this._currentPage = (this._currentPage + 1) % (this.array.length - PAGE_COUNT);
            this.tweenTo(this._currentPage);
            if (this._onPageChange) {
                this._onPageChange.runWith(this._currentPage);
            }
        }
        destroy() {
            this.off(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
            this.off(Laya.Event.MOUSE_UP, this, this.onMouseUp);
            this.off(Laya.Event.MOUSE_OUT, this, this.onMouseOut1);
        }
        onMouseDown(event) {
            Laya.timer.clearAll(this);
        }
        onMouseUp(event) {
            this._updatePage();
        }
        onMouseOut1(event) {
            this._updatePage();
        }
        _updatePage() {
            this.scrollBar.stopScroll();
            let total = this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage;
            let pageId = 0;
            if (total > 1) {
                pageId = Math.ceil((this.scrollBar.value - this._cellOffset - this._cellSize / 2) / this._cellSize);
            }
            else {
            }
            this.tweenTo(pageId);
            this._currentPage = pageId;
            if (this._onPageChange) {
                this._onPageChange.runWith(pageId);
            }
            if (this._autoShow) {
                this.startAutoShow();
            }
        }
        get pageId() {
            return this._currentPage;
        }
        set pageId(n) {
            if (n <= 0) {
                n = 0;
            }
            if (n >= this.array.length - 1 - PAGE_COUNT) {
                n = this.array.length - 1 - PAGE_COUNT;
            }
            this._currentPage = n;
            this.tweenTo(n);
            if (this._onPageChange) {
                this._onPageChange.runWith(this._currentPage);
            }
        }
        set onPageChangeHandler(handler) {
            this._onPageChange = handler;
        }
        get onPageChangeHandler() {
            return this._onPageChange;
        }
    }

    class NodeGameType extends Laya.Box {
        constructor() {
            super();
            this.m_type = 0;
        }
        onAwake() {
            this.initData();
            this.initUI();
        }
        onDestroy() {
            Laya.timer.clearAll(this);
        }
        initData() {
        }
        initUI() {
            this.m_listGame = window.findNodeByName(this, "listGame");
            this.m_listGame.vScrollBarSkin = "";
            this.m_listGame.renderHandler = new Laya.Handler(this, this.updateItem);
        }
        setLeftSizeChange(type) {
            let cells = this.m_listGame.cells;
            let c_w = 198;
            let c_h = 264;
            let space = 17;
            if (type == 1) {
                c_w = 226;
                c_h = 301;
                space = 20;
            }
            for (let i = 0; i < cells.length; i++) {
                let cell = cells[i];
                if (cell) {
                    cell.width = c_w;
                    cell.height = c_h;
                }
            }
            this.m_listGame.height = Math.ceil(this.m_gameDatas.length / 7) * (c_h + space);
            this.m_listGame.spaceX = space;
            this.m_listGame.spaceY = space;
            this.m_listGame.refresh();
        }
        setGameInfo(__type, __gameArr, __sType) {
            this.m_type = __type;
            if (__gameArr) {
                this.m_listGame.dataSource = __gameArr;
                this.m_gameDatas = __gameArr;
                this.setLeftSizeChange(__sType);
            }
        }
        updateItem(cell, index) {
            let itemData = cell.dataSource;
            window.InitialNode(cell);
            let item = itemData;
            let icon = item.getIcon();
            let gameid = item.getGameid();
            cell.skin = icon;
            cell.lblPer.visible = false;
            cell.on(Laya.Event.CLICK, this, this.onItemSelect, [item]);
        }
        onItemSelect(item) {
            PopupManager.Show(PREFAB_LOBBY.GAME_BRIEF, item);
        }
    }

    var Jackpot_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Jackpot.Activs', null, global);
    goog.exportSymbol('proto.Jackpot.ActivsAck', null, global);
    goog.exportSymbol('proto.Jackpot.ActivsGet', null, global);
    goog.exportSymbol('proto.Jackpot.Award', null, global);
    goog.exportSymbol('proto.Jackpot.AwardsNoti', null, global);
    goog.exportSymbol('proto.Jackpot.Jackpot', null, global);
    goog.exportSymbol('proto.Jackpot.JackpotNoti', null, global);
    proto.Jackpot.Jackpot = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Jackpot.Jackpot.repeatedFields_, null);
    };
    goog.inherits(proto.Jackpot.Jackpot, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Jackpot.Jackpot.displayName = 'proto.Jackpot.Jackpot';
    }
    proto.Jackpot.Award = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Jackpot.Award, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Jackpot.Award.displayName = 'proto.Jackpot.Award';
    }
    proto.Jackpot.Activs = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Jackpot.Activs, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Jackpot.Activs.displayName = 'proto.Jackpot.Activs';
    }
    proto.Jackpot.AwardsNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Jackpot.AwardsNoti.repeatedFields_, null);
    };
    goog.inherits(proto.Jackpot.AwardsNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Jackpot.AwardsNoti.displayName = 'proto.Jackpot.AwardsNoti';
    }
    proto.Jackpot.JackpotNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Jackpot.JackpotNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Jackpot.JackpotNoti.displayName = 'proto.Jackpot.JackpotNoti';
    }
    proto.Jackpot.ActivsGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Jackpot.ActivsGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Jackpot.ActivsGet.displayName = 'proto.Jackpot.ActivsGet';
    }
    proto.Jackpot.ActivsAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Jackpot.ActivsAck.repeatedFields_, null);
    };
    goog.inherits(proto.Jackpot.ActivsAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Jackpot.ActivsAck.displayName = 'proto.Jackpot.ActivsAck';
    }
    proto.Jackpot.Jackpot.repeatedFields_ = [31, 41];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Jackpot.Jackpot.prototype.toObject = function (opt_includeInstance) {
            return proto.Jackpot.Jackpot.toObject(opt_includeInstance, this);
        };
        proto.Jackpot.Jackpot.toObject = function (includeInstance, msg) {
            var f, obj = {
                actiid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                rollid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                times: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                procur: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                promax: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                stime: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                etime: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.Jackpot.Award.toObject, includeInstance),
                sourcesList: (f = googleProtobuf.Message.getRepeatedField(msg, 41)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Jackpot.Jackpot.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Jackpot.Jackpot;
        return proto.Jackpot.Jackpot.deserializeBinaryFromReader(msg, reader);
    };
    proto.Jackpot.Jackpot.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setActiid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setRollid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setTimes(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setProcur(value);
                    break;
                case 5:
                    var value = (reader.readSint64());
                    msg.setPromax(value);
                    break;
                case 6:
                    var value = (reader.readSint64());
                    msg.setStime(value);
                    break;
                case 7:
                    var value = (reader.readSint64());
                    msg.setEtime(value);
                    break;
                case 31:
                    var value = new proto.Jackpot.Award;
                    reader.readMessage(value, proto.Jackpot.Award.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                case 41:
                    var value = (reader.readPackedSint32());
                    msg.setSourcesList(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Jackpot.Jackpot.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Jackpot.Jackpot.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Jackpot.Jackpot.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getActiid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getRollid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getTimes();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getProcur();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getPromax();
        if (f !== 0) {
            writer.writeSint64(5, f);
        }
        f = message.getStime();
        if (f !== 0) {
            writer.writeSint64(6, f);
        }
        f = message.getEtime();
        if (f !== 0) {
            writer.writeSint64(7, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(31, f, proto.Jackpot.Award.serializeBinaryToWriter);
        }
        f = message.getSourcesList();
        if (f.length > 0) {
            writer.writePackedSint32(41, f);
        }
    };
    proto.Jackpot.Jackpot.prototype.getActiid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Jackpot.Jackpot.prototype.setActiid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Jackpot.Jackpot.prototype.getRollid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Jackpot.Jackpot.prototype.setRollid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Jackpot.Jackpot.prototype.getTimes = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Jackpot.Jackpot.prototype.setTimes = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Jackpot.Jackpot.prototype.getProcur = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Jackpot.Jackpot.prototype.setProcur = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Jackpot.Jackpot.prototype.getPromax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Jackpot.Jackpot.prototype.setPromax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Jackpot.Jackpot.prototype.getStime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Jackpot.Jackpot.prototype.setStime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Jackpot.Jackpot.prototype.getEtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Jackpot.Jackpot.prototype.setEtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Jackpot.Jackpot.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Jackpot.Award, 31));
    };
    proto.Jackpot.Jackpot.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 31, value);
    };
    proto.Jackpot.Jackpot.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 31, opt_value, proto.Jackpot.Award, opt_index);
    };
    proto.Jackpot.Jackpot.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    proto.Jackpot.Jackpot.prototype.getSourcesList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 41));
    };
    proto.Jackpot.Jackpot.prototype.setSourcesList = function (value) {
        return googleProtobuf.Message.setField(this, 41, value || []);
    };
    proto.Jackpot.Jackpot.prototype.addSources = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 41, value, opt_index);
    };
    proto.Jackpot.Jackpot.prototype.clearSourcesList = function () {
        return this.setSourcesList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Jackpot.Award.prototype.toObject = function (opt_includeInstance) {
            return proto.Jackpot.Award.toObject(opt_includeInstance, this);
        };
        proto.Jackpot.Award.toObject = function (includeInstance, msg) {
            var f, obj = {
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                value: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                min: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                max: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Jackpot.Award.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Jackpot.Award;
        return proto.Jackpot.Award.deserializeBinaryFromReader(msg, reader);
    };
    proto.Jackpot.Award.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setValue(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setItemnum(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setMin(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setMax(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Jackpot.Award.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Jackpot.Award.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Jackpot.Award.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getValue();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getMin();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getMax();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
    };
    proto.Jackpot.Award.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Jackpot.Award.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Jackpot.Award.prototype.getValue = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Jackpot.Award.prototype.setValue = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Jackpot.Award.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Jackpot.Award.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Jackpot.Award.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Jackpot.Award.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Jackpot.Award.prototype.getMin = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Jackpot.Award.prototype.setMin = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Jackpot.Award.prototype.getMax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Jackpot.Award.prototype.setMax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Jackpot.Activs.prototype.toObject = function (opt_includeInstance) {
            return proto.Jackpot.Activs.toObject(opt_includeInstance, this);
        };
        proto.Jackpot.Activs.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                rollid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                actiid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                procur: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                stime: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                etime: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                state: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                status: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Jackpot.Activs.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Jackpot.Activs;
        return proto.Jackpot.Activs.deserializeBinaryFromReader(msg, reader);
    };
    proto.Jackpot.Activs.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setRollid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setActiid(value);
                    break;
                case 4:
                    var value = (reader.readSint64());
                    msg.setProcur(value);
                    break;
                case 5:
                    var value = (reader.readSint64());
                    msg.setStime(value);
                    break;
                case 6:
                    var value = (reader.readSint64());
                    msg.setEtime(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setState(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setStatus(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Jackpot.Activs.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Jackpot.Activs.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Jackpot.Activs.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getRollid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getActiid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getProcur();
        if (f !== 0) {
            writer.writeSint64(4, f);
        }
        f = message.getStime();
        if (f !== 0) {
            writer.writeSint64(5, f);
        }
        f = message.getEtime();
        if (f !== 0) {
            writer.writeSint64(6, f);
        }
        f = message.getState();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getStatus();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
    };
    proto.Jackpot.Activs.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Jackpot.Activs.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Jackpot.Activs.prototype.getRollid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Jackpot.Activs.prototype.setRollid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Jackpot.Activs.prototype.getActiid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Jackpot.Activs.prototype.setActiid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Jackpot.Activs.prototype.getProcur = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Jackpot.Activs.prototype.setProcur = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Jackpot.Activs.prototype.getStime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Jackpot.Activs.prototype.setStime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Jackpot.Activs.prototype.getEtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Jackpot.Activs.prototype.setEtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Jackpot.Activs.prototype.getState = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Jackpot.Activs.prototype.setState = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Jackpot.Activs.prototype.getStatus = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Jackpot.Activs.prototype.setStatus = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Jackpot.AwardsNoti.repeatedFields_ = [31];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Jackpot.AwardsNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Jackpot.AwardsNoti.toObject(opt_includeInstance, this);
        };
        proto.Jackpot.AwardsNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                actiid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.Jackpot.Award.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Jackpot.AwardsNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Jackpot.AwardsNoti;
        return proto.Jackpot.AwardsNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Jackpot.AwardsNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setActiid(value);
                    break;
                case 31:
                    var value = new proto.Jackpot.Award;
                    reader.readMessage(value, proto.Jackpot.Award.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Jackpot.AwardsNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Jackpot.AwardsNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Jackpot.AwardsNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getActiid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(31, f, proto.Jackpot.Award.serializeBinaryToWriter);
        }
    };
    proto.Jackpot.AwardsNoti.prototype.getActiid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Jackpot.AwardsNoti.prototype.setActiid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Jackpot.AwardsNoti.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Jackpot.Award, 31));
    };
    proto.Jackpot.AwardsNoti.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 31, value);
    };
    proto.Jackpot.AwardsNoti.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 31, opt_value, proto.Jackpot.Award, opt_index);
    };
    proto.Jackpot.AwardsNoti.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Jackpot.JackpotNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.Jackpot.JackpotNoti.toObject(opt_includeInstance, this);
        };
        proto.Jackpot.JackpotNoti.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Jackpot.JackpotNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Jackpot.JackpotNoti;
        return proto.Jackpot.JackpotNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.Jackpot.JackpotNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Jackpot.JackpotNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Jackpot.JackpotNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Jackpot.JackpotNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Jackpot.ActivsGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Jackpot.ActivsGet.toObject(opt_includeInstance, this);
        };
        proto.Jackpot.ActivsGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                actiid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Jackpot.ActivsGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Jackpot.ActivsGet;
        return proto.Jackpot.ActivsGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Jackpot.ActivsGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setActiid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setType(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Jackpot.ActivsGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Jackpot.ActivsGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Jackpot.ActivsGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getActiid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getType();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Jackpot.ActivsGet.prototype.getActiid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Jackpot.ActivsGet.prototype.setActiid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Jackpot.ActivsGet.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Jackpot.ActivsGet.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Jackpot.ActivsAck.repeatedFields_ = [13];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Jackpot.ActivsAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Jackpot.ActivsAck.toObject(opt_includeInstance, this);
        };
        proto.Jackpot.ActivsAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                activs: (f = msg.getActivs()) && proto.Jackpot.Activs.toObject(includeInstance, f),
                jackpot: (f = msg.getJackpot()) && proto.Jackpot.Jackpot.toObject(includeInstance, f),
                vecusersList: googleProtobuf.Message.toObjectList(msg.getVecusersList(), proto.Jackpot.Activs.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Jackpot.ActivsAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Jackpot.ActivsAck;
        return proto.Jackpot.ActivsAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Jackpot.ActivsAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 11:
                    var value = new proto.Jackpot.Activs;
                    reader.readMessage(value, proto.Jackpot.Activs.deserializeBinaryFromReader);
                    msg.setActivs(value);
                    break;
                case 12:
                    var value = new proto.Jackpot.Jackpot;
                    reader.readMessage(value, proto.Jackpot.Jackpot.deserializeBinaryFromReader);
                    msg.setJackpot(value);
                    break;
                case 13:
                    var value = new proto.Jackpot.Activs;
                    reader.readMessage(value, proto.Jackpot.Activs.deserializeBinaryFromReader);
                    msg.addVecusers(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Jackpot.ActivsAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Jackpot.ActivsAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Jackpot.ActivsAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getActivs();
        if (f != null) {
            writer.writeMessage(11, f, proto.Jackpot.Activs.serializeBinaryToWriter);
        }
        f = message.getJackpot();
        if (f != null) {
            writer.writeMessage(12, f, proto.Jackpot.Jackpot.serializeBinaryToWriter);
        }
        f = message.getVecusersList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(13, f, proto.Jackpot.Activs.serializeBinaryToWriter);
        }
    };
    proto.Jackpot.ActivsAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Jackpot.ActivsAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Jackpot.ActivsAck.prototype.getActivs = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Jackpot.Activs, 11));
    };
    proto.Jackpot.ActivsAck.prototype.setActivs = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.Jackpot.ActivsAck.prototype.clearActivs = function () {
        return this.setActivs(undefined);
    };
    proto.Jackpot.ActivsAck.prototype.hasActivs = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    proto.Jackpot.ActivsAck.prototype.getJackpot = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Jackpot.Jackpot, 12));
    };
    proto.Jackpot.ActivsAck.prototype.setJackpot = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 12, value);
    };
    proto.Jackpot.ActivsAck.prototype.clearJackpot = function () {
        return this.setJackpot(undefined);
    };
    proto.Jackpot.ActivsAck.prototype.hasJackpot = function () {
        return googleProtobuf.Message.getField(this, 12) != null;
    };
    proto.Jackpot.ActivsAck.prototype.getVecusersList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Jackpot.Activs, 13));
    };
    proto.Jackpot.ActivsAck.prototype.setVecusersList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 13, value);
    };
    proto.Jackpot.ActivsAck.prototype.addVecusers = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.Jackpot.Activs, opt_index);
    };
    proto.Jackpot.ActivsAck.prototype.clearVecusersList = function () {
        return this.setVecusersList([]);
    };
    goog.object.extend(exports, proto.Jackpot);

    });
    var Jackpot_pb_1 = Jackpot_pb.Jackpot;
    var Jackpot_pb_2 = Jackpot_pb.JackpotAward;
    var Jackpot_pb_3 = Jackpot_pb.Activs;
    var Jackpot_pb_4 = Jackpot_pb.AwardsNoti;
    var Jackpot_pb_5 = Jackpot_pb.JackpotNoti;
    var Jackpot_pb_6 = Jackpot_pb.ActivsGet;
    var Jackpot_pb_7 = Jackpot_pb.ActivsAck;

    const grpc$f = {};
    grpc$f.web = grpcWeb;
    const proto$g = {};
    proto$g.Jackpot = Jackpot_pb;
    proto$g.Jackpot.JackpotServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$f.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$g.Jackpot.JackpotServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$f.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_JackpotService_Activs = new grpc$f.web.MethodDescriptor('/Jackpot.JackpotService/Activs', grpc$f.web.MethodType.UNARY, proto$g.Jackpot.ActivsGet, proto$g.Jackpot.ActivsAck, function (request) {
        return request.serializeBinary();
    }, proto$g.Jackpot.ActivsAck.deserializeBinary);
    proto$g.Jackpot.JackpotServiceClient.prototype.activs =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Jackpot.JackpotService/Activs', request, metadata || {}, methodDescriptor_JackpotService_Activs, callback);
        };
    proto$g.Jackpot.JackpotServicePromiseClient.prototype.activs =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Jackpot.JackpotService/Activs', request, metadata || {}, methodDescriptor_JackpotService_Activs);
        };
    var Jackpot_grpc_web_pb = proto$g.Jackpot;
    var Jackpot_grpc_web_pb_1 = Jackpot_grpc_web_pb.JackpotServiceClient;

    class JackpotService extends Singleton {
        constructor() {
            super();
            this.achieveService = new Jackpot_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        getActivs(id, type, callback) {
            let req = new Jackpot_pb_6();
            req.setActiid(id);
            if (type) {
                req.setType(type);
            }
            CC.Log("jackpot getActivs req=" + JSON.stringify(req.toObject()));
            this.achieveService.activs(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    CC.Log('completeTask err: ' + JSON.stringify(err));
                    callback && callback(null);
                    return;
                }
                CC.Log("jackpot getActivs ack=" + JSON.stringify(res.toObject()));
                this.m_jackData = res.getJackpot();
                this.m_awards = this.m_jackData.getAwardsList();
                this.m_userArr = res.getVecusersList();
                this.m_myActivs = res.getActivs();
                if (this.m_userArr && this.m_userArr.length > 0) {
                    let myPro = this.m_myActivs.getProcur();
                    let minPro = this.m_userArr[this.m_userArr.length - 1].getProcur();
                    let isExist = this.m_userArr.find((v, k) => {
                        return v.getPid() == GlobalData.getInstance().myPid;
                    });
                    if (myPro > minPro && !isExist) {
                        this.m_userArr.push(this.m_myActivs);
                        this.m_userArr.sort((a, b) => {
                            return b.getProcur() - a.getProcur();
                        });
                    }
                }
                callback && callback(res);
            });
        }
    }

    class JackPotItem extends Laya.Box {
        constructor() {
            super();
            this.m_score0 = 0;
            this.m_dtScore = 0;
            this.m_timeAll0 = 0;
            this.m_totalSec0 = 0;
            this.m_bNext = false;
        }
        onAwake() {
            this.initData();
            this.initUI();
        }
        onDestroy() {
            Laya.timer.clearAll(this);
        }
        initData() {
        }
        initUI() {
            this.lblScore = window.findNodeByName(this, "lblScore");
        }
        reset0() {
            let sTime = this.m_data.getStime();
            let eTime = this.m_data.getEtime();
            let curT = window.getNow();
            let scoreMin = this.m_data.getProcur();
            let scoreMax = this.m_data.getPromax();
            this.m_score0 = this.m_data.getProcur();
            this.m_timeAll0 = 0;
            let totalT = eTime - sTime;
            this.m_totalSec0 = eTime - curT;
            let dt = (scoreMax - scoreMin) / totalT;
            this.m_dtScore = dt;
            this.m_score0 = Math.floor((curT - sTime) * dt + scoreMin);
            if (curT >= sTime && curT < eTime) {
                this.visible = true;
                Laya.timer.loop(1000, this, this.scheduleTimer);
            }
            else if (curT < sTime) {
                this.m_score0 = scoreMax;
                let myActiv = JackpotService.getInstance().m_myActivs;
                let sTime1 = myActiv.getStime();
                let eTime1 = myActiv.getEtime();
                if (curT >= eTime1 && curT - eTime1 < 24 * 3600) {
                    this.m_bNext = false;
                }
                else {
                    this.m_bNext = true;
                    this.lblScore.text = WARNING.TUS_BEGIN;
                }
            }
            else {
                this.m_score0 = scoreMax;
                if (sTime == 0) {
                    this.visible = false;
                }
            }
            this.lblScore.text = "R$ " + window.numToSplitStr(this.m_score0 / 100);
        }
        getJackData() {
            JackpotService.getInstance().getActivs(2003, null, (res) => {
                if (res) {
                    this.m_data = JackpotService.getInstance().m_jackData;
                    this.reset0();
                }
            });
        }
        scheduleTimer() {
            this.m_timeAll0++;
            let dtScore = this.m_dtScore;
            let tmp = Math.floor(dtScore / 10);
            this.addScoreEffect(10, this.m_score0, 50, tmp);
            this.m_score0 += Math.floor(dtScore);
            if (this.m_timeAll0 >= this.m_totalSec0) {
                this.lblScore.text = "R$ " + window.numToSplitStr(this.m_data.getPromax() / 100);
                Laya.timer.clearAll(this);
            }
        }
        addScoreEffect(count, score, delay, increase) {
            count--;
            this.lblScore.text = "R$ " + window.numToSplitStr(score / 100);
            if (count >= 0) {
                let gameScore = score + increase;
                Laya.timer.once(delay, this, this.addScoreEffect, [count, gameScore, delay, increase]);
            }
        }
    }

    class NodeMenu extends Laya.Box {
        constructor() {
            super(...arguments);
            this.m_type = 0;
        }
        onEnable() {
            this.Show();
        }
        Init(param) {
            this.inited = true;
            let panel = window.findNodeByName(this, "panel");
            panel.vScrollBarSkin = "";
            let nodeView = window.findNodeByName(this, "navView");
            this.nodeView = nodeView;
            window.InitialNode(nodeView);
            this.nodeCont = nodeView.nodeCont;
            this.nodePrv = nodeView.nodePrv;
            this.nodePrv.listSel.vScrollBarSkin = "";
            this.nodePrv.listSel.renderHandler = new Laya.Handler(this, this.updatePrvItem);
            let btnArr = [this.nodeCont.btnHot, this.nodeCont.btnCasino, this.nodeCont.btnSlot,
                this.nodeCont.btnFish, this.nodeCont.btnLive, this.nodeCont.btnSport,
                this.nodeCont.btnVip, this.nodeCont.btnAffiliate, this.nodeCont.btnServer,
                nodeView.btnPopular, nodeView.btnLike, nodeView.btnRecent,
                nodeView.btnPlay, nodeView.btnSign, nodeView.btnAct,
                this.nodeCont.btnSlot.btnArrow, this.nodeCont.btnInstall,];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show(param) {
            if (!this.inited) {
                this.Init(param);
            }
            this.m_type = param || 0;
            this.setGameInfo();
        }
        Close() {
        }
        setGameInfo() {
            return __awaiter(this, void 0, void 0, function* () {
                let gameList = yield ThirdGameService.getInstance().queryGame(-1, "main");
                if (gameList.getLength() > 0) {
                    this.m_gameDatas = gameList;
                }
                this.nodePrv.listSel.dataSource = GAME_SOURCE;
                if (DeviceData.getInstance().checkAppEnv()) {
                    this.nodeCont.btnInstall.visible = false;
                }
            });
        }
        checkH5Close() {
            let document = Laya.Browser.window.document;
            var h5Div = document.getElementById("h5Div");
            var ctrlDiv = document.getElementById("ctrlDiv");
            h5Div.style.display = 'none';
            ctrlDiv.style.display = 'none';
            var myIframe = document.getElementById("myIframe");
            myIframe.src = "about:blank";
            window.h5HideCallback && window.h5HideCallback();
        }
        updatePrvItem(cell, index) {
            let itemData = cell.dataSource;
            window.InitialNode(cell);
            cell.btnItem.skin = itemData.img + ".png";
            cell.btnItem.clickHandler = Laya.Handler.create(this, () => {
                if (this.m_gameDatas) {
                    let gameList = this.m_gameDatas.get(2);
                    if (gameList) {
                        let gameArr = gameList.getGamesList();
                        GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 2, gameArr, itemData);
                    }
                }
            }, null, false);
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnHot") {
                this.onbtnHot();
            }
            else if (node.name == "btnCasino") {
                this.onbtnCasino();
            }
            else if (node.name == "btnSlot") {
                this.onbtnSlot();
            }
            else if (node.name == "btnFish") {
                this.onbtnFish();
            }
            else if (node.name == "btnLive") {
                this.onbtnLive();
            }
            else if (node.name == "btnSport") {
                this.onbtnSport();
            }
            else if (node.name == "btnVip") {
                this.onbtnVip();
            }
            else if (node.name == "btnAffiliate") {
                this.onbtnAffiliate();
            }
            else if (node.name == "btnServer") {
                this.onbtnServer();
            }
            else if (node.name == "btnPopular") {
                this.onbtnPopular();
            }
            else if (node.name == "btnLike") {
                this.onbtnLike();
            }
            else if (node.name == "btnRecent") {
                this.onbtnRecent();
            }
            else if (node.name == "btnSign") {
                this.onbtnSign();
            }
            else if (node.name == "btnPlay") {
                this.onbtnPlay();
            }
            else if (node.name == "btnArrow") {
                this.onbtnArrow();
            }
            else if (node.name == "btnInstall") {
                this.onbtnInstall();
            }
            else if (node.name == "btnAct") {
                this.onbtnAct();
            }
            if (this.m_type == 1) {
                this.checkH5Close();
            }
        }
        onbtnHot() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(0);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 0, gameArr);
                }
            }
        }
        onbtnCasino() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(1);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 1, gameArr);
                }
            }
        }
        onbtnSlot() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(2);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 2, gameArr);
                }
            }
        }
        onbtnFish() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(3);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 3, gameArr);
                }
            }
        }
        onbtnLive() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(4);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 4, gameArr);
                }
            }
        }
        onbtnSport(type) {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(5);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    if (type == 1) {
                        if (gameArr[0]) {
                            PopupManager.Show(PREFAB_LOBBY.GAME_BRIEF, gameArr[0]);
                            this.Close();
                        }
                    }
                    else {
                        GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 5, gameArr);
                    }
                }
            }
        }
        onbtnVip() {
            if (GlobalData.getInstance().myPid > 1000) {
                PopupManager.Show(PREFAB_LOBBY.VIP_WIN, null);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
            this.Close();
        }
        onbtnAffiliate() {
            GlobalData.getInstance().lobbyScene.jumpToSub(2);
            this.Close();
        }
        onbtnServer() {
            if (GlobalData.getInstance().myPid > 1000) {
                window.gotoService();
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.HALL_MENU);
        }
        onbtnPopular() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(0);
                if (gameList) {
                    let arr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 0, arr);
                }
            }
        }
        onbtnLike() {
            if (GlobalData.getInstance().myPid > 1000) {
                GlobalData.getInstance().lobbyScene.showGameSelLayer(1, 0);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
        }
        onbtnRecent() {
            if (GlobalData.getInstance().myPid > 1000) {
                GlobalData.getInstance().lobbyScene.showGameSelLayer(1, 1);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
        }
        onbtnSign() {
            if (GlobalData.getInstance().myPid > 1000) {
                PopupManager.Show(PREFAB_LOBBY.VIP_RATE, null);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
            this.Close();
        }
        onbtnPlay() {
            GlobalData.getInstance().lobbyScene.jumpToSub(2);
            this.Close();
        }
        onbtnArrow() {
            if (this.nodeCont.btnSlot.btnArrow.selected) {
            }
            else {
            }
            this.nodePrv.visible = this.nodeCont.btnSlot.btnArrow.selected;
        }
        onbtnInstall() {
            if (Laya.Browser.onIOS || Laya.Browser.onMac) {
                PopupManager.Show(PREFAB_LOBBY.DOWN_APP, null);
            }
            else {
                let downUrl = "https://www.winfun.love/pixel/download/WinFun-1.apk";
                if (GlobalVariables.SOURCE_ID_ANDROID == 1100204) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-1.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1100205) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-2.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1100206) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-3.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1101001) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-4.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1101002) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-5.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1101003) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-6.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1102002) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-official.apk";
                }
                window.open(downUrl);
            }
        }
        onbtnAct() {
            GlobalData.getInstance().lobbyScene.jumpToSub(1);
        }
        onDestroy() {
        }
    }

    var Push_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.push.ModifyUserOSTokenAck', null, global);
    goog.exportSymbol('proto.push.ModifyUserOSTokenReq', null, global);
    proto.push.ModifyUserOSTokenReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.push.ModifyUserOSTokenReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.push.ModifyUserOSTokenReq.displayName = 'proto.push.ModifyUserOSTokenReq';
    }
    proto.push.ModifyUserOSTokenAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.push.ModifyUserOSTokenAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.push.ModifyUserOSTokenAck.displayName = 'proto.push.ModifyUserOSTokenAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.push.ModifyUserOSTokenReq.prototype.toObject = function (opt_includeInstance) {
            return proto.push.ModifyUserOSTokenReq.toObject(opt_includeInstance, this);
        };
        proto.push.ModifyUserOSTokenReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                uid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                ostype: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                token: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.push.ModifyUserOSTokenReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.push.ModifyUserOSTokenReq;
        return proto.push.ModifyUserOSTokenReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.push.ModifyUserOSTokenReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setUid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setOstype(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setToken(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.push.ModifyUserOSTokenReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.push.ModifyUserOSTokenReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.push.ModifyUserOSTokenReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getUid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getOstype();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getToken();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
    };
    proto.push.ModifyUserOSTokenReq.prototype.getUid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.push.ModifyUserOSTokenReq.prototype.setUid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.push.ModifyUserOSTokenReq.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.push.ModifyUserOSTokenReq.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.push.ModifyUserOSTokenReq.prototype.getOstype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.push.ModifyUserOSTokenReq.prototype.setOstype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.push.ModifyUserOSTokenReq.prototype.getToken = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.push.ModifyUserOSTokenReq.prototype.setToken = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.push.ModifyUserOSTokenReq.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.push.ModifyUserOSTokenReq.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.push.ModifyUserOSTokenAck.prototype.toObject = function (opt_includeInstance) {
            return proto.push.ModifyUserOSTokenAck.toObject(opt_includeInstance, this);
        };
        proto.push.ModifyUserOSTokenAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.push.ModifyUserOSTokenAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.push.ModifyUserOSTokenAck;
        return proto.push.ModifyUserOSTokenAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.push.ModifyUserOSTokenAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.push.ModifyUserOSTokenAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.push.ModifyUserOSTokenAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.push.ModifyUserOSTokenAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.push.ModifyUserOSTokenAck.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.push.ModifyUserOSTokenAck.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.push.ModifyUserOSTokenAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.push.ModifyUserOSTokenAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    goog.object.extend(exports, proto.push);

    });
    var Push_pb_1 = Push_pb.ModifyUserOSTokenAck;
    var Push_pb_2 = Push_pb.ModifyUserOSTokenReq;

    const grpc$g = {};
    grpc$g.web = grpcWeb;
    const proto$h = {};
    proto$h.push = Push_pb;
    proto$h.push.PushServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$g.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$h.push.PushServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$g.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_PushService_modifyUserOSToken = new grpc$g.web.MethodDescriptor('/push.PushService/modifyUserOSToken', grpc$g.web.MethodType.UNARY, proto$h.push.ModifyUserOSTokenReq, proto$h.push.ModifyUserOSTokenAck, function (request) {
        return request.serializeBinary();
    }, proto$h.push.ModifyUserOSTokenAck.deserializeBinary);
    proto$h.push.PushServiceClient.prototype.modifyUserOSToken =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/push.PushService/modifyUserOSToken', request, metadata || {}, methodDescriptor_PushService_modifyUserOSToken, callback);
        };
    proto$h.push.PushServicePromiseClient.prototype.modifyUserOSToken =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/push.PushService/modifyUserOSToken', request, metadata || {}, methodDescriptor_PushService_modifyUserOSToken);
        };
    var Push_grpc_web_pb = proto$h.push;
    var Push_grpc_web_pb_1 = Push_grpc_web_pb.PushServiceClient;

    class PushService extends Singleton {
        constructor() {
            super();
            this.mPushService = null;
            this.mPushService = new Push_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        registerDeviceToken(sysType) {
            let req = new Push_pb_2();
            req.setUid(GlobalData.getInstance().myPid);
            req.setTicket(GlobalData.getInstance().myTicket);
            req.setOstype(sysType);
            req.setToken(DeviceData.getInstance().deviceToken);
            req.setAppid(10001);
            this.mPushService.modifyUserOSToken(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    CC.Loge('设置推送token失败:' + JSON.stringify(err));
                    return;
                }
                switch (res.getCret()) {
                    case 0:
                        CC.Log('设置推送token成功');
                        break;
                    case -1:
                        CC.Log('设置推送token失败');
                        break;
                    case -2:
                        CC.Log('设置推送token通行证错误');
                        break;
                    case -3:
                        CC.Log('设置推送token通行证失效');
                        break;
                    default:
                        break;
                }
            });
        }
    }

    const grpc$h = {};
    grpc$h.web = grpcWeb;
    const proto$i = {};
    proto$i.ConnectIsland = connectisland_pb;
    proto$i.ConnectIsland.ConnectIslandServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$h.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$i.ConnectIsland.ConnectIslandServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$h.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_ConnectIslandService_GetTimeStamp = new grpc$h.web.MethodDescriptor('/ConnectIsland.ConnectIslandService/GetTimeStamp', grpc$h.web.MethodType.UNARY, proto$i.ConnectIsland.GetTimeStampRequest, proto$i.ConnectIsland.GetTimeStampResponse, function (request) {
        return request.serializeBinary();
    }, proto$i.ConnectIsland.GetTimeStampResponse.deserializeBinary);
    proto$i.ConnectIsland.ConnectIslandServiceClient.prototype.getTimeStamp =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/ConnectIsland.ConnectIslandService/GetTimeStamp', request, metadata || {}, methodDescriptor_ConnectIslandService_GetTimeStamp, callback);
        };
    proto$i.ConnectIsland.ConnectIslandServicePromiseClient.prototype.getTimeStamp =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/ConnectIsland.ConnectIslandService/GetTimeStamp', request, metadata || {}, methodDescriptor_ConnectIslandService_GetTimeStamp);
        };
    const methodDescriptor_ConnectIslandService_GetToken = new grpc$h.web.MethodDescriptor('/ConnectIsland.ConnectIslandService/GetToken', grpc$h.web.MethodType.UNARY, proto$i.ConnectIsland.GetTokenRequest, proto$i.ConnectIsland.GetTokenResponse, function (request) {
        return request.serializeBinary();
    }, proto$i.ConnectIsland.GetTokenResponse.deserializeBinary);
    proto$i.ConnectIsland.ConnectIslandServiceClient.prototype.getToken =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/ConnectIsland.ConnectIslandService/GetToken', request, metadata || {}, methodDescriptor_ConnectIslandService_GetToken, callback);
        };
    proto$i.ConnectIsland.ConnectIslandServicePromiseClient.prototype.getToken =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/ConnectIsland.ConnectIslandService/GetToken', request, metadata || {}, methodDescriptor_ConnectIslandService_GetToken);
        };
    const methodDescriptor_ConnectIslandService_GetDMD = new grpc$h.web.MethodDescriptor('/ConnectIsland.ConnectIslandService/GetDMD', grpc$h.web.MethodType.UNARY, proto$i.ConnectIsland.GetDMDRequest, proto$i.ConnectIsland.GetDMDResponse, function (request) {
        return request.serializeBinary();
    }, proto$i.ConnectIsland.GetDMDResponse.deserializeBinary);
    proto$i.ConnectIsland.ConnectIslandServiceClient.prototype.getDMD =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/ConnectIsland.ConnectIslandService/GetDMD', request, metadata || {}, methodDescriptor_ConnectIslandService_GetDMD, callback);
        };
    proto$i.ConnectIsland.ConnectIslandServicePromiseClient.prototype.getDMD =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/ConnectIsland.ConnectIslandService/GetDMD', request, metadata || {}, methodDescriptor_ConnectIslandService_GetDMD);
        };
    const methodDescriptor_ConnectIslandService_GetRoundData = new grpc$h.web.MethodDescriptor('/ConnectIsland.ConnectIslandService/GetRoundData', grpc$h.web.MethodType.UNARY, proto$i.ConnectIsland.GetRoundDataRequest, proto$i.ConnectIsland.GetRoundDataResponse, function (request) {
        return request.serializeBinary();
    }, proto$i.ConnectIsland.GetRoundDataResponse.deserializeBinary);
    proto$i.ConnectIsland.ConnectIslandServiceClient.prototype.getRoundData =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/ConnectIsland.ConnectIslandService/GetRoundData', request, metadata || {}, methodDescriptor_ConnectIslandService_GetRoundData, callback);
        };
    proto$i.ConnectIsland.ConnectIslandServicePromiseClient.prototype.getRoundData =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/ConnectIsland.ConnectIslandService/GetRoundData', request, metadata || {}, methodDescriptor_ConnectIslandService_GetRoundData);
        };
    var connectisland_grpc_web_pb = proto$i.ConnectIsland;
    var connectisland_grpc_web_pb_1 = connectisland_grpc_web_pb.ConnectIslandServicePromiseClient;

    class ConnectislandService extends Singleton {
        constructor() {
            super();
            this.servicePromiseClient = null;
            this.servicePromiseClient = new connectisland_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        getToken() {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new connectisland_pb_1();
                request.setClientId(GlobalData.getInstance().myPid + "");
                return yield this.servicePromiseClient.getToken(request);
            });
        }
        getDMD() {
            return __awaiter(this, void 0, void 0, function* () {
                let req = new connectisland_pb_3();
                req.setClientId(GlobalData.getInstance().myPid + "");
                let resp = yield this.servicePromiseClient.getDMD(req);
                if (resp) {
                    return resp.getDmd();
                }
                TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                return null;
            });
        }
    }

    const grpc$i = {};
    grpc$i.web = grpcWeb;
    const proto$j = {};
    proto$j.Exchange = Exchange_pb;
    proto$j.Exchange.ExchangeServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$i.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$j.Exchange.ExchangeServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$i.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_ExchangeService_Info = new grpc$i.web.MethodDescriptor('/Exchange.ExchangeService/Info', grpc$i.web.MethodType.UNARY, proto$j.Exchange.InfoGet, proto$j.Exchange.InfoAck, function (request) {
        return request.serializeBinary();
    }, proto$j.Exchange.InfoAck.deserializeBinary);
    proto$j.Exchange.ExchangeServiceClient.prototype.info =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Exchange.ExchangeService/Info', request, metadata || {}, methodDescriptor_ExchangeService_Info, callback);
        };
    proto$j.Exchange.ExchangeServicePromiseClient.prototype.info =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Exchange.ExchangeService/Info', request, metadata || {}, methodDescriptor_ExchangeService_Info);
        };
    const methodDescriptor_ExchangeService_Award = new grpc$i.web.MethodDescriptor('/Exchange.ExchangeService/Award', grpc$i.web.MethodType.UNARY, proto$j.Exchange.AwardGet, proto$j.Exchange.AwardAck, function (request) {
        return request.serializeBinary();
    }, proto$j.Exchange.AwardAck.deserializeBinary);
    proto$j.Exchange.ExchangeServiceClient.prototype.award =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Exchange.ExchangeService/Award', request, metadata || {}, methodDescriptor_ExchangeService_Award, callback);
        };
    proto$j.Exchange.ExchangeServicePromiseClient.prototype.award =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Exchange.ExchangeService/Award', request, metadata || {}, methodDescriptor_ExchangeService_Award);
        };
    const methodDescriptor_ExchangeService_Motify = new grpc$i.web.MethodDescriptor('/Exchange.ExchangeService/Motify', grpc$i.web.MethodType.UNARY, proto$j.Exchange.MotifyGet, proto$j.Exchange.MotifyAck, function (request) {
        return request.serializeBinary();
    }, proto$j.Exchange.MotifyAck.deserializeBinary);
    proto$j.Exchange.ExchangeServiceClient.prototype.motify =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Exchange.ExchangeService/Motify', request, metadata || {}, methodDescriptor_ExchangeService_Motify, callback);
        };
    proto$j.Exchange.ExchangeServicePromiseClient.prototype.motify =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Exchange.ExchangeService/Motify', request, metadata || {}, methodDescriptor_ExchangeService_Motify);
        };
    const methodDescriptor_ExchangeService_History = new grpc$i.web.MethodDescriptor('/Exchange.ExchangeService/History', grpc$i.web.MethodType.UNARY, proto$j.Exchange.HistoryGet, proto$j.Exchange.HistoryAck, function (request) {
        return request.serializeBinary();
    }, proto$j.Exchange.HistoryAck.deserializeBinary);
    proto$j.Exchange.ExchangeServiceClient.prototype.history =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Exchange.ExchangeService/History', request, metadata || {}, methodDescriptor_ExchangeService_History, callback);
        };
    proto$j.Exchange.ExchangeServicePromiseClient.prototype.history =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Exchange.ExchangeService/History', request, metadata || {}, methodDescriptor_ExchangeService_History);
        };
    const methodDescriptor_ExchangeService_Exchange = new grpc$i.web.MethodDescriptor('/Exchange.ExchangeService/Exchange', grpc$i.web.MethodType.UNARY, proto$j.Exchange.ExchangeGet, proto$j.Exchange.ExchangeAck, function (request) {
        return request.serializeBinary();
    }, proto$j.Exchange.ExchangeAck.deserializeBinary);
    proto$j.Exchange.ExchangeServiceClient.prototype.exchange =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Exchange.ExchangeService/Exchange', request, metadata || {}, methodDescriptor_ExchangeService_Exchange, callback);
        };
    proto$j.Exchange.ExchangeServicePromiseClient.prototype.exchange =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Exchange.ExchangeService/Exchange', request, metadata || {}, methodDescriptor_ExchangeService_Exchange);
        };
    const methodDescriptor_ExchangeService_Price = new grpc$i.web.MethodDescriptor('/Exchange.ExchangeService/Price', grpc$i.web.MethodType.UNARY, proto$j.Exchange.PriceGet, proto$j.Exchange.PriceAck, function (request) {
        return request.serializeBinary();
    }, proto$j.Exchange.PriceAck.deserializeBinary);
    proto$j.Exchange.ExchangeServiceClient.prototype.price =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Exchange.ExchangeService/Price', request, metadata || {}, methodDescriptor_ExchangeService_Price, callback);
        };
    proto$j.Exchange.ExchangeServicePromiseClient.prototype.price =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Exchange.ExchangeService/Price', request, metadata || {}, methodDescriptor_ExchangeService_Price);
        };
    var Exchange_grpc_web_pb = proto$j.Exchange;
    var Exchange_grpc_web_pb_1 = Exchange_grpc_web_pb.ExchangeServicePromiseClient;

    class ExchangeService extends Singleton {
        constructor() {
            super();
            this.exchangeServiceClient = null;
            this.exchangeServiceClient = new Exchange_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        exchange(itemId) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Exchange_pb_1();
                request.setType(1);
                request.setPid(GlobalData.getInstance().myPid);
                request.setItemid(itemId);
                request.setItemnum(1);
                let ack = yield this.exchangeServiceClient.exchange(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
        price(itemIdList) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Exchange_pb_3();
                request.setItemidsList(itemIdList);
                let ack = yield this.exchangeServiceClient.price(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
        info() {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Exchange_pb_5();
                request.setHasshop(true);
                let infoAck = yield this.exchangeServiceClient.info(request, GlobalData.getInstance().baseMeta);
                return infoAck;
            });
        }
        award(num) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Exchange_pb_7();
                request.setNum(num);
                request.setAppid(Number(GlobalVariables.APP_ID));
                console.log("AwardGet  ", request.toObject());
                let ack = yield this.exchangeServiceClient.award(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
        modify(info) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Exchange_pb_9();
                request.setInfo(info);
                let ack = yield this.exchangeServiceClient.motify(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
        history(pageNum, pageSize, status) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Exchange_pb_11();
                request.setPage(pageNum);
                request.setItem(pageSize);
                request.setStatus(status);
                let ack = yield this.exchangeServiceClient.history(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
    }

    const grpc$j = {};
    grpc$j.web = grpcWeb;


    const proto$k = {};
    proto$k.LuckyRoulette = LuckyRoulette_pb;
    proto$k.LuckyRoulette.LuckyRouletteServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$j.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$k.LuckyRoulette.LuckyRouletteServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$j.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_LuckyRouletteService_QueryRouletteInfo = new grpc$j.web.MethodDescriptor('/LuckyRoulette.LuckyRouletteService/QueryRouletteInfo', grpc$j.web.MethodType.UNARY, proto$k.LuckyRoulette.QueryRouletteInfoRequest, proto$k.LuckyRoulette.QueryRouletteInfoResponse, function (request) {
        return request.serializeBinary();
    }, proto$k.LuckyRoulette.QueryRouletteInfoResponse.deserializeBinary);
    proto$k.LuckyRoulette.LuckyRouletteServiceClient.prototype.queryRouletteInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/LuckyRoulette.LuckyRouletteService/QueryRouletteInfo', request, metadata || {}, methodDescriptor_LuckyRouletteService_QueryRouletteInfo, callback);
        };
    proto$k.LuckyRoulette.LuckyRouletteServicePromiseClient.prototype.queryRouletteInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/LuckyRoulette.LuckyRouletteService/QueryRouletteInfo', request, metadata || {}, methodDescriptor_LuckyRouletteService_QueryRouletteInfo);
        };
    const methodDescriptor_LuckyRouletteService_DoTurn = new grpc$j.web.MethodDescriptor('/LuckyRoulette.LuckyRouletteService/DoTurn', grpc$j.web.MethodType.UNARY, proto$k.LuckyRoulette.DoTurnRequest, proto$k.LuckyRoulette.DoTurnResponse, function (request) {
        return request.serializeBinary();
    }, proto$k.LuckyRoulette.DoTurnResponse.deserializeBinary);
    proto$k.LuckyRoulette.LuckyRouletteServiceClient.prototype.doTurn =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/LuckyRoulette.LuckyRouletteService/DoTurn', request, metadata || {}, methodDescriptor_LuckyRouletteService_DoTurn, callback);
        };
    proto$k.LuckyRoulette.LuckyRouletteServicePromiseClient.prototype.doTurn =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/LuckyRoulette.LuckyRouletteService/DoTurn', request, metadata || {}, methodDescriptor_LuckyRouletteService_DoTurn);
        };
    var LuckyRoulette_grpc_web_pb = proto$k.LuckyRoulette;
    var LuckyRoulette_grpc_web_pb_1 = LuckyRoulette_grpc_web_pb.LuckyRouletteServiceClient;

    class LuckyRouletteService extends Singleton {
        constructor() {
            super();
            this.luckyService = new LuckyRoulette_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        queryRouletteInfo(callback) {
            let req = new LuckyRoulette_pb_1();
            req.setNpid(GlobalData.getInstance().myPid);
            this.luckyService.queryRouletteInfo(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err || res.getNret() !== Common_pb_1.SUCCESS) {
                    let errStr = err ? JSON.stringify(err) : JSON.stringify(res);
                    CC.Loge('loadLuckyTableDatas err: ' + errStr);
                    callback(null);
                    return;
                }
                callback(res);
            });
        }
        doTurn(callback) {
            let req = new LuckyRoulette_pb_5();
            req.setNpid(GlobalData.getInstance().myPid);
            this.luckyService.doTurn(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err || res.getNret() !== Common_pb_1.SUCCESS) {
                    let errStr = err ? JSON.stringify(err) : JSON.stringify(res);
                    CC.Log('turnTable err: ' + errStr);
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                    callback(-1);
                    return;
                }
                callback(res);
            });
        }
    }

    var OutTask_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.OutTask.ClientFinishAck', null, global);
    goog.exportSymbol('proto.OutTask.ClientFinishGet', null, global);
    goog.exportSymbol('proto.OutTask.STTaskAward', null, global);
    goog.exportSymbol('proto.OutTask.STTaskItem', null, global);
    goog.exportSymbol('proto.OutTask.TaskAwardAck', null, global);
    goog.exportSymbol('proto.OutTask.TaskAwardGet', null, global);
    goog.exportSymbol('proto.OutTask.TaskAwardsNoti', null, global);
    goog.exportSymbol('proto.OutTask.TaskClientNoti', null, global);
    goog.exportSymbol('proto.OutTask.TaskDistriNoti', null, global);
    goog.exportSymbol('proto.OutTask.TaskInfoAck', null, global);
    goog.exportSymbol('proto.OutTask.TaskInfoGet', null, global);
    goog.exportSymbol('proto.OutTask.TaskServerItem', null, global);
    goog.exportSymbol('proto.OutTask.TaskServerNoti', null, global);
    goog.exportSymbol('proto.OutTask.UpUserInfoAck', null, global);
    goog.exportSymbol('proto.OutTask.UpUserInfoGet', null, global);
    proto.OutTask.STTaskAward = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.STTaskAward, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.STTaskAward.displayName = 'proto.OutTask.STTaskAward';
    }
    proto.OutTask.STTaskItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.OutTask.STTaskItem.repeatedFields_, null);
    };
    goog.inherits(proto.OutTask.STTaskItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.STTaskItem.displayName = 'proto.OutTask.STTaskItem';
    }
    proto.OutTask.TaskServerItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.TaskServerItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.TaskServerItem.displayName = 'proto.OutTask.TaskServerItem';
    }
    proto.OutTask.TaskServerNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.OutTask.TaskServerNoti.repeatedFields_, null);
    };
    goog.inherits(proto.OutTask.TaskServerNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.TaskServerNoti.displayName = 'proto.OutTask.TaskServerNoti';
    }
    proto.OutTask.TaskClientNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.TaskClientNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.TaskClientNoti.displayName = 'proto.OutTask.TaskClientNoti';
    }
    proto.OutTask.TaskDistriNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.TaskDistriNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.TaskDistriNoti.displayName = 'proto.OutTask.TaskDistriNoti';
    }
    proto.OutTask.TaskAwardsNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.OutTask.TaskAwardsNoti.repeatedFields_, null);
    };
    goog.inherits(proto.OutTask.TaskAwardsNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.TaskAwardsNoti.displayName = 'proto.OutTask.TaskAwardsNoti';
    }
    proto.OutTask.TaskInfoGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.TaskInfoGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.TaskInfoGet.displayName = 'proto.OutTask.TaskInfoGet';
    }
    proto.OutTask.TaskInfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.OutTask.TaskInfoAck.repeatedFields_, null);
    };
    goog.inherits(proto.OutTask.TaskInfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.TaskInfoAck.displayName = 'proto.OutTask.TaskInfoAck';
    }
    proto.OutTask.TaskAwardGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.TaskAwardGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.TaskAwardGet.displayName = 'proto.OutTask.TaskAwardGet';
    }
    proto.OutTask.TaskAwardAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.TaskAwardAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.TaskAwardAck.displayName = 'proto.OutTask.TaskAwardAck';
    }
    proto.OutTask.ClientFinishGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.ClientFinishGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.ClientFinishGet.displayName = 'proto.OutTask.ClientFinishGet';
    }
    proto.OutTask.ClientFinishAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.ClientFinishAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.ClientFinishAck.displayName = 'proto.OutTask.ClientFinishAck';
    }
    proto.OutTask.UpUserInfoGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.UpUserInfoGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.UpUserInfoGet.displayName = 'proto.OutTask.UpUserInfoGet';
    }
    proto.OutTask.UpUserInfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.OutTask.UpUserInfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.OutTask.UpUserInfoAck.displayName = 'proto.OutTask.UpUserInfoAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.STTaskAward.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.STTaskAward.toObject(opt_includeInstance, this);
        };
        proto.OutTask.STTaskAward.toObject = function (includeInstance, msg) {
            var f, obj = {
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                value: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                itemid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.STTaskAward.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.STTaskAward;
        return proto.OutTask.STTaskAward.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.STTaskAward.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setValue(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setItemid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setItemnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.STTaskAward.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.STTaskAward.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.STTaskAward.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getValue();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getItemid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
    };
    proto.OutTask.STTaskAward.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.STTaskAward.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.STTaskAward.prototype.getValue = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.STTaskAward.prototype.setValue = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.OutTask.STTaskAward.prototype.getItemid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.OutTask.STTaskAward.prototype.setItemid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.OutTask.STTaskAward.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.OutTask.STTaskAward.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.OutTask.STTaskItem.repeatedFields_ = [31, 32, 33];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.STTaskItem.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.STTaskItem.toObject(opt_includeInstance, this);
        };
        proto.OutTask.STTaskItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                rollid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                count: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                max: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                finish: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                limit: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                stime: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                etime: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                state: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 21, ""),
                stateall: googleProtobuf.Message.getFieldWithDefault(msg, 22, 0),
                auto: googleProtobuf.Message.getFieldWithDefault(msg, 23, 0),
                loop: googleProtobuf.Message.getFieldWithDefault(msg, 24, 0),
                rate: googleProtobuf.Message.getFieldWithDefault(msg, 25, 0),
                belongList: (f = googleProtobuf.Message.getRepeatedField(msg, 31)) == null ? undefined : f,
                unionsList: (f = googleProtobuf.Message.getRepeatedField(msg, 32)) == null ? undefined : f,
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.OutTask.STTaskAward.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.STTaskItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.STTaskItem;
        return proto.OutTask.STTaskItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.STTaskItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setRollid(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setCount(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setMax(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setFinish(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setLimit(value);
                    break;
                case 9:
                    var value = (reader.readUint32());
                    msg.setStime(value);
                    break;
                case 10:
                    var value = (reader.readUint32());
                    msg.setEtime(value);
                    break;
                case 11:
                    var value = (reader.readUint32());
                    msg.setState(value);
                    break;
                case 12:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 21:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 22:
                    var value = (reader.readUint32());
                    msg.setStateall(value);
                    break;
                case 23:
                    var value = (reader.readSint32());
                    msg.setAuto(value);
                    break;
                case 24:
                    var value = (reader.readSint32());
                    msg.setLoop(value);
                    break;
                case 25:
                    var value = (reader.readSint32());
                    msg.setRate(value);
                    break;
                case 31:
                    var values = (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addBelong(values[i]);
                    }
                    break;
                case 32:
                    var values = (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addUnions(values[i]);
                    }
                    break;
                case 33:
                    var value = new proto.OutTask.STTaskAward;
                    reader.readMessage(value, proto.OutTask.STTaskAward.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.STTaskItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.STTaskItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.STTaskItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getRollid();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getCount();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getMax();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getFinish();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getLimit();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
        f = message.getStime();
        if (f !== 0) {
            writer.writeUint32(9, f);
        }
        f = message.getEtime();
        if (f !== 0) {
            writer.writeUint32(10, f);
        }
        f = message.getState();
        if (f !== 0) {
            writer.writeUint32(11, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(12, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(21, f);
        }
        f = message.getStateall();
        if (f !== 0) {
            writer.writeUint32(22, f);
        }
        f = message.getAuto();
        if (f !== 0) {
            writer.writeSint32(23, f);
        }
        f = message.getLoop();
        if (f !== 0) {
            writer.writeSint32(24, f);
        }
        f = message.getRate();
        if (f !== 0) {
            writer.writeSint32(25, f);
        }
        f = message.getBelongList();
        if (f.length > 0) {
            writer.writePackedSint32(31, f);
        }
        f = message.getUnionsList();
        if (f.length > 0) {
            writer.writePackedSint32(32, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(33, f, proto.OutTask.STTaskAward.serializeBinaryToWriter);
        }
    };
    proto.OutTask.STTaskItem.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.STTaskItem.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.STTaskItem.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.STTaskItem.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.OutTask.STTaskItem.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.OutTask.STTaskItem.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.OutTask.STTaskItem.prototype.getRollid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.OutTask.STTaskItem.prototype.setRollid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.OutTask.STTaskItem.prototype.getCount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.OutTask.STTaskItem.prototype.setCount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.OutTask.STTaskItem.prototype.getMax = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.OutTask.STTaskItem.prototype.setMax = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.OutTask.STTaskItem.prototype.getFinish = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.OutTask.STTaskItem.prototype.setFinish = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.OutTask.STTaskItem.prototype.getLimit = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.OutTask.STTaskItem.prototype.setLimit = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.OutTask.STTaskItem.prototype.getStime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.OutTask.STTaskItem.prototype.setStime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.OutTask.STTaskItem.prototype.getEtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.OutTask.STTaskItem.prototype.setEtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.OutTask.STTaskItem.prototype.getState = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.OutTask.STTaskItem.prototype.setState = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.OutTask.STTaskItem.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.OutTask.STTaskItem.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.OutTask.STTaskItem.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 21, ""));
    };
    proto.OutTask.STTaskItem.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 21, value);
    };
    proto.OutTask.STTaskItem.prototype.getStateall = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 22, 0));
    };
    proto.OutTask.STTaskItem.prototype.setStateall = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 22, value);
    };
    proto.OutTask.STTaskItem.prototype.getAuto = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 23, 0));
    };
    proto.OutTask.STTaskItem.prototype.setAuto = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 23, value);
    };
    proto.OutTask.STTaskItem.prototype.getLoop = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 24, 0));
    };
    proto.OutTask.STTaskItem.prototype.setLoop = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 24, value);
    };
    proto.OutTask.STTaskItem.prototype.getRate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 25, 0));
    };
    proto.OutTask.STTaskItem.prototype.setRate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 25, value);
    };
    proto.OutTask.STTaskItem.prototype.getBelongList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 31));
    };
    proto.OutTask.STTaskItem.prototype.setBelongList = function (value) {
        return googleProtobuf.Message.setField(this, 31, value || []);
    };
    proto.OutTask.STTaskItem.prototype.addBelong = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 31, value, opt_index);
    };
    proto.OutTask.STTaskItem.prototype.clearBelongList = function () {
        return this.setBelongList([]);
    };
    proto.OutTask.STTaskItem.prototype.getUnionsList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 32));
    };
    proto.OutTask.STTaskItem.prototype.setUnionsList = function (value) {
        return googleProtobuf.Message.setField(this, 32, value || []);
    };
    proto.OutTask.STTaskItem.prototype.addUnions = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 32, value, opt_index);
    };
    proto.OutTask.STTaskItem.prototype.clearUnionsList = function () {
        return this.setUnionsList([]);
    };
    proto.OutTask.STTaskItem.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.OutTask.STTaskAward, 33));
    };
    proto.OutTask.STTaskItem.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 33, value);
    };
    proto.OutTask.STTaskItem.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 33, opt_value, proto.OutTask.STTaskAward, opt_index);
    };
    proto.OutTask.STTaskItem.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.TaskServerItem.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.TaskServerItem.toObject(opt_includeInstance, this);
        };
        proto.OutTask.TaskServerItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                num: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.TaskServerItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.TaskServerItem;
        return proto.OutTask.TaskServerItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.TaskServerItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setNum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.TaskServerItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.TaskServerItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.TaskServerItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNum();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
    };
    proto.OutTask.TaskServerItem.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.TaskServerItem.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.TaskServerItem.prototype.getNum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.TaskServerItem.prototype.setNum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.OutTask.TaskServerNoti.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.TaskServerNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.TaskServerNoti.toObject(opt_includeInstance, this);
        };
        proto.OutTask.TaskServerNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                tasksList: googleProtobuf.Message.toObjectList(msg.getTasksList(), proto.OutTask.TaskServerItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.TaskServerNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.TaskServerNoti;
        return proto.OutTask.TaskServerNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.TaskServerNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 11:
                    var value = new proto.OutTask.TaskServerItem;
                    reader.readMessage(value, proto.OutTask.TaskServerItem.deserializeBinaryFromReader);
                    msg.addTasks(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.TaskServerNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.TaskServerNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.TaskServerNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getTasksList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.OutTask.TaskServerItem.serializeBinaryToWriter);
        }
    };
    proto.OutTask.TaskServerNoti.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.TaskServerNoti.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.TaskServerNoti.prototype.getTasksList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.OutTask.TaskServerItem, 11));
    };
    proto.OutTask.TaskServerNoti.prototype.setTasksList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.OutTask.TaskServerNoti.prototype.addTasks = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.OutTask.TaskServerItem, opt_index);
    };
    proto.OutTask.TaskServerNoti.prototype.clearTasksList = function () {
        return this.setTasksList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.TaskClientNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.TaskClientNoti.toObject(opt_includeInstance, this);
        };
        proto.OutTask.TaskClientNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                task: (f = msg.getTask()) && proto.OutTask.STTaskItem.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.TaskClientNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.TaskClientNoti;
        return proto.OutTask.TaskClientNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.TaskClientNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 11:
                    var value = new proto.OutTask.STTaskItem;
                    reader.readMessage(value, proto.OutTask.STTaskItem.deserializeBinaryFromReader);
                    msg.setTask(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.TaskClientNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.TaskClientNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.TaskClientNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getTask();
        if (f != null) {
            writer.writeMessage(11, f, proto.OutTask.STTaskItem.serializeBinaryToWriter);
        }
    };
    proto.OutTask.TaskClientNoti.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.TaskClientNoti.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.TaskClientNoti.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.TaskClientNoti.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.OutTask.TaskClientNoti.prototype.getTask = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.OutTask.STTaskItem, 11));
    };
    proto.OutTask.TaskClientNoti.prototype.setTask = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.OutTask.TaskClientNoti.prototype.clearTask = function () {
        return this.setTask(undefined);
    };
    proto.OutTask.TaskClientNoti.prototype.hasTask = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.TaskDistriNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.TaskDistriNoti.toObject(opt_includeInstance, this);
        };
        proto.OutTask.TaskDistriNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                unique: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                task: (f = msg.getTask()) && proto.OutTask.STTaskItem.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.TaskDistriNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.TaskDistriNoti;
        return proto.OutTask.TaskDistriNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.TaskDistriNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setUnique(value);
                    break;
                case 11:
                    var value = new proto.OutTask.STTaskItem;
                    reader.readMessage(value, proto.OutTask.STTaskItem.deserializeBinaryFromReader);
                    msg.setTask(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.TaskDistriNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.TaskDistriNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.TaskDistriNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getUnique();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getTask();
        if (f != null) {
            writer.writeMessage(11, f, proto.OutTask.STTaskItem.serializeBinaryToWriter);
        }
    };
    proto.OutTask.TaskDistriNoti.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.TaskDistriNoti.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.TaskDistriNoti.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.TaskDistriNoti.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.OutTask.TaskDistriNoti.prototype.getUnique = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.OutTask.TaskDistriNoti.prototype.setUnique = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.OutTask.TaskDistriNoti.prototype.getTask = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.OutTask.STTaskItem, 11));
    };
    proto.OutTask.TaskDistriNoti.prototype.setTask = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.OutTask.TaskDistriNoti.prototype.clearTask = function () {
        return this.setTask(undefined);
    };
    proto.OutTask.TaskDistriNoti.prototype.hasTask = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    proto.OutTask.TaskAwardsNoti.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.TaskAwardsNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.TaskAwardsNoti.toObject(opt_includeInstance, this);
        };
        proto.OutTask.TaskAwardsNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                awardsList: googleProtobuf.Message.toObjectList(msg.getAwardsList(), proto.OutTask.STTaskAward.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.TaskAwardsNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.TaskAwardsNoti;
        return proto.OutTask.TaskAwardsNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.TaskAwardsNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 11:
                    var value = new proto.OutTask.STTaskAward;
                    reader.readMessage(value, proto.OutTask.STTaskAward.deserializeBinaryFromReader);
                    msg.addAwards(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.TaskAwardsNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.TaskAwardsNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.TaskAwardsNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getAwardsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.OutTask.STTaskAward.serializeBinaryToWriter);
        }
    };
    proto.OutTask.TaskAwardsNoti.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.TaskAwardsNoti.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.TaskAwardsNoti.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.TaskAwardsNoti.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.OutTask.TaskAwardsNoti.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.OutTask.TaskAwardsNoti.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.OutTask.TaskAwardsNoti.prototype.getAwardsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.OutTask.STTaskAward, 11));
    };
    proto.OutTask.TaskAwardsNoti.prototype.setAwardsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.OutTask.TaskAwardsNoti.prototype.addAwards = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.OutTask.STTaskAward, opt_index);
    };
    proto.OutTask.TaskAwardsNoti.prototype.clearAwardsList = function () {
        return this.setAwardsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.TaskInfoGet.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.TaskInfoGet.toObject(opt_includeInstance, this);
        };
        proto.OutTask.TaskInfoGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                anlv: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                pagenum: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.TaskInfoGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.TaskInfoGet;
        return proto.OutTask.TaskInfoGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.TaskInfoGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setType(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setAnlv(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setPagenum(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setItemnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.TaskInfoGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.TaskInfoGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.TaskInfoGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getType();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getAnlv();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getPagenum();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
    };
    proto.OutTask.TaskInfoGet.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.TaskInfoGet.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.TaskInfoGet.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.OutTask.TaskInfoGet.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.OutTask.TaskInfoGet.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.OutTask.TaskInfoGet.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.OutTask.TaskInfoGet.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.OutTask.TaskInfoGet.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.OutTask.TaskInfoGet.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.OutTask.TaskInfoGet.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.OutTask.TaskInfoGet.prototype.getAnlv = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.OutTask.TaskInfoGet.prototype.setAnlv = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.OutTask.TaskInfoGet.prototype.getPagenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.OutTask.TaskInfoGet.prototype.setPagenum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.OutTask.TaskInfoGet.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.OutTask.TaskInfoGet.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.OutTask.TaskInfoAck.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.TaskInfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.TaskInfoAck.toObject(opt_includeInstance, this);
        };
        proto.OutTask.TaskInfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                type: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                anlv: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                pagenum: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                itemnum: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                vectasksList: googleProtobuf.Message.toObjectList(msg.getVectasksList(), proto.OutTask.STTaskItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.TaskInfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.TaskInfoAck;
        return proto.OutTask.TaskInfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.TaskInfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setType(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setAnlv(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setPagenum(value);
                    break;
                case 8:
                    var value = (reader.readSint32());
                    msg.setItemnum(value);
                    break;
                case 11:
                    var value = new proto.OutTask.STTaskItem;
                    reader.readMessage(value, proto.OutTask.STTaskItem.deserializeBinaryFromReader);
                    msg.addVectasks(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.TaskInfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.TaskInfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.TaskInfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getType();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getAnlv();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getPagenum();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
        f = message.getItemnum();
        if (f !== 0) {
            writer.writeSint32(8, f);
        }
        f = message.getVectasksList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.OutTask.STTaskItem.serializeBinaryToWriter);
        }
    };
    proto.OutTask.TaskInfoAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.TaskInfoAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.TaskInfoAck.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.TaskInfoAck.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.OutTask.TaskInfoAck.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.OutTask.TaskInfoAck.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.OutTask.TaskInfoAck.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.OutTask.TaskInfoAck.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.OutTask.TaskInfoAck.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.OutTask.TaskInfoAck.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.OutTask.TaskInfoAck.prototype.getAnlv = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.OutTask.TaskInfoAck.prototype.setAnlv = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.OutTask.TaskInfoAck.prototype.getPagenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.OutTask.TaskInfoAck.prototype.setPagenum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.OutTask.TaskInfoAck.prototype.getItemnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.OutTask.TaskInfoAck.prototype.setItemnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.OutTask.TaskInfoAck.prototype.getVectasksList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.OutTask.STTaskItem, 11));
    };
    proto.OutTask.TaskInfoAck.prototype.setVectasksList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.OutTask.TaskInfoAck.prototype.addVectasks = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.OutTask.STTaskItem, opt_index);
    };
    proto.OutTask.TaskInfoAck.prototype.clearVectasksList = function () {
        return this.setVectasksList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.TaskAwardGet.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.TaskAwardGet.toObject(opt_includeInstance, this);
        };
        proto.OutTask.TaskAwardGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                video: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.TaskAwardGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.TaskAwardGet;
        return proto.OutTask.TaskAwardGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.TaskAwardGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setVideo(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.TaskAwardGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.TaskAwardGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.TaskAwardGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getVideo();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
    };
    proto.OutTask.TaskAwardGet.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.TaskAwardGet.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.TaskAwardGet.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.OutTask.TaskAwardGet.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.OutTask.TaskAwardGet.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.OutTask.TaskAwardGet.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.OutTask.TaskAwardGet.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.OutTask.TaskAwardGet.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.OutTask.TaskAwardGet.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.OutTask.TaskAwardGet.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.OutTask.TaskAwardGet.prototype.getVideo = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.OutTask.TaskAwardGet.prototype.setVideo = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.TaskAwardAck.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.TaskAwardAck.toObject(opt_includeInstance, this);
        };
        proto.OutTask.TaskAwardAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                awardid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.TaskAwardAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.TaskAwardAck;
        return proto.OutTask.TaskAwardAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.TaskAwardAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setAwardid(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.TaskAwardAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.TaskAwardAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.TaskAwardAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getAwardid();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
    };
    proto.OutTask.TaskAwardAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.TaskAwardAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.TaskAwardAck.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.TaskAwardAck.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.OutTask.TaskAwardAck.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.OutTask.TaskAwardAck.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.OutTask.TaskAwardAck.prototype.getAwardid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.OutTask.TaskAwardAck.prototype.setAwardid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.OutTask.TaskAwardAck.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.OutTask.TaskAwardAck.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.ClientFinishGet.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.ClientFinishGet.toObject(opt_includeInstance, this);
        };
        proto.OutTask.ClientFinishGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                anlv: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                video: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                dpid: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.ClientFinishGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.ClientFinishGet;
        return proto.OutTask.ClientFinishGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.ClientFinishGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setTicket(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setAnlv(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setVideo(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setDpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.ClientFinishGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.ClientFinishGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.ClientFinishGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getTicket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getAnlv();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getVideo();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getDpid();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
    };
    proto.OutTask.ClientFinishGet.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.ClientFinishGet.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.ClientFinishGet.prototype.getTicket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.OutTask.ClientFinishGet.prototype.setTicket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.OutTask.ClientFinishGet.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.OutTask.ClientFinishGet.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.OutTask.ClientFinishGet.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.OutTask.ClientFinishGet.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.OutTask.ClientFinishGet.prototype.getAnlv = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.OutTask.ClientFinishGet.prototype.setAnlv = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.OutTask.ClientFinishGet.prototype.getVideo = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.OutTask.ClientFinishGet.prototype.setVideo = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.OutTask.ClientFinishGet.prototype.getDpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.OutTask.ClientFinishGet.prototype.setDpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.ClientFinishAck.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.ClientFinishAck.toObject(opt_includeInstance, this);
        };
        proto.OutTask.ClientFinishAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                taskid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                appid: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                anlv: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                dpid: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                task: (f = msg.getTask()) && proto.OutTask.STTaskItem.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.ClientFinishAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.ClientFinishAck;
        return proto.OutTask.ClientFinishAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.ClientFinishAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setTaskid(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setAppid(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setAnlv(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setDpid(value);
                    break;
                case 11:
                    var value = new proto.OutTask.STTaskItem;
                    reader.readMessage(value, proto.OutTask.STTaskItem.deserializeBinaryFromReader);
                    msg.setTask(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.ClientFinishAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.ClientFinishAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.ClientFinishAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getTaskid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getAppid();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
        f = message.getAnlv();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getDpid();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getTask();
        if (f != null) {
            writer.writeMessage(11, f, proto.OutTask.STTaskItem.serializeBinaryToWriter);
        }
    };
    proto.OutTask.ClientFinishAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.ClientFinishAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.ClientFinishAck.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.ClientFinishAck.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.OutTask.ClientFinishAck.prototype.getTaskid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.OutTask.ClientFinishAck.prototype.setTaskid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.OutTask.ClientFinishAck.prototype.getAppid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.OutTask.ClientFinishAck.prototype.setAppid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.OutTask.ClientFinishAck.prototype.getAnlv = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.OutTask.ClientFinishAck.prototype.setAnlv = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.OutTask.ClientFinishAck.prototype.getDpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.OutTask.ClientFinishAck.prototype.setDpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.OutTask.ClientFinishAck.prototype.getTask = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.OutTask.STTaskItem, 11));
    };
    proto.OutTask.ClientFinishAck.prototype.setTask = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 11, value);
    };
    proto.OutTask.ClientFinishAck.prototype.clearTask = function () {
        return this.setTask(undefined);
    };
    proto.OutTask.ClientFinishAck.prototype.hasTask = function () {
        return googleProtobuf.Message.getField(this, 11) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.UpUserInfoGet.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.UpUserInfoGet.toObject(opt_includeInstance, this);
        };
        proto.OutTask.UpUserInfoGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                name: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.UpUserInfoGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.UpUserInfoGet;
        return proto.OutTask.UpUserInfoGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.UpUserInfoGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.UpUserInfoGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.UpUserInfoGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.UpUserInfoGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };
    proto.OutTask.UpUserInfoGet.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
    };
    proto.OutTask.UpUserInfoGet.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.OutTask.UpUserInfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.OutTask.UpUserInfoAck.toObject(opt_includeInstance, this);
        };
        proto.OutTask.UpUserInfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.OutTask.UpUserInfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.OutTask.UpUserInfoAck;
        return proto.OutTask.UpUserInfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.OutTask.UpUserInfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.OutTask.UpUserInfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.OutTask.UpUserInfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.OutTask.UpUserInfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.OutTask.UpUserInfoAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.OutTask.UpUserInfoAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.OutTask.UpUserInfoAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.OutTask.UpUserInfoAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    goog.object.extend(exports, proto.OutTask);

    });
    var OutTask_pb_1 = OutTask_pb.UpUserInfoGet;
    var OutTask_pb_2 = OutTask_pb.UpUserInfoAck;
    var OutTask_pb_3 = OutTask_pb.ClientFinishGet;
    var OutTask_pb_4 = OutTask_pb.ClientFinishAck;
    var OutTask_pb_5 = OutTask_pb.TaskInfoGet;
    var OutTask_pb_6 = OutTask_pb.TaskInfoAck;
    var OutTask_pb_7 = OutTask_pb.TaskAwardGet;
    var OutTask_pb_8 = OutTask_pb.TaskAwardAck;

    const grpc$k = {};
    grpc$k.web = grpcWeb;
    const proto$l = {};
    proto$l.OutTask = OutTask_pb;
    proto$l.OutTask.OutTaskServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$k.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$l.OutTask.OutTaskServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$k.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_OutTaskService_TaskInfo = new grpc$k.web.MethodDescriptor('/OutTask.OutTaskService/TaskInfo', grpc$k.web.MethodType.UNARY, proto$l.OutTask.TaskInfoGet, proto$l.OutTask.TaskInfoAck, function (request) {
        return request.serializeBinary();
    }, proto$l.OutTask.TaskInfoAck.deserializeBinary);
    proto$l.OutTask.OutTaskServiceClient.prototype.taskInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/OutTask.OutTaskService/TaskInfo', request, metadata || {}, methodDescriptor_OutTaskService_TaskInfo, callback);
        };
    proto$l.OutTask.OutTaskServicePromiseClient.prototype.taskInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/OutTask.OutTaskService/TaskInfo', request, metadata || {}, methodDescriptor_OutTaskService_TaskInfo);
        };
    const methodDescriptor_OutTaskService_ClientFinish = new grpc$k.web.MethodDescriptor('/OutTask.OutTaskService/ClientFinish', grpc$k.web.MethodType.UNARY, proto$l.OutTask.ClientFinishGet, proto$l.OutTask.ClientFinishAck, function (request) {
        return request.serializeBinary();
    }, proto$l.OutTask.ClientFinishAck.deserializeBinary);
    proto$l.OutTask.OutTaskServiceClient.prototype.clientFinish =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/OutTask.OutTaskService/ClientFinish', request, metadata || {}, methodDescriptor_OutTaskService_ClientFinish, callback);
        };
    proto$l.OutTask.OutTaskServicePromiseClient.prototype.clientFinish =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/OutTask.OutTaskService/ClientFinish', request, metadata || {}, methodDescriptor_OutTaskService_ClientFinish);
        };
    const methodDescriptor_OutTaskService_TaskAward = new grpc$k.web.MethodDescriptor('/OutTask.OutTaskService/TaskAward', grpc$k.web.MethodType.UNARY, proto$l.OutTask.TaskAwardGet, proto$l.OutTask.TaskAwardAck, function (request) {
        return request.serializeBinary();
    }, proto$l.OutTask.TaskAwardAck.deserializeBinary);
    proto$l.OutTask.OutTaskServiceClient.prototype.taskAward =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/OutTask.OutTaskService/TaskAward', request, metadata || {}, methodDescriptor_OutTaskService_TaskAward, callback);
        };
    proto$l.OutTask.OutTaskServicePromiseClient.prototype.taskAward =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/OutTask.OutTaskService/TaskAward', request, metadata || {}, methodDescriptor_OutTaskService_TaskAward);
        };
    const methodDescriptor_OutTaskService_UpUserInfo = new grpc$k.web.MethodDescriptor('/OutTask.OutTaskService/UpUserInfo', grpc$k.web.MethodType.UNARY, proto$l.OutTask.UpUserInfoGet, proto$l.OutTask.UpUserInfoAck, function (request) {
        return request.serializeBinary();
    }, proto$l.OutTask.UpUserInfoAck.deserializeBinary);
    proto$l.OutTask.OutTaskServiceClient.prototype.upUserInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/OutTask.OutTaskService/UpUserInfo', request, metadata || {}, methodDescriptor_OutTaskService_UpUserInfo, callback);
        };
    proto$l.OutTask.OutTaskServicePromiseClient.prototype.upUserInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/OutTask.OutTaskService/UpUserInfo', request, metadata || {}, methodDescriptor_OutTaskService_UpUserInfo);
        };
    var OutTask_grpc_web_pb = proto$l.OutTask;
    var OutTask_grpc_web_pb_1 = OutTask_grpc_web_pb.OutTaskServicePromiseClient;

    class OutTaskService extends Singleton {
        constructor() {
            super();
            this.outTaskServiceClient = null;
            this.outTaskServiceClient = new OutTask_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        upUserInfo(nickName) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new OutTask_pb_1();
                request.setName(nickName);
                let upUserInfoAck = yield this.outTaskServiceClient.upUserInfo(request, GlobalData.getInstance().baseMeta);
                if (upUserInfoAck) {
                    let ret = upUserInfoAck.getCret();
                    if (ret == 0) {
                        DataPlayer.getInstance().userInfo.nickname = nickName;
                    }
                }
                return upUserInfoAck;
            });
        }
        taskInfo(taskId) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new OutTask_pb_5();
                request.setTicket(GlobalData.getInstance().myTicket);
                request.setPid(GlobalData.getInstance().myPid);
                request.setTaskid(taskId);
                let taskInfoAck = yield this.outTaskServiceClient.taskInfo(request, GlobalData.getInstance().baseMeta);
                return taskInfoAck;
            });
        }
        clientFinish(taskId) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new OutTask_pb_3();
                request.setTicket(GlobalData.getInstance().myTicket);
                request.setPid(GlobalData.getInstance().myPid);
                request.setTaskid(taskId);
                let clientFinishAck = yield this.outTaskServiceClient.clientFinish(request, GlobalData.getInstance().baseMeta);
                return clientFinishAck;
            });
        }
        taskAward(taskId) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new OutTask_pb_7();
                request.setTicket(GlobalData.getInstance().myTicket);
                request.setPid(GlobalData.getInstance().myPid);
                request.setTaskid(taskId);
                request.setAppid(Number(GlobalVariables.APP_ID));
                let ack = yield this.outTaskServiceClient.taskAward(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
        tryFinishTask3005() {
            return __awaiter(this, void 0, void 0, function* () {
                let ret = -1;
                try {
                    let infoAck = yield this.taskInfo(GlobalVariables.TASK_3005);
                    CC.Log("tryFinishTask3005 ack=  ", infoAck.toObject());
                    let taskItem = infoAck.getVectasksList()[0];
                    if (taskItem.getStime() <= 0) {
                    }
                    else if (taskItem.getFinish() <= 0) {
                        return 1;
                    }
                    else {
                        return -1;
                    }
                }
                catch (error) {
                    CC.Loge("OutTaskService:: tryFinishTask3005  ", error);
                }
                return ret;
            });
        }
    }

    var CyRank_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.CyRank.MotifyNoteAck', null, global);
    goog.exportSymbol('proto.CyRank.MotifyNoteGet', null, global);
    goog.exportSymbol('proto.CyRank.MotifyNoteNoti', null, global);
    goog.exportSymbol('proto.CyRank.RankInfoAck', null, global);
    goog.exportSymbol('proto.CyRank.RankInfoGet', null, global);
    goog.exportSymbol('proto.CyRank.RankItem', null, global);
    proto.CyRank.RankItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.CyRank.RankItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.CyRank.RankItem.displayName = 'proto.CyRank.RankItem';
    }
    proto.CyRank.RankInfoGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.CyRank.RankInfoGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.CyRank.RankInfoGet.displayName = 'proto.CyRank.RankInfoGet';
    }
    proto.CyRank.RankInfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.CyRank.RankInfoAck.repeatedFields_, null);
    };
    goog.inherits(proto.CyRank.RankInfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.CyRank.RankInfoAck.displayName = 'proto.CyRank.RankInfoAck';
    }
    proto.CyRank.MotifyNoteGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.CyRank.MotifyNoteGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.CyRank.MotifyNoteGet.displayName = 'proto.CyRank.MotifyNoteGet';
    }
    proto.CyRank.MotifyNoteAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.CyRank.MotifyNoteAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.CyRank.MotifyNoteAck.displayName = 'proto.CyRank.MotifyNoteAck';
    }
    proto.CyRank.MotifyNoteNoti = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.CyRank.MotifyNoteNoti, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.CyRank.MotifyNoteNoti.displayName = 'proto.CyRank.MotifyNoteNoti';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.CyRank.RankItem.prototype.toObject = function (opt_includeInstance) {
            return proto.CyRank.RankItem.toObject(opt_includeInstance, this);
        };
        proto.CyRank.RankItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                rank: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                name: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                icon: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                amount: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                note: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                viplv: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                contact: googleProtobuf.Message.getFieldWithDefault(msg, 8, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.CyRank.RankItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.CyRank.RankItem;
        return proto.CyRank.RankItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.CyRank.RankItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readSint32());
                    msg.setRank(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setName(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setIcon(value);
                    break;
                case 5:
                    var value = (reader.readInt64());
                    msg.setAmount(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setNote(value);
                    break;
                case 7:
                    var value = (reader.readInt32());
                    msg.setViplv(value);
                    break;
                case 8:
                    var value = (reader.readString());
                    msg.setContact(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.CyRank.RankItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.CyRank.RankItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.CyRank.RankItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getRank();
        if (f !== 0) {
            writer.writeSint32(2, f);
        }
        f = message.getName();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getIcon();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getAmount();
        if (f !== 0) {
            writer.writeInt64(5, f);
        }
        f = message.getNote();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getViplv();
        if (f !== 0) {
            writer.writeInt32(7, f);
        }
        f = message.getContact();
        if (f.length > 0) {
            writer.writeString(8, f);
        }
    };
    proto.CyRank.RankItem.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.CyRank.RankItem.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.CyRank.RankItem.prototype.getRank = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.CyRank.RankItem.prototype.setRank = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.CyRank.RankItem.prototype.getName = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.CyRank.RankItem.prototype.setName = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.CyRank.RankItem.prototype.getIcon = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.CyRank.RankItem.prototype.setIcon = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.CyRank.RankItem.prototype.getAmount = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.CyRank.RankItem.prototype.setAmount = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.CyRank.RankItem.prototype.getNote = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.CyRank.RankItem.prototype.setNote = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.CyRank.RankItem.prototype.getViplv = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.CyRank.RankItem.prototype.setViplv = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.CyRank.RankItem.prototype.getContact = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
    };
    proto.CyRank.RankItem.prototype.setContact = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 8, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.CyRank.RankInfoGet.prototype.toObject = function (opt_includeInstance) {
            return proto.CyRank.RankInfoGet.toObject(opt_includeInstance, this);
        };
        proto.CyRank.RankInfoGet.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.CyRank.RankInfoGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.CyRank.RankInfoGet;
        return proto.CyRank.RankInfoGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.CyRank.RankInfoGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.CyRank.RankInfoGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.CyRank.RankInfoGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.CyRank.RankInfoGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    proto.CyRank.RankInfoAck.repeatedFields_ = [11];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.CyRank.RankInfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.CyRank.RankInfoAck.toObject(opt_includeInstance, this);
        };
        proto.CyRank.RankInfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                self: (f = msg.getSelf()) && proto.CyRank.RankItem.toObject(includeInstance, f),
                ranksList: googleProtobuf.Message.toObjectList(msg.getRanksList(), proto.CyRank.RankItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.CyRank.RankInfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.CyRank.RankInfoAck;
        return proto.CyRank.RankInfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.CyRank.RankInfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = new proto.CyRank.RankItem;
                    reader.readMessage(value, proto.CyRank.RankItem.deserializeBinaryFromReader);
                    msg.setSelf(value);
                    break;
                case 11:
                    var value = new proto.CyRank.RankItem;
                    reader.readMessage(value, proto.CyRank.RankItem.deserializeBinaryFromReader);
                    msg.addRanks(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.CyRank.RankInfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.CyRank.RankInfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.CyRank.RankInfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getSelf();
        if (f != null) {
            writer.writeMessage(2, f, proto.CyRank.RankItem.serializeBinaryToWriter);
        }
        f = message.getRanksList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(11, f, proto.CyRank.RankItem.serializeBinaryToWriter);
        }
    };
    proto.CyRank.RankInfoAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.CyRank.RankInfoAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.CyRank.RankInfoAck.prototype.getSelf = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.CyRank.RankItem, 2));
    };
    proto.CyRank.RankInfoAck.prototype.setSelf = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.CyRank.RankInfoAck.prototype.clearSelf = function () {
        return this.setSelf(undefined);
    };
    proto.CyRank.RankInfoAck.prototype.hasSelf = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.CyRank.RankInfoAck.prototype.getRanksList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.CyRank.RankItem, 11));
    };
    proto.CyRank.RankInfoAck.prototype.setRanksList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
    };
    proto.CyRank.RankInfoAck.prototype.addRanks = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.CyRank.RankItem, opt_index);
    };
    proto.CyRank.RankInfoAck.prototype.clearRanksList = function () {
        return this.setRanksList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.CyRank.MotifyNoteGet.prototype.toObject = function (opt_includeInstance) {
            return proto.CyRank.MotifyNoteGet.toObject(opt_includeInstance, this);
        };
        proto.CyRank.MotifyNoteGet.toObject = function (includeInstance, msg) {
            var f, obj = {
                type: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                note: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                contact: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.CyRank.MotifyNoteGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.CyRank.MotifyNoteGet;
        return proto.CyRank.MotifyNoteGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.CyRank.MotifyNoteGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setType(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setNote(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setContact(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.CyRank.MotifyNoteGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.CyRank.MotifyNoteGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.CyRank.MotifyNoteGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getType();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNote();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getContact();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.CyRank.MotifyNoteGet.prototype.getType = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.CyRank.MotifyNoteGet.prototype.setType = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.CyRank.MotifyNoteGet.prototype.getNote = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.CyRank.MotifyNoteGet.prototype.setNote = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.CyRank.MotifyNoteGet.prototype.getContact = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.CyRank.MotifyNoteGet.prototype.setContact = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.CyRank.MotifyNoteAck.prototype.toObject = function (opt_includeInstance) {
            return proto.CyRank.MotifyNoteAck.toObject(opt_includeInstance, this);
        };
        proto.CyRank.MotifyNoteAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                note: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                contact: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.CyRank.MotifyNoteAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.CyRank.MotifyNoteAck;
        return proto.CyRank.MotifyNoteAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.CyRank.MotifyNoteAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setNote(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setContact(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.CyRank.MotifyNoteAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.CyRank.MotifyNoteAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.CyRank.MotifyNoteAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNote();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getContact();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.CyRank.MotifyNoteAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.CyRank.MotifyNoteAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.CyRank.MotifyNoteAck.prototype.getNote = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.CyRank.MotifyNoteAck.prototype.setNote = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.CyRank.MotifyNoteAck.prototype.getContact = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.CyRank.MotifyNoteAck.prototype.setContact = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.CyRank.MotifyNoteNoti.prototype.toObject = function (opt_includeInstance) {
            return proto.CyRank.MotifyNoteNoti.toObject(opt_includeInstance, this);
        };
        proto.CyRank.MotifyNoteNoti.toObject = function (includeInstance, msg) {
            var f, obj = {
                pid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                note: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                contact: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.CyRank.MotifyNoteNoti.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.CyRank.MotifyNoteNoti;
        return proto.CyRank.MotifyNoteNoti.deserializeBinaryFromReader(msg, reader);
    };
    proto.CyRank.MotifyNoteNoti.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setPid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setNote(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setContact(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.CyRank.MotifyNoteNoti.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.CyRank.MotifyNoteNoti.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.CyRank.MotifyNoteNoti.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getPid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNote();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getContact();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.CyRank.MotifyNoteNoti.prototype.getPid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.CyRank.MotifyNoteNoti.prototype.setPid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.CyRank.MotifyNoteNoti.prototype.getNote = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.CyRank.MotifyNoteNoti.prototype.setNote = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.CyRank.MotifyNoteNoti.prototype.getContact = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.CyRank.MotifyNoteNoti.prototype.setContact = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    goog.object.extend(exports, proto.CyRank);

    });
    var CyRank_pb_1 = CyRank_pb.RankItem;
    var CyRank_pb_2 = CyRank_pb.RankInfoGet;
    var CyRank_pb_3 = CyRank_pb.RankInfoAck;
    var CyRank_pb_4 = CyRank_pb.MotifyNoteGet;
    var CyRank_pb_5 = CyRank_pb.MotifyNoteAck;
    var CyRank_pb_6 = CyRank_pb.MotifyNoteNoti;

    const grpc$l = {};
    grpc$l.web = grpcWeb;
    const proto$m = {};
    proto$m.CyRank = CyRank_pb;
    proto$m.CyRank.CyRankServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$l.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$m.CyRank.CyRankServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$l.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_CyRankService_RankInfo = new grpc$l.web.MethodDescriptor('/CyRank.CyRankService/RankInfo', grpc$l.web.MethodType.UNARY, proto$m.CyRank.RankInfoGet, proto$m.CyRank.RankInfoAck, function (request) {
        return request.serializeBinary();
    }, proto$m.CyRank.RankInfoAck.deserializeBinary);
    proto$m.CyRank.CyRankServiceClient.prototype.rankInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/CyRank.CyRankService/RankInfo', request, metadata || {}, methodDescriptor_CyRankService_RankInfo, callback);
        };
    proto$m.CyRank.CyRankServicePromiseClient.prototype.rankInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/CyRank.CyRankService/RankInfo', request, metadata || {}, methodDescriptor_CyRankService_RankInfo);
        };
    const methodDescriptor_CyRankService_MotifyNote = new grpc$l.web.MethodDescriptor('/CyRank.CyRankService/MotifyNote', grpc$l.web.MethodType.UNARY, proto$m.CyRank.MotifyNoteGet, proto$m.CyRank.MotifyNoteAck, function (request) {
        return request.serializeBinary();
    }, proto$m.CyRank.MotifyNoteAck.deserializeBinary);
    proto$m.CyRank.CyRankServiceClient.prototype.motifyNote =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/CyRank.CyRankService/MotifyNote', request, metadata || {}, methodDescriptor_CyRankService_MotifyNote, callback);
        };
    proto$m.CyRank.CyRankServicePromiseClient.prototype.motifyNote =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/CyRank.CyRankService/MotifyNote', request, metadata || {}, methodDescriptor_CyRankService_MotifyNote);
        };
    var CyRank_grpc_web_pb = proto$m.CyRank;
    var CyRank_grpc_web_pb_1 = CyRank_grpc_web_pb.CyRankServiceClient;
    var CyRank_grpc_web_pb_2 = CyRank_grpc_web_pb.CyRankServicePromiseClient;

    class RankService extends Singleton {
        constructor() {
            super();
            this.rankClient = null;
            this.rankClient = new CyRank_grpc_web_pb_2(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        queryRankInfo() {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new CyRank_pb_2();
                let queryGameAck = yield this.rankClient.rankInfo(request, GlobalData.getInstance().baseMeta);
                return queryGameAck;
            });
        }
        motifyNote(note, contact) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new CyRank_pb_4();
                request.setNote(note);
                request.setContact(contact);
                let motifyNoteGet = yield this.rankClient.motifyNote(request, GlobalData.getInstance().baseMeta);
                return motifyNoteGet;
            });
        }
    }

    var Rebate_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();

    goog.object.extend(proto, Common_pb);
    goog.exportSymbol('proto.Rebate.DetailAck', null, global);
    goog.exportSymbol('proto.Rebate.DetailGet', null, global);
    goog.exportSymbol('proto.Rebate.RebateAwardAck', null, global);
    goog.exportSymbol('proto.Rebate.RebateAwardGet', null, global);
    goog.exportSymbol('proto.Rebate.RebateInfoAck', null, global);
    goog.exportSymbol('proto.Rebate.RebateInfoGet', null, global);
    proto.Rebate.RebateInfoGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Rebate.RebateInfoGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Rebate.RebateInfoGet.displayName = 'proto.Rebate.RebateInfoGet';
    }
    proto.Rebate.RebateInfoAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Rebate.RebateInfoAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Rebate.RebateInfoAck.displayName = 'proto.Rebate.RebateInfoAck';
    }
    proto.Rebate.RebateAwardGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Rebate.RebateAwardGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Rebate.RebateAwardGet.displayName = 'proto.Rebate.RebateAwardGet';
    }
    proto.Rebate.RebateAwardAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Rebate.RebateAwardAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Rebate.RebateAwardAck.displayName = 'proto.Rebate.RebateAwardAck';
    }
    proto.Rebate.DetailGet = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Rebate.DetailGet, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Rebate.DetailGet.displayName = 'proto.Rebate.DetailGet';
    }
    proto.Rebate.DetailAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Rebate.DetailAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Rebate.DetailAck.displayName = 'proto.Rebate.DetailAck';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Rebate.RebateInfoGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Rebate.RebateInfoGet.toObject(opt_includeInstance, this);
        };
        proto.Rebate.RebateInfoGet.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Rebate.RebateInfoGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Rebate.RebateInfoGet;
        return proto.Rebate.RebateInfoGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Rebate.RebateInfoGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Rebate.RebateInfoGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Rebate.RebateInfoGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Rebate.RebateInfoGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Rebate.RebateInfoAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Rebate.RebateInfoAck.toObject(opt_includeInstance, this);
        };
        proto.Rebate.RebateInfoAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                renum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                rate: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Rebate.RebateInfoAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Rebate.RebateInfoAck;
        return proto.Rebate.RebateInfoAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Rebate.RebateInfoAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readInt64());
                    msg.setRenum(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setRate(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Rebate.RebateInfoAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Rebate.RebateInfoAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Rebate.RebateInfoAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getRenum();
        if (f !== 0) {
            writer.writeInt64(2, f);
        }
        f = message.getRate();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
    };
    proto.Rebate.RebateInfoAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Rebate.RebateInfoAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Rebate.RebateInfoAck.prototype.getRenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Rebate.RebateInfoAck.prototype.setRenum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Rebate.RebateInfoAck.prototype.getRate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Rebate.RebateInfoAck.prototype.setRate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Rebate.RebateAwardGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Rebate.RebateAwardGet.toObject(opt_includeInstance, this);
        };
        proto.Rebate.RebateAwardGet.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Rebate.RebateAwardGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Rebate.RebateAwardGet;
        return proto.Rebate.RebateAwardGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Rebate.RebateAwardGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Rebate.RebateAwardGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Rebate.RebateAwardGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Rebate.RebateAwardGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Rebate.RebateAwardAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Rebate.RebateAwardAck.toObject(opt_includeInstance, this);
        };
        proto.Rebate.RebateAwardAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                renum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Rebate.RebateAwardAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Rebate.RebateAwardAck;
        return proto.Rebate.RebateAwardAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Rebate.RebateAwardAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = (reader.readInt64());
                    msg.setRenum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Rebate.RebateAwardAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Rebate.RebateAwardAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Rebate.RebateAwardAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getRenum();
        if (f !== 0) {
            writer.writeInt64(2, f);
        }
    };
    proto.Rebate.RebateAwardAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Rebate.RebateAwardAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Rebate.RebateAwardAck.prototype.getRenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Rebate.RebateAwardAck.prototype.setRenum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Rebate.DetailGet.prototype.toObject = function (opt_includeInstance) {
            return proto.Rebate.DetailGet.toObject(opt_includeInstance, this);
        };
        proto.Rebate.DetailGet.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Rebate.DetailGet.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Rebate.DetailGet;
        return proto.Rebate.DetailGet.deserializeBinaryFromReader(msg, reader);
    };
    proto.Rebate.DetailGet.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Rebate.DetailGet.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Rebate.DetailGet.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Rebate.DetailGet.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Rebate.DetailAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Rebate.DetailAck.toObject(opt_includeInstance, this);
        };
        proto.Rebate.DetailAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                cret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                infosMap: (f = msg.getInfosMap()) ? f.toObject(includeInstance, undefined) : [],
                renum: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Rebate.DetailAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Rebate.DetailAck;
        return proto.Rebate.DetailAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Rebate.DetailAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readEnum());
                    msg.setCret(value);
                    break;
                case 2:
                    var value = msg.getInfosMap();
                    reader.readMessage(value, function (message, reader) {
                        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readSint32, googleProtobuf.BinaryReader.prototype.readInt64, null, 0, 0);
                    });
                    break;
                case 3:
                    var value = (reader.readInt64());
                    msg.setRenum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Rebate.DetailAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Rebate.DetailAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Rebate.DetailAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getCret();
        if (f !== 0.0) {
            writer.writeEnum(1, f);
        }
        f = message.getInfosMap(true);
        if (f && f.getLength() > 0) {
            f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeSint32, googleProtobuf.BinaryWriter.prototype.writeInt64);
        }
        f = message.getRenum();
        if (f !== 0) {
            writer.writeInt64(3, f);
        }
    };
    proto.Rebate.DetailAck.prototype.getCret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Rebate.DetailAck.prototype.setCret = function (value) {
        return googleProtobuf.Message.setProto3EnumField(this, 1, value);
    };
    proto.Rebate.DetailAck.prototype.getInfosMap = function (opt_noLazyCreate) {
        return (googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate, null));
    };
    proto.Rebate.DetailAck.prototype.clearInfosMap = function () {
        this.getInfosMap().clear();
        return this;
    };
    proto.Rebate.DetailAck.prototype.getRenum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Rebate.DetailAck.prototype.setRenum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    goog.object.extend(exports, proto.Rebate);

    });
    var Rebate_pb_1 = Rebate_pb.RebateInfoGet;
    var Rebate_pb_2 = Rebate_pb.RebateInfoAck;
    var Rebate_pb_3 = Rebate_pb.RebateAwardGet;
    var Rebate_pb_4 = Rebate_pb.RebateAwardAck;
    var Rebate_pb_5 = Rebate_pb.DetailGet;
    var Rebate_pb_6 = Rebate_pb.DetailAck;

    const grpc$m = {};
    grpc$m.web = grpcWeb;

    const proto$n = {};
    proto$n.Rebate = Rebate_pb;
    proto$n.Rebate.RebateServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$m.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$n.Rebate.RebateServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$m.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_RebateService_RebateInfo = new grpc$m.web.MethodDescriptor('/Rebate.RebateService/RebateInfo', grpc$m.web.MethodType.UNARY, proto$n.Rebate.RebateInfoGet, proto$n.Rebate.RebateInfoAck, function (request) {
        return request.serializeBinary();
    }, proto$n.Rebate.RebateInfoAck.deserializeBinary);
    proto$n.Rebate.RebateServiceClient.prototype.rebateInfo =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Rebate.RebateService/RebateInfo', request, metadata || {}, methodDescriptor_RebateService_RebateInfo, callback);
        };
    proto$n.Rebate.RebateServicePromiseClient.prototype.rebateInfo =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Rebate.RebateService/RebateInfo', request, metadata || {}, methodDescriptor_RebateService_RebateInfo);
        };
    const methodDescriptor_RebateService_RebateAward = new grpc$m.web.MethodDescriptor('/Rebate.RebateService/RebateAward', grpc$m.web.MethodType.UNARY, proto$n.Rebate.RebateAwardGet, proto$n.Rebate.RebateAwardAck, function (request) {
        return request.serializeBinary();
    }, proto$n.Rebate.RebateAwardAck.deserializeBinary);
    proto$n.Rebate.RebateServiceClient.prototype.rebateAward =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Rebate.RebateService/RebateAward', request, metadata || {}, methodDescriptor_RebateService_RebateAward, callback);
        };
    proto$n.Rebate.RebateServicePromiseClient.prototype.rebateAward =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Rebate.RebateService/RebateAward', request, metadata || {}, methodDescriptor_RebateService_RebateAward);
        };
    const methodDescriptor_RebateService_DetailAward = new grpc$m.web.MethodDescriptor('/Rebate.RebateService/DetailAward', grpc$m.web.MethodType.UNARY, proto$n.Rebate.DetailGet, proto$n.Rebate.DetailAck, function (request) {
        return request.serializeBinary();
    }, proto$n.Rebate.DetailAck.deserializeBinary);
    proto$n.Rebate.RebateServiceClient.prototype.detailAward =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Rebate.RebateService/DetailAward', request, metadata || {}, methodDescriptor_RebateService_DetailAward, callback);
        };
    proto$n.Rebate.RebateServicePromiseClient.prototype.detailAward =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Rebate.RebateService/DetailAward', request, metadata || {}, methodDescriptor_RebateService_DetailAward);
        };
    var Rebate_grpc_web_pb = proto$n.Rebate;
    var Rebate_grpc_web_pb_1 = Rebate_grpc_web_pb.RebateServicePromiseClient;

    class RebateService extends Singleton {
        constructor() {
            super();
            this.rebateServiceClient = null;
            this.rebateServiceClient = new Rebate_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        rebateInfo() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let request = new Rebate_pb_1();
                    let rebateInfoAck = yield this.rebateServiceClient.rebateInfo(request, GlobalData.getInstance().baseMeta);
                    return rebateInfoAck;
                }
                catch (error) {
                    CC.Loge("rebateInfo::error ", error);
                }
                return null;
            });
        }
        detailAward() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let request = new Rebate_pb_5();
                    let detailAck = yield this.rebateServiceClient.detailAward(request, GlobalData.getInstance().baseMeta);
                    return detailAck;
                }
                catch (error) {
                    CC.Loge("detailAward::error ", error);
                }
                return null;
            });
        }
        rebateAward() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let request = new Rebate_pb_3();
                    let rebateAwardAck = yield this.rebateServiceClient.rebateAward(request, GlobalData.getInstance().baseMeta);
                    return rebateAwardAck;
                }
                catch (error) {
                    CC.Loge("rebateAward::error ", error);
                }
                return null;
            });
        }
    }

    var Shop_pb = createCommonjsModule(function (module, exports) {
    var goog = googleProtobuf;
    var global = Function('return this')();
    goog.exportSymbol('proto.Shop.AddAgioAck', null, global);
    goog.exportSymbol('proto.Shop.AddAgioReq', null, global);
    goog.exportSymbol('proto.Shop.AddGiftBagAck', null, global);
    goog.exportSymbol('proto.Shop.AddGiftBagReq', null, global);
    goog.exportSymbol('proto.Shop.AddItemAck', null, global);
    goog.exportSymbol('proto.Shop.AddItemReq', null, global);
    goog.exportSymbol('proto.Shop.AddMerchandiseAck', null, global);
    goog.exportSymbol('proto.Shop.AddMerchandiseReq', null, global);
    goog.exportSymbol('proto.Shop.AddUserItemAck', null, global);
    goog.exportSymbol('proto.Shop.AddUserItemReq', null, global);
    goog.exportSymbol('proto.Shop.Agio', null, global);
    goog.exportSymbol('proto.Shop.AgoiChangeNotify', null, global);
    goog.exportSymbol('proto.Shop.BSID', null, global);
    goog.exportSymbol('proto.Shop.BuyInfo', null, global);
    goog.exportSymbol('proto.Shop.BuyMerchandiseAck', null, global);
    goog.exportSymbol('proto.Shop.BuyMerchandiseReq', null, global);
    goog.exportSymbol('proto.Shop.CategoryList', null, global);
    goog.exportSymbol('proto.Shop.DeleteAgioAck', null, global);
    goog.exportSymbol('proto.Shop.DeleteAgioReq', null, global);
    goog.exportSymbol('proto.Shop.DeleteGiftBagAck', null, global);
    goog.exportSymbol('proto.Shop.DeleteGiftBagReq', null, global);
    goog.exportSymbol('proto.Shop.DeleteItemInfo', null, global);
    goog.exportSymbol('proto.Shop.DeleteUserItemAck', null, global);
    goog.exportSymbol('proto.Shop.DeleteUserItemReq', null, global);
    goog.exportSymbol('proto.Shop.GetAgioListAck', null, global);
    goog.exportSymbol('proto.Shop.GetAgioListReq', null, global);
    goog.exportSymbol('proto.Shop.GetCategoryListAck', null, global);
    goog.exportSymbol('proto.Shop.GetCategoryListReq', null, global);
    goog.exportSymbol('proto.Shop.GetGiftBagListAck', null, global);
    goog.exportSymbol('proto.Shop.GetGiftBagListReq', null, global);
    goog.exportSymbol('proto.Shop.GetItemAck', null, global);
    goog.exportSymbol('proto.Shop.GetItemListAck', null, global);
    goog.exportSymbol('proto.Shop.GetItemListReq', null, global);
    goog.exportSymbol('proto.Shop.GetItemReq', null, global);
    goog.exportSymbol('proto.Shop.GetMerchandiseAck', null, global);
    goog.exportSymbol('proto.Shop.GetMerchandiseListAck', null, global);
    goog.exportSymbol('proto.Shop.GetMerchandiseListReq', null, global);
    goog.exportSymbol('proto.Shop.GetMerchandiseReq', null, global);
    goog.exportSymbol('proto.Shop.GetUserItemListAck', null, global);
    goog.exportSymbol('proto.Shop.GetUserItemListReq', null, global);
    goog.exportSymbol('proto.Shop.GiftBag', null, global);
    goog.exportSymbol('proto.Shop.Item', null, global);
    goog.exportSymbol('proto.Shop.ItemChangeNotify', null, global);
    goog.exportSymbol('proto.Shop.Merchandise', null, global);
    goog.exportSymbol('proto.Shop.MerchandiseChangeNotify', null, global);
    goog.exportSymbol('proto.Shop.MerchandiseList', null, global);
    goog.exportSymbol('proto.Shop.MyItem', null, global);
    goog.exportSymbol('proto.Shop.PSID', null, global);
    goog.exportSymbol('proto.Shop.SSID', null, global);
    goog.exportSymbol('proto.Shop.UpdateAgioAck', null, global);
    goog.exportSymbol('proto.Shop.UpdateAgioReq', null, global);
    goog.exportSymbol('proto.Shop.UpdateItemAck', null, global);
    goog.exportSymbol('proto.Shop.UpdateItemReq', null, global);
    goog.exportSymbol('proto.Shop.UpdateMerchandiseAck', null, global);
    goog.exportSymbol('proto.Shop.UpdateMerchandiseReq', null, global);
    goog.exportSymbol('proto.Shop.UserBuyMerchandiseNotify', null, global);
    goog.exportSymbol('proto.Shop.UserItemChangeNotify', null, global);
    proto.Shop.PSID = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.PSID, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.PSID.displayName = 'proto.Shop.PSID';
    }
    proto.Shop.SSID = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.SSID.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.SSID, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.SSID.displayName = 'proto.Shop.SSID';
    }
    proto.Shop.BSID = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.BSID.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.BSID, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.BSID.displayName = 'proto.Shop.BSID';
    }
    proto.Shop.GetCategoryListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetCategoryListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetCategoryListReq.displayName = 'proto.Shop.GetCategoryListReq';
    }
    proto.Shop.CategoryList = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.CategoryList.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.CategoryList, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.CategoryList.displayName = 'proto.Shop.CategoryList';
    }
    proto.Shop.GetCategoryListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetCategoryListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetCategoryListAck.displayName = 'proto.Shop.GetCategoryListAck';
    }
    proto.Shop.Item = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.Item, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.Item.displayName = 'proto.Shop.Item';
    }
    proto.Shop.MyItem = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.MyItem, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.MyItem.displayName = 'proto.Shop.MyItem';
    }
    proto.Shop.Merchandise = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.Merchandise, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.Merchandise.displayName = 'proto.Shop.Merchandise';
    }
    proto.Shop.GetMerchandiseListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetMerchandiseListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetMerchandiseListReq.displayName = 'proto.Shop.GetMerchandiseListReq';
    }
    proto.Shop.MerchandiseList = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.MerchandiseList.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.MerchandiseList, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.MerchandiseList.displayName = 'proto.Shop.MerchandiseList';
    }
    proto.Shop.GetMerchandiseListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetMerchandiseListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetMerchandiseListAck.displayName = 'proto.Shop.GetMerchandiseListAck';
    }
    proto.Shop.GetItemListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetItemListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetItemListReq.displayName = 'proto.Shop.GetItemListReq';
    }
    proto.Shop.GetItemListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.GetItemListAck.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.GetItemListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetItemListAck.displayName = 'proto.Shop.GetItemListAck';
    }
    proto.Shop.GetUserItemListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetUserItemListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetUserItemListReq.displayName = 'proto.Shop.GetUserItemListReq';
    }
    proto.Shop.GetUserItemListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.GetUserItemListAck.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.GetUserItemListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetUserItemListAck.displayName = 'proto.Shop.GetUserItemListAck';
    }
    proto.Shop.BuyInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.BuyInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.BuyInfo.displayName = 'proto.Shop.BuyInfo';
    }
    proto.Shop.BuyMerchandiseReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.BuyMerchandiseReq.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.BuyMerchandiseReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.BuyMerchandiseReq.displayName = 'proto.Shop.BuyMerchandiseReq';
    }
    proto.Shop.BuyMerchandiseAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.BuyMerchandiseAck.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.BuyMerchandiseAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.BuyMerchandiseAck.displayName = 'proto.Shop.BuyMerchandiseAck';
    }
    proto.Shop.AddMerchandiseReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.AddMerchandiseReq.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.AddMerchandiseReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddMerchandiseReq.displayName = 'proto.Shop.AddMerchandiseReq';
    }
    proto.Shop.AddMerchandiseAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.AddMerchandiseAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddMerchandiseAck.displayName = 'proto.Shop.AddMerchandiseAck';
    }
    proto.Shop.UpdateMerchandiseReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.UpdateMerchandiseReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.UpdateMerchandiseReq.displayName = 'proto.Shop.UpdateMerchandiseReq';
    }
    proto.Shop.UpdateMerchandiseAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.UpdateMerchandiseAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.UpdateMerchandiseAck.displayName = 'proto.Shop.UpdateMerchandiseAck';
    }
    proto.Shop.GetMerchandiseReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetMerchandiseReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetMerchandiseReq.displayName = 'proto.Shop.GetMerchandiseReq';
    }
    proto.Shop.GetMerchandiseAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetMerchandiseAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetMerchandiseAck.displayName = 'proto.Shop.GetMerchandiseAck';
    }
    proto.Shop.AddItemReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.AddItemReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddItemReq.displayName = 'proto.Shop.AddItemReq';
    }
    proto.Shop.AddItemAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.AddItemAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddItemAck.displayName = 'proto.Shop.AddItemAck';
    }
    proto.Shop.UpdateItemReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.UpdateItemReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.UpdateItemReq.displayName = 'proto.Shop.UpdateItemReq';
    }
    proto.Shop.UpdateItemAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.UpdateItemAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.UpdateItemAck.displayName = 'proto.Shop.UpdateItemAck';
    }
    proto.Shop.GetItemReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetItemReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetItemReq.displayName = 'proto.Shop.GetItemReq';
    }
    proto.Shop.GetItemAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetItemAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetItemAck.displayName = 'proto.Shop.GetItemAck';
    }
    proto.Shop.AddUserItemReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.AddUserItemReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddUserItemReq.displayName = 'proto.Shop.AddUserItemReq';
    }
    proto.Shop.AddUserItemAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.AddUserItemAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddUserItemAck.displayName = 'proto.Shop.AddUserItemAck';
    }
    proto.Shop.DeleteUserItemReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.DeleteUserItemReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.DeleteUserItemReq.displayName = 'proto.Shop.DeleteUserItemReq';
    }
    proto.Shop.DeleteItemInfo = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.DeleteItemInfo, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.DeleteItemInfo.displayName = 'proto.Shop.DeleteItemInfo';
    }
    proto.Shop.DeleteUserItemAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.DeleteUserItemAck.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.DeleteUserItemAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.DeleteUserItemAck.displayName = 'proto.Shop.DeleteUserItemAck';
    }
    proto.Shop.Agio = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.Agio, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.Agio.displayName = 'proto.Shop.Agio';
    }
    proto.Shop.GetAgioListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetAgioListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetAgioListReq.displayName = 'proto.Shop.GetAgioListReq';
    }
    proto.Shop.GetAgioListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.GetAgioListAck.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.GetAgioListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetAgioListAck.displayName = 'proto.Shop.GetAgioListAck';
    }
    proto.Shop.AddAgioReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.AddAgioReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddAgioReq.displayName = 'proto.Shop.AddAgioReq';
    }
    proto.Shop.AddAgioAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.AddAgioAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddAgioAck.displayName = 'proto.Shop.AddAgioAck';
    }
    proto.Shop.UpdateAgioReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.UpdateAgioReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.UpdateAgioReq.displayName = 'proto.Shop.UpdateAgioReq';
    }
    proto.Shop.UpdateAgioAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.UpdateAgioAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.UpdateAgioAck.displayName = 'proto.Shop.UpdateAgioAck';
    }
    proto.Shop.DeleteAgioReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.DeleteAgioReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.DeleteAgioReq.displayName = 'proto.Shop.DeleteAgioReq';
    }
    proto.Shop.DeleteAgioAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.DeleteAgioAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.DeleteAgioAck.displayName = 'proto.Shop.DeleteAgioAck';
    }
    proto.Shop.GiftBag = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.GiftBag.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.GiftBag, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GiftBag.displayName = 'proto.Shop.GiftBag';
    }
    proto.Shop.GetGiftBagListReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.GetGiftBagListReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetGiftBagListReq.displayName = 'proto.Shop.GetGiftBagListReq';
    }
    proto.Shop.GetGiftBagListAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.GetGiftBagListAck.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.GetGiftBagListAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.GetGiftBagListAck.displayName = 'proto.Shop.GetGiftBagListAck';
    }
    proto.Shop.AddGiftBagReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.AddGiftBagReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddGiftBagReq.displayName = 'proto.Shop.AddGiftBagReq';
    }
    proto.Shop.AddGiftBagAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.AddGiftBagAck.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.AddGiftBagAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AddGiftBagAck.displayName = 'proto.Shop.AddGiftBagAck';
    }
    proto.Shop.DeleteGiftBagReq = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.Shop.DeleteGiftBagReq.repeatedFields_, null);
    };
    goog.inherits(proto.Shop.DeleteGiftBagReq, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.DeleteGiftBagReq.displayName = 'proto.Shop.DeleteGiftBagReq';
    }
    proto.Shop.DeleteGiftBagAck = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.DeleteGiftBagAck, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.DeleteGiftBagAck.displayName = 'proto.Shop.DeleteGiftBagAck';
    }
    proto.Shop.UserItemChangeNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.UserItemChangeNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.UserItemChangeNotify.displayName = 'proto.Shop.UserItemChangeNotify';
    }
    proto.Shop.ItemChangeNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.ItemChangeNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.ItemChangeNotify.displayName = 'proto.Shop.ItemChangeNotify';
    }
    proto.Shop.MerchandiseChangeNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.MerchandiseChangeNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.MerchandiseChangeNotify.displayName = 'proto.Shop.MerchandiseChangeNotify';
    }
    proto.Shop.UserBuyMerchandiseNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.UserBuyMerchandiseNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.UserBuyMerchandiseNotify.displayName = 'proto.Shop.UserBuyMerchandiseNotify';
    }
    proto.Shop.AgoiChangeNotify = function (opt_data) {
        googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.Shop.AgoiChangeNotify, googleProtobuf.Message);
    if (goog.DEBUG && !COMPILED) {
        proto.Shop.AgoiChangeNotify.displayName = 'proto.Shop.AgoiChangeNotify';
    }
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.PSID.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.PSID.toObject(opt_includeInstance, this);
        };
        proto.Shop.PSID.toObject = function (includeInstance, msg) {
            var f, obj = {
                npsid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strpname: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.PSID.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.PSID;
        return proto.Shop.PSID.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.PSID.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNpsid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrpname(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.PSID.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.PSID.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.PSID.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpsid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getStrpname();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Shop.PSID.prototype.getNpsid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.PSID.prototype.setNpsid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.PSID.prototype.getStrpname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.PSID.prototype.setStrpname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.SSID.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.SSID.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.SSID.toObject(opt_includeInstance, this);
        };
        proto.Shop.SSID.toObject = function (includeInstance, msg) {
            var f, obj = {
                nssid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strsname: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                lstpsidList: googleProtobuf.Message.toObjectList(msg.getLstpsidList(), proto.Shop.PSID.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.SSID.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.SSID;
        return proto.Shop.SSID.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.SSID.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNssid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrsname(value);
                    break;
                case 3:
                    var value = new proto.Shop.PSID;
                    reader.readMessage(value, proto.Shop.PSID.deserializeBinaryFromReader);
                    msg.addLstpsid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.SSID.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.SSID.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.SSID.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNssid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getStrsname();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getLstpsidList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(3, f, proto.Shop.PSID.serializeBinaryToWriter);
        }
    };
    proto.Shop.SSID.prototype.getNssid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.SSID.prototype.setNssid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.SSID.prototype.getStrsname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.SSID.prototype.setStrsname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.SSID.prototype.getLstpsidList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.PSID, 3));
    };
    proto.Shop.SSID.prototype.setLstpsidList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.Shop.SSID.prototype.addLstpsid = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Shop.PSID, opt_index);
    };
    proto.Shop.SSID.prototype.clearLstpsidList = function () {
        return this.setLstpsidList([]);
    };
    proto.Shop.BSID.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.BSID.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.BSID.toObject(opt_includeInstance, this);
        };
        proto.Shop.BSID.toObject = function (includeInstance, msg) {
            var f, obj = {
                nbsid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strbname: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                lstssidList: googleProtobuf.Message.toObjectList(msg.getLstssidList(), proto.Shop.SSID.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.BSID.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.BSID;
        return proto.Shop.BSID.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.BSID.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNbsid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrbname(value);
                    break;
                case 3:
                    var value = new proto.Shop.SSID;
                    reader.readMessage(value, proto.Shop.SSID.deserializeBinaryFromReader);
                    msg.addLstssid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.BSID.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.BSID.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.BSID.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNbsid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getStrbname();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getLstssidList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(3, f, proto.Shop.SSID.serializeBinaryToWriter);
        }
    };
    proto.Shop.BSID.prototype.getNbsid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.BSID.prototype.setNbsid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.BSID.prototype.getStrbname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.BSID.prototype.setStrbname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.BSID.prototype.getLstssidList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.SSID, 3));
    };
    proto.Shop.BSID.prototype.setLstssidList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.Shop.BSID.prototype.addLstssid = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Shop.SSID, opt_index);
    };
    proto.Shop.BSID.prototype.clearLstssidList = function () {
        return this.setLstssidList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetCategoryListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetCategoryListReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetCategoryListReq.toObject = function (includeInstance, msg) {
            var f, obj = {};
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetCategoryListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetCategoryListReq;
        return proto.Shop.GetCategoryListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetCategoryListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetCategoryListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetCategoryListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetCategoryListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
    };
    proto.Shop.CategoryList.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.CategoryList.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.CategoryList.toObject(opt_includeInstance, this);
        };
        proto.Shop.CategoryList.toObject = function (includeInstance, msg) {
            var f, obj = {
                lstbsidList: googleProtobuf.Message.toObjectList(msg.getLstbsidList(), proto.Shop.BSID.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.CategoryList.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.CategoryList;
        return proto.Shop.CategoryList.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.CategoryList.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Shop.BSID;
                    reader.readMessage(value, proto.Shop.BSID.deserializeBinaryFromReader);
                    msg.addLstbsid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.CategoryList.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.CategoryList.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.CategoryList.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getLstbsidList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(1, f, proto.Shop.BSID.serializeBinaryToWriter);
        }
    };
    proto.Shop.CategoryList.prototype.getLstbsidList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.BSID, 1));
    };
    proto.Shop.CategoryList.prototype.setLstbsidList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
    };
    proto.Shop.CategoryList.prototype.addLstbsid = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Shop.BSID, opt_index);
    };
    proto.Shop.CategoryList.prototype.clearLstbsidList = function () {
        return this.setLstbsidList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetCategoryListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetCategoryListAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetCategoryListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                lstcategory: (f = msg.getLstcategory()) && proto.Shop.CategoryList.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetCategoryListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetCategoryListAck;
        return proto.Shop.GetCategoryListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetCategoryListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Shop.CategoryList;
                    reader.readMessage(value, proto.Shop.CategoryList.deserializeBinaryFromReader);
                    msg.setLstcategory(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetCategoryListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetCategoryListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetCategoryListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getLstcategory();
        if (f != null) {
            writer.writeMessage(1, f, proto.Shop.CategoryList.serializeBinaryToWriter);
        }
    };
    proto.Shop.GetCategoryListAck.prototype.getLstcategory = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.CategoryList, 1));
    };
    proto.Shop.GetCategoryListAck.prototype.setLstcategory = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 1, value);
    };
    proto.Shop.GetCategoryListAck.prototype.clearLstcategory = function () {
        return this.setLstcategory(undefined);
    };
    proto.Shop.GetCategoryListAck.prototype.hasLstcategory = function () {
        return googleProtobuf.Message.getField(this, 1) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.Item.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.Item.toObject(opt_includeInstance, this);
        };
        proto.Shop.Item.toObject = function (includeInstance, msg) {
            var f, obj = {
                nid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nattribute: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nlayer: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                strname: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
                nuse: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                ngender: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                fprice: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
                frefillprice: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
                nactiveday: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                strimagepath: googleProtobuf.Message.getFieldWithDefault(msg, 10, ""),
                stravatarpath: googleProtobuf.Message.getFieldWithDefault(msg, 11, ""),
                strdesc: googleProtobuf.Message.getFieldWithDefault(msg, 12, ""),
                nextraitem: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.Item.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.Item;
        return proto.Shop.Item.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.Item.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNid(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNattribute(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setNlayer(value);
                    break;
                case 4:
                    var value = (reader.readString());
                    msg.setStrname(value);
                    break;
                case 5:
                    var value = (reader.readInt32());
                    msg.setNuse(value);
                    break;
                case 6:
                    var value = (reader.readInt32());
                    msg.setNgender(value);
                    break;
                case 7:
                    var value = (reader.readFloat());
                    msg.setFprice(value);
                    break;
                case 8:
                    var value = (reader.readFloat());
                    msg.setFrefillprice(value);
                    break;
                case 9:
                    var value = (reader.readSint32());
                    msg.setNactiveday(value);
                    break;
                case 10:
                    var value = (reader.readString());
                    msg.setStrimagepath(value);
                    break;
                case 11:
                    var value = (reader.readString());
                    msg.setStravatarpath(value);
                    break;
                case 12:
                    var value = (reader.readString());
                    msg.setStrdesc(value);
                    break;
                case 13:
                    var value = (reader.readInt32());
                    msg.setNextraitem(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.Item.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.Item.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.Item.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getNattribute();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
        f = message.getNlayer();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
        f = message.getStrname();
        if (f.length > 0) {
            writer.writeString(4, f);
        }
        f = message.getNuse();
        if (f !== 0) {
            writer.writeInt32(5, f);
        }
        f = message.getNgender();
        if (f !== 0) {
            writer.writeInt32(6, f);
        }
        f = message.getFprice();
        if (f !== 0.0) {
            writer.writeFloat(7, f);
        }
        f = message.getFrefillprice();
        if (f !== 0.0) {
            writer.writeFloat(8, f);
        }
        f = message.getNactiveday();
        if (f !== 0) {
            writer.writeSint32(9, f);
        }
        f = message.getStrimagepath();
        if (f.length > 0) {
            writer.writeString(10, f);
        }
        f = message.getStravatarpath();
        if (f.length > 0) {
            writer.writeString(11, f);
        }
        f = message.getStrdesc();
        if (f.length > 0) {
            writer.writeString(12, f);
        }
        f = message.getNextraitem();
        if (f !== 0) {
            writer.writeInt32(13, f);
        }
    };
    proto.Shop.Item.prototype.getNid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.Item.prototype.setNid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.Item.prototype.getNattribute = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.Item.prototype.setNattribute = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.Item.prototype.getNlayer = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.Item.prototype.setNlayer = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.Item.prototype.getStrname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
    };
    proto.Shop.Item.prototype.setStrname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 4, value);
    };
    proto.Shop.Item.prototype.getNuse = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Shop.Item.prototype.setNuse = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Shop.Item.prototype.getNgender = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Shop.Item.prototype.setNgender = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Shop.Item.prototype.getFprice = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
    };
    proto.Shop.Item.prototype.setFprice = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 7, value);
    };
    proto.Shop.Item.prototype.getFrefillprice = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
    };
    proto.Shop.Item.prototype.setFrefillprice = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 8, value);
    };
    proto.Shop.Item.prototype.getNactiveday = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Shop.Item.prototype.setNactiveday = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Shop.Item.prototype.getStrimagepath = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
    };
    proto.Shop.Item.prototype.setStrimagepath = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 10, value);
    };
    proto.Shop.Item.prototype.getStravatarpath = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, ""));
    };
    proto.Shop.Item.prototype.setStravatarpath = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 11, value);
    };
    proto.Shop.Item.prototype.getStrdesc = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, ""));
    };
    proto.Shop.Item.prototype.setStrdesc = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 12, value);
    };
    proto.Shop.Item.prototype.getNextraitem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
    };
    proto.Shop.Item.prototype.setNextraitem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 13, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.MyItem.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.MyItem.toObject(opt_includeInstance, this);
        };
        proto.Shop.MyItem.toObject = function (includeInstance, msg) {
            var f, obj = {
                nno: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ninactive: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ninexpire: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nnum: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                info: (f = msg.getInfo()) && proto.Shop.Item.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.MyItem.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.MyItem;
        return proto.Shop.MyItem.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.MyItem.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNno(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNinactive(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNinexpire(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNnum(value);
                    break;
                case 5:
                    var value = new proto.Shop.Item;
                    reader.readMessage(value, proto.Shop.Item.deserializeBinaryFromReader);
                    msg.setInfo(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.MyItem.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.MyItem.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.MyItem.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNno();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getNinactive();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNinexpire();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNnum();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getInfo();
        if (f != null) {
            writer.writeMessage(5, f, proto.Shop.Item.serializeBinaryToWriter);
        }
    };
    proto.Shop.MyItem.prototype.getNno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.MyItem.prototype.setNno = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.MyItem.prototype.getNinactive = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.MyItem.prototype.setNinactive = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.MyItem.prototype.getNinexpire = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.MyItem.prototype.setNinexpire = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.MyItem.prototype.getNnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.MyItem.prototype.setNnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Shop.MyItem.prototype.getInfo = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Item, 5));
    };
    proto.Shop.MyItem.prototype.setInfo = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 5, value);
    };
    proto.Shop.MyItem.prototype.clearInfo = function () {
        return this.setInfo(undefined);
    };
    proto.Shop.MyItem.prototype.hasInfo = function () {
        return googleProtobuf.Message.getField(this, 5) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.Merchandise.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.Merchandise.toObject(opt_includeInstance, this);
        };
        proto.Shop.Merchandise.toObject = function (includeInstance, msg) {
            var f, obj = {
                nid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                strname: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
                nattribute: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                nrarity: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                ngender: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                ncategory: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                fprice: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
                fagio: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
                fvipagio: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
                nactiveday: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
                nstocks: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
                strdesc: googleProtobuf.Message.getFieldWithDefault(msg, 13, ""),
                strpic: googleProtobuf.Message.getFieldWithDefault(msg, 14, ""),
                nitem: googleProtobuf.Message.getFieldWithDefault(msg, 15, 0),
                noffline: googleProtobuf.Message.getFieldWithDefault(msg, 16, 0),
                ndate: googleProtobuf.Message.getFieldWithDefault(msg, 17, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.Merchandise.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.Merchandise;
        return proto.Shop.Merchandise.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.Merchandise.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrname(value);
                    break;
                case 4:
                    var value = (reader.readInt32());
                    msg.setNattribute(value);
                    break;
                case 5:
                    var value = (reader.readInt32());
                    msg.setNrarity(value);
                    break;
                case 6:
                    var value = (reader.readInt32());
                    msg.setNgender(value);
                    break;
                case 7:
                    var value = (reader.readInt32());
                    msg.setNcategory(value);
                    break;
                case 8:
                    var value = (reader.readFloat());
                    msg.setFprice(value);
                    break;
                case 9:
                    var value = (reader.readFloat());
                    msg.setFagio(value);
                    break;
                case 10:
                    var value = (reader.readFloat());
                    msg.setFvipagio(value);
                    break;
                case 11:
                    var value = (reader.readInt32());
                    msg.setNactiveday(value);
                    break;
                case 12:
                    var value = (reader.readInt32());
                    msg.setNstocks(value);
                    break;
                case 13:
                    var value = (reader.readString());
                    msg.setStrdesc(value);
                    break;
                case 14:
                    var value = (reader.readString());
                    msg.setStrpic(value);
                    break;
                case 15:
                    var value = (reader.readSint32());
                    msg.setNitem(value);
                    break;
                case 16:
                    var value = (reader.readInt32());
                    msg.setNoffline(value);
                    break;
                case 17:
                    var value = (reader.readUint32());
                    msg.setNdate(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.Merchandise.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.Merchandise.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.Merchandise.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getStrname();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
        f = message.getNattribute();
        if (f !== 0) {
            writer.writeInt32(4, f);
        }
        f = message.getNrarity();
        if (f !== 0) {
            writer.writeInt32(5, f);
        }
        f = message.getNgender();
        if (f !== 0) {
            writer.writeInt32(6, f);
        }
        f = message.getNcategory();
        if (f !== 0) {
            writer.writeInt32(7, f);
        }
        f = message.getFprice();
        if (f !== 0.0) {
            writer.writeFloat(8, f);
        }
        f = message.getFagio();
        if (f !== 0.0) {
            writer.writeFloat(9, f);
        }
        f = message.getFvipagio();
        if (f !== 0.0) {
            writer.writeFloat(10, f);
        }
        f = message.getNactiveday();
        if (f !== 0) {
            writer.writeInt32(11, f);
        }
        f = message.getNstocks();
        if (f !== 0) {
            writer.writeInt32(12, f);
        }
        f = message.getStrdesc();
        if (f.length > 0) {
            writer.writeString(13, f);
        }
        f = message.getStrpic();
        if (f.length > 0) {
            writer.writeString(14, f);
        }
        f = message.getNitem();
        if (f !== 0) {
            writer.writeSint32(15, f);
        }
        f = message.getNoffline();
        if (f !== 0) {
            writer.writeInt32(16, f);
        }
        f = message.getNdate();
        if (f !== 0) {
            writer.writeUint32(17, f);
        }
    };
    proto.Shop.Merchandise.prototype.getNid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.Merchandise.prototype.setNid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.Merchandise.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.Merchandise.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.Merchandise.prototype.getStrname = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Shop.Merchandise.prototype.setStrname = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    proto.Shop.Merchandise.prototype.getNattribute = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.Merchandise.prototype.setNattribute = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Shop.Merchandise.prototype.getNrarity = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Shop.Merchandise.prototype.setNrarity = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Shop.Merchandise.prototype.getNgender = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Shop.Merchandise.prototype.setNgender = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Shop.Merchandise.prototype.getNcategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Shop.Merchandise.prototype.setNcategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Shop.Merchandise.prototype.getFprice = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
    };
    proto.Shop.Merchandise.prototype.setFprice = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 8, value);
    };
    proto.Shop.Merchandise.prototype.getFagio = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
    };
    proto.Shop.Merchandise.prototype.setFagio = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 9, value);
    };
    proto.Shop.Merchandise.prototype.getFvipagio = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
    };
    proto.Shop.Merchandise.prototype.setFvipagio = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 10, value);
    };
    proto.Shop.Merchandise.prototype.getNactiveday = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Shop.Merchandise.prototype.setNactiveday = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    proto.Shop.Merchandise.prototype.getNstocks = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
    };
    proto.Shop.Merchandise.prototype.setNstocks = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 12, value);
    };
    proto.Shop.Merchandise.prototype.getStrdesc = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 13, ""));
    };
    proto.Shop.Merchandise.prototype.setStrdesc = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 13, value);
    };
    proto.Shop.Merchandise.prototype.getStrpic = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 14, ""));
    };
    proto.Shop.Merchandise.prototype.setStrpic = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 14, value);
    };
    proto.Shop.Merchandise.prototype.getNitem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 15, 0));
    };
    proto.Shop.Merchandise.prototype.setNitem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 15, value);
    };
    proto.Shop.Merchandise.prototype.getNoffline = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 16, 0));
    };
    proto.Shop.Merchandise.prototype.setNoffline = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 16, value);
    };
    proto.Shop.Merchandise.prototype.getNdate = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 17, 0));
    };
    proto.Shop.Merchandise.prototype.setNdate = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 17, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetMerchandiseListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetMerchandiseListReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetMerchandiseListReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ncategory: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ncurindex: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                noffline: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                ngender: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetMerchandiseListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetMerchandiseListReq;
        return proto.Shop.GetMerchandiseListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetMerchandiseListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNcategory(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setNcurindex(value);
                    break;
                case 4:
                    var value = (reader.readInt32());
                    msg.setNoffline(value);
                    break;
                case 5:
                    var value = (reader.readInt32());
                    msg.setNgender(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetMerchandiseListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetMerchandiseListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetMerchandiseListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNcategory();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
        f = message.getNcurindex();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
        f = message.getNoffline();
        if (f !== 0) {
            writer.writeInt32(4, f);
        }
        f = message.getNgender();
        if (f !== 0) {
            writer.writeInt32(5, f);
        }
    };
    proto.Shop.GetMerchandiseListReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetMerchandiseListReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetMerchandiseListReq.prototype.getNcategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.GetMerchandiseListReq.prototype.setNcategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.GetMerchandiseListReq.prototype.getNcurindex = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.GetMerchandiseListReq.prototype.setNcurindex = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.GetMerchandiseListReq.prototype.getNoffline = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.GetMerchandiseListReq.prototype.setNoffline = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Shop.GetMerchandiseListReq.prototype.getNgender = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Shop.GetMerchandiseListReq.prototype.setNgender = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Shop.MerchandiseList.repeatedFields_ = [1];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.MerchandiseList.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.MerchandiseList.toObject(opt_includeInstance, this);
        };
        proto.Shop.MerchandiseList.toObject = function (includeInstance, msg) {
            var f, obj = {
                lstmersList: googleProtobuf.Message.toObjectList(msg.getLstmersList(), proto.Shop.Merchandise.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.MerchandiseList.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.MerchandiseList;
        return proto.Shop.MerchandiseList.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.MerchandiseList.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = new proto.Shop.Merchandise;
                    reader.readMessage(value, proto.Shop.Merchandise.deserializeBinaryFromReader);
                    msg.addLstmers(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.MerchandiseList.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.MerchandiseList.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.MerchandiseList.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getLstmersList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(1, f, proto.Shop.Merchandise.serializeBinaryToWriter);
        }
    };
    proto.Shop.MerchandiseList.prototype.getLstmersList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.Merchandise, 1));
    };
    proto.Shop.MerchandiseList.prototype.setLstmersList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
    };
    proto.Shop.MerchandiseList.prototype.addLstmers = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Shop.Merchandise, opt_index);
    };
    proto.Shop.MerchandiseList.prototype.clearLstmersList = function () {
        return this.setLstmersList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetMerchandiseListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetMerchandiseListAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetMerchandiseListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                ncategory: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntotalindex: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ncurindex: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                lstquery: (f = msg.getLstquery()) && proto.Shop.MerchandiseList.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetMerchandiseListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetMerchandiseListAck;
        return proto.Shop.GetMerchandiseListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetMerchandiseListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNcategory(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNtotalindex(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setNcurindex(value);
                    break;
                case 4:
                    var value = new proto.Shop.MerchandiseList;
                    reader.readMessage(value, proto.Shop.MerchandiseList.deserializeBinaryFromReader);
                    msg.setLstquery(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetMerchandiseListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetMerchandiseListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetMerchandiseListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNcategory();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getNtotalindex();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
        f = message.getNcurindex();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
        f = message.getLstquery();
        if (f != null) {
            writer.writeMessage(4, f, proto.Shop.MerchandiseList.serializeBinaryToWriter);
        }
    };
    proto.Shop.GetMerchandiseListAck.prototype.getNcategory = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetMerchandiseListAck.prototype.setNcategory = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetMerchandiseListAck.prototype.getNtotalindex = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.GetMerchandiseListAck.prototype.setNtotalindex = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.GetMerchandiseListAck.prototype.getNcurindex = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.GetMerchandiseListAck.prototype.setNcurindex = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.GetMerchandiseListAck.prototype.getLstquery = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.MerchandiseList, 4));
    };
    proto.Shop.GetMerchandiseListAck.prototype.setLstquery = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 4, value);
    };
    proto.Shop.GetMerchandiseListAck.prototype.clearLstquery = function () {
        return this.setLstquery(undefined);
    };
    proto.Shop.GetMerchandiseListAck.prototype.hasLstquery = function () {
        return googleProtobuf.Message.getField(this, 4) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetItemListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetItemListReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetItemListReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                ncurindex: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                natribute: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                ngender: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                isfull: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 6, false)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetItemListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetItemListReq;
        return proto.Shop.GetItemListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetItemListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setNcurindex(value);
                    break;
                case 4:
                    var value = (reader.readInt32());
                    msg.setNatribute(value);
                    break;
                case 5:
                    var value = (reader.readInt32());
                    msg.setNgender(value);
                    break;
                case 6:
                    var value = (reader.readBool());
                    msg.setIsfull(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetItemListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetItemListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetItemListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNcurindex();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
        f = message.getNatribute();
        if (f !== 0) {
            writer.writeInt32(4, f);
        }
        f = message.getNgender();
        if (f !== 0) {
            writer.writeInt32(5, f);
        }
        f = message.getIsfull();
        if (f) {
            writer.writeBool(6, f);
        }
    };
    proto.Shop.GetItemListReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetItemListReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetItemListReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.GetItemListReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.GetItemListReq.prototype.getNcurindex = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.GetItemListReq.prototype.setNcurindex = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.GetItemListReq.prototype.getNatribute = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.GetItemListReq.prototype.setNatribute = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Shop.GetItemListReq.prototype.getNgender = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Shop.GetItemListReq.prototype.setNgender = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Shop.GetItemListReq.prototype.getIsfull = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 6, false));
    };
    proto.Shop.GetItemListReq.prototype.setIsfull = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 6, value);
    };
    proto.Shop.GetItemListAck.repeatedFields_ = [5];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetItemListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetItemListAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetItemListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ntotal: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ncurindex: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                isfull: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 4, false),
                lstitemsList: googleProtobuf.Message.toObjectList(msg.getLstitemsList(), proto.Shop.Item.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetItemListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetItemListAck;
        return proto.Shop.GetItemListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetItemListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNtotal(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setNcurindex(value);
                    break;
                case 4:
                    var value = (reader.readBool());
                    msg.setIsfull(value);
                    break;
                case 5:
                    var value = new proto.Shop.Item;
                    reader.readMessage(value, proto.Shop.Item.deserializeBinaryFromReader);
                    msg.addLstitems(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetItemListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetItemListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetItemListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNtotal();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
        f = message.getNcurindex();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
        f = message.getIsfull();
        if (f) {
            writer.writeBool(4, f);
        }
        f = message.getLstitemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(5, f, proto.Shop.Item.serializeBinaryToWriter);
        }
    };
    proto.Shop.GetItemListAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetItemListAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetItemListAck.prototype.getNtotal = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.GetItemListAck.prototype.setNtotal = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.GetItemListAck.prototype.getNcurindex = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.GetItemListAck.prototype.setNcurindex = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.GetItemListAck.prototype.getIsfull = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 4, false));
    };
    proto.Shop.GetItemListAck.prototype.setIsfull = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 4, value);
    };
    proto.Shop.GetItemListAck.prototype.getLstitemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.Item, 5));
    };
    proto.Shop.GetItemListAck.prototype.setLstitemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
    };
    proto.Shop.GetItemListAck.prototype.addLstitems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Shop.Item, opt_index);
    };
    proto.Shop.GetItemListAck.prototype.clearLstitemsList = function () {
        return this.setLstitemsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetUserItemListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetUserItemListReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetUserItemListReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nattribute: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nuse: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetUserItemListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetUserItemListReq;
        return proto.Shop.GetUserItemListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetUserItemListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setNattribute(value);
                    break;
                case 4:
                    var value = (reader.readSint32());
                    msg.setNuse(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetUserItemListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetUserItemListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetUserItemListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNattribute();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
        f = message.getNuse();
        if (f !== 0) {
            writer.writeSint32(4, f);
        }
    };
    proto.Shop.GetUserItemListReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetUserItemListReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetUserItemListReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.GetUserItemListReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.GetUserItemListReq.prototype.getNattribute = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.GetUserItemListReq.prototype.setNattribute = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.GetUserItemListReq.prototype.getNuse = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.GetUserItemListReq.prototype.setNuse = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Shop.GetUserItemListAck.repeatedFields_ = [3];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetUserItemListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetUserItemListAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetUserItemListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                lstitemsList: googleProtobuf.Message.toObjectList(msg.getLstitemsList(), proto.Shop.MyItem.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetUserItemListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetUserItemListAck;
        return proto.Shop.GetUserItemListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetUserItemListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = new proto.Shop.MyItem;
                    reader.readMessage(value, proto.Shop.MyItem.deserializeBinaryFromReader);
                    msg.addLstitems(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetUserItemListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetUserItemListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetUserItemListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getLstitemsList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(3, f, proto.Shop.MyItem.serializeBinaryToWriter);
        }
    };
    proto.Shop.GetUserItemListAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetUserItemListAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetUserItemListAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.GetUserItemListAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.GetUserItemListAck.prototype.getLstitemsList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.MyItem, 3));
    };
    proto.Shop.GetUserItemListAck.prototype.setLstitemsList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.Shop.GetUserItemListAck.prototype.addLstitems = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Shop.MyItem, opt_index);
    };
    proto.Shop.GetUserItemListAck.prototype.clearLstitemsList = function () {
        return this.setLstitemsList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.BuyInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.BuyInfo.toObject(opt_includeInstance, this);
        };
        proto.Shop.BuyInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                nid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nnum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.BuyInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.BuyInfo;
        return proto.Shop.BuyInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.BuyInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNid(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.BuyInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.BuyInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.BuyInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getNnum();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
    };
    proto.Shop.BuyInfo.prototype.getNid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.BuyInfo.prototype.setNid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.BuyInfo.prototype.getNnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.BuyInfo.prototype.setNnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.BuyMerchandiseReq.repeatedFields_ = [9];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.BuyMerchandiseReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.BuyMerchandiseReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.BuyMerchandiseReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nbuyer: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                ngetter: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                strticket: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
                strpayword: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
                isvip: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 7, false),
                ismustbuyall: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 8, false),
                lstcartList: googleProtobuf.Message.toObjectList(msg.getLstcartList(), proto.Shop.BuyInfo.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.BuyMerchandiseReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.BuyMerchandiseReq;
        return proto.Shop.BuyMerchandiseReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.BuyMerchandiseReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNbuyer(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNgetter(value);
                    break;
                case 5:
                    var value = (reader.readString());
                    msg.setStrticket(value);
                    break;
                case 6:
                    var value = (reader.readString());
                    msg.setStrpayword(value);
                    break;
                case 7:
                    var value = (reader.readBool());
                    msg.setIsvip(value);
                    break;
                case 8:
                    var value = (reader.readBool());
                    msg.setIsmustbuyall(value);
                    break;
                case 9:
                    var value = new proto.Shop.BuyInfo;
                    reader.readMessage(value, proto.Shop.BuyInfo.deserializeBinaryFromReader);
                    msg.addLstcart(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.BuyMerchandiseReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.BuyMerchandiseReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.BuyMerchandiseReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNbuyer();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNgetter();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getStrticket();
        if (f.length > 0) {
            writer.writeString(5, f);
        }
        f = message.getStrpayword();
        if (f.length > 0) {
            writer.writeString(6, f);
        }
        f = message.getIsvip();
        if (f) {
            writer.writeBool(7, f);
        }
        f = message.getIsmustbuyall();
        if (f) {
            writer.writeBool(8, f);
        }
        f = message.getLstcartList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(9, f, proto.Shop.BuyInfo.serializeBinaryToWriter);
        }
    };
    proto.Shop.BuyMerchandiseReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.BuyMerchandiseReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.BuyMerchandiseReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.BuyMerchandiseReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.BuyMerchandiseReq.prototype.getNbuyer = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.BuyMerchandiseReq.prototype.setNbuyer = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.BuyMerchandiseReq.prototype.getNgetter = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.BuyMerchandiseReq.prototype.setNgetter = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Shop.BuyMerchandiseReq.prototype.getStrticket = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
    };
    proto.Shop.BuyMerchandiseReq.prototype.setStrticket = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 5, value);
    };
    proto.Shop.BuyMerchandiseReq.prototype.getStrpayword = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
    };
    proto.Shop.BuyMerchandiseReq.prototype.setStrpayword = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 6, value);
    };
    proto.Shop.BuyMerchandiseReq.prototype.getIsvip = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 7, false));
    };
    proto.Shop.BuyMerchandiseReq.prototype.setIsvip = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 7, value);
    };
    proto.Shop.BuyMerchandiseReq.prototype.getIsmustbuyall = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 8, false));
    };
    proto.Shop.BuyMerchandiseReq.prototype.setIsmustbuyall = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 8, value);
    };
    proto.Shop.BuyMerchandiseReq.prototype.getLstcartList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.BuyInfo, 9));
    };
    proto.Shop.BuyMerchandiseReq.prototype.setLstcartList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 9, value);
    };
    proto.Shop.BuyMerchandiseReq.prototype.addLstcart = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.Shop.BuyInfo, opt_index);
    };
    proto.Shop.BuyMerchandiseReq.prototype.clearLstcartList = function () {
        return this.setLstcartList([]);
    };
    proto.Shop.BuyMerchandiseAck.repeatedFields_ = [5];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.BuyMerchandiseAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.BuyMerchandiseAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.BuyMerchandiseAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nbuyer: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                ngetter: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                famount: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
                lstbuyList: googleProtobuf.Message.toObjectList(msg.getLstbuyList(), proto.Shop.BuyInfo.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.BuyMerchandiseAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.BuyMerchandiseAck;
        return proto.Shop.BuyMerchandiseAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.BuyMerchandiseAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNbuyer(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNgetter(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 4:
                    var value = (reader.readFloat());
                    msg.setFamount(value);
                    break;
                case 5:
                    var value = new proto.Shop.BuyInfo;
                    reader.readMessage(value, proto.Shop.BuyInfo.deserializeBinaryFromReader);
                    msg.addLstbuy(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.BuyMerchandiseAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.BuyMerchandiseAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.BuyMerchandiseAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNbuyer();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNgetter();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
        f = message.getFamount();
        if (f !== 0.0) {
            writer.writeFloat(4, f);
        }
        f = message.getLstbuyList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(5, f, proto.Shop.BuyInfo.serializeBinaryToWriter);
        }
    };
    proto.Shop.BuyMerchandiseAck.prototype.getNbuyer = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.BuyMerchandiseAck.prototype.setNbuyer = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.BuyMerchandiseAck.prototype.getNgetter = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.BuyMerchandiseAck.prototype.setNgetter = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.BuyMerchandiseAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.BuyMerchandiseAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.BuyMerchandiseAck.prototype.getFamount = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
    };
    proto.Shop.BuyMerchandiseAck.prototype.setFamount = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 4, value);
    };
    proto.Shop.BuyMerchandiseAck.prototype.getLstbuyList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.BuyInfo, 5));
    };
    proto.Shop.BuyMerchandiseAck.prototype.setLstbuyList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
    };
    proto.Shop.BuyMerchandiseAck.prototype.addLstbuy = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Shop.BuyInfo, opt_index);
    };
    proto.Shop.BuyMerchandiseAck.prototype.clearLstbuyList = function () {
        return this.setLstbuyList([]);
    };
    proto.Shop.AddMerchandiseReq.repeatedFields_ = [4];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddMerchandiseReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddMerchandiseReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddMerchandiseReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                merchandise: (f = msg.getMerchandise()) && proto.Shop.Merchandise.toObject(includeInstance, f),
                lstitemList: (f = googleProtobuf.Message.getRepeatedField(msg, 4)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddMerchandiseReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddMerchandiseReq;
        return proto.Shop.AddMerchandiseReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddMerchandiseReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = new proto.Shop.Merchandise;
                    reader.readMessage(value, proto.Shop.Merchandise.deserializeBinaryFromReader);
                    msg.setMerchandise(value);
                    break;
                case 4:
                    var values = (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addLstitem(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddMerchandiseReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddMerchandiseReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddMerchandiseReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getMerchandise();
        if (f != null) {
            writer.writeMessage(3, f, proto.Shop.Merchandise.serializeBinaryToWriter);
        }
        f = message.getLstitemList();
        if (f.length > 0) {
            writer.writePackedInt32(4, f);
        }
    };
    proto.Shop.AddMerchandiseReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddMerchandiseReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.AddMerchandiseReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.AddMerchandiseReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.AddMerchandiseReq.prototype.getMerchandise = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Merchandise, 3));
    };
    proto.Shop.AddMerchandiseReq.prototype.setMerchandise = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Shop.AddMerchandiseReq.prototype.clearMerchandise = function () {
        return this.setMerchandise(undefined);
    };
    proto.Shop.AddMerchandiseReq.prototype.hasMerchandise = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    proto.Shop.AddMerchandiseReq.prototype.getLstitemList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 4));
    };
    proto.Shop.AddMerchandiseReq.prototype.setLstitemList = function (value) {
        return googleProtobuf.Message.setField(this, 4, value || []);
    };
    proto.Shop.AddMerchandiseReq.prototype.addLstitem = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 4, value, opt_index);
    };
    proto.Shop.AddMerchandiseReq.prototype.clearLstitemList = function () {
        return this.setLstitemList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddMerchandiseAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddMerchandiseAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddMerchandiseAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddMerchandiseAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddMerchandiseAck;
        return proto.Shop.AddMerchandiseAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddMerchandiseAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddMerchandiseAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddMerchandiseAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddMerchandiseAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Shop.AddMerchandiseAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddMerchandiseAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.UpdateMerchandiseReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.UpdateMerchandiseReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.UpdateMerchandiseReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                merchandise: (f = msg.getMerchandise()) && proto.Shop.Merchandise.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.UpdateMerchandiseReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.UpdateMerchandiseReq;
        return proto.Shop.UpdateMerchandiseReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.UpdateMerchandiseReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = new proto.Shop.Merchandise;
                    reader.readMessage(value, proto.Shop.Merchandise.deserializeBinaryFromReader);
                    msg.setMerchandise(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.UpdateMerchandiseReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.UpdateMerchandiseReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.UpdateMerchandiseReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getMerchandise();
        if (f != null) {
            writer.writeMessage(3, f, proto.Shop.Merchandise.serializeBinaryToWriter);
        }
    };
    proto.Shop.UpdateMerchandiseReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.UpdateMerchandiseReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.UpdateMerchandiseReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.UpdateMerchandiseReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.UpdateMerchandiseReq.prototype.getMerchandise = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Merchandise, 3));
    };
    proto.Shop.UpdateMerchandiseReq.prototype.setMerchandise = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Shop.UpdateMerchandiseReq.prototype.clearMerchandise = function () {
        return this.setMerchandise(undefined);
    };
    proto.Shop.UpdateMerchandiseReq.prototype.hasMerchandise = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.UpdateMerchandiseAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.UpdateMerchandiseAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.UpdateMerchandiseAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.UpdateMerchandiseAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.UpdateMerchandiseAck;
        return proto.Shop.UpdateMerchandiseAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.UpdateMerchandiseAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.UpdateMerchandiseAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.UpdateMerchandiseAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.UpdateMerchandiseAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Shop.UpdateMerchandiseAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.UpdateMerchandiseAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetMerchandiseReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetMerchandiseReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetMerchandiseReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetMerchandiseReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetMerchandiseReq;
        return proto.Shop.GetMerchandiseReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetMerchandiseReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetMerchandiseReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetMerchandiseReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetMerchandiseReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
    };
    proto.Shop.GetMerchandiseReq.prototype.getNid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetMerchandiseReq.prototype.setNid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetMerchandiseAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetMerchandiseAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetMerchandiseAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                merchandise: (f = msg.getMerchandise()) && proto.Shop.Merchandise.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetMerchandiseAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetMerchandiseAck;
        return proto.Shop.GetMerchandiseAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetMerchandiseAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Shop.Merchandise;
                    reader.readMessage(value, proto.Shop.Merchandise.deserializeBinaryFromReader);
                    msg.setMerchandise(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetMerchandiseAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetMerchandiseAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetMerchandiseAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getMerchandise();
        if (f != null) {
            writer.writeMessage(2, f, proto.Shop.Merchandise.serializeBinaryToWriter);
        }
    };
    proto.Shop.GetMerchandiseAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetMerchandiseAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetMerchandiseAck.prototype.getMerchandise = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Merchandise, 2));
    };
    proto.Shop.GetMerchandiseAck.prototype.setMerchandise = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Shop.GetMerchandiseAck.prototype.clearMerchandise = function () {
        return this.setMerchandise(undefined);
    };
    proto.Shop.GetMerchandiseAck.prototype.hasMerchandise = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddItemReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddItemReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddItemReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                item: (f = msg.getItem()) && proto.Shop.Item.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddItemReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddItemReq;
        return proto.Shop.AddItemReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddItemReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = new proto.Shop.Item;
                    reader.readMessage(value, proto.Shop.Item.deserializeBinaryFromReader);
                    msg.setItem(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddItemReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddItemReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddItemReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getItem();
        if (f != null) {
            writer.writeMessage(3, f, proto.Shop.Item.serializeBinaryToWriter);
        }
    };
    proto.Shop.AddItemReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddItemReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.AddItemReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.AddItemReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.AddItemReq.prototype.getItem = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Item, 3));
    };
    proto.Shop.AddItemReq.prototype.setItem = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Shop.AddItemReq.prototype.clearItem = function () {
        return this.setItem(undefined);
    };
    proto.Shop.AddItemReq.prototype.hasItem = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddItemAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddItemAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddItemAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddItemAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddItemAck;
        return proto.Shop.AddItemAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddItemAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddItemAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddItemAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddItemAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Shop.AddItemAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddItemAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.UpdateItemReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.UpdateItemReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.UpdateItemReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                item: (f = msg.getItem()) && proto.Shop.Item.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.UpdateItemReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.UpdateItemReq;
        return proto.Shop.UpdateItemReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.UpdateItemReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = new proto.Shop.Item;
                    reader.readMessage(value, proto.Shop.Item.deserializeBinaryFromReader);
                    msg.setItem(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.UpdateItemReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.UpdateItemReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.UpdateItemReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getItem();
        if (f != null) {
            writer.writeMessage(3, f, proto.Shop.Item.serializeBinaryToWriter);
        }
    };
    proto.Shop.UpdateItemReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.UpdateItemReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.UpdateItemReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.UpdateItemReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.UpdateItemReq.prototype.getItem = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Item, 3));
    };
    proto.Shop.UpdateItemReq.prototype.setItem = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Shop.UpdateItemReq.prototype.clearItem = function () {
        return this.setItem(undefined);
    };
    proto.Shop.UpdateItemReq.prototype.hasItem = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.UpdateItemAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.UpdateItemAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.UpdateItemAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.UpdateItemAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.UpdateItemAck;
        return proto.Shop.UpdateItemAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.UpdateItemAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.UpdateItemAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.UpdateItemAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.UpdateItemAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Shop.UpdateItemAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.UpdateItemAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetItemReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetItemReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetItemReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetItemReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetItemReq;
        return proto.Shop.GetItemReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetItemReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetItemReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetItemReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetItemReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
    };
    proto.Shop.GetItemReq.prototype.getNid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetItemReq.prototype.setNid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetItemAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetItemAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetItemAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                item: (f = msg.getItem()) && proto.Shop.Item.toObject(includeInstance, f),
                extra: (f = msg.getExtra()) && proto.Shop.Item.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetItemAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetItemAck;
        return proto.Shop.GetItemAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetItemAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Shop.Item;
                    reader.readMessage(value, proto.Shop.Item.deserializeBinaryFromReader);
                    msg.setItem(value);
                    break;
                case 3:
                    var value = new proto.Shop.Item;
                    reader.readMessage(value, proto.Shop.Item.deserializeBinaryFromReader);
                    msg.setExtra(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetItemAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetItemAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetItemAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getItem();
        if (f != null) {
            writer.writeMessage(2, f, proto.Shop.Item.serializeBinaryToWriter);
        }
        f = message.getExtra();
        if (f != null) {
            writer.writeMessage(3, f, proto.Shop.Item.serializeBinaryToWriter);
        }
    };
    proto.Shop.GetItemAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetItemAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetItemAck.prototype.getItem = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Item, 2));
    };
    proto.Shop.GetItemAck.prototype.setItem = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 2, value);
    };
    proto.Shop.GetItemAck.prototype.clearItem = function () {
        return this.setItem(undefined);
    };
    proto.Shop.GetItemAck.prototype.hasItem = function () {
        return googleProtobuf.Message.getField(this, 2) != null;
    };
    proto.Shop.GetItemAck.prototype.getExtra = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Item, 3));
    };
    proto.Shop.GetItemAck.prototype.setExtra = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Shop.GetItemAck.prototype.clearExtra = function () {
        return this.setExtra(undefined);
    };
    proto.Shop.GetItemAck.prototype.hasExtra = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddUserItemReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddUserItemReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddUserItemReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nitem: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                nnum: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                nchannel: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddUserItemReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddUserItemReq;
        return proto.Shop.AddUserItemReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddUserItemReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 4:
                    var value = (reader.readInt32());
                    msg.setNitem(value);
                    break;
                case 5:
                    var value = (reader.readInt32());
                    msg.setNnum(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setNchannel(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddUserItemReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddUserItemReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddUserItemReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNitem();
        if (f !== 0) {
            writer.writeInt32(4, f);
        }
        f = message.getNnum();
        if (f !== 0) {
            writer.writeInt32(5, f);
        }
        f = message.getNchannel();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
    };
    proto.Shop.AddUserItemReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddUserItemReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.AddUserItemReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.AddUserItemReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.AddUserItemReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.AddUserItemReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.AddUserItemReq.prototype.getNitem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.AddUserItemReq.prototype.setNitem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Shop.AddUserItemReq.prototype.getNnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Shop.AddUserItemReq.prototype.setNnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Shop.AddUserItemReq.prototype.getNchannel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Shop.AddUserItemReq.prototype.setNchannel = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddUserItemAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddUserItemAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddUserItemAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddUserItemAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddUserItemAck;
        return proto.Shop.AddUserItemAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddUserItemAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddUserItemAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddUserItemAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddUserItemAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
    };
    proto.Shop.AddUserItemAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddUserItemAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.AddUserItemAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.AddUserItemAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.DeleteUserItemReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.DeleteUserItemReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.DeleteUserItemReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nitem: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                nno: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                nnum: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                nchannel: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.DeleteUserItemReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.DeleteUserItemReq;
        return proto.Shop.DeleteUserItemReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.DeleteUserItemReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 4:
                    var value = (reader.readInt32());
                    msg.setNitem(value);
                    break;
                case 5:
                    var value = (reader.readSint32());
                    msg.setNno(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setNnum(value);
                    break;
                case 7:
                    var value = (reader.readSint32());
                    msg.setNchannel(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.DeleteUserItemReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.DeleteUserItemReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.DeleteUserItemReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNitem();
        if (f !== 0) {
            writer.writeInt32(4, f);
        }
        f = message.getNno();
        if (f !== 0) {
            writer.writeSint32(5, f);
        }
        f = message.getNnum();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getNchannel();
        if (f !== 0) {
            writer.writeSint32(7, f);
        }
    };
    proto.Shop.DeleteUserItemReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.DeleteUserItemReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.DeleteUserItemReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.DeleteUserItemReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.DeleteUserItemReq.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.DeleteUserItemReq.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.DeleteUserItemReq.prototype.getNitem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.DeleteUserItemReq.prototype.setNitem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Shop.DeleteUserItemReq.prototype.getNno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Shop.DeleteUserItemReq.prototype.setNno = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Shop.DeleteUserItemReq.prototype.getNnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Shop.DeleteUserItemReq.prototype.setNnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Shop.DeleteUserItemReq.prototype.getNchannel = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Shop.DeleteUserItemReq.prototype.setNchannel = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.DeleteItemInfo.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.DeleteItemInfo.toObject(opt_includeInstance, this);
        };
        proto.Shop.DeleteItemInfo.toObject = function (includeInstance, msg) {
            var f, obj = {
                nno: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nstock: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nnum: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.DeleteItemInfo.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.DeleteItemInfo;
        return proto.Shop.DeleteItemInfo.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.DeleteItemInfo.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNno(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNstock(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setNnum(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.DeleteItemInfo.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.DeleteItemInfo.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.DeleteItemInfo.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNno();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getNstock();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
        f = message.getNnum();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
    };
    proto.Shop.DeleteItemInfo.prototype.getNno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.DeleteItemInfo.prototype.setNno = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.DeleteItemInfo.prototype.getNstock = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.DeleteItemInfo.prototype.setNstock = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.DeleteItemInfo.prototype.getNnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.DeleteItemInfo.prototype.setNnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.DeleteUserItemAck.repeatedFields_ = [4];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.DeleteUserItemAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.DeleteUserItemAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.DeleteUserItemAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nitem: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                infosList: googleProtobuf.Message.toObjectList(msg.getInfosList(), proto.Shop.DeleteItemInfo.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.DeleteUserItemAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.DeleteUserItemAck;
        return proto.Shop.DeleteUserItemAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.DeleteUserItemAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setNitem(value);
                    break;
                case 4:
                    var value = new proto.Shop.DeleteItemInfo;
                    reader.readMessage(value, proto.Shop.DeleteItemInfo.deserializeBinaryFromReader);
                    msg.addInfos(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.DeleteUserItemAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.DeleteUserItemAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.DeleteUserItemAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNitem();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
        f = message.getInfosList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(4, f, proto.Shop.DeleteItemInfo.serializeBinaryToWriter);
        }
    };
    proto.Shop.DeleteUserItemAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.DeleteUserItemAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.DeleteUserItemAck.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.DeleteUserItemAck.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.DeleteUserItemAck.prototype.getNitem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.DeleteUserItemAck.prototype.setNitem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.DeleteUserItemAck.prototype.getInfosList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.DeleteItemInfo, 4));
    };
    proto.Shop.DeleteUserItemAck.prototype.setInfosList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
    };
    proto.Shop.DeleteUserItemAck.prototype.addInfos = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Shop.DeleteItemInfo, opt_index);
    };
    proto.Shop.DeleteUserItemAck.prototype.clearInfosList = function () {
        return this.setInfosList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.Agio.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.Agio.toObject(opt_includeInstance, this);
        };
        proto.Shop.Agio.toObject = function (includeInstance, msg) {
            var f, obj = {
                nid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                fagio: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
                nbegintime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nendtime: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.Agio.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.Agio;
        return proto.Shop.Agio.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.Agio.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNid(value);
                    break;
                case 2:
                    var value = (reader.readFloat());
                    msg.setFagio(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNbegintime(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNendtime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.Agio.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.Agio.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.Agio.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getFagio();
        if (f !== 0.0) {
            writer.writeFloat(2, f);
        }
        f = message.getNbegintime();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNendtime();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
    };
    proto.Shop.Agio.prototype.getNid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.Agio.prototype.setNid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.Agio.prototype.getFagio = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
    };
    proto.Shop.Agio.prototype.setFagio = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 2, value);
    };
    proto.Shop.Agio.prototype.getNbegintime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.Agio.prototype.setNbegintime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.Agio.prototype.getNendtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.Agio.prototype.setNendtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetAgioListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetAgioListReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetAgioListReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nmid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetAgioListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetAgioListReq;
        return proto.Shop.GetAgioListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetAgioListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = (reader.readSint32());
                    msg.setNmid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetAgioListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetAgioListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetAgioListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNmid();
        if (f !== 0) {
            writer.writeSint32(3, f);
        }
    };
    proto.Shop.GetAgioListReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetAgioListReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetAgioListReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.GetAgioListReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.GetAgioListReq.prototype.getNmid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.GetAgioListReq.prototype.setNmid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.GetAgioListAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetAgioListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetAgioListAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetAgioListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                lstagioList: googleProtobuf.Message.toObjectList(msg.getLstagioList(), proto.Shop.Agio.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetAgioListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetAgioListAck;
        return proto.Shop.GetAgioListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetAgioListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Shop.Agio;
                    reader.readMessage(value, proto.Shop.Agio.deserializeBinaryFromReader);
                    msg.addLstagio(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetAgioListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetAgioListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetAgioListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getLstagioList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Shop.Agio.serializeBinaryToWriter);
        }
    };
    proto.Shop.GetAgioListAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetAgioListAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetAgioListAck.prototype.getLstagioList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.Agio, 2));
    };
    proto.Shop.GetAgioListAck.prototype.setLstagioList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Shop.GetAgioListAck.prototype.addLstagio = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Shop.Agio, opt_index);
    };
    proto.Shop.GetAgioListAck.prototype.clearLstagioList = function () {
        return this.setLstagioList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddAgioReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddAgioReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddAgioReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                agio: (f = msg.getAgio()) && proto.Shop.Agio.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddAgioReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddAgioReq;
        return proto.Shop.AddAgioReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddAgioReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = new proto.Shop.Agio;
                    reader.readMessage(value, proto.Shop.Agio.deserializeBinaryFromReader);
                    msg.setAgio(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddAgioReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddAgioReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddAgioReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getAgio();
        if (f != null) {
            writer.writeMessage(3, f, proto.Shop.Agio.serializeBinaryToWriter);
        }
    };
    proto.Shop.AddAgioReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddAgioReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.AddAgioReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.AddAgioReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.AddAgioReq.prototype.getAgio = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Agio, 3));
    };
    proto.Shop.AddAgioReq.prototype.setAgio = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Shop.AddAgioReq.prototype.clearAgio = function () {
        return this.setAgio(undefined);
    };
    proto.Shop.AddAgioReq.prototype.hasAgio = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddAgioAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddAgioAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddAgioAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddAgioAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddAgioAck;
        return proto.Shop.AddAgioAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddAgioAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddAgioAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddAgioAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddAgioAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Shop.AddAgioAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddAgioAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.UpdateAgioReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.UpdateAgioReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.UpdateAgioReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                agio: (f = msg.getAgio()) && proto.Shop.Agio.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.UpdateAgioReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.UpdateAgioReq;
        return proto.Shop.UpdateAgioReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.UpdateAgioReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = new proto.Shop.Agio;
                    reader.readMessage(value, proto.Shop.Agio.deserializeBinaryFromReader);
                    msg.setAgio(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.UpdateAgioReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.UpdateAgioReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.UpdateAgioReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getAgio();
        if (f != null) {
            writer.writeMessage(3, f, proto.Shop.Agio.serializeBinaryToWriter);
        }
    };
    proto.Shop.UpdateAgioReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.UpdateAgioReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.UpdateAgioReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.UpdateAgioReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.UpdateAgioReq.prototype.getAgio = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.Agio, 3));
    };
    proto.Shop.UpdateAgioReq.prototype.setAgio = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Shop.UpdateAgioReq.prototype.clearAgio = function () {
        return this.setAgio(undefined);
    };
    proto.Shop.UpdateAgioReq.prototype.hasAgio = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.UpdateAgioAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.UpdateAgioAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.UpdateAgioAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.UpdateAgioAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.UpdateAgioAck;
        return proto.Shop.UpdateAgioAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.UpdateAgioAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.UpdateAgioAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.UpdateAgioAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.UpdateAgioAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Shop.UpdateAgioAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.UpdateAgioAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.DeleteAgioReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.DeleteAgioReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.DeleteAgioReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                nid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.DeleteAgioReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.DeleteAgioReq;
        return proto.Shop.DeleteAgioReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.DeleteAgioReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setNid(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.DeleteAgioReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.DeleteAgioReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.DeleteAgioReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getNid();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
    };
    proto.Shop.DeleteAgioReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.DeleteAgioReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.DeleteAgioReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.DeleteAgioReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.DeleteAgioReq.prototype.getNid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.DeleteAgioReq.prototype.setNid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.DeleteAgioAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.DeleteAgioAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.DeleteAgioAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.DeleteAgioAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.DeleteAgioAck;
        return proto.Shop.DeleteAgioAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.DeleteAgioAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.DeleteAgioAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.DeleteAgioAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.DeleteAgioAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Shop.DeleteAgioAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.DeleteAgioAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GiftBag.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GiftBag.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GiftBag.toObject(opt_includeInstance, this);
        };
        proto.Shop.GiftBag.toObject = function (includeInstance, msg) {
            var f, obj = {
                nid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                lstitemList: googleProtobuf.Message.toObjectList(msg.getLstitemList(), proto.Shop.BuyInfo.toObject, includeInstance),
                strdesc: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GiftBag.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GiftBag;
        return proto.Shop.GiftBag.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GiftBag.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readInt32());
                    msg.setNid(value);
                    break;
                case 2:
                    var value = new proto.Shop.BuyInfo;
                    reader.readMessage(value, proto.Shop.BuyInfo.deserializeBinaryFromReader);
                    msg.addLstitem(value);
                    break;
                case 3:
                    var value = (reader.readString());
                    msg.setStrdesc(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GiftBag.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GiftBag.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GiftBag.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNid();
        if (f !== 0) {
            writer.writeInt32(1, f);
        }
        f = message.getLstitemList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Shop.BuyInfo.serializeBinaryToWriter);
        }
        f = message.getStrdesc();
        if (f.length > 0) {
            writer.writeString(3, f);
        }
    };
    proto.Shop.GiftBag.prototype.getNid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GiftBag.prototype.setNid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GiftBag.prototype.getLstitemList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.BuyInfo, 2));
    };
    proto.Shop.GiftBag.prototype.setLstitemList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Shop.GiftBag.prototype.addLstitem = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Shop.BuyInfo, opt_index);
    };
    proto.Shop.GiftBag.prototype.clearLstitemList = function () {
        return this.setLstitemList([]);
    };
    proto.Shop.GiftBag.prototype.getStrdesc = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
    };
    proto.Shop.GiftBag.prototype.setStrdesc = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetGiftBagListReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetGiftBagListReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetGiftBagListReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetGiftBagListReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetGiftBagListReq;
        return proto.Shop.GetGiftBagListReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetGiftBagListReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetGiftBagListReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetGiftBagListReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetGiftBagListReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };
    proto.Shop.GetGiftBagListReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetGiftBagListReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetGiftBagListReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.GetGiftBagListReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.GetGiftBagListAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.GetGiftBagListAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.GetGiftBagListAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.GetGiftBagListAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                lstgiftList: googleProtobuf.Message.toObjectList(msg.getLstgiftList(), proto.Shop.GiftBag.toObject, includeInstance)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.GetGiftBagListAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.GetGiftBagListAck;
        return proto.Shop.GetGiftBagListAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.GetGiftBagListAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var value = new proto.Shop.GiftBag;
                    reader.readMessage(value, proto.Shop.GiftBag.deserializeBinaryFromReader);
                    msg.addLstgift(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.GetGiftBagListAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.GetGiftBagListAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.GetGiftBagListAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getLstgiftList();
        if (f.length > 0) {
            writer.writeRepeatedMessage(2, f, proto.Shop.GiftBag.serializeBinaryToWriter);
        }
    };
    proto.Shop.GetGiftBagListAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.GetGiftBagListAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.GetGiftBagListAck.prototype.getLstgiftList = function () {
        return (googleProtobuf.Message.getRepeatedWrapperField(this, proto.Shop.GiftBag, 2));
    };
    proto.Shop.GetGiftBagListAck.prototype.setLstgiftList = function (value) {
        return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.Shop.GetGiftBagListAck.prototype.addLstgift = function (opt_value, opt_index) {
        return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Shop.GiftBag, opt_index);
    };
    proto.Shop.GetGiftBagListAck.prototype.clearLstgiftList = function () {
        return this.setLstgiftList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddGiftBagReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddGiftBagReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddGiftBagReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                gift: (f = msg.getGift()) && proto.Shop.GiftBag.toObject(includeInstance, f)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddGiftBagReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddGiftBagReq;
        return proto.Shop.AddGiftBagReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddGiftBagReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = new proto.Shop.GiftBag;
                    reader.readMessage(value, proto.Shop.GiftBag.deserializeBinaryFromReader);
                    msg.setGift(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddGiftBagReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddGiftBagReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddGiftBagReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getGift();
        if (f != null) {
            writer.writeMessage(3, f, proto.Shop.GiftBag.serializeBinaryToWriter);
        }
    };
    proto.Shop.AddGiftBagReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddGiftBagReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.AddGiftBagReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.AddGiftBagReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.AddGiftBagReq.prototype.getGift = function () {
        return (googleProtobuf.Message.getWrapperField(this, proto.Shop.GiftBag, 3));
    };
    proto.Shop.AddGiftBagReq.prototype.setGift = function (value) {
        return googleProtobuf.Message.setWrapperField(this, 3, value);
    };
    proto.Shop.AddGiftBagReq.prototype.clearGift = function () {
        return this.setGift(undefined);
    };
    proto.Shop.AddGiftBagReq.prototype.hasGift = function () {
        return googleProtobuf.Message.getField(this, 3) != null;
    };
    proto.Shop.AddGiftBagAck.repeatedFields_ = [2];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AddGiftBagAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AddGiftBagAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.AddGiftBagAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                lstfailedList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AddGiftBagAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AddGiftBagAck;
        return proto.Shop.AddGiftBagAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AddGiftBagAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                case 2:
                    var values = (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addLstfailed(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AddGiftBagAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AddGiftBagAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AddGiftBagAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
        f = message.getLstfailedList();
        if (f.length > 0) {
            writer.writePackedInt32(2, f);
        }
    };
    proto.Shop.AddGiftBagAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AddGiftBagAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.AddGiftBagAck.prototype.getLstfailedList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 2));
    };
    proto.Shop.AddGiftBagAck.prototype.setLstfailedList = function (value) {
        return googleProtobuf.Message.setField(this, 2, value || []);
    };
    proto.Shop.AddGiftBagAck.prototype.addLstfailed = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.Shop.AddGiftBagAck.prototype.clearLstfailedList = function () {
        return this.setLstfailedList([]);
    };
    proto.Shop.DeleteGiftBagReq.repeatedFields_ = [4];
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.DeleteGiftBagReq.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.DeleteGiftBagReq.toObject(opt_includeInstance, this);
        };
        proto.Shop.DeleteGiftBagReq.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                strappsecret: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
                gift: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                lstremoveList: (f = googleProtobuf.Message.getRepeatedField(msg, 4)) == null ? undefined : f
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.DeleteGiftBagReq.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.DeleteGiftBagReq;
        return proto.Shop.DeleteGiftBagReq.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.DeleteGiftBagReq.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readString());
                    msg.setStrappsecret(value);
                    break;
                case 3:
                    var value = (reader.readInt32());
                    msg.setGift(value);
                    break;
                case 4:
                    var values = (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
                    for (var i = 0; i < values.length; i++) {
                        msg.addLstremove(values[i]);
                    }
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.DeleteGiftBagReq.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.DeleteGiftBagReq.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.DeleteGiftBagReq.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getStrappsecret();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
        f = message.getGift();
        if (f !== 0) {
            writer.writeInt32(3, f);
        }
        f = message.getLstremoveList();
        if (f.length > 0) {
            writer.writePackedInt32(4, f);
        }
    };
    proto.Shop.DeleteGiftBagReq.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.DeleteGiftBagReq.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.DeleteGiftBagReq.prototype.getStrappsecret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
    };
    proto.Shop.DeleteGiftBagReq.prototype.setStrappsecret = function (value) {
        return googleProtobuf.Message.setProto3StringField(this, 2, value);
    };
    proto.Shop.DeleteGiftBagReq.prototype.getGift = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.DeleteGiftBagReq.prototype.setGift = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.DeleteGiftBagReq.prototype.getLstremoveList = function () {
        return (googleProtobuf.Message.getRepeatedField(this, 4));
    };
    proto.Shop.DeleteGiftBagReq.prototype.setLstremoveList = function (value) {
        return googleProtobuf.Message.setField(this, 4, value || []);
    };
    proto.Shop.DeleteGiftBagReq.prototype.addLstremove = function (value, opt_index) {
        return googleProtobuf.Message.addToRepeatedField(this, 4, value, opt_index);
    };
    proto.Shop.DeleteGiftBagReq.prototype.clearLstremoveList = function () {
        return this.setLstremoveList([]);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.DeleteGiftBagAck.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.DeleteGiftBagAck.toObject(opt_includeInstance, this);
        };
        proto.Shop.DeleteGiftBagAck.toObject = function (includeInstance, msg) {
            var f, obj = {
                nret: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.DeleteGiftBagAck.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.DeleteGiftBagAck;
        return proto.Shop.DeleteGiftBagAck.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.DeleteGiftBagAck.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readSint32());
                    msg.setNret(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.DeleteGiftBagAck.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.DeleteGiftBagAck.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.DeleteGiftBagAck.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNret();
        if (f !== 0) {
            writer.writeSint32(1, f);
        }
    };
    proto.Shop.DeleteGiftBagAck.prototype.getNret = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.DeleteGiftBagAck.prototype.setNret = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.UserItemChangeNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.UserItemChangeNotify.toObject(opt_includeInstance, this);
        };
        proto.Shop.UserItemChangeNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                nappid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nno: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                nitem: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
                nnum: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
                nvar: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
                ninactive: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
                ninexpire: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
                ntype: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
                nreason: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
                ntime: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.UserItemChangeNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.UserItemChangeNotify;
        return proto.Shop.UserItemChangeNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.UserItemChangeNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNappid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNno(value);
                    break;
                case 4:
                    var value = (reader.readUint32());
                    msg.setNitem(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNnum(value);
                    break;
                case 6:
                    var value = (reader.readSint32());
                    msg.setNvar(value);
                    break;
                case 7:
                    var value = (reader.readUint32());
                    msg.setNinactive(value);
                    break;
                case 8:
                    var value = (reader.readUint32());
                    msg.setNinexpire(value);
                    break;
                case 9:
                    var value = (reader.readInt32());
                    msg.setNtype(value);
                    break;
                case 10:
                    var value = (reader.readInt32());
                    msg.setNreason(value);
                    break;
                case 11:
                    var value = (reader.readUint32());
                    msg.setNtime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.UserItemChangeNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.UserItemChangeNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.UserItemChangeNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNappid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNno();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getNitem();
        if (f !== 0) {
            writer.writeUint32(4, f);
        }
        f = message.getNnum();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
        f = message.getNvar();
        if (f !== 0) {
            writer.writeSint32(6, f);
        }
        f = message.getNinactive();
        if (f !== 0) {
            writer.writeUint32(7, f);
        }
        f = message.getNinexpire();
        if (f !== 0) {
            writer.writeUint32(8, f);
        }
        f = message.getNtype();
        if (f !== 0) {
            writer.writeInt32(9, f);
        }
        f = message.getNreason();
        if (f !== 0) {
            writer.writeInt32(10, f);
        }
        f = message.getNtime();
        if (f !== 0) {
            writer.writeUint32(11, f);
        }
    };
    proto.Shop.UserItemChangeNotify.prototype.getNappid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNappid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNno = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNno = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNitem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNitem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 4, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNvar = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNvar = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 6, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNinactive = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNinactive = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 7, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNinexpire = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNinexpire = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 8, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNtype = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNtype = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 9, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNreason = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNreason = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 10, value);
    };
    proto.Shop.UserItemChangeNotify.prototype.getNtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
    };
    proto.Shop.UserItemChangeNotify.prototype.setNtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 11, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.ItemChangeNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.ItemChangeNotify.toObject(opt_includeInstance, this);
        };
        proto.Shop.ItemChangeNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                nitem: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nreason: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ntime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.ItemChangeNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.ItemChangeNotify;
        return proto.Shop.ItemChangeNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.ItemChangeNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNitem(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNreason(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNtime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.ItemChangeNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.ItemChangeNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.ItemChangeNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNitem();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNreason();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
        f = message.getNtime();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
    };
    proto.Shop.ItemChangeNotify.prototype.getNitem = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.ItemChangeNotify.prototype.setNitem = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.ItemChangeNotify.prototype.getNreason = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.ItemChangeNotify.prototype.setNreason = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.ItemChangeNotify.prototype.getNtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.ItemChangeNotify.prototype.setNtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.MerchandiseChangeNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.MerchandiseChangeNotify.toObject(opt_includeInstance, this);
        };
        proto.Shop.MerchandiseChangeNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                nmerchandise: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nreason: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                ntime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                isupdaterarity: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 4, false),
                isupdatefee: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 5, false),
                isupdateoffline: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 6, false)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.MerchandiseChangeNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.MerchandiseChangeNotify;
        return proto.Shop.MerchandiseChangeNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.MerchandiseChangeNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNmerchandise(value);
                    break;
                case 2:
                    var value = (reader.readInt32());
                    msg.setNreason(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNtime(value);
                    break;
                case 4:
                    var value = (reader.readBool());
                    msg.setIsupdaterarity(value);
                    break;
                case 5:
                    var value = (reader.readBool());
                    msg.setIsupdatefee(value);
                    break;
                case 6:
                    var value = (reader.readBool());
                    msg.setIsupdateoffline(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.MerchandiseChangeNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.MerchandiseChangeNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.MerchandiseChangeNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNmerchandise();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNreason();
        if (f !== 0) {
            writer.writeInt32(2, f);
        }
        f = message.getNtime();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getIsupdaterarity();
        if (f) {
            writer.writeBool(4, f);
        }
        f = message.getIsupdatefee();
        if (f) {
            writer.writeBool(5, f);
        }
        f = message.getIsupdateoffline();
        if (f) {
            writer.writeBool(6, f);
        }
    };
    proto.Shop.MerchandiseChangeNotify.prototype.getNmerchandise = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.MerchandiseChangeNotify.prototype.setNmerchandise = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.MerchandiseChangeNotify.prototype.getNreason = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.MerchandiseChangeNotify.prototype.setNreason = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.MerchandiseChangeNotify.prototype.getNtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.MerchandiseChangeNotify.prototype.setNtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.MerchandiseChangeNotify.prototype.getIsupdaterarity = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 4, false));
    };
    proto.Shop.MerchandiseChangeNotify.prototype.setIsupdaterarity = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 4, value);
    };
    proto.Shop.MerchandiseChangeNotify.prototype.getIsupdatefee = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 5, false));
    };
    proto.Shop.MerchandiseChangeNotify.prototype.setIsupdatefee = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 5, value);
    };
    proto.Shop.MerchandiseChangeNotify.prototype.getIsupdateoffline = function () {
        return (googleProtobuf.Message.getBooleanFieldWithDefault(this, 6, false));
    };
    proto.Shop.MerchandiseChangeNotify.prototype.setIsupdateoffline = function (value) {
        return googleProtobuf.Message.setProto3BooleanField(this, 6, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.UserBuyMerchandiseNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.UserBuyMerchandiseNotify.toObject(opt_includeInstance, this);
        };
        proto.Shop.UserBuyMerchandiseNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                npid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                nmerchandise: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
                nnum: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
                fcost: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
                ntime: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.UserBuyMerchandiseNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.UserBuyMerchandiseNotify;
        return proto.Shop.UserBuyMerchandiseNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.UserBuyMerchandiseNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNpid(value);
                    break;
                case 2:
                    var value = (reader.readUint32());
                    msg.setNmerchandise(value);
                    break;
                case 3:
                    var value = (reader.readUint32());
                    msg.setNnum(value);
                    break;
                case 4:
                    var value = (reader.readFloat());
                    msg.setFcost(value);
                    break;
                case 5:
                    var value = (reader.readUint32());
                    msg.setNtime(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.UserBuyMerchandiseNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.UserBuyMerchandiseNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNpid();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getNmerchandise();
        if (f !== 0) {
            writer.writeUint32(2, f);
        }
        f = message.getNnum();
        if (f !== 0) {
            writer.writeUint32(3, f);
        }
        f = message.getFcost();
        if (f !== 0.0) {
            writer.writeFloat(4, f);
        }
        f = message.getNtime();
        if (f !== 0) {
            writer.writeUint32(5, f);
        }
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.getNpid = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.setNpid = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.getNmerchandise = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.setNmerchandise = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 2, value);
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.getNnum = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.setNnum = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 3, value);
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.getFcost = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.setFcost = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 4, value);
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.getNtime = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
    };
    proto.Shop.UserBuyMerchandiseNotify.prototype.setNtime = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 5, value);
    };
    if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
        proto.Shop.AgoiChangeNotify.prototype.toObject = function (opt_includeInstance) {
            return proto.Shop.AgoiChangeNotify.toObject(opt_includeInstance, this);
        };
        proto.Shop.AgoiChangeNotify.toObject = function (includeInstance, msg) {
            var f, obj = {
                nmerchandise: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
                fagio: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
            };
            if (includeInstance) {
                obj.$jspbMessageInstance = msg;
            }
            return obj;
        };
    }
    proto.Shop.AgoiChangeNotify.deserializeBinary = function (bytes) {
        var reader = new googleProtobuf.BinaryReader(bytes);
        var msg = new proto.Shop.AgoiChangeNotify;
        return proto.Shop.AgoiChangeNotify.deserializeBinaryFromReader(msg, reader);
    };
    proto.Shop.AgoiChangeNotify.deserializeBinaryFromReader = function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = (reader.readUint32());
                    msg.setNmerchandise(value);
                    break;
                case 2:
                    var value = (reader.readFloat());
                    msg.setFagio(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };
    proto.Shop.AgoiChangeNotify.prototype.serializeBinary = function () {
        var writer = new googleProtobuf.BinaryWriter();
        proto.Shop.AgoiChangeNotify.serializeBinaryToWriter(this, writer);
        return writer.getResultBuffer();
    };
    proto.Shop.AgoiChangeNotify.serializeBinaryToWriter = function (message, writer) {
        var f = undefined;
        f = message.getNmerchandise();
        if (f !== 0) {
            writer.writeUint32(1, f);
        }
        f = message.getFagio();
        if (f !== 0.0) {
            writer.writeFloat(2, f);
        }
    };
    proto.Shop.AgoiChangeNotify.prototype.getNmerchandise = function () {
        return (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
    };
    proto.Shop.AgoiChangeNotify.prototype.setNmerchandise = function (value) {
        return googleProtobuf.Message.setProto3IntField(this, 1, value);
    };
    proto.Shop.AgoiChangeNotify.prototype.getFagio = function () {
        return (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
    };
    proto.Shop.AgoiChangeNotify.prototype.setFagio = function (value) {
        return googleProtobuf.Message.setProto3FloatField(this, 2, value);
    };
    goog.object.extend(exports, proto.Shop);

    });
    var Shop_pb_1 = Shop_pb.GetUserItemListReq;
    var Shop_pb_2 = Shop_pb.GetUserItemListAck;

    const grpc$n = {};
    grpc$n.web = grpcWeb;
    const proto$o = {};
    proto$o.Shop = Shop_pb;
    proto$o.Shop.ShopServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$n.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$o.Shop.ShopServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$n.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_ShopService_GetCategoryList = new grpc$n.web.MethodDescriptor('/Shop.ShopService/GetCategoryList', grpc$n.web.MethodType.UNARY, proto$o.Shop.GetCategoryListReq, proto$o.Shop.GetCategoryListAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.GetCategoryListAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.getCategoryList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/GetCategoryList', request, metadata || {}, methodDescriptor_ShopService_GetCategoryList, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.getCategoryList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/GetCategoryList', request, metadata || {}, methodDescriptor_ShopService_GetCategoryList);
        };
    const methodDescriptor_ShopService_GetMerchandiseList = new grpc$n.web.MethodDescriptor('/Shop.ShopService/GetMerchandiseList', grpc$n.web.MethodType.UNARY, proto$o.Shop.GetMerchandiseListReq, proto$o.Shop.GetMerchandiseListAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.GetMerchandiseListAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.getMerchandiseList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/GetMerchandiseList', request, metadata || {}, methodDescriptor_ShopService_GetMerchandiseList, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.getMerchandiseList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/GetMerchandiseList', request, metadata || {}, methodDescriptor_ShopService_GetMerchandiseList);
        };
    const methodDescriptor_ShopService_GetItemList = new grpc$n.web.MethodDescriptor('/Shop.ShopService/GetItemList', grpc$n.web.MethodType.UNARY, proto$o.Shop.GetItemListReq, proto$o.Shop.GetItemListAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.GetItemListAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.getItemList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/GetItemList', request, metadata || {}, methodDescriptor_ShopService_GetItemList, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.getItemList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/GetItemList', request, metadata || {}, methodDescriptor_ShopService_GetItemList);
        };
    const methodDescriptor_ShopService_GetUserItemList = new grpc$n.web.MethodDescriptor('/Shop.ShopService/GetUserItemList', grpc$n.web.MethodType.UNARY, proto$o.Shop.GetUserItemListReq, proto$o.Shop.GetUserItemListAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.GetUserItemListAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.getUserItemList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/GetUserItemList', request, metadata || {}, methodDescriptor_ShopService_GetUserItemList, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.getUserItemList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/GetUserItemList', request, metadata || {}, methodDescriptor_ShopService_GetUserItemList);
        };
    const methodDescriptor_ShopService_BuyMerchandise = new grpc$n.web.MethodDescriptor('/Shop.ShopService/BuyMerchandise', grpc$n.web.MethodType.UNARY, proto$o.Shop.BuyMerchandiseReq, proto$o.Shop.BuyMerchandiseAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.BuyMerchandiseAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.buyMerchandise =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/BuyMerchandise', request, metadata || {}, methodDescriptor_ShopService_BuyMerchandise, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.buyMerchandise =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/BuyMerchandise', request, metadata || {}, methodDescriptor_ShopService_BuyMerchandise);
        };
    const methodDescriptor_ShopService_AddMerchandise = new grpc$n.web.MethodDescriptor('/Shop.ShopService/AddMerchandise', grpc$n.web.MethodType.UNARY, proto$o.Shop.AddMerchandiseReq, proto$o.Shop.AddMerchandiseAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.AddMerchandiseAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.addMerchandise =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/AddMerchandise', request, metadata || {}, methodDescriptor_ShopService_AddMerchandise, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.addMerchandise =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/AddMerchandise', request, metadata || {}, methodDescriptor_ShopService_AddMerchandise);
        };
    const methodDescriptor_ShopService_UpdateMerchandise = new grpc$n.web.MethodDescriptor('/Shop.ShopService/UpdateMerchandise', grpc$n.web.MethodType.UNARY, proto$o.Shop.UpdateMerchandiseReq, proto$o.Shop.UpdateMerchandiseAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.UpdateMerchandiseAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.updateMerchandise =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/UpdateMerchandise', request, metadata || {}, methodDescriptor_ShopService_UpdateMerchandise, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.updateMerchandise =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/UpdateMerchandise', request, metadata || {}, methodDescriptor_ShopService_UpdateMerchandise);
        };
    const methodDescriptor_ShopService_GetMerchandise = new grpc$n.web.MethodDescriptor('/Shop.ShopService/GetMerchandise', grpc$n.web.MethodType.UNARY, proto$o.Shop.GetMerchandiseReq, proto$o.Shop.GetMerchandiseAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.GetMerchandiseAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.getMerchandise =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/GetMerchandise', request, metadata || {}, methodDescriptor_ShopService_GetMerchandise, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.getMerchandise =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/GetMerchandise', request, metadata || {}, methodDescriptor_ShopService_GetMerchandise);
        };
    const methodDescriptor_ShopService_AddItem = new grpc$n.web.MethodDescriptor('/Shop.ShopService/AddItem', grpc$n.web.MethodType.UNARY, proto$o.Shop.AddItemReq, proto$o.Shop.AddItemAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.AddItemAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.addItem =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/AddItem', request, metadata || {}, methodDescriptor_ShopService_AddItem, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.addItem =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/AddItem', request, metadata || {}, methodDescriptor_ShopService_AddItem);
        };
    const methodDescriptor_ShopService_UpdateItem = new grpc$n.web.MethodDescriptor('/Shop.ShopService/UpdateItem', grpc$n.web.MethodType.UNARY, proto$o.Shop.UpdateItemReq, proto$o.Shop.UpdateItemAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.UpdateItemAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.updateItem =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/UpdateItem', request, metadata || {}, methodDescriptor_ShopService_UpdateItem, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.updateItem =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/UpdateItem', request, metadata || {}, methodDescriptor_ShopService_UpdateItem);
        };
    const methodDescriptor_ShopService_GetItem = new grpc$n.web.MethodDescriptor('/Shop.ShopService/GetItem', grpc$n.web.MethodType.UNARY, proto$o.Shop.GetItemReq, proto$o.Shop.GetItemAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.GetItemAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.getItem =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/GetItem', request, metadata || {}, methodDescriptor_ShopService_GetItem, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.getItem =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/GetItem', request, metadata || {}, methodDescriptor_ShopService_GetItem);
        };
    const methodDescriptor_ShopService_AddUserItem = new grpc$n.web.MethodDescriptor('/Shop.ShopService/AddUserItem', grpc$n.web.MethodType.UNARY, proto$o.Shop.AddUserItemReq, proto$o.Shop.AddUserItemAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.AddUserItemAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.addUserItem =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/AddUserItem', request, metadata || {}, methodDescriptor_ShopService_AddUserItem, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.addUserItem =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/AddUserItem', request, metadata || {}, methodDescriptor_ShopService_AddUserItem);
        };
    const methodDescriptor_ShopService_DeleteUserItem = new grpc$n.web.MethodDescriptor('/Shop.ShopService/DeleteUserItem', grpc$n.web.MethodType.UNARY, proto$o.Shop.DeleteUserItemReq, proto$o.Shop.DeleteUserItemAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.DeleteUserItemAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.deleteUserItem =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/DeleteUserItem', request, metadata || {}, methodDescriptor_ShopService_DeleteUserItem, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.deleteUserItem =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/DeleteUserItem', request, metadata || {}, methodDescriptor_ShopService_DeleteUserItem);
        };
    const methodDescriptor_ShopService_GetAgioList = new grpc$n.web.MethodDescriptor('/Shop.ShopService/GetAgioList', grpc$n.web.MethodType.UNARY, proto$o.Shop.GetAgioListReq, proto$o.Shop.GetAgioListAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.GetAgioListAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.getAgioList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/GetAgioList', request, metadata || {}, methodDescriptor_ShopService_GetAgioList, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.getAgioList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/GetAgioList', request, metadata || {}, methodDescriptor_ShopService_GetAgioList);
        };
    const methodDescriptor_ShopService_AddAgio = new grpc$n.web.MethodDescriptor('/Shop.ShopService/AddAgio', grpc$n.web.MethodType.UNARY, proto$o.Shop.AddAgioReq, proto$o.Shop.AddAgioAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.AddAgioAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.addAgio =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/AddAgio', request, metadata || {}, methodDescriptor_ShopService_AddAgio, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.addAgio =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/AddAgio', request, metadata || {}, methodDescriptor_ShopService_AddAgio);
        };
    const methodDescriptor_ShopService_UpdateAgio = new grpc$n.web.MethodDescriptor('/Shop.ShopService/UpdateAgio', grpc$n.web.MethodType.UNARY, proto$o.Shop.UpdateAgioReq, proto$o.Shop.UpdateAgioAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.UpdateAgioAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.updateAgio =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/UpdateAgio', request, metadata || {}, methodDescriptor_ShopService_UpdateAgio, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.updateAgio =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/UpdateAgio', request, metadata || {}, methodDescriptor_ShopService_UpdateAgio);
        };
    const methodDescriptor_ShopService_DeleteAgio = new grpc$n.web.MethodDescriptor('/Shop.ShopService/DeleteAgio', grpc$n.web.MethodType.UNARY, proto$o.Shop.DeleteAgioReq, proto$o.Shop.DeleteAgioAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.DeleteAgioAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.deleteAgio =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/DeleteAgio', request, metadata || {}, methodDescriptor_ShopService_DeleteAgio, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.deleteAgio =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/DeleteAgio', request, metadata || {}, methodDescriptor_ShopService_DeleteAgio);
        };
    const methodDescriptor_ShopService_GetGiftBagList = new grpc$n.web.MethodDescriptor('/Shop.ShopService/GetGiftBagList', grpc$n.web.MethodType.UNARY, proto$o.Shop.GetGiftBagListReq, proto$o.Shop.GetGiftBagListAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.GetGiftBagListAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.getGiftBagList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/GetGiftBagList', request, metadata || {}, methodDescriptor_ShopService_GetGiftBagList, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.getGiftBagList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/GetGiftBagList', request, metadata || {}, methodDescriptor_ShopService_GetGiftBagList);
        };
    const methodDescriptor_ShopService_AddGiftBag = new grpc$n.web.MethodDescriptor('/Shop.ShopService/AddGiftBag', grpc$n.web.MethodType.UNARY, proto$o.Shop.AddGiftBagReq, proto$o.Shop.AddGiftBagAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.AddGiftBagAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.addGiftBag =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/AddGiftBag', request, metadata || {}, methodDescriptor_ShopService_AddGiftBag, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.addGiftBag =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/AddGiftBag', request, metadata || {}, methodDescriptor_ShopService_AddGiftBag);
        };
    const methodDescriptor_ShopService_DeleteGiftBag = new grpc$n.web.MethodDescriptor('/Shop.ShopService/DeleteGiftBag', grpc$n.web.MethodType.UNARY, proto$o.Shop.DeleteGiftBagReq, proto$o.Shop.DeleteGiftBagAck, function (request) {
        return request.serializeBinary();
    }, proto$o.Shop.DeleteGiftBagAck.deserializeBinary);
    proto$o.Shop.ShopServiceClient.prototype.deleteGiftBag =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Shop.ShopService/DeleteGiftBag', request, metadata || {}, methodDescriptor_ShopService_DeleteGiftBag, callback);
        };
    proto$o.Shop.ShopServicePromiseClient.prototype.deleteGiftBag =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Shop.ShopService/DeleteGiftBag', request, metadata || {}, methodDescriptor_ShopService_DeleteGiftBag);
        };
    var Shop_grpc_web_pb = proto$o.Shop;
    var Shop_grpc_web_pb_1 = Shop_grpc_web_pb.ShopServicePromiseClient;

    class ShopService extends Singleton {
        constructor() {
            super();
            this.shopService = null;
            this.shopService = new Shop_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        getUserItemList() {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Shop_pb_1();
                request.setNpid(GlobalData.getInstance().myPid);
                request.setStrticket(GlobalData.getInstance().myTicket);
                request.setNattribute(1);
                request.setNuse(-1);
                let ack = yield this.shopService.getUserItemList(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
    }

    const grpc$o = {};
    grpc$o.web = grpcWeb;


    const proto$p = {};
    proto$p.Task = Task_pb;
    proto$p.Task.TaskServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$o.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$p.Task.TaskServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$o.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_TaskService_QueryTask = new grpc$o.web.MethodDescriptor('/Task.TaskService/QueryTask', grpc$o.web.MethodType.UNARY, proto$p.Task.QueryTaskRequest, proto$p.Task.QueryTaskResponse, function (request) {
        return request.serializeBinary();
    }, proto$p.Task.QueryTaskResponse.deserializeBinary);
    proto$p.Task.TaskServiceClient.prototype.queryTask =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Task.TaskService/QueryTask', request, metadata || {}, methodDescriptor_TaskService_QueryTask, callback);
        };
    proto$p.Task.TaskServicePromiseClient.prototype.queryTask =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Task.TaskService/QueryTask', request, metadata || {}, methodDescriptor_TaskService_QueryTask);
        };
    const methodDescriptor_TaskService_AcceptTask = new grpc$o.web.MethodDescriptor('/Task.TaskService/AcceptTask', grpc$o.web.MethodType.UNARY, proto$p.Task.AcceptTaskRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$p.Task.TaskServiceClient.prototype.acceptTask =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Task.TaskService/AcceptTask', request, metadata || {}, methodDescriptor_TaskService_AcceptTask, callback);
        };
    proto$p.Task.TaskServicePromiseClient.prototype.acceptTask =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Task.TaskService/AcceptTask', request, metadata || {}, methodDescriptor_TaskService_AcceptTask);
        };
    const methodDescriptor_TaskService_RemoveTask = new grpc$o.web.MethodDescriptor('/Task.TaskService/RemoveTask', grpc$o.web.MethodType.UNARY, proto$p.Task.RemoveTaskRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$p.Task.TaskServiceClient.prototype.removeTask =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Task.TaskService/RemoveTask', request, metadata || {}, methodDescriptor_TaskService_RemoveTask, callback);
        };
    proto$p.Task.TaskServicePromiseClient.prototype.removeTask =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Task.TaskService/RemoveTask', request, metadata || {}, methodDescriptor_TaskService_RemoveTask);
        };
    const methodDescriptor_TaskService_CompleteTask = new grpc$o.web.MethodDescriptor('/Task.TaskService/CompleteTask', grpc$o.web.MethodType.UNARY, proto$p.Task.CompleteTaskRequest, proto$p.Task.CompleteTaskResponse, function (request) {
        return request.serializeBinary();
    }, proto$p.Task.CompleteTaskResponse.deserializeBinary);
    proto$p.Task.TaskServiceClient.prototype.completeTask =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Task.TaskService/CompleteTask', request, metadata || {}, methodDescriptor_TaskService_CompleteTask, callback);
        };
    proto$p.Task.TaskServicePromiseClient.prototype.completeTask =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Task.TaskService/CompleteTask', request, metadata || {}, methodDescriptor_TaskService_CompleteTask);
        };
    var Task_grpc_web_pb = proto$p.Task;
    var Task_grpc_web_pb_1 = Task_grpc_web_pb.TaskServiceClient;

    class TaskService extends Singleton {
        constructor() {
            super();
            this.achieveService = new Task_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        completeTask(arrTask, callback) {
            let req = new Task_pb_6();
            req.setNpid(GlobalData.getInstance().myPid);
            req.setArrtaskidList(arrTask);
            this.achieveService.completeTask(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    CC.Log('completeTask err: ' + JSON.stringify(err));
                    callback(null);
                    return;
                }
                callback(res.getMapresultMap());
            });
        }
    }

    const grpc$p = {};
    grpc$p.web = grpcWeb;

    const proto$q = {};
    proto$q.Aggrg = Aggrg_pb;
    proto$q.Aggrg.AggrgServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$p.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$q.Aggrg.AggrgServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$p.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_AggrgService_Info = new grpc$p.web.MethodDescriptor('/Aggrg.AggrgService/Info', grpc$p.web.MethodType.UNARY, proto$q.Aggrg.InfoGet, proto$q.Aggrg.InfoAck, function (request) {
        return request.serializeBinary();
    }, proto$q.Aggrg.InfoAck.deserializeBinary);
    proto$q.Aggrg.AggrgServiceClient.prototype.info =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Aggrg.AggrgService/Info', request, metadata || {}, methodDescriptor_AggrgService_Info, callback);
        };
    proto$q.Aggrg.AggrgServicePromiseClient.prototype.info =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Aggrg.AggrgService/Info', request, metadata || {}, methodDescriptor_AggrgService_Info);
        };
    const methodDescriptor_AggrgService_Award = new grpc$p.web.MethodDescriptor('/Aggrg.AggrgService/Award', grpc$p.web.MethodType.UNARY, proto$q.Aggrg.AwardGet, proto$q.Aggrg.AwardAck, function (request) {
        return request.serializeBinary();
    }, proto$q.Aggrg.AwardAck.deserializeBinary);
    proto$q.Aggrg.AggrgServiceClient.prototype.award =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Aggrg.AggrgService/Award', request, metadata || {}, methodDescriptor_AggrgService_Award, callback);
        };
    proto$q.Aggrg.AggrgServicePromiseClient.prototype.award =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Aggrg.AggrgService/Award', request, metadata || {}, methodDescriptor_AggrgService_Award);
        };
    var Aggrg_grpc_web_pb = proto$q.Aggrg;
    var Aggrg_grpc_web_pb_1 = Aggrg_grpc_web_pb.AggrgServicePromiseClient;

    class AggrgService extends Singleton {
        constructor() {
            super();
            this.aggrgServiceClient = null;
            this.aggrgServiceClient = new Aggrg_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        info(taskID, adid, channel) {
            return __awaiter(this, void 0, void 0, function* () {
                let id = taskID || GlobalVariables.AGG_ID;
                let request = new Aggrg_pb_2();
                request.setAggidList([id]);
                if (adid) {
                    request.setAdid(adid);
                }
                if (channel) {
                    request.setChannel(channel);
                }
                DeviceData.getInstance().JLog("aggrgServiceClient.info req = " + JSON.stringify(request.toObject()));
                let ack = yield this.aggrgServiceClient.info(request, GlobalData.getInstance().baseMeta);
                CC.Log("aggrgServiceClient.info akc = " + JSON.stringify(ack.toObject()));
                EventManager.getInstance().emit(LobbyEvent.ACT_AGGRG_EVENT, [ack]);
                return ack;
            });
        }
        award(taskID) {
            return __awaiter(this, void 0, void 0, function* () {
                let id = taskID || GlobalVariables.AGG_ID;
                let request = new Aggrg_pb_4();
                request.setAggid(id);
                let ack = yield this.aggrgServiceClient.award(request, GlobalData.getInstance().baseMeta);
                CC.Log("aggrgServiceClient.award akc = " + JSON.stringify(ack.toObject()));
                return ack;
            });
        }
    }

    var AGREE_TYPE;
    (function (AGREE_TYPE) {
        AGREE_TYPE[AGREE_TYPE["USER"] = 0] = "USER";
        AGREE_TYPE[AGREE_TYPE["PRIVACY"] = 1] = "PRIVACY";
        AGREE_TYPE[AGREE_TYPE["CHILD"] = 2] = "CHILD";
    })(AGREE_TYPE || (AGREE_TYPE = {}));
    var LOGIN_RET;
    (function (LOGIN_RET) {
        LOGIN_RET[LOGIN_RET["FAIL"] = -1] = "FAIL";
        LOGIN_RET[LOGIN_RET["SUCCESS"] = 0] = "SUCCESS";
        LOGIN_RET[LOGIN_RET["FIRST_LOGIN"] = 1] = "FIRST_LOGIN";
        LOGIN_RET[LOGIN_RET["PSD_EMPTY"] = -8] = "PSD_EMPTY";
        LOGIN_RET[LOGIN_RET["INVALID"] = -7] = "INVALID";
        LOGIN_RET[LOGIN_RET["CODE_ERR"] = -6] = "CODE_ERR";
        LOGIN_RET[LOGIN_RET["NON_EXIT"] = -40002] = "NON_EXIT";
        LOGIN_RET[LOGIN_RET["PSD_ERR"] = -40004] = "PSD_ERR";
        LOGIN_RET[LOGIN_RET["DISABLE_IP"] = -40012] = "DISABLE_IP";
        LOGIN_RET[LOGIN_RET["ACCOUNT"] = -40013] = "ACCOUNT";
        LOGIN_RET[LOGIN_RET["DEVICE"] = -40015] = "DEVICE";
        LOGIN_RET[LOGIN_RET["ACCOUNT_CANCEL"] = -40022] = "ACCOUNT_CANCEL";
        LOGIN_RET[LOGIN_RET["AUTH_INVALID_SOURCE"] = -40023] = "AUTH_INVALID_SOURCE";
        LOGIN_RET[LOGIN_RET["E_AUTH_DEVICE_LIMITED"] = -40025] = "E_AUTH_DEVICE_LIMITED";
    })(LOGIN_RET || (LOGIN_RET = {}));
    var LOGIN_TYPE;
    (function (LOGIN_TYPE) {
        LOGIN_TYPE[LOGIN_TYPE["NORMAL"] = 0] = "NORMAL";
        LOGIN_TYPE[LOGIN_TYPE["APPLE"] = 1] = "APPLE";
        LOGIN_TYPE[LOGIN_TYPE["VK"] = 2] = "VK";
        LOGIN_TYPE[LOGIN_TYPE["TG"] = 3] = "TG";
        LOGIN_TYPE[LOGIN_TYPE["THIRD"] = 4] = "THIRD";
    })(LOGIN_TYPE || (LOGIN_TYPE = {}));
    class LoginScene extends Laya.View {
        constructor() {
            super();
            this.loginService = null;
            this.progressWidth = 956;
            this.showApple = false;
            this.isLoginClicked = false;
            this.loadingLayer = null;
            this.thirdName = null;
            this.thirdHeadIcon = null;
            this.isAlreadyLogin = false;
            this.loginService = LoginSocket.getInstance();
            if (DeviceData.getInstance().isIOS && DeviceData.getInstance().tsBridge) {
                DeviceData.getInstance().tsBridge.callWithBack((isShow) => {
                    this.showApple = isShow == 1;
                }, 'showAppleLogin');
            }
            EventManager.getInstance().on(LobbyDefine.LOGIN_SUCCESS, this, this.onLoginSuccess);
        }
        refreshScoket() {
            window.setServerByLang(GlobalVariables.DEF_LANG);
            LoginSocket.recycle();
            HeartManager.recycle();
            AwardService.recycle();
            ConnectislandService.recycle();
            DataCurrency.recycle();
            DataMatch.recycle();
            DataPlayer.recycle();
            DataStore.recycle();
            ExchangeService.recycle();
            OutInviteService.recycle();
            LuckyRouletteService.recycle();
            OutTaskService.recycle();
            PushService.recycle();
            RankService.recycle();
            RebateService.recycle();
            ShopService.recycle();
            TaskService.recycle();
            ThirdGameService.recycle();
            ActivsService.recycle();
            AggrgService.recycle();
            JackpotService.recycle();
            this.loginService = LoginSocket.getInstance();
        }
        onEnable() {
            if (DeviceData.getInstance().isNative) {
                DeviceData.getInstance().tsBridge.call("hideSplash");
            }
            else if (window["tienLen777"]) {
                DeviceData.getInstance().JLog("hideSplash =========");
                window["tienLen777"].hideSplash();
                let document = Laya.Browser.window.document;
                if (document) {
                    document.getElementById("launchScreen").style.display = "none";
                }
            }
            else {
                let document = Laya.Browser.window.document;
                if (document) {
                    document.getElementById("launchScreen").style.display = "none";
                }
            }
        }
        onAwake() {
            AFUtil.reportLoginPage();
            let bFirst = GameStorage.getFirstLaunch();
            if (bFirst) {
                AFUtil.reportFirstOpen();
                GameStorage.setFirstLaunch(false);
            }
        }
        onOpened(param) {
            this.startAnimation();
            EventManager.getInstance().emit(LobbyDefine.VERSION_INIT);
        }
        checkAreaCode() {
        }
        judgeLoginDays() {
            let lastLoginTime = GameStorage.getLastLoginTime();
            if (lastLoginTime == -1 || GlobalFunc.isOutSevenDays(lastLoginTime)) {
                this.init();
                GlobalData.getInstance().loadingAni.Show("");
                GlobalData.getInstance().lobbySocket = new LobbySocket();
                GlobalData.getInstance().lobbySocket.guestLogin((result) => {
                    if (result) {
                        this.showLobbyScene(true);
                    }
                    else {
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_ERR_ASK_SERVICE);
                    }
                });
                return;
            }
            let lastLogin = GameStorage.getLastLoginType();
            GlobalData.getInstance().myPid = GameStorage.getUserPid();
            GlobalData.getInstance().myTicket = GameStorage.getUserTicket();
            GlobalData.getInstance().baseMeta = { "ticket": GlobalData.getInstance().myPid + "_" + GlobalData.getInstance().myTicket };
            UploadManager.getInstance().startGame();
            this.init();
            this.isAlreadyLogin = true;
            GlobalData.getInstance().loadingAni.Show(WARNING.LOGIN_LOGINING);
            this.showLobbyScene();
            Laya.timer.once(5000, this, () => {
                if (GlobalData.getInstance().lobbySocket) {
                    GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1005);
                }
            });
        }
        init() {
            this.initAccountLayer();
            this.addCommonLoading();
            this.loginService.queryByDeviceID();
        }
        initAccountLayer() {
        }
        showLobbyScene(force) {
            if (DeviceData.getInstance().isAndroid) {
                DeviceData.getInstance().tsBridge.call("setUserID", GlobalData.getInstance().myPid.toString());
            }
            else if (DeviceData.getInstance().isIOS) {
                DeviceData.getInstance().tsBridge.call("setUserID:", GlobalData.getInstance().myPid.toString());
            }
            let self = this;
            if (GlobalData.getInstance().lobbyScene) {
                GlobalData.getInstance().lobbyScene.visible = false;
                GlobalData.getInstance().lobbyScene.closeEventListener();
                GlobalData.getInstance().lobbyScene.initEventListener();
                if (!GlobalData.getInstance().lobbySocket) {
                    GlobalData.getInstance().lobbySocket = new LobbySocket();
                }
                if (force) {
                    GameAudio.getInstance().playMusic('hall.mp3');
                    this.visible = false;
                    GlobalData.getInstance().lobbyScene.loadLobbyData();
                    GlobalData.getInstance().lobbyScene.visible = true;
                    GlobalData.getInstance().loadingAni.Close();
                }
                return;
            }
            LoadManager.instance.loadScene(LobbyRes.LOBBY_SCENE, Laya.Handler.create(this, (scene) => {
                if (scene) {
                    GlobalData.getInstance().loginScene = self;
                    Laya.stage.addChild(scene);
                    scene.visible = false;
                    if (force) {
                        GameAudio.getInstance().playMusic('hall.mp3');
                        this.visible = false;
                        GlobalData.getInstance().lobbyScene.loadLobbyData();
                        scene.visible = true;
                        GlobalData.getInstance().loadingAni.Close();
                    }
                }
                else {
                    this.isLoginClicked = false;
                    GlobalData.getInstance().loadingAni.Close();
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_LOGIN);
                }
            }));
        }
        onLoginSuccess() {
            if (!this.visible) {
                return;
            }
            CC.Log('登录成功');
            let loginType = GameStorage.getLastLoginType();
            if ((loginType == LOGIN_TYPE.TG || loginType == LOGIN_TYPE.VK) && !this.isAlreadyLogin) {
                let info = new Info_pb_23();
                info.setNpid(GlobalData.getInstance().myPid);
                let nickName = this.thirdName || ("User" + GlobalData.getInstance().myPid);
                info.setStrnickname(nickName);
                info.setStravatar(this.thirdHeadIcon);
                DataPlayer.getInstance().verifyAndUpdateUserInfo(info, nickName, () => {
                    DataPlayer.getInstance().getUserInfo((success) => {
                        var _a;
                        GlobalData.getInstance().loadingAni.Close();
                        if (!success) {
                            (_a = GlobalData.getInstance().lobbySocket) === null || _a === void 0 ? void 0 : _a.existToLogin();
                            TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_LOGIN);
                            return;
                        }
                        GameAudio.getInstance().playMusic('hall.mp3');
                        this.visible = false;
                        GlobalData.getInstance().lobbyScene.loadLobbyData();
                        if (window.G_GameScene == null) {
                            GlobalData.getInstance().lobbyScene.visible = true;
                        }
                        if (DeviceData.getInstance().isNative) {
                        }
                    });
                });
            }
            else {
                DataPlayer.getInstance().getUserInfo((success) => {
                    var _a;
                    GlobalData.getInstance().loadingAni.Close();
                    if (!success) {
                        this.isLoginClicked = false;
                        (_a = GlobalData.getInstance().lobbySocket) === null || _a === void 0 ? void 0 : _a.existToLogin();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_LOGIN);
                        return;
                    }
                    GameAudio.getInstance().playMusic('hall.mp3');
                    this.visible = false;
                    GlobalData.getInstance().lobbyScene.loadLobbyData();
                    if (window.G_GameScene == null) {
                        GlobalData.getInstance().lobbyScene.visible = true;
                    }
                    if (DeviceData.getInstance().isNative) {
                    }
                    if (DeviceData.getInstance().isIOS) {
                        DeviceData.getInstance().tsBridge.callWithBack((payReceipt) => {
                            if (payReceipt != 'false') {
                                let orderNo = GameStorage.getLastOrder();
                                DataStore.getInstance().verifyAppleOrder(orderNo, payReceipt, (orderNo) => {
                                    if (orderNo) {
                                    }
                                });
                            }
                        }, 'checkOrderReceipt');
                    }
                });
            }
        }
        startAnimation() {
            let mVersion = this.getChildByName('tip').getChildByName('version');
            mVersion.text = 'V' + GameStorage.getSourceVersion();
            mVersion.visible = DeviceData.getInstance().isNative;
            this.loadingLayer = this.getChildByName('loading');
            this.progress2 = this.loadingLayer.getChildByName("progress").getChildByName("progress2");
            this.progress2.width = 0;
            EventManager.getInstance().on(LoadManager.LOAD_COMPLETE, this, this.Progress);
            EventManager.getInstance().on(LoadManager.LOAD_PROGRESS, this, this.Progress);
            EventManager.getInstance().on(LoadManager.LOAD_NETERROR, this, this.onLoadNetworkError);
            EventManager.getInstance().on(LobbyDefine.VERSION_INIT, this, this.preloadRes);
        }
        preloadRes() {
            let arr = LobbyRes.LOBBY_RESARR;
            arr = arr.concat(LobbyRes.getIconResArr());
            arr = arr.concat(LANG_IMAGES);
            LoadManager.instance.loadResArr(arr, LoadGroupType.PreLoad);
        }
        Progress(progress) {
            Laya.Tween.to(this.progress2, { width: this.progressWidth * progress }, 500, null, Laya.Handler.create(this, this.checkFinish, [progress]), 0);
            let progressLabel = this.loadingLayer.getChildByName("num");
            progressLabel.text = (progress * 100).toFixed(2) + '%';
        }
        onLoadNetworkError() {
            this.loadingLayer.getChildByName("tip").text = WARNING.LOGIN_NET_DOWN_RETRY;
            this.loadingLayer.getChildByName("tip").centerX = 0;
            this.loadingLayer.getChildByName("num").visible = false;
            PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [WARNING.LOGIN_LOADRES_FAIL, MSG_TYPE.NORMAL, Laya.Handler.create(this, () => {
                    if (Laya.Browser.onQQBrowser || Laya.Browser.onMQQBrowser || Laya.Browser.onSafari || Laya.Browser.onEdge || Laya.Browser.onIE || Laya.Browser.onPC) {
                        this.closeHtml();
                    }
                })], Laya.stage, STAGE_Z_ORDER.POPUP);
        }
        checkFinish(progress) {
            if (progress == 1) {
                EventManager.getInstance().off(LoadManager.LOAD_COMPLETE, this, this.Progress);
                EventManager.getInstance().off(LoadManager.LOAD_PROGRESS, this, this.Progress);
                EventManager.getInstance().off(LoadManager.LOAD_NETERROR, this, this.onLoadNetworkError);
                this.loadingLayer.visible = false;
                this.judgeLoginDays();
            }
        }
        addCommonLoading() {
            let pref = Laya.loader.getRes(PREFAB_LOBBY.COMMON_LOAD);
            let dlgPre = new Laya.Prefab();
            dlgPre.json = pref;
            let loadingAni = Laya.Pool.getItemByCreateFun("Loading", dlgPre.create, dlgPre);
            if (loadingAni != null) {
                loadingAni.zOrder = STAGE_Z_ORDER.POPUP;
                Laya.stage.addChild(loadingAni);
                GlobalData.getInstance().loadingAni = loadingAni;
            }
        }
        closeHtml() {
            if (Laya.stage.fullScreenEnabled == true) {
                Laya.stage.exitFullscreen();
            }
            if (navigator.userAgent.indexOf("Firefox") != -1 || navigator.userAgent.indexOf("Chrome") != -1) {
                window.location.href = "about:blank";
                window.close();
            }
            else {
                window.opener = null;
                window.open("", "_self");
                window.close();
            }
        }
    }

    class CommonLoading extends Laya.Box {
        constructor() {
            super(...arguments);
            this.tipLabel = null;
            this.canClose = false;
        }
        onAwake() {
            this.visible = false;
            let maskBg = this.getChildByName("maskbg");
            maskBg.width = Laya.stage.width;
            maskBg.height = Laya.stage.height;
            maskBg.alpha = 0.5;
            maskBg.on(Laya.Event.CLICK, this, () => {
                if (this.canClose) {
                    this.closeView();
                    Laya.timer.clear(this, this.closeView);
                }
            });
            this.tipLabel = this.getChildByName('content').getChildByName("tips");
        }
        isShow() {
            return this.visible;
        }
        Show(tip) {
            tip && (this.tipLabel.text = tip);
            this.visible = true;
            this.canClose = false;
        }
        Close(msg) {
            this.canClose = true;
            if (!msg || !this.visible) {
                this.visible = false;
            }
            else {
                this.tipLabel.text = msg;
                Laya.timer.once(1000, this, this.closeView);
            }
        }
        closeView() {
            this.visible = false;
        }
    }

    const grpc$q = {};
    grpc$q.web = grpcWeb;

    const proto$r = {};
    proto$r.Lucky = Lucky_pb;
    proto$r.Lucky.LuckyServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$q.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$r.Lucky.LuckyServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$q.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_LuckyService_Lucky = new grpc$q.web.MethodDescriptor('/Lucky.LuckyService/Lucky', grpc$q.web.MethodType.UNARY, proto$r.Lucky.LuckyGet, proto$r.Lucky.LuckyAck, function (request) {
        return request.serializeBinary();
    }, proto$r.Lucky.LuckyAck.deserializeBinary);
    proto$r.Lucky.LuckyServiceClient.prototype.lucky =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Lucky.LuckyService/Lucky', request, metadata || {}, methodDescriptor_LuckyService_Lucky, callback);
        };
    proto$r.Lucky.LuckyServicePromiseClient.prototype.lucky =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Lucky.LuckyService/Lucky', request, metadata || {}, methodDescriptor_LuckyService_Lucky);
        };
    const methodDescriptor_LuckyService_Consume = new grpc$q.web.MethodDescriptor('/Lucky.LuckyService/Consume', grpc$q.web.MethodType.UNARY, proto$r.Lucky.ConsumeGet, proto$r.Lucky.ConsumeAck, function (request) {
        return request.serializeBinary();
    }, proto$r.Lucky.ConsumeAck.deserializeBinary);
    proto$r.Lucky.LuckyServiceClient.prototype.consume =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Lucky.LuckyService/Consume', request, metadata || {}, methodDescriptor_LuckyService_Consume, callback);
        };
    proto$r.Lucky.LuckyServicePromiseClient.prototype.consume =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Lucky.LuckyService/Consume', request, metadata || {}, methodDescriptor_LuckyService_Consume);
        };
    const methodDescriptor_LuckyService_Award = new grpc$q.web.MethodDescriptor('/Lucky.LuckyService/Award', grpc$q.web.MethodType.UNARY, proto$r.Lucky.AwardGet, proto$r.Lucky.AwardAck, function (request) {
        return request.serializeBinary();
    }, proto$r.Lucky.AwardAck.deserializeBinary);
    proto$r.Lucky.LuckyServiceClient.prototype.award =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Lucky.LuckyService/Award', request, metadata || {}, methodDescriptor_LuckyService_Award, callback);
        };
    proto$r.Lucky.LuckyServicePromiseClient.prototype.award =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Lucky.LuckyService/Award', request, metadata || {}, methodDescriptor_LuckyService_Award);
        };
    const methodDescriptor_LuckyService_Task = new grpc$q.web.MethodDescriptor('/Lucky.LuckyService/Task', grpc$q.web.MethodType.UNARY, proto$r.Lucky.TaskGet, proto$r.Lucky.TaskAck, function (request) {
        return request.serializeBinary();
    }, proto$r.Lucky.TaskAck.deserializeBinary);
    proto$r.Lucky.LuckyServiceClient.prototype.task =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Lucky.LuckyService/Task', request, metadata || {}, methodDescriptor_LuckyService_Task, callback);
        };
    proto$r.Lucky.LuckyServicePromiseClient.prototype.task =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Lucky.LuckyService/Task', request, metadata || {}, methodDescriptor_LuckyService_Task);
        };
    const methodDescriptor_LuckyService_Client = new grpc$q.web.MethodDescriptor('/Lucky.LuckyService/Client', grpc$q.web.MethodType.UNARY, proto$r.Lucky.ClientGet, proto$r.Lucky.ClientAck, function (request) {
        return request.serializeBinary();
    }, proto$r.Lucky.ClientAck.deserializeBinary);
    proto$r.Lucky.LuckyServiceClient.prototype.client =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Lucky.LuckyService/Client', request, metadata || {}, methodDescriptor_LuckyService_Client, callback);
        };
    proto$r.Lucky.LuckyServicePromiseClient.prototype.client =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Lucky.LuckyService/Client', request, metadata || {}, methodDescriptor_LuckyService_Client);
        };
    const methodDescriptor_LuckyService_Invite = new grpc$q.web.MethodDescriptor('/Lucky.LuckyService/Invite', grpc$q.web.MethodType.UNARY, proto$r.Lucky.InviteGet, proto$r.Lucky.InviteAck, function (request) {
        return request.serializeBinary();
    }, proto$r.Lucky.InviteAck.deserializeBinary);
    proto$r.Lucky.LuckyServiceClient.prototype.invite =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Lucky.LuckyService/Invite', request, metadata || {}, methodDescriptor_LuckyService_Invite, callback);
        };
    proto$r.Lucky.LuckyServicePromiseClient.prototype.invite =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Lucky.LuckyService/Invite', request, metadata || {}, methodDescriptor_LuckyService_Invite);
        };
    var Lucky_grpc_web_pb = proto$r.Lucky;
    var Lucky_grpc_web_pb_1 = Lucky_grpc_web_pb.LuckyServicePromiseClient;

    class LuckyService extends Singleton {
        constructor() {
            super();
            this.m_awards = [];
            this.m_proCur = 0;
            this.m_finish = 1;
            this.luckyService = new Lucky_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        getAward(index) {
            index = index || (this.m_proCur - 1);
            return this.m_awards[index];
        }
        lucky(value) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Lucky_pb_1();
                request.setTaskidsList(value);
                let luckyAck = yield this.luckyService.lucky(request, GlobalData.getInstance().baseMeta);
                return luckyAck;
            });
        }
        consume(fromId) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Lucky_pb_3();
                request.setFromid(fromId);
                let consumeAck = yield this.luckyService.consume(request, GlobalData.getInstance().baseMeta);
                return consumeAck;
            });
        }
        award(taskId, awardId) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Lucky_pb_12();
                request.setTaskid(taskId);
                request.setAwardid(awardId);
                let ack = yield this.luckyService.award(request, GlobalData.getInstance().baseMeta);
                return ack;
            });
        }
        clientGet(__taskID) {
            return __awaiter(this, void 0, void 0, function* () {
                let request = new Lucky_pb_8();
                let items = request.getItemsMap();
                items.set(__taskID, 1);
                let consumeAck = yield this.luckyService.client(request, GlobalData.getInstance().baseMeta);
                if (consumeAck) {
                    CC.Log("LuckyService clientGet = ", consumeAck.toObject());
                    let taskMap = consumeAck.getTasksMap();
                    if (taskMap.getLength() > 0) {
                        let task = taskMap.get(__taskID);
                        this.m_proCur = task.getProcur();
                        this.m_finish = task.getFinish();
                    }
                }
                return consumeAck;
            });
        }
        taskGet(__taskID) {
            return __awaiter(this, void 0, void 0, function* () {
                let ret = -1;
                let request = new Lucky_pb_10();
                request.setTaskid(__taskID);
                let consumeAck = yield this.luckyService.task(request, GlobalData.getInstance().baseMeta);
                if (consumeAck) {
                    CC.Log("LuckyService taskGet = ", consumeAck.toObject());
                    let taskMap = consumeAck.getTasksMap();
                    if (taskMap.getLength() > 0) {
                        let task = taskMap.get(__taskID);
                        this.m_awards = task.getAwardsList();
                        if (task.getFinish() >= task.getLimit() || task.getStime() <= 0) {
                            return -1;
                        }
                        else {
                            this.m_finish = 0;
                            ret = task.getProcur();
                            this.m_proCur = ret;
                            return ret;
                        }
                    }
                }
                return ret;
            });
        }
    }

    class TurnTable extends Laya.Script {
        constructor() {
            super(...arguments);
            this.btnClose = null;
            this.imgDisk = null;
            this.pointImg = null;
            this.leftTimes = null;
            this.infoView = null;
            this.vipImg = null;
            this.countdownView = null;
            this.countdownLab = null;
            this.helpView = null;
            this.btnHelpShow = null;
            this.btnHelpClose = null;
            this.taskList = null;
            this.deskIndex = 0;
            this.isTurn = false;
            this.luckTurnInterval = null;
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.IM_LOGIN_NOTI, this, this.onLuckyNoti);
            let rootBox = this.owner.getChildAt(0);
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose);
            this.pointImg.on(Laya.Event.CLICK, this, this.onBtnPoint);
            this.btnHelpShow.on(Laya.Event.CLICK, this, this.onBtnHelpShow);
            this.btnHelpClose.on(Laya.Event.CLICK, this, this.onBtnHelpClose);
            this.taskList.renderHandler = new Laya.Handler(this, this.updateTaskItem);
            this.taskList.selectHandler = new Laya.Handler(this, this.onItemTaskSelect);
            this.taskList.vScrollBarSkin = "";
            this.taskList.array = [];
            this.initData();
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1030);
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.IM_LOGIN_NOTI, this, this.onLuckyNoti);
            Laya.Tween.clearAll(this.imgDisk);
            if (this.luckTurnInterval) {
                clearInterval(this.luckTurnInterval);
            }
        }
        initData() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let ack = yield LuckyService.getInstance().lucky([GlobalVariables.TASK_1001, GlobalVariables.TASK_10001]);
                    this.turnAwardList = ack.getAwardsList();
                    this.setTurnTableData(this.turnAwardList);
                    let lucky = ack.getLucky();
                    this.setLuck(lucky);
                    let task = ack.getTasksMap().get(GlobalVariables.TASK_1001);
                    this.setTask(task);
                }
                catch (error) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
        onLuckyNoti(type, res) {
            if (type == "Lucky.Lucky") {
                this.setLuck(res);
            }
            else if (type == "Lucky.Task") {
                this.setTask(res);
            }
        }
        setLuck(lucky) {
            this.lucky = lucky;
            let playerInfo = VipManager.getInstance().playerVipInfo;
            let times = lucky.getTimes() + lucky.getNexts();
            let tmpStr = window.formatPlaceHolderString(WARNING.TURN_TABLE_TIMES, times);
            this.leftTimes.text = tmpStr;
            if (playerInfo.nVipLevel > 0) {
                if (lucky.getTimes() <= 0 && lucky.getNexts() > 0) {
                    this.leftTimes.visible = false;
                    this.infoView.visible = true;
                    this.vipImg.visible = false;
                    this.countdownView.visible = true;
                    if (this.luckTurnInterval) {
                        clearInterval(this.luckTurnInterval);
                        this.luckTurnInterval = null;
                    }
                    this.countdownLab.text = window.getTimeRemaining(lucky.getTnext());
                    this.luckTurnInterval = setInterval(() => {
                        this.countdownLab.text = window.getTimeRemaining(lucky.getTnext());
                    }, 1000);
                }
                else {
                    this.leftTimes.visible = true;
                    this.infoView.visible = false;
                    this.vipImg.visible = false;
                    this.countdownView.visible = false;
                }
            }
            else {
                this.leftTimes.visible = false;
                this.infoView.visible = true;
                this.vipImg.visible = true;
                this.countdownView.visible = false;
            }
        }
        setTask(task) {
            this.task = task;
            let taskAwardList = task.getAwardsList();
            this.taskList.array = taskAwardList;
            this.taskList.dataSource = taskAwardList;
            this.taskList.refresh();
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner.getChildAt(0);
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                PopupManager.Hide(PREFAB_LOBBY.LUCKY_TURN_TABLE);
            }), 0);
        }
        onBtnHelpShow() {
            this.helpView.visible = true;
        }
        onBtnHelpClose() {
            this.helpView.visible = false;
        }
        onBtnPoint() {
            return __awaiter(this, void 0, void 0, function* () {
                if (this.isTurn || null == this.lucky) {
                    return;
                }
                let playerInfo = VipManager.getInstance().playerVipInfo;
                if (playerInfo.nVipLevel < 1) {
                    TopTipsManager.getInstance().showTopTips(WARNING.LUCKY_NO_VIP);
                    return;
                }
                if (this.lucky.getTimes() <= 0) {
                    if (this.lucky.getNexts() <= 0) {
                        TopTipsManager.getInstance().showTopTips(WARNING.LUCKY_NO_COUNT);
                    }
                    else {
                        TopTipsManager.getInstance().showTopTips(WARNING.LUCKY_NO_TIME);
                    }
                    return;
                }
                this.isTurn = true;
                let consumeAck = yield LuckyService.getInstance().consume(GlobalVariables.TASK_10001);
                let getAwardList = consumeAck.getAwardsList();
                if (!getAwardList || getAwardList.length == 0) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                    return;
                }
                let targetIndex = this.turnAwardList.findIndex((e) => e.getItemnum() == getAwardList[0].getItemnum());
                if (targetIndex < 0) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                    return;
                }
                this.spin(targetIndex, () => {
                    this.isTurn = false;
                    let amount = getAwardList[0].getItemnum();
                    if (amount > 0) {
                        let data = new Array();
                        let item = new AwardService_pb_1();
                        item.setNamount(amount);
                        data.push(item);
                        GlobalData.getInstance().lobbyScene.showReceiveSuccess(data);
                    }
                });
            });
        }
        spin(targetIndex, callback) {
            let awardLength = 8;
            let round = Math.floor(Math.random() * 4) + awardLength;
            let degree = 360 / awardLength;
            let targetDegree = round * 360 + degree * (targetIndex - this.deskIndex);
            this.imgDisk.getChildAt(this.deskIndex).getChildByName("light").visible = false;
            this.deskIndex = targetIndex;
            Laya.Tween.to(this.imgDisk, { rotation: this.imgDisk.rotation + targetDegree }, 5000, Laya.Ease.cubicInOut, Laya.Handler.create(this, () => {
                this.imgDisk.getChildAt(targetIndex).getChildByName("light").visible = true;
                callback();
            }));
        }
        onItemTaskSelect(index) {
            if (index < 0)
                return;
            this.taskList.selectedIndex = -1;
        }
        setTurnTableData(awardArr) {
            for (let i = 0; i < Math.min(awardArr.length, 8); i++) {
                const award = awardArr[i];
                let item = this.imgDisk.getChildByName('item' + i);
                let zjzlImg = item.getChildByName('zjzl');
                let iconImg = item.getChildByName('icon');
                let numLab = item.getChildByName('num');
                if (award.getItemnum() == 0) {
                    zjzlImg.visible = true;
                    iconImg.visible = false;
                    numLab.visible = false;
                }
                else {
                    zjzlImg.visible = false;
                    iconImg.visible = true;
                    numLab.visible = true;
                    let iconPath = "qianbi1.png";
                    let amount = award.getItemnum();
                    if (amount > 0 && amount <= 1666) {
                        iconPath = "qianbi1.png";
                    }
                    else if (amount > 1666 && amount <= 3666) {
                        iconPath = "qianbi2.png";
                    }
                    else if (amount > 3666 && amount <= 6666) {
                        iconPath = "qianbi3.png";
                    }
                    else if (amount > 6666 && amount <= 36666) {
                        iconPath = "qianbi4.png";
                    }
                    else if (amount > 36666) {
                        iconPath = "qianbi5.png";
                    }
                    iconImg.skin = "2d/ui/qianbi/" + iconPath;
                    numLab.text = window.formatNum(award.getItemnum() / 100);
                }
            }
        }
        updateTaskItem(cell, index) {
            let data = this.taskList.dataSource;
            let item = data[index];
            let titleLab = cell.getChildByName("titleLab");
            let desLab = cell.getChildByName("desLab");
            titleLab.text = window.formatPlaceHolderString(WARNING.LUCKY_BET_INFO, window.formatNum(item.getValue() / 100));
            desLab.text = window.formatPlaceHolderString(WARNING.LUCKY_TURN_COUNT, " +" + item.getItemnum());
            let finishImg = cell.getChildByName("finishImg");
            let proBox = cell.getChildByName("proBox");
            if ((this.task.getState() & (1 << item.getAwardid())) > 0) {
                finishImg.visible = true;
                proBox.visible = false;
            }
            else {
                finishImg.visible = false;
                proBox.visible = true;
                let p1Lab = proBox.getChildByName("p1Lab");
                let p2Lab = proBox.getChildByName("p2Lab");
                p1Lab.text = window.formatNum(this.task.getProcur() / 100);
                p2Lab.text = " / " + window.formatNum(item.getValue() / 100);
            }
        }
    }

    class LangManager {
        static checkResByLang() {
            let endFix = LangManager.getSuffixByType(GlobalVariables.DEF_LANG);
            let prefArr = [
                PREFAB_LOBBY.UPDATE_NAME,
                PREFAB_LOBBY.UPDATE_AVATAR,
                PREFAB_LOBBY.MESSAGE_BOX,
                PREFAB_LOBBY.COMMON_LOAD,
                PREFAB_LOBBY.PLAYER_INFO,
                PREFAB_LOBBY.BIND_PHONE,
                PREFAB_LOBBY.REBATE,
                PREFAB_LOBBY.INVITE,
                PREFAB_LOBBY.HALL_SET,
                PREFAB_LOBBY.MAIL,
                PREFAB_LOBBY.MAIL_ITEM,
                PREFAB_LOBBY.MAIL_AWARD,
                PREFAB_LOBBY.SHOP,
                PREFAB_LOBBY.SHOP_DETAIL,
                PREFAB_LOBBY.RECEIVE_SUCCESS,
                PREFAB_LOBBY.VIP_WIN,
                PREFAB_LOBBY.VIP_LEVELUP_WIN,
                PREFAB_LOBBY.HALL_COOPERATE,
                PREFAB_LOBBY.DEL_ACCOUNT,
                PREFAB_LOBBY.NEW_GIFT,
                PREFAB_LOBBY.SAFE_BOX,
                PREFAB_LOBBY.ACT_FIRST,
                PREFAB_LOBBY.ACT_INVITED,
                PREFAB_LOBBY.ACT_DETAIL,
                PREFAB_LOBBY.ACT_RECORD,
                PREFAB_LOBBY.ACT_AWARD,
                PREFAB_LOBBY.WALLET,
                PREFAB_LOBBY.WALLET_TURN_TABLE,
                PREFAB_LOBBY.WALLET_USE,
                PREFAB_LOBBY.WALLET_GUIDE,
                PREFAB_LOBBY.WALLET_CODE,
                PREFAB_LOBBY.SHARE_ASSEM,
                PREFAB_LOBBY.LUCKY_TURN_TABLE,
                LobbyRes.VIP_LEVEL,
            ];
            GameConfig.startScene = "views/login" + endFix + ".scene";
            LobbyRes.LOBBY_SCENE = "views/home" + endFix + ".scene";
            Object.getOwnPropertyNames(PREFAB_LOBBY).forEach((propertyName) => {
                let prefPath = PREFAB_LOBBY[propertyName];
                if (prefArr.indexOf(prefPath) > -1) {
                    let newPath = LangManager.getNewPath(prefPath, endFix);
                    PREFAB_LOBBY[propertyName] = newPath;
                }
            });
            Object.getOwnPropertyNames(PREFAB_GAME).forEach((propertyName) => {
                let prefPath = PREFAB_GAME[propertyName];
                if (prefArr.indexOf(prefPath) > -1) {
                    let newPath = LangManager.getNewPath(prefPath, endFix);
                    PREFAB_GAME[propertyName] = newPath;
                }
            });
            for (let i = 0; i < prefArr.length; i++) {
                let path1 = prefArr[i];
                for (let j = 0; j < LobbyRes.LOBBY_RESARR.length; j++) {
                    if (path1 == LobbyRes.LOBBY_RESARR[j]) {
                        let newPath = LangManager.getNewPath(path1, endFix);
                        LobbyRes.LOBBY_RESARR[j] = newPath;
                    }
                }
            }
            for (let i = 0; i < prefArr.length; i++) {
                let path1 = prefArr[i];
                for (let j = 0; j < GameRes.GAMERESARR.length; j++) {
                    if (path1 == GameRes.GAMERESARR[j]) {
                        let newPath = LangManager.getNewPath(path1, endFix);
                        GameRes.GAMERESARR[j] = newPath;
                    }
                }
            }
            LobbyRes.VIP_LEVEL = LangManager.getNewPath(LobbyRes.VIP_LEVEL, endFix);
            this.resetLangImgs(endFix);
            this.resetDynoImages(endFix);
        }
        static getNewPath(prefPath, endFix) {
            let pathArr = prefPath.split('.');
            let newHead = pathArr[0];
            if (pathArr[0]) {
                if (pathArr[0].endsWith("_en") || pathArr[0].endsWith("_ru")) {
                    newHead = pathArr[0].slice(0, -3);
                }
            }
            let newPath = newHead + endFix + "." + pathArr[1];
            return newPath;
        }
        static getOriginPath(suffPath) {
            let pathArr = suffPath.split('.');
            let newHead = pathArr[0];
            if (pathArr[0]) {
                if (pathArr[0].endsWith("_en") || pathArr[0].endsWith("_ru")) {
                    newHead = pathArr[0].slice(0, -3);
                }
            }
            return newHead + "." + pathArr[1];
        }
        static rewriteWaring() {
            let path;
            if (GlobalVariables.DEF_LANG == LANG_T.VN) {
                path = "table/language_vi.json";
            }
            else if (GlobalVariables.DEF_LANG == LANG_T.RU) {
                path = "table/language_ru.json";
            }
            else {
                path = "table/language_en.json";
            }
            Laya.loader.load(path, Laya.Handler.create(this, (data) => {
                let lobbyWarning = WARNING;
                let gameRet = CommonRet;
                let gameWarn = GameWarn;
                for (const key in data) {
                    if (lobbyWarning[key]) {
                        lobbyWarning[key] = data[key];
                    }
                    if (gameRet[key]) {
                        gameRet[key] = data[key];
                    }
                    if (gameWarn[key]) {
                        gameWarn[key] = data[key];
                    }
                }
            }), null, Laya.Loader.JSON);
        }
        static resetDynoImages(endFix) {
            let imageArr = [
                DYNO_IMAGES.RANK_IMG_JQ,
                DYNO_IMAGES.RANK_IMG_MFJB,
                DYNO_IMAGES.REBATE_IMG_KLQ,
                DYNO_IMAGES.REBATE_IMG_YLQ,
                DYNO_IMAGES.GIFT_BUY,
                DYNO_IMAGES.ACT_STEP_1,
                DYNO_IMAGES.ACT_STEP_2,
                DYNO_IMAGES.ACT_STEP_3,
                DYNO_IMAGES.BANNER_1,
                DYNO_IMAGES.BANNER_2,
                DYNO_IMAGES.BANNER_3,
                DYNO_IMAGES.ACT_TX_SUC,
                DYNO_IMAGES.ACT_TX_ING
            ];
            for (let key in DYNO_IMAGES) {
                let imgPath = DYNO_IMAGES[key];
                if (imageArr.indexOf(imgPath) > -1) {
                    DYNO_IMAGES[key] = LangManager.getNewPath(imgPath, endFix);
                }
            }
        }
        static resetLangImgs(endFix) {
            for (let j = 0; j < LANG_IMAGES.length; j++) {
                let path1 = LANG_IMAGES[j];
                let newPath = LangManager.getNewPath(path1, endFix);
                LANG_IMAGES[j] = newPath;
            }
        }
        static concatGameIcons() {
            if (GlobalVariables.DEF_LANG == LANG_T.VN) {
                LobbyRes.LOBBY_RESARR = LobbyRes.LOBBY_RESARR.concat(GAME_ICON_VI);
            }
            else if (GlobalVariables.DEF_LANG == LANG_T.RU) {
                LobbyRes.LOBBY_RESARR = LobbyRes.LOBBY_RESARR.concat(GAME_ICON_RU);
            }
            else {
                LobbyRes.LOBBY_RESARR = LobbyRes.LOBBY_RESARR.concat(GAME_ICON_EN);
            }
        }
        static setLangByCountry(country, sysLang) {
            if (DeviceData.getInstance().isIOS) {
                GlobalVariables.REAL_AREA = country;
                switch (country) {
                    case "BR":
                        GlobalVariables.DEF_LANG = LANG_T.VN;
                        break;
                    case "RU":
                        GlobalVariables.DEF_LANG = LANG_T.RU;
                        break;
                    case "IN":
                        GlobalVariables.DEF_LANG = LANG_T.IND;
                        break;
                    default:
                        GlobalVariables.IS_VERIFY = true;
                        GlobalVariables.DEF_LANG = LANG_T.EN;
                        break;
                }
                let saveData = GameStorage.getCountry();
                if (saveData > -1) {
                    GlobalVariables.DEF_LANG = saveData;
                }
                else {
                    GameStorage.setCountry(GlobalVariables.DEF_LANG);
                }
            }
        }
        static getSuffixByType(type) {
            let suffix = "";
            if (type == LANG_T.EN || type == LANG_T.IND) {
                suffix = "_en";
            }
            else if (type == LANG_T.RU) {
                suffix = "_ru";
            }
            return suffix;
        }
        static getMoneyMarkByLang() {
            let lang = GlobalVariables.DEF_LANG;
            let res = "";
            switch (lang) {
                case LANG_T.VN:
                    res = "R$";
                    break;
                case LANG_T.RU:
                    res = "RUB";
                    break;
                case LANG_T.IND:
                case LANG_T.EN:
                    res = "INR";
                    break;
                default:
                    break;
            }
            return res;
        }
        static getGoldMarkByLang() {
            let lang = GlobalVariables.DEF_LANG;
            let res = "";
            switch (lang) {
                case LANG_T.VN:
                    res = "Tiền xu";
                    break;
                case LANG_T.RU:
                    res = "Монета";
                    break;
                case LANG_T.IND:
                case LANG_T.EN:
                    res = "Gold";
                    break;
                default:
                    break;
            }
            return res;
        }
    }

    class Bulletin extends Laya.Box {
        constructor() {
            super();
            this.speed = 100;
            this.node_pnl = null;
            this.arrText = [];
            this.isRunning = false;
        }
        onEnable() {
            this.initUI();
        }
        onAwake() {
            this.visible = false;
            this.next();
        }
        initUI() {
            this.node_pnl = window.findNodeByName(this, "node_pnl");
        }
        addBulletin(content) {
            let tmpCon = content;
            let text = new Laya.HTMLDivElement();
            let params = tmpCon.getParamsMap();
            let user = params.get("{$name}") || '';
            let valueStr = params.get("{$value}");
            let value = parseInt(valueStr) / 100;
            valueStr = LangManager.getMoneyMarkByLang() + " " + value;
            let itemID = params.get("{$itemid}");
            let itemName = WARNING["ITEM_" + itemID] || '';
            let formatStr = "<span style='width:auto;height:46px;color:#{0};font-size:30px;font-family:sourcehansanscn-medium;vertical-align:middle;line-height:46px;'>";
            let htmlStr = window.formatPlaceHolderString(formatStr, "ffffff") + user + WARNING.BULL_EXC + " " + "</span>";
            let htmlStr1 = window.formatPlaceHolderString(formatStr, "fede5f") + "[" + valueStr + "]" + "</span>";
            text.innerHTML = "<div style='display:flex;width:auto;height:46px;'>" + htmlStr + htmlStr1 + "</div>";
            text.x = this.node_pnl.width;
            if (!DeviceData.getInstance().isNative) {
                text.y += 8;
            }
            this.arrText.push(text);
            this.next();
        }
        next() {
            if (!this.isRunning) {
                if (this.arrText.length > 0) {
                    let self = this;
                    this.show(() => {
                        self.isRunning = true;
                        let text = self.arrText.shift();
                        self.node_pnl.addChild(text);
                        let duration = (text.x + text.contextWidth) / self.speed;
                        Laya.Tween.to(text, { x: -text.contextWidth }, duration * 1000, null, new Laya.Handler(self, self.onComplete, [text]));
                    });
                }
                else {
                    this.hide();
                }
            }
        }
        defaultBulletin() {
        }
        onComplete(text) {
            text.removeSelf();
            text.destroy();
            this.isRunning = false;
            this.next();
        }
        hide() {
            let panel = this;
            if (panel.visible == true) {
                this.isRunning = true;
                Laya.Tween.to(panel, { alpha: 0 }, 1000, Laya.Ease.strongIn, new Laya.Handler(this, () => {
                    this.isRunning = false;
                    panel.visible = false;
                    this.next();
                }));
            }
            else {
                Laya.timer.once(600000, this, this.defaultBulletin);
            }
        }
        show(callback) {
            let panel = this;
            if (panel.visible == false) {
                panel.visible = true;
                panel.alpha = 0;
                this.isRunning = true;
                Laya.Tween.to(panel, { alpha: 1 }, 1000, Laya.Ease.strongOut, new Laya.Handler(this, () => {
                    this.isRunning = false;
                    callback();
                }));
            }
            else {
                callback();
            }
        }
        onDestroy() {
        }
    }

    class CashPot extends Laya.Box {
        Init(param) {
            this.visible = false;
            CashPot.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            this.nodeC = window.findNodeByName(this, "nodeC");
            window.InitialNode(this.nodeC);
            let btnArr = [this.nodeC.nodeGet.btnGet, this.nodeC.nodeGet.btnBuy];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
            EventManager.getInstance().on(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
        }
        onStoreOrderComplete(data) {
            this.nodeC.nodeGet.visible = false;
            this.getData();
            AFUtil.reportUserOrder();
            TopTipsManager.getInstance().showTopTips(WARNING.RECHARGE_SUCC);
        }
        Show(param) {
            if (!this.inited) {
                this.Init(param);
            }
            this.visible = true;
            this.root.scaleX = 0;
            this.root.scaleY = 0;
            Laya.Tween.to(this.root, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 0);
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1011);
            this.initUI();
            this.getData();
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            Laya.Tween.to(this.root, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                this.visible = false;
                PopupManager.Destory(PREFAB_LOBBY.CASH_POT);
            }), 0);
        }
        initUI() {
            this.nodeC.nodeGet.btnBuy.lblMoney.text = "R$ 40";
        }
        getData() {
            return __awaiter(this, void 0, void 0, function* () {
                let infoAck = yield AggrgService.getInstance().info(GlobalVariables.TASK_4003);
                if (infoAck) {
                    let infoMap = infoAck.getInfosMap();
                    if (infoMap) {
                        let aggInfo = infoMap.get(GlobalVariables.TASK_4003);
                        if (aggInfo) {
                            let active1 = aggInfo.getActive();
                            let betCur = aggInfo.getProcur();
                            let dayCur = aggInfo.getDaycur();
                            let bNewPly = aggInfo.getInittime() > 0;
                            let awards = aggInfo.getAwardsList();
                            let upPer = 20;
                            this.nodeC.nodeGet.visible = active1 > 0;
                            this.nodeC.imgNextDay.visible = !(active1 > 0);
                            if (active1 > 0) {
                                let awardInfo = awards[0];
                                this.nodeC.lblMoney.text = "R$ " + active1 / 100 + "";
                                upPer = awardInfo.getValue();
                                this.nodeC.nodeGet.imgPer.lblBonus.text = (upPer / 10) + "K%";
                                let buyAward = 40 + (upPer * active1) / 100;
                                this.nodeC.nodeGet.imgPer.lblAward.text = "R$ " + buyAward + "";
                            }
                            else {
                                this.nodeC.lblMoney.text = "R$ " + dayCur / 100 + "";
                            }
                        }
                    }
                }
            });
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnSure") {
            }
            else if (node.name == "btnCancel") {
                this.Close();
            }
            else if (node.name == "btnGet") {
                this.onbtnGet();
            }
            else if (node.name == "btnBuy") {
                this.onbtnBuy();
            }
        }
        onbtnGet() {
            return __awaiter(this, void 0, void 0, function* () {
                GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
                try {
                    let ack = yield AggrgService.getInstance().award(GlobalVariables.TASK_4003);
                    this.nodeC.nodeGet.visible = false;
                    this.getData();
                }
                catch (error) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        onbtnBuy() {
            this.requestBuy();
        }
        requestBuy() {
            GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
            DataStore.getInstance().queryGoodsList(1032, 1, 1, (res) => {
                GlobalData.getInstance().loadingAni.Close();
                if (null != res) {
                    let list = res.getMerchandiselistList();
                    if (list && list[0]) {
                        this.recharge(list[0]);
                    }
                }
                else {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
        recharge(data) {
            GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
            let payType = Constants_pb_2.EQS_PAY;
            DataStore.getInstance().unifiedOrder(payType, data.getId(), data.getPrice(), data.getName(), (orderNo) => {
                if (orderNo) {
                    AFUtil.reportPurchase(data.getId(), orderNo, data.getPrice());
                }
                if (payType === Constants_pb_2.EQS_PAY) {
                    GlobalData.getInstance().loadingAni.Close();
                    return;
                }
            });
        }
        onDestroy() {
            EventManager.getInstance().off(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
        }
    }

    class DownloadApp extends Laya.Box {
        Init(param) {
            this.visible = false;
            DownloadApp.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
        }
        Show(param) {
            if (!this.inited) {
                this.Init(param);
            }
            this.visible = true;
            this.root.scaleX = 0;
            this.root.scaleY = 0;
            Laya.Tween.to(this.root, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 0);
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            Laya.Tween.to(this.root, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                this.visible = false;
                PopupManager.Destory(PREFAB_LOBBY.DOWN_APP);
            }), 0);
        }
        initUI() {
        }
        onDestroy() {
        }
    }

    var LOGIN_RET$1;
    (function (LOGIN_RET) {
        LOGIN_RET[LOGIN_RET["FAIL"] = -1] = "FAIL";
        LOGIN_RET[LOGIN_RET["SUCCESS"] = 0] = "SUCCESS";
        LOGIN_RET[LOGIN_RET["FIRST_LOGIN"] = 1] = "FIRST_LOGIN";
        LOGIN_RET[LOGIN_RET["PSD_EMPTY"] = -8] = "PSD_EMPTY";
        LOGIN_RET[LOGIN_RET["INVALID"] = -7] = "INVALID";
        LOGIN_RET[LOGIN_RET["CODE_ERR"] = -6] = "CODE_ERR";
        LOGIN_RET[LOGIN_RET["NON_EXIT"] = -40002] = "NON_EXIT";
        LOGIN_RET[LOGIN_RET["PSD_ERR"] = -40004] = "PSD_ERR";
        LOGIN_RET[LOGIN_RET["DISABLE_IP"] = -40012] = "DISABLE_IP";
        LOGIN_RET[LOGIN_RET["ACCOUNT"] = -40013] = "ACCOUNT";
        LOGIN_RET[LOGIN_RET["DEVICE"] = -40015] = "DEVICE";
        LOGIN_RET[LOGIN_RET["ACCOUNT_CANCEL"] = -40022] = "ACCOUNT_CANCEL";
        LOGIN_RET[LOGIN_RET["AUTH_INVALID_SOURCE"] = -40023] = "AUTH_INVALID_SOURCE";
        LOGIN_RET[LOGIN_RET["E_AUTH_DEVICE_LIMITED"] = -40025] = "E_AUTH_DEVICE_LIMITED";
    })(LOGIN_RET$1 || (LOGIN_RET$1 = {}));
    var LOGIN_TYPE$1;
    (function (LOGIN_TYPE) {
        LOGIN_TYPE[LOGIN_TYPE["NORMAL"] = 0] = "NORMAL";
        LOGIN_TYPE[LOGIN_TYPE["APPLE"] = 1] = "APPLE";
        LOGIN_TYPE[LOGIN_TYPE["VK"] = 2] = "VK";
        LOGIN_TYPE[LOGIN_TYPE["TG"] = 3] = "TG";
        LOGIN_TYPE[LOGIN_TYPE["THIRD"] = 4] = "THIRD";
    })(LOGIN_TYPE$1 || (LOGIN_TYPE$1 = {}));
    class FindPwd extends Laya.Box {
        constructor() {
            super(...arguments);
            this.m_type = 0;
            this.codeTime = 600;
        }
        Init(param) {
            this.visible = false;
            FindPwd.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            this.inputInvite = window.findNodeByName(this, "inputInvite");
            this.inputCode = window.findNodeByName(this, "codeInput");
            this.lblTitle = window.findNodeByName(this, "lblTitle");
            this.nodeCont = window.findNodeByName(this, "nodeCont");
            window.InitialNode(this.nodeCont);
            this.countLab = this.nodeCont.codeView.countLab;
            this.countLab.on(Laya.Event.CLICK, this, this.onBtnCount);
            let btnArr = [this.nodeCont.nodeChange.btnSignIn,];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show(param) {
            if (!this.inited) {
                this.Init(param);
            }
            this.m_type = param || 0;
            this.visible = true;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            this.root.x = Laya.stage.width;
            Laya.Tween.to(this.root, { x: 0 }, 200, Laya.Ease.circOut);
            this.setSignType();
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.FIND_PWD);
        }
        setSignType() {
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnSignIn") {
                this.onBtnSignIn();
            }
        }
        onBtnSignIn() {
            let phoneInput = this.nodeCont.phoneView.phoneInput;
            let codeInput = this.nodeCont.codeView.codeInput;
            let pwdInput = this.nodeCont.pwdView.pwdInput;
            let phoneNo = phoneInput.text;
            let codeNo = Number(codeInput.text);
            let pwdStr1 = pwdInput.text;
            if (phoneInput.text.length === 0) {
                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_PHONE_NO);
                return;
            }
            if (pwdInput.text.length === 0) {
                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NULL_KEY);
                return;
            }
            if (codeInput.text.length === 0) {
                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NULL_CODE);
                return;
            }
            GlobalData.getInstance().loadingAni.Show(WARNING.LOGIN_LOGINING);
            LoginSocket.getInstance().findPwd(phoneNo, codeNo, pwdStr1, (res) => {
                let code = "";
                if (res) {
                    code = res.getNret();
                }
                if (res && res.getNret() == 0) {
                    LoginSocket.getInstance().phoneLogin(phoneNo, null, pwdStr1, (res) => {
                        let msg = "ret: " + res.getNret();
                        CC.Log("VerifyAccountAck = " + JSON.stringify(res.toObject()));
                        if (!res) {
                            GlobalData.getInstance().loadingAni.Close();
                            TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_LOGIN);
                            return;
                        }
                        switch (res.getNret()) {
                            case LOGIN_RET$1.SUCCESS:
                            case LOGIN_RET$1.FIRST_LOGIN:
                                GlobalData.getInstance().lobbyScene.exitToLogin();
                                let pid = res.getNpid();
                                DeviceData.getInstance().setAFCustomerID(pid);
                                GameStorage.saveAccount(phoneNo);
                                GameStorage.saveLastPhoneLoginTime(GlobalFunc.getNow());
                                GameStorage.savePhoneUserPid(pid);
                                GameStorage.savePhoneUserTicket(res.getStrticket());
                                GameStorage.saveLastLoginTime(GlobalFunc.getNow());
                                GameStorage.saveUserPid(pid);
                                GameStorage.saveUserTicket(res.getStrticket());
                                GlobalData.getInstance().myPid = pid;
                                GlobalData.getInstance().myTicket = res.getStrticket();
                                GlobalData.getInstance().baseMeta = { "ticket": GlobalData.getInstance().myPid + "_" + GlobalData.getInstance().myTicket };
                                GameStorage.saveIsFirstLogin(false);
                                GameStorage.setLastLoginType(LOGIN_TYPE$1.NORMAL);
                                GlobalData.getInstance().loginScene.showLobbyScene();
                                break;
                            case LOGIN_RET$1.FAIL:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_LOGIN);
                                break;
                            case LOGIN_RET$1.PSD_EMPTY:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NULL_KEY);
                                break;
                            case LOGIN_RET$1.PSD_ERR:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_KEY);
                                break;
                            case LOGIN_RET$1.CODE_ERR:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_CODE);
                                break;
                            case LOGIN_RET$1.INVALID:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_OUT_CODE);
                                break;
                            case LOGIN_RET$1.NON_EXIT:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NO_USER);
                                break;
                            case LOGIN_RET$1.DISABLE_IP:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_IP_BAND);
                                break;
                            case LOGIN_RET$1.DEVICE:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_DEVICE_BAND);
                                break;
                            case LOGIN_RET$1.ACCOUNT:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_ACCOUNT_BAND);
                                break;
                            case LOGIN_RET$1.ACCOUNT_CANCEL:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_ACCOUNT_DESTROY);
                                break;
                            case LOGIN_RET$1.AUTH_INVALID_SOURCE:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_CHANNEL);
                                break;
                            case LOGIN_RET$1.E_AUTH_DEVICE_LIMITED:
                                GlobalData.getInstance().loadingAni.Close();
                                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_AUTH_DEVICE_LIMITED);
                                break;
                        }
                    });
                }
                else {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL + ": " + code);
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        onBtnCount() {
            return __awaiter(this, void 0, void 0, function* () {
                GameAudio.getInstance().playClick();
                let phoneInput = this.nodeCont.phoneView.phoneInput;
                let pwdInput = this.nodeCont.pwdView.pwdInput;
                if (this.countLab.disabled) {
                    return;
                }
                this.countLab.disabled = true;
                if (phoneInput.text.length === 0) {
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_PHONE_NO);
                    this.countLab.disabled = false;
                    return;
                }
                if (pwdInput.text.length === 0) {
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NULL_KEY);
                    this.countLab.disabled = false;
                    return;
                }
                let bExist = yield LoginSocket.getInstance().checkOldPhone(phoneInput.text);
                if (!bExist) {
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NO_USER);
                    this.countLab.disabled = false;
                    return;
                }
                this.countLab.text = this.codeTime.toString();
                Laya.timer.loop(1000, this, this.setTimer);
                LoginSocket.getInstance().GetCode('findpwd', phoneInput.text, (res) => {
                    if (res) {
                        if (res.getNret() === 0) {
                            this.countLab.disabled = true;
                        }
                        else if (res.getNret() === -4) {
                            TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_TOO_FAST);
                            this.resetCodeBtn();
                        }
                        else {
                            TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_GET_CODE);
                            this.resetCodeBtn();
                        }
                    }
                    else {
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_GET_CODE);
                        this.resetCodeBtn();
                    }
                });
            });
        }
        setTimer() {
            this.codeTime--;
            this.countLab.text = this.codeTime.toString();
            if (this.codeTime === 0) {
                this.resetCodeBtn();
            }
        }
        resetCodeBtn() {
            this.countLab.disabled = false;
            this.countLab.text = WARNING.GET_CODE;
            Laya.timer.clear(this, this.setTimer);
            this.codeTime = 600;
        }
        onDestroy() {
        }
    }

    class GameBrief extends Laya.Box {
        Init(param) {
            this.visible = false;
            GameBrief.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            this.nodeView = window.findNodeByName(this.root, "navView");
            window.InitialNode(this.nodeView);
            this.nodeView.listTheme.vScrollBarSkin = "";
            this.nodeView.listTheme.renderHandler = new Laya.Handler(this, this.updateItem);
            this.btnSign = window.findNodeByName(this.root, "btnSign");
            this.btnPlay = window.findNodeByName(this.root, "btnPlay");
            let btnArr = [this.btnPlay, this.btnSign, this.nodeView.btnLike];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show(param) {
            if (!this.inited) {
                this.Init(param);
            }
            this.m_data = param;
            this.alpha = 0;
            this.visible = true;
            Laya.Tween.to(this, { alpha: 1 }, 200, Laya.Ease.backOut, null, 0);
            this.refreshLoginState();
            this.setGameInfo();
        }
        refreshLoginState() {
            if (GlobalData.getInstance().myPid > 1000) {
                this.nodeView.btnPlay.visible = true;
                this.nodeView.btnSign.visible = false;
            }
            else {
                this.nodeView.btnPlay.visible = false;
                this.nodeView.btnSign.visible = true;
            }
        }
        setGameInfo() {
            if (this.m_data) {
                let name = this.m_data.getName();
                let gameid = this.m_data.getGameid();
                if (!name || name == "") {
                    name = gameid + "";
                }
                let sourceName = window.getPrvNameByGameID(gameid);
                if (this.m_data.getSource() == "saba") {
                    sourceName = "saba";
                }
                this.nodeView.imgIcon.skin = this.m_data.getIcon();
                this.nodeView.lblGame.text = name;
                this.nodeView.lblSource.text = sourceName;
                this.nodeView.lblRebate.text = "RTP: " + this.m_data.getRate() / 100 + "%";
                this.nodeView.lblRate.text = ThirdGameService.getInstance().m_taxRate + "%";
                let tag = this.m_data.getTag();
                let themeArr = [];
                for (let key in GAME_THEME) {
                    let index = parseInt(key);
                    if (tag & index) {
                        themeArr[themeArr.length] = index;
                    }
                }
                if (GameStorage.isLike(this.m_data.getGameid())) {
                    this.nodeView.btnLike.skin = "2d/ui/common/img_like1.png";
                }
                this.nodeView.listTheme.height = Math.ceil(themeArr.length / 2) * 105;
                this.nodeView.listTheme.dataSource = themeArr;
            }
        }
        updateItem(cell, index) {
            let itemData = cell.dataSource;
            window.InitialNode(cell);
            cell.lblName.text = GAME_THEME[itemData];
            cell.on(Laya.Event.CLICK, this, this.onItemSelect, []);
        }
        onItemSelect() {
        }
        startGame(gameInfo, isNeedValid = true, hideBack = false, attach = null) {
            return __awaiter(this, void 0, void 0, function* () {
                if (gameInfo.getSource() == "zyyx") {
                    return;
                }
                let userInfo = DataPlayer.getInstance().userInfo;
                if (isNeedValid) {
                    if (userInfo.gold < gameInfo.getMin()) {
                        let exitHandler = Laya.Handler.create(this, (yes) => __awaiter(this, void 0, void 0, function* () {
                            if (yes) {
                                PopupManager.Show(PREFAB_LOBBY.SHOP, SIDE_ITEM.GOLD, Laya.stage);
                            }
                        }));
                        PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [WARNING.NOT_ENOUGH_2, MSG_TYPE.YES_NO, exitHandler], Laya.stage);
                        return;
                    }
                }
                try {
                    window.curGameID = gameInfo.getGameid();
                    let document = Laya.Browser.window.document;
                    let imgLike = document.getElementById("tag2");
                    if (window.isLikeGame()) {
                        imgLike.src = "./image/img_tag2_1.png";
                    }
                    else {
                        imgLike.src = "./image/img_tag2.png";
                    }
                    GlobalData.getInstance().loadingAni.Show("");
                    let userInfo = DataPlayer.getInstance().userInfo;
                    let userName = window.formatString(window.GetRealName(userInfo.nickname), 9);
                    let enterGameAck = yield ThirdGameService.getInstance().enterGame(gameInfo.getGameid(), userName, gameInfo.getSource(), Utils.getLangStr());
                    if (enterGameAck.getCret() != 0) {
                        let msg = WARNING.REQUEST_FAIL;
                        if (enterGameAck.getCret() == -1) {
                            if (enterGameAck.getCode() == 0 || enterGameAck.getCode() == 200) {
                                msg = WARNING.SERVER_BUSY;
                            }
                            else if (enterGameAck.getCode() != 200) {
                                msg = WARNING.SERVER_MAINTAIN;
                            }
                        }
                        let exitHandler = Laya.Handler.create(this, (yes) => __awaiter(this, void 0, void 0, function* () { }));
                        PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [msg, MSG_TYPE.NORMAL, exitHandler], Laya.stage);
                        return;
                    }
                    let obj = {
                        GameID: gameInfo.getGameid(),
                        GameName: gameInfo.getName(),
                        Provider: gameInfo.getSource(),
                    };
                    let msg = JSON.stringify(obj);
                    GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1006, msg);
                    let url = enterGameAck.getEntry();
                    if (attach) {
                        url = url + (url.indexOf("?") > -1 ? "&" : "?") + "attach=" + attach;
                    }
                    if (gameInfo.getGameid() == 5001) {
                        DeviceData.getInstance().jumpBrowser(url);
                        return;
                    }
                    let conch = Laya.Browser.window['conch'];
                    if (conch) {
                        let params = {
                            "orientation": gameInfo.getMode(),
                            "h5Url": url,
                            "hideBack": hideBack,
                        };
                        DeviceData.getInstance().tsBridge.callWithBack((ret) => {
                            ThirdGameService.getInstance().refreshCy();
                        }, DeviceData.getInstance().isAndroid ? 'doWebView' : 'doWebView:', JSON.stringify(params));
                    }
                    else {
                        let verGameIdList = [32, 152, 42, 1, 79, 152];
                        let deg = verGameIdList.indexOf(gameInfo.getGameid()) > -1 ? 90 : 0;
                        window.openH5Url(url, "#000000", deg, () => {
                            ThirdGameService.getInstance().refreshCy();
                        });
                    }
                }
                catch (ex) {
                    CC.Loge("enterGame:: error ", ex);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            Laya.Tween.to(this, { alpha: 0 }, 200, null, Laya.Handler.create(this, () => {
                this.visible = false;
                PopupManager.Destory(PREFAB_LOBBY.GAME_BRIEF);
            }), 0);
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnSign") {
                this.Close();
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
            }
            else if (node.name == "btnPlay") {
                this.onBtnPlay();
            }
            else if (node.name == "btnLike") {
                this.onBtnLike();
            }
        }
        onBtnPlay() {
            this.Close();
            GameStorage.setGameRecent(this.m_data.getGameid());
            this.startGame(this.m_data);
        }
        onBtnLike() {
            if (GlobalData.getInstance().myPid > 1000) {
                if (GameStorage.isLike(this.m_data.getGameid())) {
                    this.nodeView.btnLike.skin = "2d/ui/common/img_like.png";
                    GameStorage.removeGameLike(this.m_data.getGameid());
                }
                else {
                    this.nodeView.btnLike.skin = "2d/ui/common/img_like1.png";
                    GameStorage.setGameLike(this.m_data.getGameid());
                }
                let layer = PopupManager.isLayerExist(PREFAB_LOBBY.PLAYER_INFO);
                if (layer) {
                    layer.refreshLikeData();
                }
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
            }
        }
        onDestroy() {
        }
    }

    var LOGIN_RET$2;
    (function (LOGIN_RET) {
        LOGIN_RET[LOGIN_RET["FAIL"] = -1] = "FAIL";
        LOGIN_RET[LOGIN_RET["SUCCESS"] = 0] = "SUCCESS";
        LOGIN_RET[LOGIN_RET["FIRST_LOGIN"] = 1] = "FIRST_LOGIN";
        LOGIN_RET[LOGIN_RET["PSD_EMPTY"] = -8] = "PSD_EMPTY";
        LOGIN_RET[LOGIN_RET["INVALID"] = -7] = "INVALID";
        LOGIN_RET[LOGIN_RET["CODE_ERR"] = -6] = "CODE_ERR";
        LOGIN_RET[LOGIN_RET["NON_EXIT"] = -40002] = "NON_EXIT";
        LOGIN_RET[LOGIN_RET["PSD_ERR"] = -40004] = "PSD_ERR";
        LOGIN_RET[LOGIN_RET["DISABLE_IP"] = -40012] = "DISABLE_IP";
        LOGIN_RET[LOGIN_RET["ACCOUNT"] = -40013] = "ACCOUNT";
        LOGIN_RET[LOGIN_RET["DEVICE"] = -40015] = "DEVICE";
        LOGIN_RET[LOGIN_RET["ACCOUNT_CANCEL"] = -40022] = "ACCOUNT_CANCEL";
        LOGIN_RET[LOGIN_RET["AUTH_INVALID_SOURCE"] = -40023] = "AUTH_INVALID_SOURCE";
        LOGIN_RET[LOGIN_RET["E_AUTH_DEVICE_LIMITED"] = -40025] = "E_AUTH_DEVICE_LIMITED";
    })(LOGIN_RET$2 || (LOGIN_RET$2 = {}));
    var LOGIN_TYPE$2;
    (function (LOGIN_TYPE) {
        LOGIN_TYPE[LOGIN_TYPE["NORMAL"] = 0] = "NORMAL";
        LOGIN_TYPE[LOGIN_TYPE["APPLE"] = 1] = "APPLE";
        LOGIN_TYPE[LOGIN_TYPE["VK"] = 2] = "VK";
        LOGIN_TYPE[LOGIN_TYPE["TG"] = 3] = "TG";
        LOGIN_TYPE[LOGIN_TYPE["THIRD"] = 4] = "THIRD";
    })(LOGIN_TYPE$2 || (LOGIN_TYPE$2 = {}));
    class HallSignIn extends Laya.Box {
        constructor() {
            super(...arguments);
            this.m_type = 0;
            this.codeTime = 600;
        }
        Init(param) {
            this.visible = false;
            HallSignIn.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            this.inputInvite = window.findNodeByName(this, "inputInvite");
            this.inputCode = window.findNodeByName(this, "codeInput");
            this.lblTitle = window.findNodeByName(this, "lblTitle");
            this.nodeCont = window.findNodeByName(this, "nodeCont");
            window.InitialNode(this.nodeCont);
            this.countLab = this.nodeCont.codeView.countLab;
            this.countLab.on(Laya.Event.CLICK, this, this.onBtnCount);
            this.nodeCont.nodePrtcl.node1.lblDes.on(Laya.Event.CLICK, this, this.onBtnCheck1);
            this.nodeCont.nodePrtcl.node2.lblDes.on(Laya.Event.CLICK, this, this.onBtnCheck2);
            this.nodeCont.nodeChange.nodeSignIn.lblSign.on(Laya.Event.CLICK, this, this.onChange1);
            this.nodeCont.nodeChange.nodeSignUp.lblSign.on(Laya.Event.CLICK, this, this.onChange2);
            let btnArr = [this.nodeCont.nodeChange.btnSignIn, this.nodeCont.btnVisitor,
                this.nodeCont.nodePrtcl.nodeInvite.btnArrow, this.nodeCont.pwdView.lblPwd,
                this.nodeCont.pwdView.btnHide1, this.nodeCont.pwdView1.btnHide2,];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show(param) {
            if (!this.inited) {
                this.Init(param);
            }
            this.m_type = param || 0;
            this.visible = true;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            this.root.x = Laya.stage.width;
            Laya.Tween.to(this.root, { x: 0 }, 200, Laya.Ease.circOut);
            this.setSignType();
            this.copyInviteCode();
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.HALL_SIGN);
        }
        setSignType() {
            if (this.m_type == 0) {
                this.nodeCont.nodePrtcl.visible = false;
                this.nodeCont.codeView.visible = false;
                this.nodeCont.pwdView.lblPwd.visible = true;
                this.lblTitle.text = WARNING.SIGN_IN;
                this.nodeCont.nodeChange.btnSignIn.lblTitle.text = WARNING.SIGN_IN;
                this.nodeCont.nodeChange.nodeSignUp.visible = true;
                this.nodeCont.nodeChange.nodeSignIn.visible = false;
                this.nodeCont.pwdView1.visible = false;
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1004);
            }
            else if (this.m_type == 1) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1002);
                this.nodeCont.nodePrtcl.visible = true;
                this.nodeCont.codeView.visible = true;
                this.nodeCont.pwdView.lblPwd.visible = false;
                this.lblTitle.text = WARNING.SING_UP;
                this.nodeCont.nodeChange.btnSignIn.lblTitle.text = WARNING.SING_UP;
                this.nodeCont.nodeChange.nodeSignUp.visible = false;
                this.nodeCont.nodeChange.nodeSignIn.visible = true;
                this.nodeCont.pwdView1.visible = true;
            }
            if (DeviceData.getInstance().isNative) {
                this.nodeCont.btnVisitor.visible = true;
            }
            else {
                this.nodeCont.btnVisitor.visible = false;
            }
        }
        copyInviteCode() {
            DeviceData.getInstance().getClipboard((clipData) => __awaiter(this, void 0, void 0, function* () {
                if (clipData) {
                    DeviceData.getInstance().JLog("getClipboard =" + clipData);
                    try {
                        let content = JSON.parse(clipData);
                        let pid = content["pid"];
                        if (pid == GlobalData.getInstance().myPid) {
                            return;
                        }
                        if (pid) {
                            this.inputInvite.text = pid;
                        }
                    }
                    catch (error) {
                        CC.Loge("getClipboard error: ", error);
                        DeviceData.getInstance().setClipboard("");
                    }
                }
            }));
        }
        reqInvite() {
            return __awaiter(this, void 0, void 0, function* () {
                if (this.inputInvite.text.length === 0) {
                    return;
                }
                GlobalVariables.IVITE_CODE = Number(this.inputInvite.text);
            });
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnSignIn") {
                this.onBtnSignIn();
            }
            else if (node.name == "btnVisitor") {
                this.onBtnVisitor();
            }
            else if (node.name == "btnArrow") {
                this.onbtnArrow();
            }
            else if (node.name == "lblPwd") {
                this.onForgetPwd();
            }
            else if (node.name == "btnHide1") {
                this.onbtnHide1();
            }
            else if (node.name == "btnHide2") {
                this.onbtnHide2();
            }
        }
        onbtnHide1() {
            if (this.nodeCont.pwdView.btnHide1.selected) {
                this.nodeCont.pwdView.pwdInput.type = "password";
            }
            else {
                this.nodeCont.pwdView.pwdInput.type = "text";
            }
            this.nodeCont.pwdView.pwdInput.focus = (true);
        }
        onbtnHide2() {
            if (this.nodeCont.pwdView1.btnHide2.selected) {
                this.nodeCont.pwdView1.pwdInput.type = "password";
            }
            else {
                this.nodeCont.pwdView1.pwdInput.type = "text";
            }
            this.nodeCont.pwdView1.pwdInput.focus = (true);
        }
        onBtnSignIn() {
            let phoneInput = this.nodeCont.phoneView.phoneInput;
            let codeInput = this.nodeCont.codeView.codeInput;
            let pwdInput = this.nodeCont.pwdView.pwdInput;
            let pwdInput1 = this.nodeCont.pwdView1.pwdInput;
            let phoneNo = phoneInput.text;
            let codeNo = Number(codeInput.text);
            let pwdStr1 = pwdInput.text, pwdStr2 = pwdInput.text;
            let pwdSure = pwdInput1.text;
            if (phoneInput.text.length === 0) {
                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_PHONE_NO);
                return;
            }
            if (pwdInput.text.length === 0) {
                TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NULL_KEY);
                return;
            }
            if (this.m_type == 1) {
                if (pwdStr1 != pwdSure) {
                    TopTipsManager.getInstance().showTopTips(WARNING.UPDATE_DIF_KEY);
                    return;
                }
                if (codeInput.text.length === 0) {
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NULL_CODE);
                    return;
                }
                pwdStr1 = null;
            }
            else {
                codeNo = null;
            }
            GlobalData.getInstance().loadingAni.Show(WARNING.LOGIN_LOGINING);
            LoginSocket.getInstance().phoneLogin(phoneInput.text, codeNo, pwdStr1, (res) => {
                let msg = "ret: " + res.getNret();
                CC.Log("VerifyAccountAck = " + JSON.stringify(res.toObject()));
                if (!res) {
                    GlobalData.getInstance().loadingAni.Close();
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_LOGIN);
                    return;
                }
                switch (res.getNret()) {
                    case LOGIN_RET$2.SUCCESS:
                    case LOGIN_RET$2.FIRST_LOGIN:
                        this.reqInvite();
                        if (res.getNret() == LOGIN_RET$2.FIRST_LOGIN) {
                            GlobalVariables.NEW_PWD = pwdStr2;
                        }
                        GlobalData.getInstance().lobbyScene.exitToLogin();
                        let pid = res.getNpid();
                        DeviceData.getInstance().setAFCustomerID(pid);
                        GameStorage.saveAccount(phoneNo);
                        GameStorage.saveLastPhoneLoginTime(GlobalFunc.getNow());
                        GameStorage.savePhoneUserPid(pid);
                        GameStorage.savePhoneUserTicket(res.getStrticket());
                        GameStorage.saveLastLoginTime(GlobalFunc.getNow());
                        GameStorage.saveUserPid(pid);
                        GameStorage.saveUserTicket(res.getStrticket());
                        GlobalData.getInstance().myPid = pid;
                        GlobalData.getInstance().myTicket = res.getStrticket();
                        GlobalData.getInstance().baseMeta = { "ticket": GlobalData.getInstance().myPid + "_" + GlobalData.getInstance().myTicket };
                        GameStorage.saveIsFirstLogin(false);
                        GameStorage.setLastLoginType(LOGIN_TYPE$2.NORMAL);
                        GlobalData.getInstance().loginScene.showLobbyScene();
                        break;
                    case LOGIN_RET$2.FAIL:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_LOGIN);
                        break;
                    case LOGIN_RET$2.PSD_EMPTY:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NULL_KEY);
                        break;
                    case LOGIN_RET$2.PSD_ERR:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_KEY);
                        break;
                    case LOGIN_RET$2.CODE_ERR:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_CODE);
                        break;
                    case LOGIN_RET$2.INVALID:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_OUT_CODE);
                        break;
                    case LOGIN_RET$2.NON_EXIT:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NO_USER);
                        break;
                    case LOGIN_RET$2.DISABLE_IP:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_IP_BAND);
                        break;
                    case LOGIN_RET$2.DEVICE:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_DEVICE_BAND);
                        break;
                    case LOGIN_RET$2.ACCOUNT:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_ACCOUNT_BAND);
                        break;
                    case LOGIN_RET$2.ACCOUNT_CANCEL:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_ACCOUNT_DESTROY);
                        break;
                    case LOGIN_RET$2.AUTH_INVALID_SOURCE:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_CHANNEL);
                        break;
                    case LOGIN_RET$2.E_AUTH_DEVICE_LIMITED:
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_AUTH_DEVICE_LIMITED);
                        break;
                }
            });
        }
        onBtnVisitor() {
            let loginService = GlobalData.getInstance().loginScene.loginService;
            GameAudio.getInstance().playClick();
            if (this.m_type == 1 && !this.nodeCont.nodePrtcl.node1.btnCheck.selected) {
                TopTipsManager.getInstance().showTopTips(WARNING.AGREE_PRTCL);
                return;
            }
            GlobalData.getInstance().loadingAni.Show("");
            loginService.visitorLogin((ack) => {
                if (ack) {
                    this.reqInvite();
                    GlobalData.getInstance().lobbyScene.exitToLogin();
                    let pid = ack.getNpid();
                    DeviceData.getInstance().setAFCustomerID(pid);
                    GameStorage.saveLastLoginTime(GlobalFunc.getNow());
                    GameStorage.saveUserPid(pid);
                    GameStorage.saveUserTicket(ack.getStrticket());
                    GlobalData.getInstance().myPid = pid;
                    GlobalData.getInstance().myTicket = ack.getStrticket();
                    GlobalData.getInstance().baseMeta = { "ticket": GlobalData.getInstance().myPid + "_" + GlobalData.getInstance().myTicket };
                    GameStorage.saveIsFirstLogin(false);
                    GlobalData.getInstance().loginScene.showLobbyScene();
                    GameStorage.setLastLoginType(LOGIN_TYPE$2.NORMAL);
                }
                else {
                    GlobalData.getInstance().loadingAni.Close();
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_ERR_ASK_SERVICE);
                }
            });
        }
        onBtnCount() {
            return __awaiter(this, void 0, void 0, function* () {
                GameAudio.getInstance().playClick();
                let phoneInput = this.nodeCont.phoneView.phoneInput;
                let pwdInput = this.nodeCont.pwdView.pwdInput;
                let pwdInput1 = this.nodeCont.pwdView1.pwdInput;
                if (this.countLab.disabled) {
                    return;
                }
                this.countLab.disabled = true;
                if (phoneInput.text.length === 0) {
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_BAD_PHONE_NO);
                    this.countLab.disabled = false;
                    return;
                }
                if (pwdInput.text.length === 0) {
                    TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NULL_KEY);
                    this.countLab.disabled = false;
                    return;
                }
                if (this.m_type == 1) {
                    if (!this.nodeCont.nodePrtcl.node1.btnCheck.selected) {
                        TopTipsManager.getInstance().showTopTips(WARNING.AGREE_PRTCL);
                        this.countLab.disabled = false;
                        return;
                    }
                    if (pwdInput.text != pwdInput1.text) {
                        TopTipsManager.getInstance().showTopTips(WARNING.UPDATE_DIF_KEY);
                        this.countLab.disabled = false;
                        return;
                    }
                }
                let canReg = yield LoginSocket.getInstance().canRegistPhone(phoneInput.text);
                if (!canReg) {
                    let bExist = yield LoginSocket.getInstance().checkOldPhone(phoneInput.text);
                    if (!bExist) {
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_NEW_PHONE_IN_OLD);
                        this.countLab.disabled = false;
                        return;
                    }
                }
                this.countLab.text = this.codeTime.toString();
                Laya.timer.loop(1000, this, this.setTimer);
                LoginSocket.getInstance().GetCode('phone', phoneInput.text, (res) => {
                    if (res) {
                        if (res.getNret() === 0) {
                            this.countLab.disabled = true;
                        }
                        else if (res.getNret() === -4) {
                            TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_TOO_FAST);
                            this.resetCodeBtn();
                        }
                        else {
                            TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_GET_CODE);
                            this.resetCodeBtn();
                        }
                    }
                    else {
                        TopTipsManager.getInstance().showTopTips(WARNING.LOGIN_FAIL_GET_CODE);
                        this.resetCodeBtn();
                    }
                });
            });
        }
        setTimer() {
            this.codeTime--;
            this.countLab.text = this.codeTime.toString();
            if (this.codeTime === 0) {
                this.resetCodeBtn();
            }
        }
        resetCodeBtn() {
            this.countLab.disabled = false;
            this.countLab.text = WARNING.GET_CODE;
            Laya.timer.clear(this, this.setTimer);
            this.codeTime = 600;
        }
        onbtnArrow() {
            if (this.nodeCont.nodePrtcl.nodeInvite.btnArrow.selected) {
                this.nodeCont.nodePrtcl.nodeInvite.btnArrow.skin = "2d/ui/common/icon_xiangshang.png";
                this.nodeCont.nodePrtcl.nodeInvite.imgInvite.visible = true;
            }
            else {
                this.nodeCont.nodePrtcl.nodeInvite.btnArrow.skin = "2d/ui/common/icon_xiangxia.png";
                this.nodeCont.nodePrtcl.nodeInvite.imgInvite.visible = false;
            }
        }
        onBtnCheck1() {
            let btnCheck = this.nodeCont.nodePrtcl.node1.btnCheck;
            btnCheck.selected = !btnCheck.selected;
        }
        onBtnCheck2() {
            let btnCheck = this.nodeCont.nodePrtcl.node2.btnCheck;
            btnCheck.selected = !btnCheck.selected;
        }
        onChange1() {
            this.m_type = 0;
            this.setSignType();
        }
        onChange2() {
            this.m_type = 1;
            this.setSignType();
        }
        onForgetPwd() {
            this.Close();
            PopupManager.Show(PREFAB_LOBBY.FIND_PWD, null);
        }
        onDestroy() {
        }
    }

    class JackPotMain extends Laya.Box {
        constructor() {
            super(...arguments);
            this.m_score0 = 0;
            this.m_dtScore = 0;
            this.m_timeAll0 = 0;
            this.m_totalSec0 = 0;
        }
        Init() {
            this.visible = false;
            JackPotMain.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            let panel = window.findNodeByName(this, "panel");
            panel.vScrollBarSkin = "";
            this.m_listRec = window.findNodeByName(this.root, "listRec");
            this.m_listRec.vScrollBarSkin = "";
            this.m_listRec.renderHandler = new Laya.Handler(this, this.updateUserItem);
            this.m_listAward = window.findNodeByName(this.root, "listAward");
            this.m_listAward.vScrollBarSkin = "";
            this.m_listAward.renderHandler = new Laya.Handler(this, this.updateAwardItem);
            this.m_listRec.scrollBar.on(Laya.Event.START, this, this.onStartScroll);
            this.lblScore = window.findNodeByName(this.root, "lblScore0");
            this.lblCT = window.findNodeByName(this.root, "lblCT");
            this.lblDur = window.findNodeByName(this.root, "lblDur");
            this.nodeMy = window.findNodeByName(this.root, "nodeMy");
            window.InitialNode(this.nodeMy);
            let btnArr = [];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show() {
            if (!this.inited) {
                this.Init();
            }
            this.visible = true;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            this.root.x = Laya.stage.width;
            Laya.Tween.to(this.root, { x: 0 }, 200, Laya.Ease.circOut);
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1012);
            this.getJackData();
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.HALL_SIGN);
        }
        getJackData() {
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
            JackpotService.getInstance().getActivs(2003, null, (res) => {
                GlobalData.getInstance().loadingAni.Close();
                if (res) {
                    this.m_data = JackpotService.getInstance().m_jackData;
                    this.m_myActiv = JackpotService.getInstance().m_myActivs;
                    this.initRankList();
                    this.initAwardList();
                    this.reset0();
                    this.initMyData();
                }
            });
        }
        reset0() {
            let sTime = this.m_data.getStime();
            let eTime = this.m_data.getEtime();
            let curT = window.getNow();
            if (curT < sTime) {
                let myActiv = JackpotService.getInstance().m_myActivs;
                sTime = myActiv.getStime();
                eTime = myActiv.getEtime();
            }
            let scoreMin = this.m_data.getProcur();
            let scoreMax = this.m_data.getPromax();
            this.m_score0 = this.m_data.getProcur();
            this.m_timeAll0 = 0;
            let totalT = eTime - sTime;
            this.m_totalSec0 = eTime - curT;
            let dt = (scoreMax - scoreMin) / totalT;
            this.m_dtScore = dt;
            this.m_score0 = Math.floor((curT - sTime) * dt + scoreMin);
            this.lblCT.text = this.formatTime(this.m_totalSec0);
            let tStr1 = moment(new Date(sTime * 1000)).format("MM/DD HH:mm");
            let tStr2 = moment(new Date(eTime * 1000)).format("MM/DD HH:mm");
            this.lblDur.text = tStr1 + "  ~  " + tStr2;
            if (curT >= sTime && curT < eTime) {
                Laya.timer.loop(1000, this, this.scheduleTimer);
            }
            else {
                this.m_score0 = scoreMax;
            }
            let awardList = this.m_data.getAwardsList();
            if (awardList) {
                for (let i = 0; i < awardList.length; i++) {
                    let itemNode = this.m_listAward.getCell(i);
                    if (itemNode) {
                        let percent = awardList[i].getValue() / 100;
                        let awardNum = Math.floor(this.m_score0 * percent) / 100;
                        let lblCount = itemNode.getChildByName("lblCount");
                        lblCount.text = window.numToSplitStr(awardNum);
                    }
                }
            }
            this.lblScore.text = "R$ " + window.numToSplitStr((this.m_score0 / 100).toFixed(2));
        }
        scheduleTimer() {
            this.m_timeAll0++;
            let dtScore = this.m_dtScore;
            let tmp = Math.floor(dtScore / 10);
            this.addScoreEffect(10, this.m_score0, 50, tmp);
            this.m_score0 += Math.floor(dtScore);
            this.lblScore.scaleX = 0.8;
            this.lblScore.scaleY = 0.8;
            Laya.Tween.to(this.lblScore, { scaleX: 1.0, scaleY: 1.0 }, 300, Laya.Ease.circOut);
            Laya.Tween.to(this.lblScore, { scaleX: 0.8, scaleY: 0.8 }, 200, Laya.Ease.circIn, null, 300);
            this.lblCT.text = this.formatTime(this.m_totalSec0 - this.m_timeAll0);
            if (this.m_timeAll0 >= this.m_totalSec0) {
                this.lblScore.text = "R$ " + window.numToSplitStr((this.m_data.getPromax() / 100).toFixed(2));
                Laya.timer.clearAll(this);
            }
        }
        addScoreEffect(count, score, delay, increase) {
            count--;
            this.lblScore.text = "R$ " + window.numToSplitStr((score / 100).toFixed(2));
            for (let i = 0; i < 5; i++) {
                let itemNode = this.m_listAward.getCell(i);
                if (itemNode) {
                    let percent = itemNode.dataSource.getValue() / 100;
                    let awardNum = Math.floor(score * percent) / 100;
                    itemNode.lblCount.text = window.numToSplitStr(awardNum);
                }
            }
            if (count >= 0) {
                let gameScore = score + increase;
                Laya.timer.once(delay, this, this.addScoreEffect, [count, gameScore, delay, increase]);
            }
        }
        formatTime(dur) {
            if (dur < 0) {
                return "00:00:00";
            }
            let oneD = 24 * 3600;
            let day = Math.floor(dur / oneD);
            let hours = Math.floor((dur) / 3600);
            let minutes = Math.floor((dur % 3600) / 60);
            let seconds = dur % 60;
            let h = hours < 10 ? "0" + hours : hours;
            let m = minutes < 10 ? "0" + minutes : minutes;
            let s = seconds < 10 ? "0" + seconds : seconds;
            let resStr = h + ":" + m + ":" + s;
            return resStr;
        }
        initRankList() {
            return __awaiter(this, void 0, void 0, function* () {
                if (JackpotService.getInstance().m_userArr) {
                    let userArr = JackpotService.getInstance().m_userArr.slice(0);
                    this.usersInfo = new Array();
                    let findList = [];
                    for (let i = 0; i < userArr.length; i++) {
                        let pid = userArr[i].getPid();
                        if (pid == GlobalData.getInstance().myPid) {
                            this.m_myActiv = userArr[i];
                            this.m_myActiv["rank"] = i + 1;
                        }
                        if (!this.usersInfo[pid]) {
                            this.usersInfo[pid] = new BasicInfo();
                            this.usersInfo[pid].nPid = pid;
                            this.usersInfo[pid].nickname = "User" + pid;
                            findList.push(pid);
                        }
                        else {
                            continue;
                        }
                    }
                    if (findList.length > 0) {
                        yield DataPlayer.getInstance().getUsersInfo(findList, this.usersInfo);
                    }
                    this.m_listRec.dataSource = userArr;
                }
            });
        }
        initAwardList() {
            if (this.m_data) {
                this.m_listAward.dataSource = this.m_data.getAwardsList();
            }
        }
        initMyData() {
            window.circleSprite(this.nodeMy.imgHead);
            let userInfo = DataPlayer.getInstance().userInfo;
            if (userInfo.strAvatar) {
                Laya.loader.load(userInfo.strAvatar, Laya.Handler.create(this, function (tex) {
                    if (this && this.visible) {
                        this.nodeMy.imgHead.skin = userInfo.strAvatar;
                    }
                }));
            }
            this.nodeMy.lblName.text = window.GetRealName(userInfo.nickname);
            if (this.m_myActiv) {
                let rank = this.m_myActiv["rank"] || "100+";
                this.nodeMy.lblIndex.text = rank;
                this.nodeMy.lblCount.text = window.numToSplitStr(this.m_myActiv.getProcur() / 100);
            }
            else {
                this.nodeMy.lblIndex.text = "100+";
                this.nodeMy.lblCount.text = "-";
            }
        }
        updateUserItem(p_cell, p_index) {
            let l_data = p_cell.dataSource;
            window.InitialNode(p_cell);
            if (p_index % 2) {
                p_cell.bgColor = "#171D2D";
            }
            else {
                p_cell.bgColor = "#0A1020";
            }
            if (l_data) {
                if (!p_cell.imgHead.mask) {
                    window.circleSprite(p_cell.imgHead);
                }
                let score = l_data.getProcur() / 100;
                p_cell.lblIndex.text = p_index + 1;
                if (p_index >= 0 && p_index < 3) {
                    p_cell.lblIndex.visible = false;
                    p_cell.imgIndex.visible = true;
                    p_cell.imgIndex.skin = "2d/ui/BR_huodong/jackpot/icon_di" + (p_index + 1) + ".png";
                }
                else {
                    p_cell.lblIndex.visible = true;
                    p_cell.imgIndex.visible = false;
                }
                p_cell.lblCount.text = window.numToSplitStr(score);
                let pid = l_data.getPid();
                let userInfo = this.usersInfo[pid];
                if (userInfo) {
                    p_cell.lblName.text = window.GetRealName(userInfo.nickname);
                    let rand_i = window.randomArea(1, 13);
                    let path = "2d/icon/head/touxiang0" + rand_i + "%403x.png";
                    if (userInfo.strAvatar) {
                        path = userInfo.strAvatar;
                        let imgName = path.split('/').pop();
                        let newPath = "2d/icon/head/" + imgName;
                        let tex = Laya.loader.getRes(newPath);
                        if (tex && tex instanceof Laya.Texture) {
                            p_cell.imgHead.skin = newPath;
                        }
                        else {
                            Laya.loader.load(path, Laya.Handler.create(this, function (tex) {
                                if (this && this.visible) {
                                    p_cell.imgHead.skin = path;
                                }
                            }));
                        }
                    }
                    else {
                        p_cell.imgHead.skin = path;
                    }
                }
            }
        }
        updateAwardItem(p_cell, p_index) {
            let l_data = p_cell.dataSource;
            window.InitialNode(p_cell);
            if (p_index % 2) {
                p_cell.bgColor = "#171D2D";
            }
            else {
                p_cell.bgColor = "#0A1020";
            }
            if (l_data) {
                let min = l_data.getMin();
                let max = l_data.getMax();
                if (min == max) {
                    p_cell.lblIndex.text = min;
                }
                else {
                    p_cell.lblIndex.text = min + "-" + max;
                }
                if (p_index >= 0 && p_index < 3) {
                    p_cell.lblIndex.visible = false;
                    p_cell.imgIndex.visible = true;
                    p_cell.imgIndex.skin = "2d/ui/BR_huodong/jackpot/icon_di" + (p_index + 1) + ".png";
                }
                else {
                    p_cell.lblIndex.visible = true;
                    p_cell.imgIndex.visible = false;
                }
                p_cell.lblPer.text = l_data.getValue() + "%";
            }
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnInfo") {
                this.onbtnInfo();
            }
            else if (node.name == "btnCancel") {
                this.Close();
            }
        }
        onbtnInfo() {
            PopupManager.Show(PREFAB_LOBBY.JACKPOT_RULE, null);
        }
        onStartScroll() {
            let panel = window.findNodeByName(this, "panel");
            panel.vScrollBar.stopScroll();
        }
        onDestroy() {
        }
    }

    const grpc$r = {};
    grpc$r.web = grpcWeb;


    const proto$s = {};
    proto$s.Mail = Mail_pb;
    proto$s.Mail.MailServiceClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$r.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    proto$s.Mail.MailServicePromiseClient =
        function (hostname, credentials, options) {
            if (!options)
                options = {};
            options.format = 'text';
            this.client_ = new grpc$r.web.GrpcWebClientBase(options);
            this.hostname_ = hostname.replace(/\/+$/, '');
        };
    const methodDescriptor_MailService_SendMail = new grpc$r.web.MethodDescriptor('/Mail.MailService/SendMail', grpc$r.web.MethodType.UNARY, proto$s.Mail.SendMailRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$s.Mail.MailServiceClient.prototype.sendMail =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Mail.MailService/SendMail', request, metadata || {}, methodDescriptor_MailService_SendMail, callback);
        };
    proto$s.Mail.MailServicePromiseClient.prototype.sendMail =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Mail.MailService/SendMail', request, metadata || {}, methodDescriptor_MailService_SendMail);
        };
    const methodDescriptor_MailService_SendAnno = new grpc$r.web.MethodDescriptor('/Mail.MailService/SendAnno', grpc$r.web.MethodType.UNARY, proto$s.Mail.SendAnnoRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$s.Mail.MailServiceClient.prototype.sendAnno =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Mail.MailService/SendAnno', request, metadata || {}, methodDescriptor_MailService_SendAnno, callback);
        };
    proto$s.Mail.MailServicePromiseClient.prototype.sendAnno =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Mail.MailService/SendAnno', request, metadata || {}, methodDescriptor_MailService_SendAnno);
        };
    const methodDescriptor_MailService_QueryMailList = new grpc$r.web.MethodDescriptor('/Mail.MailService/QueryMailList', grpc$r.web.MethodType.UNARY, proto$s.Mail.QueryMailListRequest, proto$s.Mail.QueryMailListResponse, function (request) {
        return request.serializeBinary();
    }, proto$s.Mail.QueryMailListResponse.deserializeBinary);
    proto$s.Mail.MailServiceClient.prototype.queryMailList =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Mail.MailService/QueryMailList', request, metadata || {}, methodDescriptor_MailService_QueryMailList, callback);
        };
    proto$s.Mail.MailServicePromiseClient.prototype.queryMailList =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Mail.MailService/QueryMailList', request, metadata || {}, methodDescriptor_MailService_QueryMailList);
        };
    const methodDescriptor_MailService_SingleMailOpera = new grpc$r.web.MethodDescriptor('/Mail.MailService/SingleMailOpera', grpc$r.web.MethodType.UNARY, proto$s.Mail.SingleMailOperaRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$s.Mail.MailServiceClient.prototype.singleMailOpera =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Mail.MailService/SingleMailOpera', request, metadata || {}, methodDescriptor_MailService_SingleMailOpera, callback);
        };
    proto$s.Mail.MailServicePromiseClient.prototype.singleMailOpera =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Mail.MailService/SingleMailOpera', request, metadata || {}, methodDescriptor_MailService_SingleMailOpera);
        };
    const methodDescriptor_MailService_BatchMailOpera = new grpc$r.web.MethodDescriptor('/Mail.MailService/BatchMailOpera', grpc$r.web.MethodType.UNARY, proto$s.Mail.BatchMailOperaRequest, Common_pb.CommonResponse, function (request) {
        return request.serializeBinary();
    }, Common_pb.CommonResponse.deserializeBinary);
    proto$s.Mail.MailServiceClient.prototype.batchMailOpera =
        function (request, metadata, callback) {
            return this.client_.rpcCall(this.hostname_ +
                '/Mail.MailService/BatchMailOpera', request, metadata || {}, methodDescriptor_MailService_BatchMailOpera, callback);
        };
    proto$s.Mail.MailServicePromiseClient.prototype.batchMailOpera =
        function (request, metadata) {
            return this.client_.unaryCall(this.hostname_ +
                '/Mail.MailService/BatchMailOpera', request, metadata || {}, methodDescriptor_MailService_BatchMailOpera);
        };
    var Mail_grpc_web_pb = proto$s.Mail;
    var Mail_grpc_web_pb_1 = Mail_grpc_web_pb.MailServiceClient;

    var MAIL_CATEGORY;
    (function (MAIL_CATEGORY) {
        MAIL_CATEGORY[MAIL_CATEGORY["NOTICE"] = 1] = "NOTICE";
        MAIL_CATEGORY[MAIL_CATEGORY["AWARD"] = 2] = "AWARD";
    })(MAIL_CATEGORY || (MAIL_CATEGORY = {}));
    class Mail extends Laya.Box {
        constructor() {
            super();
            this.noneTip = null;
            this.detailBox = null;
            this.inited = false;
            this.mailService = null;
            this.noticeList = null;
            this.awardList = null;
            this.unreadAward = 0;
            this.unreadNotice = 0;
            this.selectCategory = MAIL_CATEGORY.AWARD;
            this.openLoadTimes = 0;
            this.mailService = new Mail_grpc_web_pb_1(GlobalVariables.SERVER_URL, null, { streamInterceptors: [HeartManager.streamInterceptor()] });
        }
        init() {
            this.visible = false;
            Mail.instance = this;
            this.closeBtn = this.getChildByName("root").getChildByName("navView").getChildByName("closeBtn");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            let tab = this.getChildByName("root").getChildByName("Tab");
            tab.getChildByName("item0").on(Laya.Event.MOUSE_DOWN, this, this.onTabSelect, [MAIL_CATEGORY.AWARD]);
            tab.getChildByName("item1").on(Laya.Event.MOUSE_DOWN, this, this.onTabSelect, [MAIL_CATEGORY.NOTICE]);
            this.awardTip = tab.getChildByName("item0").getChildByName('tip');
            this.awardTip.visible = false;
            this.noticeTip = tab.getChildByName("item1").getChildByName('tip');
            this.noticeTip.visible = false;
            this.allReceiveBtn = this.getChildByName("root").getChildByName("ReceiveBtn");
            this.allReceiveBtn.on(Laya.Event.MOUSE_DOWN, this, this.onAllReceiveClick);
            this.allReceiveBtn.visible = false;
            this.noneTip = this.getChildByName("root").getChildByName("none");
            this.detailBox = this.getChildByName("mailDetail");
            this.detailBox.visible = false;
            let maskBg = this.detailBox.getChildByName("maskbg");
            maskBg.alpha = 0.5;
            let detailClose = this.detailBox.getChildByName("detailBg").getChildByName("navView").getChildByName("closeBtn");
            detailClose.on(Laya.Event.CLICK, this, () => {
                this.onCloseMailDetail();
            });
            this.mailDetail = this.detailBox.getChildByName("detailBg");
            this.attach = this.mailDetail.getChildByName("attach");
            this.m_mailList = this.getChildByName("root").getChildByName("list");
            this.m_mailList.vScrollBarSkin = "";
            this.m_mailList.array = [];
            this.m_mailList.renderHandler = Laya.Handler.create(this, this.onUpdateItemHandler, null, false);
            this.mailAwardPre = new Laya.Prefab();
            this.mailAwardPre.json = Laya.loader.getRes(PREFAB_LOBBY.MAIL_AWARD);
            this.inited = true;
        }
        Show() {
            if (!this.inited) {
                this.init();
            }
            this.selectCategory = MAIL_CATEGORY.AWARD;
            let root = this.getChildByName("root");
            this.openLoadTimes = 0;
            this.queryAwardList(true);
            this.queryNoticeList(true);
            this.visible = true;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
        }
        queryAwardList(isOpenMail = false) {
            this.queryMailList(MAIL_CATEGORY.AWARD, (res) => {
                this.awardList = res;
                for (let i = 0; i < res.length; i++) {
                    const ele = res[i];
                    if (ele.getReadstatus() === Mail_pb_2.S_NOT_READ) {
                        this.unreadAward++;
                    }
                }
                res.length === 0 && (this.unreadAward = 0);
                this.awardTip.visible = (this.unreadAward !== 0);
                this.onTabSelect(this.selectCategory);
                if (isOpenMail) {
                    this.openLoadTimes++;
                    if (this.openLoadTimes == 2) {
                        GlobalData.getInstance().lobbyScene.setMailDot(this.unreadAward !== 0 || this.unreadNotice !== 0);
                    }
                }
                else {
                    GlobalData.getInstance().lobbyScene.setMailDot(this.unreadAward !== 0 || this.unreadNotice !== 0);
                }
            });
        }
        queryNoticeList(isOpenMail = false) {
            this.queryMailList(MAIL_CATEGORY.NOTICE, (res) => {
                this.noticeList = res;
                this.onTabSelect(this.selectCategory);
                for (let i = 0; i < res.length; i++) {
                    const ele = res[i];
                    if (ele.getReadstatus() === Mail_pb_2.S_NOT_READ) {
                        this.unreadNotice++;
                    }
                }
                res.length === 0 && (this.unreadNotice = 0);
                this.noticeTip.visible = (this.unreadNotice !== 0);
                if (isOpenMail) {
                    this.openLoadTimes++;
                    if (this.openLoadTimes == 2) {
                        GlobalData.getInstance().lobbyScene.setMailDot(this.unreadAward !== 0 || this.unreadNotice !== 0);
                    }
                }
                else {
                    GlobalData.getInstance().lobbyScene.setMailDot(this.unreadAward !== 0 || this.unreadNotice !== 0);
                }
            });
        }
        showList(category) {
            this.onTabSelect(category);
            let vBox = this.getChildByName("root").getChildByName("Panel").getChildByName("VBox");
            for (let i = 0; i < vBox.numChildren; i++) {
                let item = vBox.getChildAt(i);
                item.alpha = 0;
                Laya.Tween.to(item, { alpha: 1 }, 200, null, null, 100 * i);
            }
        }
        onTabSelect(category) {
            let tabroot = this.getChildByName("root").getChildByName("Tab");
            let tabItem0 = tabroot.getChildByName("item0");
            let tabItem1 = tabroot.getChildByName("item1");
            this.selectCategory = category;
            this.noneTip.visible = false;
            if (category === MAIL_CATEGORY.AWARD) {
                tabItem0.selected = true;
                tabItem1.selected = false;
                this.tabState(true, tabItem0);
                this.tabState(false, tabItem1);
                this.setMailContent(this.awardList);
                this.allReceiveBtn.visible = (this.awardList && this.awardList.length !== 0);
                this.noneTip.visible = (this.awardList && this.awardList.length === 0);
            }
            else if (category == MAIL_CATEGORY.NOTICE) {
                tabItem0.selected = false;
                tabItem1.selected = true;
                this.tabState(false, tabItem0);
                this.tabState(true, tabItem1);
                this.setMailContent(this.noticeList);
                this.allReceiveBtn.visible = false;
                this.noneTip.visible = (this.noticeList && this.noticeList.length === 0);
            }
        }
        tabState(isSelect, tab) {
            tab.getChildByName("TabItemLabel").color = isSelect ? "#ffffff" : "#BAA0B7";
        }
        setMailContent(data) {
            if (data) {
                this.m_mailList.visible = true;
                data.sort((a, b) => { return -1 * (a.getSendtime() - b.getSendtime()); });
                this.m_mailList.dataSource = data;
                this.m_mailList.repeatY = data.length;
                this.m_mailList.refresh();
            }
            else {
                this.m_mailList.visible = false;
            }
        }
        onUpdateItemHandler(p_cell, p_index) {
            let l_data = p_cell.dataSource;
            p_cell.getChildByName("mailStatus").skin = l_data.getReadstatus() == Mail_pb_2.S_NOT_READ ? "2d/ui/nYoujian/icon_yj_youjian.png" : "2d/ui/nYoujian/icon_yj_tongzhi.png";
            p_cell.alpha = l_data.getReadstatus() == Mail_pb_2.S_NOT_READ ? 1 : 0.5;
            p_cell.getChildByName("name").text = l_data.getTitle();
            p_cell.getChildByName("time").text = window.loadTimeAlias(l_data.getSendtime());
            p_cell.on(Laya.Event.CLICK, this, this.onOpenMailDetailClick, [l_data]);
        }
        onAllReceiveClick() {
            GameAudio.getInstance().playClick();
            let req = new Mail_pb_7();
            req.setPid(GlobalData.getInstance().myPid);
            req.setCategory(MAIL_CATEGORY.AWARD);
            req.setOpcodesList([Mail_pb_8.EN_GET_AWARD_BATCH, Mail_pb_8.EN_DEL_MAIL_BATCH]);
            this.mailService.batchMailOpera(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    CC.Log('nAllReceiveClick err: ' + JSON.stringify(err));
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                    return;
                }
                switch (res.getNret()) {
                    case Common_pb_1.SUCCESS:
                        this.queryAwardList();
                        break;
                    case Common_pb_1.E_AWARD_NOT_EXISTS:
                        TopTipsManager.getInstance().showTopTips(WARNING.AWARD_LOSE);
                        break;
                    default:
                        TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                        break;
                }
            });
        }
        calculateAwards() {
            let awardArr = new Array();
            if (this.awardList) {
                for (let i = 0; i < this.awardList.length; i++) {
                    const ele = this.awardList[i];
                    for (let j = 0; j < ele.getItemsList().length; j++) {
                        const item = ele.getItemsList()[j];
                        this.addAwardItem(awardArr, item);
                    }
                }
            }
            return awardArr;
        }
        addAwardItem(awardArr, item) {
            let isAdded = false;
            for (let i = 0; i < awardArr.length; i++) {
                const ele = awardArr[i];
                if (ele.getNitemtype() === item.getNitemtype() && ele.getNitemid() === item.getNitemid()) {
                    awardArr[i].setNamount(ele.getNamount() + item.getNamount());
                    isAdded = true;
                    return;
                }
            }
            !isAdded && awardArr.push(item);
        }
        onOpenMailDetailClick(data) {
            if (this.selectCategory == MAIL_CATEGORY.AWARD) {
            }
            else {
            }
            let req = new Mail_pb_6();
            req.setPid(GlobalData.getInstance().myPid);
            req.setId(data.getId());
            req.setOpcodesList([Mail_pb_8.EN_READ_MAIL]);
            this.mailService.singleMailOpera(req, GlobalData.getInstance().baseMeta, (err, res) => {
                console.log("MailInfo   ------>>  ", data.toObject());
                if (err) {
                    CC.Log('onOpenMailDetailClick err: ' + JSON.stringify(err));
                    return;
                }
                if (data.getReadstatus() === Mail_pb_2.S_NOT_READ) {
                    data.setReadstatus(Mail_pb_2.S_HAS_READ);
                    this.m_mailList.refresh();
                    (data.getCategory() == MAIL_CATEGORY.AWARD) && this.unreadAward--;
                    (data.getCategory() == MAIL_CATEGORY.NOTICE) && this.unreadNotice--;
                    this.awardTip.visible = (this.unreadAward !== 0);
                    this.noticeTip.visible = (this.unreadNotice !== 0);
                    GlobalData.getInstance().lobbyScene.setMailDot(this.unreadAward !== 0 || this.unreadNotice !== 0);
                }
                this.mailDetail.getChildByName("timeLabel").text = GlobalFunc.formatDate(data.getSendtime());
                if (data.getContent().indexOf("div") >= 0) {
                    this.mailDetail.getChildByName("panel").getChildByName("content").visible = true;
                    this.mailDetail.getChildByName("content").visible = false;
                    this.mailDetail.getChildByName("panel").getChildByName("content").innerHTML = data.getContent();
                }
                else {
                    this.mailDetail.getChildByName("panel").getChildByName("content").visible = false;
                    this.mailDetail.getChildByName("content").visible = true;
                    if (this.hasExchangeCode(data)) {
                        this.mailDetail.getChildByName("content").text = data.getContent().replace("|jump", "");
                    }
                    else {
                        this.mailDetail.getChildByName("content").text = data.getContent();
                    }
                }
                let hBox = this.attach.getChildByName("HBox");
                for (let i = 0; i < hBox.numChildren; i++) {
                    hBox.getChildAt(i).visible = false;
                }
                let attachItemList = data.getItemsList();
                let isAttach = attachItemList != null && attachItemList.length > 0;
                if (isAttach) {
                    for (let i = 0; i < attachItemList.length; i++) {
                        let mailAward;
                        if (i < hBox.numChildren) {
                            mailAward = hBox.getChildAt(i);
                        }
                        else {
                            mailAward = Laya.Pool.getItemByCreateFun("MailAward", this.mailAwardPre.create, this.mailAwardPre);
                            hBox.addChild(mailAward);
                        }
                        if (mailAward) {
                            mailAward.visible = true;
                            CC.Log("attachItemList[i].getNamount()   ", attachItemList[i].getNamount());
                            mailAward.getChildByName("num").text = "x" + window.formatNum(attachItemList[i].getNamount() / 100);
                        }
                    }
                    hBox.active = false;
                    hBox.active = true;
                    this.attach.visible = true;
                }
                else {
                    this.attach.visible = false;
                }
                let deleteBtn = this.mailDetail.getChildByName("deleteBtn");
                let exchangeBtn = this.mailDetail.getChildByName("exchangeBtn");
                deleteBtn.on(Laya.Event.MOUSE_DOWN, this, this.onDeleteClick, [data]);
                exchangeBtn.on(Laya.Event.MOUSE_DOWN, this, this.onExchangeClick, [data]);
                deleteBtn.visible = !isAttach;
                if (this.hasExchangeCode(data)) {
                    exchangeBtn.visible = true;
                    deleteBtn.centerX = -190;
                }
                else {
                    exchangeBtn.visible = false;
                    deleteBtn.centerX = 0;
                }
                this.attach.getChildByName("rewardBtn").on(Laya.Event.MOUSE_DOWN, this, this.onReceiveClick, [data]);
                this.detailBox.visible = true;
                this.mailDetail.scaleX = 0;
                this.mailDetail.scaleY = 0;
                Laya.Tween.to(this.mailDetail, { scaleX: 1, scaleY: 1 }, 300, Laya.Ease.backOut, null, 0);
            });
        }
        hasExchangeCode(data) {
            if (this.selectCategory == MAIL_CATEGORY.NOTICE) {
                return data.getContent().indexOf("|jump") >= 0;
            }
            return false;
        }
        onReceiveClick(data) {
            GameAudio.getInstance().playClick();
            let req = new Mail_pb_6();
            req.setId(data.getId());
            req.setPid(GlobalData.getInstance().myPid);
            req.setOpcodesList([Mail_pb_8.EN_GET_AWARD, Mail_pb_8.EN_DEL_MAIL]);
            this.mailService.singleMailOpera(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    CC.Log('onReceiveClick err: ' + JSON.stringify(err));
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                    return;
                }
                switch (res.getNret()) {
                    case Common_pb_1.SUCCESS:
                        this.queryAwardList();
                        this.onCloseMailDetail();
                        break;
                    case Common_pb_1.E_AWARD_NOT_EXISTS:
                        TopTipsManager.getInstance().showTopTips(WARNING.AWARD_LOSE);
                        break;
                    default:
                        TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                        break;
                }
            });
        }
        onDeleteClick(data) {
            GameAudio.getInstance().playClick();
            let req = new Mail_pb_6();
            req.setId(data.getId());
            req.setPid(GlobalData.getInstance().myPid);
            req.setOpcodesList([Mail_pb_8.EN_DEL_MAIL]);
            this.mailService.singleMailOpera(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    CC.Log('onDeleteClick err: ' + JSON.stringify(err));
                    return;
                }
                let tipStr = WARNING.DELETE_FAIL;
                switch (res.getNret()) {
                    case Common_pb_1.SUCCESS:
                        this.queryNoticeList();
                        this.onCloseMailDetail();
                        tipStr = WARNING.DELETE_SUCCESS;
                        break;
                }
                TopTipsManager.getInstance().showTopTips(tipStr);
            });
        }
        onExchangeClick() {
            PopupManager.Show(PREFAB_LOBBY.HALL_COOPERATE, null, Laya.stage);
        }
        onCloseMailDetail() {
            GameAudio.getInstance().playClick();
            Laya.Tween.to(this.mailDetail, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.backIn, Laya.Handler.create(this, () => { this.detailBox.visible = false; }), 0);
        }
        Close() {
            this.visible = false;
            PopupManager.Hide(PREFAB_LOBBY.MAIL);
        }
        queryMailList(category, callback) {
            let req = new Mail_pb_4();
            req.setPid(GlobalData.getInstance().myPid);
            req.setCategory(category);
            req.setCurpage(1);
            req.setPagesize(99);
            this.mailService.queryMailList(req, GlobalData.getInstance().baseMeta, (err, res) => {
                if (err) {
                    this.visible = false;
                    CC.Log('queryMailList ' + category + ' error: ' + JSON.stringify(err));
                    return;
                }
                let code = res.getNret();
                switch (code) {
                    case Common_pb_1.SUCCESS:
                        callback(res.getMailsList());
                        break;
                    case Common_pb_1.E_FAIL:
                        CC.Log('queryMailList ' + category + 'failed');
                        break;
                }
            });
        }
        onDestroy() {
        }
    }

    class NewGift extends Laya.Box {
        constructor() {
            super(...arguments);
            this.nodeItems = [];
        }
        Init() {
            this.initListener();
            this.visible = false;
            NewGift.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            for (let i = 0; i < 4; i++) {
                let nodeName = "node_item" + i;
                let nodeItem = window.findNodeByName(this.root, nodeName);
                window.InitialNode(nodeItem);
                nodeItem.on(Laya.Event.CLICK, this, this.OnSelItem, [i]);
                this.nodeItems[i] = nodeItem;
            }
            this.tabMenu = window.findNodeByName(this, "tabMenu");
            this.tabStack = window.findNodeByName(this, "tabView");
        }
        initListener() {
            EventManager.getInstance().on(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
        }
        onStoreOrderComplete() {
            AFUtil.reportUserOrder();
            TopTipsManager.getInstance().showTopTips(WARNING.RECHARGE_SUCC);
            this.initGoods();
        }
        Show() {
            if (!this.inited) {
                this.Init();
            }
            this.visible = true;
            this.root.scaleX = 0;
            this.root.scaleY = 0;
            Laya.Tween.to(this.root, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 0);
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 200, null, null, 0);
            this.initData();
            this.initTabView();
        }
        initTabView() {
            Laya.loader.load([
                PREFAB_LOBBY.SERIAL_GIFT, PREFAB_LOBBY.WEEK_GIFT
            ], Laya.Handler.create(this, function (res) {
                let prefab1 = Laya.loader.getRes(PREFAB_LOBBY.SERIAL_GIFT);
                let pre1 = new Laya.Prefab();
                pre1.json = prefab1;
                this.tabStack.addItem(pre1.create());
                let prefab2 = Laya.loader.getRes(PREFAB_LOBBY.WEEK_GIFT);
                let pre2 = new Laya.Prefab();
                pre2.json = prefab2;
                this.tabStack.addItem(pre2.create());
            }));
            this.tabMenu.selectHandler = new Laya.Handler(this, this.onTabMenuChange);
            this.onTabMenuChange(0);
        }
        initData() {
            GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
            if (this.isIosPay()) {
                this.payType = Constants_pb_2.APPLE_PAY;
            }
            else {
                if (GlobalVariables.DEF_LANG == LANG_T.RU) {
                    this.payType = Constants_pb_2.STAN_PAY;
                }
                else if (GlobalVariables.DEF_LANG == LANG_T.IND || GlobalVariables.DEF_LANG == LANG_T.EN) {
                    this.payType = Constants_pb_2.SUPER_PAY;
                }
                else {
                    this.payType = Constants_pb_2.EQS_PAY;
                }
            }
            GlobalData.getInstance().loadingAni.Close(WARNING.NET_WAIT);
            this.initGoods();
        }
        initGoods() {
            let category = this.payType == Constants_pb_2.APPLE_PAY ? 1028 : 1038;
            DataStore.getInstance().queryGoodsList(category, 1, 20, (res) => {
                if (null != res) {
                    let list = res.getMerchandiselistList();
                    this.goodsData = list;
                    for (let i = 0; i < this.goodsData.length; i++) {
                        if (this.nodeItems[i]) {
                            this.nodeItems[i].visible = true;
                            this.refreshItem(i);
                        }
                    }
                }
            });
        }
        onTabMenuChange(index) {
            this.tabStack.selectedIndex = index;
            if (index == 0) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1014);
            }
            else if (index == 1) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1015);
            }
            else if (index == 2) {
                GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1016);
            }
        }
        isIosPay() {
            return false;
        }
        refreshItem(__index) {
            let nodeItem = this.nodeItems[__index];
            let item = this.goodsData[__index];
            let amountLab = nodeItem.lblAmount;
            amountLab.value = "R$ " + Number(item.getName()) / 100;
            let priceLab = nodeItem.lblMoney;
            priceLab.text = "R$ " + (item.getPrice() / 100);
            let attrObj = JSON.parse(item.getAttribute());
            if (attrObj["totalLimit"] == 1 && attrObj["uOrders"] == 1) {
                nodeItem.imgIcon.lblTxt.text = WARNING.HAS_BUY;
                nodeItem.imgIcon.gray = true;
            }
        }
        OnSelItem(__index) {
            let item = this.goodsData[__index];
            let attrObj = JSON.parse(item.getAttribute());
            if (attrObj["totalLimit"] == 1 && attrObj["uOrders"] == 1) {
                return;
            }
            if (this.payType == Constants_pb_2.EQS_PAY) {
                this.recharge(item);
            }
        }
        recharge(data) {
            GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
            let payType = this.payType;
            DataStore.getInstance().unifiedOrder(payType, data.getId(), data.getPrice(), data.getName(), (orderNo) => {
                if (orderNo) {
                    AFUtil.reportPurchase(data.getId(), orderNo, data.getPrice());
                }
                if (payType === Constants_pb_2.EQS_PAY) {
                    GlobalData.getInstance().loadingAni.Close();
                    return;
                }
                if (orderNo) {
                    if (DeviceData.getInstance().isIOS) {
                        DeviceData.getInstance().tsBridge.callWithBack((result) => {
                            if (result == 'false') {
                                TopTipsManager.getInstance().showTopTips(WARNING.RECHARGE_FAIL);
                                GlobalData.getInstance().loadingAni.Close();
                                return;
                            }
                            DataStore.getInstance().verifyAppleOrder(orderNo, result, (orderNo1) => {
                                GlobalData.getInstance().loadingAni.Close();
                                if (orderNo1) {
                                }
                            });
                        }, 'doApplePay:', data.getId());
                        return;
                    }
                    GlobalData.getInstance().loadingAni.Close();
                }
                else {
                    GlobalData.getInstance().loadingAni.Close();
                }
                GlobalData.getInstance().loadingAni.Close();
            });
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            Laya.Tween.to(this.root, { scaleX: 0, scaleY: 0 }, 200, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                this.visible = false;
                PopupManager.Destory(PREFAB_LOBBY.NEW_GIFT);
            }), 0);
        }
        onDestroy() {
            EventManager.getInstance().off(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
        }
    }

    var CURRENCY_TYPE;
    (function (CURRENCY_TYPE) {
        CURRENCY_TYPE[CURRENCY_TYPE["GOLD"] = 0] = "GOLD";
        CURRENCY_TYPE[CURRENCY_TYPE["BEAN"] = 1] = "BEAN";
        CURRENCY_TYPE[CURRENCY_TYPE["PEARL"] = 2] = "PEARL";
    })(CURRENCY_TYPE || (CURRENCY_TYPE = {}));
    class Award {
        isSupport(item) {
            switch (item.getNitemtype()) {
                case AwardService_pb_2.CURRENCY:
                    switch (item.getNitemid()) {
                        case CURRENCY_TYPE.GOLD:
                        case CURRENCY_TYPE.BEAN:
                        case CURRENCY_TYPE.PEARL:
                            return true;
                        default:
                            return false;
                    }
                case AwardService_pb_2.SHOP:
                case AwardService_pb_2.PAY:
                case AwardService_pb_2.PRIVILEGE_CARD:
                case AwardService_pb_2.ACCESSORY:
                case AwardService_pb_2.VIP_EXP:
                    return true;
            }
            return false;
        }
        setAwardIcon(icon, item) {
            let iconStr = '2d/icon/itemtype/default.png';
            let type = item.getNitemtype();
            let l_tab = item.getNitemid();
            let l_id = item.getNamount();
            switch (type) {
                case AwardService_pb_2.SHOP:
                    this.loadShopItemIcon(icon, item.getNitemid());
                    return;
                case AwardService_pb_2.PAY:
                    iconStr = '2d/icon/itemtype/pay.png';
                    break;
                case AwardService_pb_2.CURRENCY:
                    iconStr = this.loadCurrencyIcon(item.getNitemid());
                    break;
                case AwardService_pb_2.PRIVILEGE_CARD:
                    iconStr = this.loadCardIcon(item.getNitemid());
                    break;
                case AwardService_pb_2.ACCESSORY:
                    iconStr = this.loadAccessoryIcon(l_tab, l_id);
                    break;
                case AwardService_pb_2.VIP_EXP:
                    iconStr = '2d/icon/itemtype/vipexp.png';
                    break;
            }
            icon.skin = iconStr;
            icon.alpha = (icon.skin == '2d/icon/itemtype/default.png') ? 0.5 : 1;
        }
        loadAccessoryIcon(p_tab, p_id) {
            let l_str = "2d/icon/itemtype/default.png";
            return l_str;
        }
        loadAccessoryName(p_tab, p_id) {
            let l_str = "2d/icon/itemtype/default.png";
            return l_str;
        }
        loadShopItemIcon(icon, id) {
        }
        loadCurrencyIcon(id) {
            let curPath = '';
            switch (id) {
                case CURRENCY_TYPE.GOLD:
                    curPath = '2d/icon/itemtype/gold.png';
                    break;
                case CURRENCY_TYPE.BEAN:
                    curPath = '2d/icon/itemtype/bean.png';
                    break;
                case CURRENCY_TYPE.PEARL:
                    curPath = '2d/icon/itemtype/pearl.png';
                    break;
            }
            return curPath;
        }
        loadCardIcon(id) {
            let curPath = '';
            return curPath;
        }
        setAwardName(label, item) {
            let name = '';
            let type = item.getNitemtype();
            let l_tab = item.getNitemid();
            let l_id = item.getNamount();
            switch (type) {
                case AwardService_pb_2.SHOP:
                    this.loadShopItemName(label, item.getNitemid());
                    return;
                case AwardService_pb_2.PAY:
                    name = '钻石';
                    break;
                case AwardService_pb_2.CURRENCY:
                    name = this.loadCurrencyName(item.getNitemid());
                    break;
                case AwardService_pb_2.PRIVILEGE_CARD:
                    name = this.loadCardName(item.getNitemid());
                    break;
                case AwardService_pb_2.ACCESSORY:
                    name = this.loadAccessoryName(l_tab, l_id);
                    break;
                case AwardService_pb_2.VIP_EXP:
                    name = "特权经验";
                    break;
            }
            label.text = name;
        }
        loadShopItemName(label, id) {
        }
        loadCurrencyName(id) {
            let curName = '';
            switch (id) {
                case CURRENCY_TYPE.GOLD:
                    curName = '金币';
                    break;
                case CURRENCY_TYPE.BEAN:
                    curName = '金豆';
                    break;
                case CURRENCY_TYPE.PEARL:
                    curName = '宝珠';
                    break;
            }
            return curName;
        }
        loadCardName(id) {
            let curName = '';
            return curName;
        }
    }
    const AWARD = new Award();

    class ReceiveSuccess extends Laya.Box {
        constructor() {
            super();
            this.isInited = false;
            this.mRewardList = null;
            this.mTitle = null;
        }
        Show(params) {
            let data = params[0];
            let source = params[1];
            if (!this.isInited) {
                this.init();
            }
            this.loadItemList(data);
            this.visible = true;
            GameAudio.getInstance().playBaseEffect("popup.ogg");
            let content = this.getChildByName('content');
            content.scaleX = 0;
            content.scaleY = 0;
            Laya.Tween.to(content, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut, null, 0);
            this.onShowItemTips(source);
        }
        init() {
            this.visible = false;
            this.isInited = true;
            let maskBg = this.getChildByName('maskbg');
            let sureBtn = this.getChildByName('content').getChildByName('sureBtn');
            sureBtn.clickHandler = new Laya.Handler(this, this.onSureBtnClick);
            let area1 = this.getChildByName('content').getChildByName('area1');
            area1.on(Laya.Event.CLICK, this, this.onSureBtnClick);
            let area2 = this.getChildByName('content').getChildByName('area2');
            area2.on(Laya.Event.CLICK, this, this.onSureBtnClick);
            let panel = this.getChildByName('content').getChildByName('awardList');
            panel.hScrollBarSkin = '';
            this.mRewardList = panel.getChildByName('List');
            this.mRewardList.renderHandler = Laya.Handler.create(this, this.onUpdateItem, null, false);
            this.m_itemtips = this.getChildByName('content').getChildByName('itemtips');
            this.m_tips3 = this.getChildByName('content').getChildByName('tips3');
            this.m_tips3.visible = false;
        }
        valid(data) {
            for (let i = 0; i < data.length; i++) {
                const val = data[i];
                if (AWARD.isSupport(val)) {
                    return true;
                }
            }
            return false;
        }
        loadItemList(data) {
            let rewardArr = new Array();
            for (let i = 0; i < data.length; i++) {
                const reward = data[i];
                rewardArr.push(reward);
            }
            if (rewardArr.length > 0) {
                this.mRewardList.dataSource = rewardArr;
                this.mRewardList.height = rewardArr.length * 121;
                this.mRewardList.refresh();
            }
        }
        onUpdateItem(cell, index) {
            let data = cell.dataSource;
            let itemIcon = cell.getChildByName("bg").getChildByName("image");
            let awardImg;
            let itemID = data.getNitemtype();
            let itemInfo = ITEM_TYPE[itemID];
            if (itemInfo) {
                awardImg = itemInfo.icon || "";
            }
            else {
                awardImg = "2d/ui/common/icon_qianbi.png";
            }
            itemIcon.skin = awardImg;
            let amount = data.getNamount() / 100;
            cell.getChildByName("bg").getChildByName("num").text = window.formatNum(amount);
        }
        onShowItemTips(source) {
            return __awaiter(this, void 0, void 0, function* () {
                let sourceArr = {
                    [Currency_pb_7.VIPMONTH]: WARNING.VIP_MONTH_AWARD,
                    [Currency_pb_7.GIFTS]: WARNING.ACT_CHARGE_CODE,
                    [Currency_pb_7.TASK]: WARNING.ACT_CHARGE_CODE,
                    [Currency_pb_7.VIP]: WARNING.VIP_DAY_AWARD,
                };
                if (sourceArr[source]) {
                    if (source == Currency_pb_7.GIFTS || source == Currency_pb_7.TASK) {
                        if (DeviceData.getInstance().isIOS) {
                            let code = null;
                            if (GlobalVariables.DEF_LANG == LANG_T.RU) {
                                code = "ru666";
                            }
                            else if (GlobalVariables.DEF_LANG == LANG_T.IND || GlobalVariables.DEF_LANG == LANG_T.EN) {
                                code = "in666";
                            }
                            else {
                                code = "vn666";
                            }
                            let hisAck = yield AwardService.getInstance().history(code);
                            if (hisAck.getCret() == 0 && hisAck.getHave() == false) {
                                this.m_tips3.visible = true;
                                this.m_tips3.text = sourceArr[source];
                            }
                            else {
                                this.m_tips3.visible = false;
                            }
                        }
                        return;
                    }
                    this.m_tips3.visible = true;
                    this.m_tips3.text = sourceArr[source];
                }
                else {
                    this.m_tips3.visible = false;
                }
            });
        }
        onSureBtnClick() {
            GameAudio.getInstance().playClick();
            this.onClose();
        }
        onClose() {
            GameAudio.getInstance().playCloseWin();
            this.m_tips3.visible = false;
            this.m_itemtips.visible = false;
            let content = this.getChildByName('content');
            Laya.Tween.to(content, { scaleX: 0, scaleY: 0 }, 200, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                PopupManager.Destory(PREFAB_LOBBY.RECEIVE_SUCCESS);
                EventManager.getInstance().emit(LobbyDefine.CLOSE_RECEIVERUCCESS);
            }), 0);
        }
        onDestroy() {
        }
    }

    class RechargeAct extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.nodeBody = null;
            this.labTime = null;
            this.labAmount = null;
            this.reachargeActInterval = null;
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.IM_LOGIN_NOTI, this, this.onLuckyNoti);
            let rootBox = this.owner;
            rootBox.scaleX = 0;
            rootBox.scaleY = 0;
            Laya.Tween.to(rootBox, { scaleX: 1, scaleY: 1 }, 300, Laya.Ease.backOut, null, 0);
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose);
            this.initData();
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1017);
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.IM_LOGIN_NOTI, this, this.onLuckyNoti);
            if (this.reachargeActInterval) {
                clearInterval(this.reachargeActInterval);
                this.reachargeActInterval = null;
            }
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            Laya.Tween.to(this.owner, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                PopupManager.Hide(PREFAB_LOBBY.RECHARGE_ACT);
            }), 0);
        }
        onLuckyNoti(type, res) {
            if (type == "Lucky.AwardsNoti") {
                let awardsNoti = res;
                if (awardsNoti.getTaskid() == GlobalVariables.TASK_4001) {
                    this.initData();
                }
            }
        }
        initData() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let ack = yield LuckyService.getInstance().lucky([GlobalVariables.TASK_4001]);
                    let task = ack.getTasksMap().get(GlobalVariables.TASK_4001);
                    let awardList = task && task.getAwardsList();
                    if (!awardList) {
                        return;
                    }
                    for (let i = 0; i < 4; i++) {
                        this.refreshItem(this.nodeBody.getChildAt(i), awardList[i], task);
                    }
                    this.labAmount.text = (task.getProcur() / 100).toString();
                    this.setCountdown(task);
                }
                catch (error) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
        setCountdown(task) {
            this.labTime.text = window.getTimeRemaining(task.getEtime());
            if (this.reachargeActInterval) {
                clearInterval(this.reachargeActInterval);
                this.reachargeActInterval = null;
            }
            this.reachargeActInterval = setInterval(() => {
                let remaingTime = window.getTimeRemaining(task.getEtime());
                this.labTime.text = remaingTime;
            }, 1000);
        }
        refreshItem(nodeItem, award, task) {
            let lblRecharge = nodeItem.getChildByName("navImg").getChildByName("lblRecharge");
            let lblAward = nodeItem.getChildByName("lblAward");
            lblRecharge.text = "R$ " + (award.getValue() / 100);
            lblAward.text = "R$ " + (award.getItemnum() / 100);
            let awartBtn = nodeItem.getChildByName("btn");
            awartBtn.offAll();
            if ((task.getState() & (1 << award.getAwardid())) > 0) {
                awartBtn.skin = "2d/ui/BR_huodong/leichonghuodong/btn_leichong_yilingqu_562408.png";
                awartBtn.label = "Já foi recebido";
                awartBtn.labelColors = "#B76E4B";
            }
            else {
                if (task.getProcur() >= award.getValue()) {
                    awartBtn.skin = "2d/ui/BR_huodong/leichonghuodong/btn_leichong_lingqu.png";
                    awartBtn.label = "Receber";
                    awartBtn.labelColors = "#FFFFFF";
                    awartBtn.on(Laya.Event.CLICK, this, () => {
                        this.requestAward(task.getTaskid(), award.getAwardid());
                    });
                }
                else {
                    awartBtn.skin = "2d/ui/BR_huodong/leichonghuodong/btn_leichong_chongzhi.png";
                    awartBtn.label = "Depósito";
                    awartBtn.labelColors = "#FFFFFF";
                    awartBtn.on(Laya.Event.CLICK, this, () => {
                        PopupManager.Show(PREFAB_LOBBY.SHOP, SIDE_ITEM.GOLD, Laya.stage);
                    });
                }
            }
        }
        requestAward(taskId, awardId) {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let ack = yield LuckyService.getInstance().award(taskId, awardId);
                    if (ack.getCret() != 0) {
                        TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL + " " + ack.getCret());
                    }
                }
                catch (error) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
    }

    class SerialGift extends Laya.Box {
        constructor() {
            super(...arguments);
            this.nodeItems = [];
            this.m_curPer = 10;
            this.m_bBuy = false;
        }
        onEnable() {
            this.Init();
        }
        Init() {
            this.initListener();
            this.visible = false;
            SerialGift.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.lblDes = window.findNodeByName(this, "lblDes");
            this.nodeLB = window.findNodeByName(this, "nodeLB");
            window.InitialNode(this.nodeLB);
            for (let i = 0; i < 3; i++) {
                let nodeName = "node_item" + i;
                let nodeItem = window.findNodeByName(this.root, nodeName);
                window.InitialNode(nodeItem);
                nodeItem.on(Laya.Event.CLICK, this, this.OnSelItem, [i]);
                this.nodeItems[i] = nodeItem;
            }
            this.Show();
        }
        initListener() {
            EventManager.getInstance().on(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
        }
        onbtnInfo() {
            PopupManager.Show(PREFAB_LOBBY.JACKPOT_RULE, WARNING.SERIAL_RULE);
        }
        onStoreOrderComplete() {
            AFUtil.reportUserOrder();
            TopTipsManager.getInstance().showTopTips(WARNING.RECHARGE_SUCC);
            this.initGoods();
        }
        Show() {
            if (!this.inited) {
                this.Init();
            }
            this.visible = true;
            this.m_timeEnd = Math.floor(new Date().setHours(23, 59, 59) / 1000);
            this.initData();
        }
        initData() {
            return __awaiter(this, void 0, void 0, function* () {
                GlobalData.getInstance().loadingAni.Show(WARNING.NET_WAIT);
                if (yield this.isIosPay()) {
                    this.payType = Constants_pb_2.APPLE_PAY;
                }
                else {
                    if (GlobalVariables.DEF_LANG == LANG_T.RU) {
                        this.payType = Constants_pb_2.STAN_PAY;
                    }
                    else if (GlobalVariables.DEF_LANG == LANG_T.IND || GlobalVariables.DEF_LANG == LANG_T.EN) {
                        this.payType = Constants_pb_2.SUPER_PAY;
                    }
                    else {
                        this.payType = Constants_pb_2.EQS_PAY;
                    }
                }
                GlobalData.getInstance().loadingAni.Close(WARNING.NET_WAIT);
                this.initGoods();
            });
        }
        initGoods() {
            let category = this.payType == Constants_pb_2.APPLE_PAY ? 1028 : 1030;
            DataStore.getInstance().queryGoodsList(category, 1, 20, (res) => {
                if (null != res) {
                    let list = res.getMerchandiselistList();
                    this.goodsData = list;
                    for (let i = 0; i < this.goodsData.length; i++) {
                        if (this.nodeItems[i]) {
                            this.nodeItems[i].visible = true;
                            this.refreshItem(i);
                        }
                    }
                    this.checkBonus();
                }
            });
        }
        checkBonus() {
            let goods = this.goodsData;
            if (goods && goods.length > 0) {
                for (let i = 0; i < goods.length; i++) {
                    let item = goods[i];
                    let attrObj = JSON.parse(item.getAttribute());
                    if (attrObj) {
                        if (attrObj["dayLimit"] == 1 && attrObj["uOrders"] >= 1) {
                            this.m_bBuy = true;
                        }
                        this.m_curPer = attrObj["keepOnPresent"] || 10;
                    }
                }
                this.setProgress();
            }
        }
        setProgress() {
            let totalW = 442;
            let posX = [60, 200, 340];
            this.nodeLB.imgBub0.lblPer.text = this.m_curPer + "%";
            this.nodeLB.imgBub1.lblPer.text = (this.m_curPer + 5) + "%";
            let index = this.m_curPer / 5 - 2;
            this.nodeLB.imgBub0.x = posX[index] || 0;
            this.nodeLB.imgBub1.x = posX[index + 1] || 0;
            this.nodeLB.imgTime.visible = false;
            let img1 = this.nodeLB["imgPrg1"];
            let img2 = this.nodeLB["imgPrg2"];
            if (this.m_bBuy && index < 2) {
                this.nodeLB.imgBub1.visible = true;
                img2.width = totalW * (index + 2) / 3;
            }
            else {
                this.nodeLB.imgBub1.visible = false;
                img2.width = totalW * (index + 1) / 3;
                if (index >= 1) {
                    this.nodeLB.imgTime.visible = true;
                    this.startTimer();
                }
            }
            if (this.m_bBuy) {
                img1.width = totalW * (index + 1) / 3;
            }
            let desStr = WARNING.SERIAL_TIP1;
            if (this.m_bBuy && index < 2) {
                let fillStr = (this.m_curPer + 5) + "%";
                desStr = window.formatPlaceHolderString(WARNING.SERIAL_TIP2, fillStr);
            }
            else if (index >= 1) {
                desStr = WARNING.SERIAL_TIP3;
            }
            this.lblDes.text = desStr;
        }
        startTimer() {
            let timeStr = window.getTimeRemaining(this.m_timeEnd);
            this.nodeLB.imgTime.lblTime.text = timeStr;
            Laya.timer.loop(1000, this, this.scheduleTimer);
        }
        scheduleTimer() {
            let timeStr = window.getTimeRemaining(this.m_timeEnd);
            this.nodeLB.imgTime.lblTime.text = timeStr;
            if (timeStr == "00:00:00") {
                Laya.timer.clear(this, this.scheduleTimer);
            }
        }
        isIosPay() {
            return __awaiter(this, void 0, void 0, function* () {
                return false;
            });
        }
        refreshItem(__index) {
            let nodeItem = this.nodeItems[__index];
            let item = this.goodsData[__index];
            let priceLab = nodeItem.lblMoney;
            priceLab.text = "R$ " + (item.getPrice() / 100);
            let attrObj = JSON.parse(item.getAttribute());
            if (attrObj) {
                if (attrObj["dayLimit"] == 1 && attrObj["uOrders"] >= 1) {
                    nodeItem.imgBtn.gray = true;
                    nodeItem.imgBtn.lblTxt.text = WARNING.HAS_BUY;
                }
                let total = attrObj["giftTitle"] || 0;
                let percent = attrObj["keepOnPresent"] || 0;
                let amountLab = nodeItem.lblAmount;
                amountLab.value = "R$ " + Number(total) / 100;
                nodeItem.imgBG2.lblBonus.text = percent + "%";
                nodeItem.lblOrigin.text = "R$ " + Number(item.getName()) / 100;
            }
        }
        OnSelItem(__index) {
            let item = this.goodsData[__index];
            let attrObj = JSON.parse(item.getAttribute());
            if (attrObj["dayLimit"] == 1 && attrObj["uOrders"] == 1) {
                return;
            }
            if (this.payType == Constants_pb_2.EQS_PAY) {
                this.recharge(item);
            }
        }
        recharge(data) {
            GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
            let payType = this.payType;
            DataStore.getInstance().unifiedOrder(payType, data.getId(), data.getPrice(), data.getName(), (orderNo) => {
                if (orderNo) {
                    AFUtil.reportPurchase(data.getId(), orderNo, data.getPrice());
                }
                if (payType === Constants_pb_2.EQS_PAY) {
                    GlobalData.getInstance().loadingAni.Close();
                    return;
                }
                if (orderNo) {
                    if (DeviceData.getInstance().isIOS) {
                        DeviceData.getInstance().tsBridge.callWithBack((result) => {
                            if (result == 'false') {
                                TopTipsManager.getInstance().showTopTips(WARNING.RECHARGE_FAIL);
                                GlobalData.getInstance().loadingAni.Close();
                                return;
                            }
                            DataStore.getInstance().verifyAppleOrder(orderNo, result, (orderNo1) => {
                                GlobalData.getInstance().loadingAni.Close();
                                if (orderNo1) {
                                }
                            });
                        }, 'doApplePay:', data.getId());
                        return;
                    }
                    GlobalData.getInstance().loadingAni.Close();
                }
                else {
                    GlobalData.getInstance().loadingAni.Close();
                }
                GlobalData.getInstance().loadingAni.Close();
            });
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            Laya.Tween.to(this.root, { scaleX: 0, scaleY: 0 }, 200, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                this.visible = false;
                PopupManager.Destory(PREFAB_LOBBY.SERIAL_GIFT);
            }), 0);
        }
        onDestroy() {
            EventManager.getInstance().off(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
        }
    }

    class Sign extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.nodeGoods = null;
            this.btnToSign = null;
            this.nodeDetail = null;
            this.btnCloseDetail = null;
            this.btnSign = null;
            this.btnPay = null;
            this.labSign = null;
            this.labCash = null;
            this.labRate = null;
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.GET_AWARD_SUCCESS, this, this.onGetAwardSuccess);
            EventManager.getInstance().on(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
            let rootBox = this.owner;
            rootBox.scaleX = 0;
            rootBox.scaleY = 0;
            Laya.Tween.to(rootBox, { scaleX: 1, scaleY: 1 }, 300, Laya.Ease.backOut, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
            this.btnToSign.on(Laya.Event.MOUSE_DOWN, this, this.onBtnToSign);
            this.btnCloseDetail.on(Laya.Event.MOUSE_DOWN, this, this.onBtnCloseDetail);
            this.btnSign.on(Laya.Event.MOUSE_DOWN, this, this.onBtnSign);
            this.btnPay.on(Laya.Event.MOUSE_DOWN, this, this.onBtnPay);
            this.requestInfo();
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1013);
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.GET_AWARD_SUCCESS, this, this.onGetAwardSuccess);
            EventManager.getInstance().off(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
        }
        onGetAwardSuccess(data) {
            console.log('Sing:: onGetAwardSuccess ', data.toObject());
            if (data && data.getNawardsource() == 6) {
                this.requestInfo();
            }
        }
        onStoreOrderComplete() {
            AFUtil.reportUserOrder();
            TopTipsManager.getInstance().showTopTips(WARNING.RECHARGE_SUCC);
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            Laya.Tween.to(this.owner, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                this.owner.visible = false;
                PopupManager.Hide(PREFAB_LOBBY.SIGN);
            }), 0);
        }
        onBtnToSign() {
            if (!this.actItem) {
                return;
            }
            this.nodeDetail.visible = true;
            this.labSign.text = "R$ " + (this.actItem.getItemnum() / 100);
            this.labCash.text = "R$ " + (this.actItem.getItemnum() * this.actItem.getValue() / 100 / 100);
            this.labRate.text = this.actItem.getValue() + "%";
        }
        onBtnCloseDetail() {
            this.nodeDetail.visible = false;
        }
        onBtnSign() {
            return __awaiter(this, void 0, void 0, function* () {
                GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
                try {
                    let ack = yield AggrgService.getInstance().award();
                    this.nodeDetail.visible = false;
                }
                catch (error) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        onBtnPay() {
            this.requestBuy();
        }
        requestInfo() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    this.actItem = null;
                    let ack = yield AggrgService.getInstance().info();
                    let aggInfo = ack.getInfosMap().get(GlobalVariables.AGG_ID);
                    let awardList = aggInfo.getAwardsList();
                    let dayCnt = aggInfo.getDaycnt();
                    let dayCur = aggInfo.getDaycur();
                    for (let i = 0; i < this.nodeGoods.numChildren; i++) {
                        let itemNode = this.nodeGoods.getChildAt(i);
                        let actItem = awardList[i];
                        let status = -1;
                        if (i < dayCnt) {
                            status = 0;
                        }
                        else if (i == dayCnt && i < dayCur) {
                            status = 1;
                            this.actItem = actItem;
                        }
                        this.renderItem(itemNode, i, status, actItem);
                    }
                }
                catch (error) {
                }
            });
        }
        renderItem(itemNode, index, status, actItem) {
            let dayLab = itemNode.getChildByName("dayLab");
            let statusImg = itemNode.getChildByName("statusImg");
            statusImg.visible = status == 0;
            if (status == 1) {
                dayLab.color = "#B0F2FC";
                itemNode.skin = "2d/ui/BR_huodong/7riqiandao/bg_sk_0A1020_bk_B0F2FC.png";
            }
            else {
                dayLab.color = "#989BB2";
                itemNode.skin = "2d/ui/BR_huodong/7riqiandao/bg_sk_0A1020.png";
            }
        }
        requestBuy() {
            GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
            DataStore.getInstance().queryGoodsList(1031, 1, 1, (res) => __awaiter(this, void 0, void 0, function* () {
                GlobalData.getInstance().loadingAni.Close();
                if (null != res) {
                    let list = res.getMerchandiselistList();
                    this.nodeDetail.visible = false;
                    this.recharge(list[0]);
                }
                else {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            }));
        }
        recharge(data) {
            GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
            let payType = Constants_pb_2.EQS_PAY;
            DataStore.getInstance().unifiedOrder(payType, data.getId(), data.getPrice(), data.getName(), (orderNo) => {
                if (orderNo) {
                    AFUtil.reportPurchase(data.getId(), orderNo, data.getPrice());
                }
                if (payType === Constants_pb_2.EQS_PAY) {
                    GlobalData.getInstance().loadingAni.Close();
                    return;
                }
            });
        }
    }

    class WeekGift extends Laya.Box {
        constructor() {
            super(...arguments);
            this.nodeItems = [];
        }
        onEnable() {
            this.Init();
        }
        Init() {
            this.initListener();
            WeekGift.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            for (let i = 0; i < 3; i++) {
                let nodeName = "node_item" + i;
                let nodeItem = window.findNodeByName(this.root, nodeName);
                window.InitialNode(nodeItem);
                nodeItem.imgPrice.on(Laya.Event.CLICK, this, this.OnSelItem, [i]);
                this.nodeItems[i] = nodeItem;
            }
            this.Show(null);
        }
        initListener() {
            EventManager.getInstance().on(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
        }
        onStoreOrderComplete() {
            AFUtil.reportUserOrder();
            TopTipsManager.getInstance().showTopTips(WARNING.RECHARGE_SUCC);
            this.initGoods();
        }
        Show(params) {
            if (!this.inited) {
                this.Init();
            }
            this.m_params = params;
            this.visible = true;
            this.initData();
        }
        initData() {
            return __awaiter(this, void 0, void 0, function* () {
                this.initGoods();
            });
        }
        initGoods() {
            return __awaiter(this, void 0, void 0, function* () {
                GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
                DataStore.getInstance().queryGoodsList(1029, 1, 20, (res) => __awaiter(this, void 0, void 0, function* () {
                    if (null != res) {
                        let list = res.getMerchandiselistList();
                        this.goodsData = list;
                        try {
                            let ack = yield LuckyService.getInstance().lucky([GlobalVariables.TASK_7002, GlobalVariables.TASK_7003, GlobalVariables.TASK_7004]);
                            GlobalData.getInstance().loadingAni.Close();
                            let tasksMap = ack.getTasksMap();
                            this.taskData = [tasksMap.get(GlobalVariables.TASK_7002), tasksMap.get(GlobalVariables.TASK_7003), tasksMap.get(GlobalVariables.TASK_7004)];
                        }
                        catch (error) {
                            TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                            GlobalData.getInstance().loadingAni.Close();
                            return;
                        }
                        for (let i = 0; i < this.goodsData.length; i++) {
                            if (this.nodeItems[i] && this.taskData[i]) {
                                this.nodeItems[i].visible = true;
                                this.refreshItem(i);
                            }
                        }
                    }
                    else {
                        GlobalData.getInstance().loadingAni.Close();
                        TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                    }
                }));
            });
        }
        refreshItem(__index) {
            let nodeItem = this.nodeItems[__index];
            let goodsItem = this.goodsData[__index];
            let taskItem = this.taskData[__index];
            let awardList = taskItem.getAwardsList();
            if (!awardList) {
                return;
            }
            let awardNum = awardList[0].getItemnum() / 100;
            let price = goodsItem.getPrice() / 100;
            let amountLab = nodeItem.lblAmount;
            amountLab.text = (price + awardNum * 7).toString();
            let moneyLab1 = nodeItem.lblMoney;
            let moneyLab2 = nodeItem.lblMoney2;
            moneyLab1.text = "R$" + (price);
            moneyLab2.text = "R$" + (awardNum);
            let priceLab = nodeItem.imgPrice.lab;
            priceLab.text = "R$" + (price);
            let stateImg = nodeItem.imgState;
            let stateLab = nodeItem.imgState.lab;
            if (taskItem.getEtime() > 0) {
                stateImg.visible = true;
                priceLab.parent.visible = false;
                let timeResult = this.getTimeDifference(taskItem.getEtime());
                stateLab.visible = true;
                if (timeResult.type == "day") {
                    stateLab.text = timeResult.value.toString() + " dias restantes";
                }
                else if (timeResult.type == "hour") {
                    stateLab.text = timeResult.value.toString() + " horas restantes";
                }
                else if (timeResult.type == "minute") {
                    stateLab.text = timeResult.value.toString() + " minutos restantes";
                }
            }
            else {
                priceLab.parent.visible = true;
                stateLab.visible = false;
            }
        }
        getTimeDifference(timestamp) {
            const currentTimestamp = Math.floor(Date.now() / 1000);
            const timeDifference = Math.max(timestamp - currentTimestamp, 0);
            if (timeDifference >= 24 * 60 * 60) {
                const days = Math.floor(timeDifference / (24 * 60 * 60));
                return { value: days, type: 'day' };
            }
            else if (timeDifference >= 60 * 60) {
                const hours = Math.floor(timeDifference / (60 * 60));
                return { value: hours, type: 'hour' };
            }
            else {
                const minutes = Math.floor(timeDifference / 60);
                return { value: minutes, type: 'minute' };
            }
        }
        OnSelItem(__index) {
            if (!this.goodsData) {
                return;
            }
            let item = this.goodsData[__index];
            this.recharge(item);
        }
        recharge(data) {
            GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
            let payType = Constants_pb_2.EQS_PAY;
            DataStore.getInstance().unifiedOrder(payType, data.getId(), data.getPrice(), data.getName(), (orderNo) => {
                if (orderNo) {
                    AFUtil.reportPurchase(data.getId(), orderNo, data.getPrice());
                }
                if (payType === Constants_pb_2.EQS_PAY) {
                    GlobalData.getInstance().loadingAni.Close();
                    return;
                }
            });
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            Laya.Tween.to(this.root, { scaleX: 0, scaleY: 0 }, 200, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                this.visible = false;
                PopupManager.Destory(PREFAB_LOBBY.WEEK_GIFT);
                if (this.m_params) {
                    if (GlobalData.getInstance().lobbyScene.m_btnRechargeAct.visible) {
                        PopupManager.Show(PREFAB_LOBBY.RECHARGE_ACT, null);
                    }
                }
            }), 0);
        }
        onDestroy() {
            EventManager.getInstance().off(LobbyDefine.STORE_ORDER_COMPLETE, this, this.onStoreOrderComplete);
        }
    }

    class AffiliateCashback extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
        }
        onEnable() {
            let rootBox = this.owner;
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
        }
        onDisable() {
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner;
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                PopupManager.Hide(PREFAB_LOBBY.AFFILIATE_CASHBACK);
            }), 0);
        }
    }

    class AffiliateCommission extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
        }
        onEnable() {
            let rootBox = this.owner;
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
        }
        onDisable() {
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner;
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                PopupManager.Hide(PREFAB_LOBBY.AFFILIATE_COMMISSION);
            }), 0);
        }
    }

    class AffiliateDetail extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.userList = null;
            this.emptyView = null;
            this.tabCategoryData = ["Todos", "Nível1", "Nível2"];
            this.tabCategoryIndex = 0;
            this.tabDateIndex = 0;
            this.userData = null;
        }
        onEnable() {
            let rootBox = this.owner;
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
            this.categoryBtn.on(Laya.Event.CLICK, this, this.onBtnCagetory);
            this.categoryView.selectHandler = new Laya.Handler(this, this.onTabCategoryChange);
            this.dateBtn.on(Laya.Event.CLICK, this, this.onBtnDate);
            this.dateView.selectHandler = new Laya.Handler(this, this.onTabDateChange);
            this.userList.renderHandler = new Laya.Handler(this, this.updateUserItem);
            this.userList.vScrollBarSkin = "";
            this.userList.array = [];
            this.tabDateData = this.getDate();
            let tabItems = this.dateView.items;
            for (let i = 0; i < tabItems.length; i++) {
                let item = tabItems[i];
                item.label = this.tabDateData[i][1] + "-" + this.tabDateData[i][2];
            }
            this.dateBtn.label = this.tabDateData[this.tabDateIndex][1] + "-" + this.tabDateData[this.tabDateIndex][2];
            this.requestInfo();
        }
        onDisable() {
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner;
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                PopupManager.Hide(PREFAB_LOBBY.AFFILIATE_DETAIL);
            }), 0);
        }
        onBtnCagetory() {
            this.categoryView.visible = !this.categoryView.visible;
        }
        onBtnDate() {
            this.dateView.visible = !this.dateView.visible;
        }
        onTabCategoryChange(index) {
            this.tabCategoryIndex = index;
            this.categoryView.selectedIndex = index;
            this.categoryView.visible = false;
            this.categoryBtn.label = this.tabCategoryData[index];
            this.requestInfo();
        }
        onTabDateChange(index) {
            this.tabDateIndex = index;
            this.dateView.selectedIndex = index;
            this.dateView.visible = false;
            this.dateBtn.label = this.tabDateData[this.tabDateIndex][1] + "-" + this.tabDateData[this.tabDateIndex][2];
            this.requestInfo();
        }
        updateUserItem(cell, index) {
            let data = this.userList.dataSource;
            let item = data[index];
            let nameLab = cell.getChildByName("nameLab");
            let idLab = cell.getChildByName("idLab");
            let awardLab = cell.getChildByName("awardLab");
            let userItem = this.userData[item.getPid()];
            let nickname = window.GetRealName(userItem ? userItem.nickname : "User" + item.getPid());
            nameLab.text = window.formatString(nickname, 15);
            idLab.text = item.getPid() + "";
            awardLab.text = "R$ " + item.getAdnum() / 100;
            if (index % 2 != 0) {
                cell.skin = "";
            }
        }
        requestInfo() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let typeData = [1 | 2, 1, 2];
                    let type = typeData[this.tabCategoryIndex];
                    let date = Number(this.tabDateData[this.tabDateIndex].join(''));
                    let ack = yield OutInviteService.getInstance().info(type, date, date, 0, 100);
                    let data = ack.getArray1List().concat(ack.getArray2List());
                    let pidList = data.map(e => e.getPid());
                    this.userData = new Array();
                    DataPlayer.getInstance().getOtherPlayerInfo(pidList, this.userData, (result) => {
                        this.userList.refresh();
                    });
                    this.userList.array = data;
                    this.userList.dataSource = data;
                    this.userList.refresh();
                    if (null == data || data.length == 0) {
                        this.emptyView.visible = true;
                    }
                    else {
                        this.emptyView.visible = false;
                    }
                }
                catch (error) {
                    CC.Loge("OutInviteService::info  error = ", error);
                }
            });
        }
        getDate() {
            var base = new Date().getTime();
            var oneDay = 24 * 3600 * 1000;
            var date = [];
            for (var i = 0; i < 7; i++) {
                var now = new Date(base - (i * oneDay));
                let month = now.getMonth() + 1;
                let day = now.getDate();
                date.push([now.getFullYear(), month >= 10 ? month : ("0" + month), day >= 10 ? day : ("0" + day)]);
            }
            return date;
        }
    }

    class AffiliateFaq extends Laya.Script {
        constructor() {
            super();
            this.commissionBtn = null;
            this.ruleBtn = null;
        }
        onEnable() {
            this.commissionBtn.on(Laya.Event.CLICK, this, this.onBtnCommission);
            this.ruleBtn.on(Laya.Event.CLICK, this, this.onBtnRule);
        }
        onDisable() {
        }
        onBtnCommission() {
            PopupManager.Show(PREFAB_LOBBY.AFFILIATE_COMMISSION, null);
        }
        onBtnRule() {
            PopupManager.Show(PREFAB_LOBBY.AFFILIATE_RULE, null);
        }
    }

    class AffiliatePanel extends Laya.Script {
        constructor() {
            super();
            this.unLoginView = null;
            this.loginBtn = null;
            this.commissionBtn = null;
            this.cashbackBtn = null;
            this.loginedView = null;
            this.commission1Btn = null;
            this.cashback1Btn = null;
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            this.loginBtn.on(Laya.Event.MOUSE_DOWN, this, this.onBtnLogin);
            this.commissionBtn.on(Laya.Event.CLICK, this, this.onBtnCommission);
            this.cashbackBtn.on(Laya.Event.CLICK, this, this.onBtnCashback);
            this.ruleHelpBtn1.on(Laya.Event.CLICK, this, this.onBtnCommission);
            this.inviteTipBtn.on(Laya.Event.CLICK, this, this.onBtnInviteTip);
            this.commission1Btn.on(Laya.Event.CLICK, this, this.onBtnCommission);
            this.cashback1Btn.on(Laya.Event.CLICK, this, this.onBtnCashback);
            this.awardBtn.on(Laya.Event.CLICK, this, this.onBtnAward);
            this.detailBtn.on(Laya.Event.CLICK, this, this.onBtnDetail);
            let userInfo = DataPlayer.getInstance().userInfo;
            this.userIdLab.text = userInfo.nPid + "";
            this.linkLab.text = GlobalVariables.INVITE_LINK + "?pid=" + GlobalData.getInstance().myPid;
            this.copyIdBtn.on(Laya.Event.CLICK, this, this.onBtnCopyId);
            this.copyLinkBtn.on(Laya.Event.CLICK, this, this.onBtnCopyLink);
            this.peopleHelpBtn.on(Laya.Event.CLICK, this, this.onBtnPeopleHelp);
            this.ruleHelpBtn.on(Laya.Event.CLICK, this, this.onBtnCommission);
            window.InitialNode(this.shareBox);
            let btnArr = [this.shareBox.fbBtn, this.shareBox.tgBtn, this.shareBox.twBtn,
                this.shareBox.waBtn];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
            this.inviteLink = encodeURI(GlobalVariables.INVITE_LINK + "?pid=" + GlobalData.getInstance().myPid);
            this.setLoginState();
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
        }
        onLoginSuccess() {
            this.setLoginState();
        }
        setLoginState() {
            if (GlobalData.getInstance().myPid > 1000) {
                this.unLoginView.visible = false;
                this.loginedView.visible = true;
                this.requestQuery();
                this.setRecordData();
            }
            else {
                this.unLoginView.visible = true;
                this.loginedView.visible = false;
            }
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "fbBtn") {
                this.onfbBtn();
            }
            else if (node.name == "tgBtn") {
                this.ontgBtn();
            }
            else if (node.name == "twBtn") {
                this.ontwBtn();
            }
            else if (node.name == "waBtn") {
                this.onwaBtn();
            }
        }
        onfbBtn() {
            let msg = "Facebook";
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1020, msg);
            let shareUrl = "https://www.facebook.com/sharer.php?u=" + this.inviteLink + "&t=" + WARNING.SHARE_DES;
            DeviceData.getInstance().jumpBrowser(shareUrl);
            let resStr = WARNING.SHARE_DES + "\r\n" + this.inviteLink;
            DeviceData.getInstance().setClipboard(resStr);
            TopTipsManager.getInstance().showTopTips(WARNING.COPY_SHARE);
        }
        ontgBtn() {
            let msg = "Telegram";
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1020, msg);
            let shareUrl = "https://telegram.me/share/url?url=" + this.inviteLink + "&text=" + WARNING.SHARE_DES;
            DeviceData.getInstance().jumpBrowser(shareUrl);
        }
        ontwBtn() {
            let msg = "Twitter";
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1020, msg);
            let shareUrl = "https://twitter.com/intent/tweet?url=" + this.inviteLink + "&text=" + WARNING.SHARE_DES;
            DeviceData.getInstance().jumpBrowser(shareUrl);
        }
        onwaBtn() {
            let msg = "WhatsApp";
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1020, msg);
            let shareUrl = "https://api.whatsapp.com/send?text=" + WARNING.SHARE_DES + "%20" + this.inviteLink;
            DeviceData.getInstance().jumpBrowser(shareUrl);
        }
        onBtnLogin() {
            PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
        }
        onBtnInviteTip() {
            this.inviteDetailTip.visible = true;
            Laya.timer.once(2000, this, () => {
                this.inviteDetailTip.visible = false;
            });
        }
        onBtnCommission() {
            PopupManager.Show(PREFAB_LOBBY.AFFILIATE_COMMISSION, null);
        }
        onBtnCashback() {
            PopupManager.Show(PREFAB_LOBBY.AFFILIATE_CASHBACK, null);
        }
        onBtnCopyId() {
            this.useCopy(GlobalData.getInstance().myPid + "");
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1019);
        }
        onBtnCopyLink() {
            this.useCopy(this.linkLab.text);
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1018);
        }
        onBtnPeopleHelp() {
            this.peopleHelpView.visible = true;
            Laya.timer.once(2000, this, () => {
                this.peopleHelpView.visible = false;
            });
        }
        useCopy(content) {
            DeviceData.getInstance().setClipboard(content);
            TopTipsManager.getInstance().showTopTips(WARNING.COPY_TO_CLIPBOARD);
        }
        onBtnAward() {
            this.requrstAward();
        }
        onBtnDetail() {
            PopupManager.Show(PREFAB_LOBBY.AFFILIATE_DETAIL, null);
        }
        requestQuery() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
                    let ack = yield OutInviteService.getInstance().query();
                    let info = ack.getInfo();
                    this.initInfoData(info);
                }
                catch (error) {
                    CC.Log("OutInviteService::query  award = ", error);
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        requrstAward() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    GlobalData.getInstance().loadingAni.Show(WARNING.LOADING);
                    let ack = yield OutInviteService.getInstance().award();
                    if (ack.getCret() == 0) {
                        let info = ack.getInfo();
                        this.initInfoData(info);
                    }
                    else {
                        TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL + ack.getCret());
                    }
                }
                catch (error) {
                    CC.Loge("OutInviteService::query  error = ", error);
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        initInfoData(info) {
            return __awaiter(this, void 0, void 0, function* () {
                if (null != info) {
                    let tipStr = "Todos: " + (info.getInnum1() + info.getInnum2()) + "\nDireto: " + info.getInnum1() + "\nIndireto: " + info.getInnum2();
                    this.inviteDetailTip.getChildByName("tipLab").text = tipStr;
                    this.level1Lab.text = info.getInnum1() + "";
                    this.level2Lab.text = info.getInnum2() + "";
                    this.levelTotalLab.text = (info.getInnum1() + info.getInnum2()) + "";
                    this.cashCurLab.text = "R$ " + (info.getAdcur1() + info.getAdcur2()) / 100;
                    this.cashTotalLab1.text = "R$ " + (info.getAdall1() + info.getAdall2()) / 100;
                    this.cashTotalLab2.text = "R$ " + (info.getAdall1() + info.getAdall2()) / 100;
                    let adCurAll = info.getAdcur1() + info.getAdcur2();
                    if (adCurAll <= 0) {
                        this.awardBtn.disabled = true;
                        this.awardBtn.gray = false;
                        this.awardBtn.parent.alpha = 0.5;
                    }
                    else {
                        this.awardBtn.disabled = false;
                        this.awardBtn.parent.alpha = 1;
                    }
                    this.awardBtn.getChildByName("redPoint").visible = adCurAll > 0;
                }
            });
        }
        setRecordData() {
            var maskRect = new Laya.Sprite();
            maskRect.graphics.drawRect(0, 0, 1020, 250, "#ffffff");
            this.recordImg.mask = maskRect;
            var random = Math.floor(Math.random() * 4000000 + 2000000);
            this.recordImg.getChildByName("amountLab").text = "R$ " + random;
            this.initRecord();
        }
        initRecord() {
            if (!this.randomInfo) {
                this.randomInfo = [];
                for (let i = 0; i < 6; i++) {
                    this.randomInfo.push(this.getRandomUser());
                }
            }
            for (let i = 0; i < 6; i++) {
                let user = this.randomInfo[i];
                let item0 = this.recordBox.getChildAt(i);
                item0.getChildByName("userImg").skin = user.image;
                item0.getChildByName("userLab").text = user.name;
                item0.getChildByName("info2Lab").text = user.amount;
            }
            this.recordBox.y = 0;
            this.startRecordAnim();
        }
        getRandomUser() {
            var random1 = Math.floor(Math.random() * 9 + 1);
            var random2 = Math.floor(Math.random() * 9 + 1);
            var random3 = Math.floor(Math.random() * 400 + 100);
            return {
                image: "2d/icon/head/touxiang0" + random1 + "%403x.png",
                name: "User" + random1 + "***" + random2,
                amount: "R$ " + random3
            };
        }
        startRecordAnim() {
            Laya.Tween.to(this.recordBox, { y: -360 }, 5000, Laya.Ease.linearNone, Laya.Handler.create(this, () => {
                Laya.timer.once(1000, this, () => {
                    this.randomInfo.splice(0, 3);
                    for (let i = 0; i < 3; i++) {
                        this.randomInfo.push(this.getRandomUser());
                    }
                    this.initRecord();
                });
            }));
        }
    }

    class AffiliateRule extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
        }
        onEnable() {
            let rootBox = this.owner;
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
        }
        onDisable() {
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner;
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                PopupManager.Hide(PREFAB_LOBBY.AFFILIATE_RULE);
            }), 0);
        }
    }

    class AffiliateTutorial extends Laya.Script {
        constructor() { super(); }
        onEnable() {
        }
        onDisable() {
        }
    }

    class HallMenu extends Laya.Box {
        constructor() {
            super(...arguments);
            this.m_type = 0;
        }
        Init(param) {
            this.visible = false;
            HallMenu.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            let panel = window.findNodeByName(this, "panel");
            panel.vScrollBarSkin = "";
            let nodeView = window.findNodeByName(this, "navView");
            this.nodeView = nodeView;
            window.InitialNode(nodeView);
            this.nodeCont = nodeView.nodeCont;
            this.nodePrv = nodeView.nodePrv;
            this.nodePrv.listSel.vScrollBarSkin = "";
            this.nodePrv.listSel.renderHandler = new Laya.Handler(this, this.updatePrvItem);
            this.tabMenu = window.findNodeByName(this, "tabMenu");
            this.tabMenu.selectHandler = new Laya.Handler(this, this.onTabMenuChange);
            let btnArr = [this.nodeCont.btnHot, this.nodeCont.btnCasino, this.nodeCont.btnSlot,
                this.nodeCont.btnFish, this.nodeCont.btnLive, this.nodeCont.btnSport,
                this.nodeCont.btnVip, this.nodeCont.btnAffiliate, this.nodeCont.btnServer,
                nodeView.btnPopular, nodeView.btnLike, nodeView.btnRecent,
                nodeView.btnPlay, nodeView.btnSign,
                this.nodeCont.btnSlot.btnArrow, this.nodeCont.btnInstall,];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show(param) {
            if (!this.inited) {
                this.Init(param);
            }
            this.m_type = param || 0;
            this.root.x = -900;
            this.visible = true;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            Laya.Tween.to(this.root, { x: 0 }, 200, Laya.Ease.circOut);
            this.setGameInfo();
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            if (this.m_type == 1) {
                let document = Laya.Browser.window.document;
                document.getElementById("h5Div").style.display = "block";
            }
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.HALL_MENU);
        }
        setGameInfo() {
            this.m_gameDatas = GlobalData.getInstance().lobbyScene.m_subLayers[0].m_gameDatas;
            this.nodePrv.listSel.dataSource = GAME_SOURCE;
            if (DeviceData.getInstance().checkAppEnv()) {
                this.nodeCont.btnInstall.visible = false;
            }
        }
        onTabMenuChange(index) {
            if (index == 0) {
            }
            else if (index == 1) {
                this.onbtnSport(1);
            }
        }
        checkH5Close() {
            let document = Laya.Browser.window.document;
            var h5Div = document.getElementById("h5Div");
            var ctrlDiv = document.getElementById("ctrlDiv");
            h5Div.style.display = 'none';
            ctrlDiv.style.display = 'none';
            var myIframe = document.getElementById("myIframe");
            myIframe.src = "about:blank";
            window.h5HideCallback && window.h5HideCallback();
        }
        updatePrvItem(cell, index) {
            let itemData = cell.dataSource;
            window.InitialNode(cell);
            cell.btnItem.skin = itemData.img + ".png";
            cell.btnItem.clickHandler = Laya.Handler.create(this, () => {
                if (this.m_gameDatas) {
                    let gameList = this.m_gameDatas.get(2);
                    if (gameList) {
                        let gameArr = gameList.getGamesList();
                        GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 2, gameArr, itemData);
                    }
                }
            }, null, false);
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnHot") {
                this.onbtnHot();
            }
            else if (node.name == "btnCasino") {
                this.onbtnCasino();
            }
            else if (node.name == "btnSlot") {
                this.onbtnSlot();
            }
            else if (node.name == "btnFish") {
                this.onbtnFish();
            }
            else if (node.name == "btnLive") {
                this.onbtnLive();
            }
            else if (node.name == "btnSport") {
                this.onbtnSport();
            }
            else if (node.name == "btnVip") {
                this.onbtnVip();
            }
            else if (node.name == "btnAffiliate") {
                this.onbtnAffiliate();
            }
            else if (node.name == "btnServer") {
                this.onbtnServer();
            }
            else if (node.name == "btnPopular") {
                this.onbtnPopular();
            }
            else if (node.name == "btnLike") {
                this.onbtnLike();
            }
            else if (node.name == "btnRecent") {
                this.onbtnRecent();
            }
            else if (node.name == "btnSign") {
                this.onbtnSign();
            }
            else if (node.name == "btnPlay") {
                this.onbtnPlay();
            }
            else if (node.name == "btnArrow") {
                this.onbtnArrow();
            }
            else if (node.name == "btnInstall") {
                this.onbtnInstall();
            }
            if (this.m_type == 1) {
                this.checkH5Close();
            }
        }
        onbtnHot() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(0);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 0, gameArr);
                }
            }
        }
        onbtnCasino() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(1);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 1, gameArr);
                }
            }
        }
        onbtnSlot() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(2);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 2, gameArr);
                }
            }
        }
        onbtnFish() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(3);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 3, gameArr);
                }
            }
        }
        onbtnLive() {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(4);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 4, gameArr);
                }
            }
        }
        onbtnSport(type) {
            if (this.m_gameDatas) {
                let gameList = this.m_gameDatas.get(5);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    if (type == 1) {
                        if (gameArr[0]) {
                            PopupManager.Show(PREFAB_LOBBY.GAME_BRIEF, gameArr[0]);
                            this.Close();
                        }
                    }
                    else {
                        GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 5, gameArr);
                    }
                }
            }
        }
        onbtnVip() {
            if (GlobalData.getInstance().myPid > 1000) {
                PopupManager.Show(PREFAB_LOBBY.VIP_WIN, null);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
            this.Close();
        }
        onbtnAffiliate() {
            GlobalData.getInstance().lobbyScene.jumpToSub(2);
            this.Close();
        }
        onbtnServer() {
            if (GlobalData.getInstance().myPid > 1000) {
                window.gotoService();
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.HALL_MENU);
        }
        onbtnPopular() {
            let gameList = this.m_gameDatas.get(0);
            if (gameList) {
                let arr = gameList.getGamesList();
                GlobalData.getInstance().lobbyScene.showGameSelLayer(0, 0, arr);
            }
        }
        onbtnLike() {
            if (GlobalData.getInstance().myPid > 1000) {
                GlobalData.getInstance().lobbyScene.showGameSelLayer(1, 0);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
        }
        onbtnRecent() {
            if (GlobalData.getInstance().myPid > 1000) {
                GlobalData.getInstance().lobbyScene.showGameSelLayer(1, 1);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
        }
        onbtnSign() {
            if (GlobalData.getInstance().myPid > 1000) {
                PopupManager.Show(PREFAB_LOBBY.VIP_RATE, null);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
            this.Close();
        }
        onbtnPlay() {
            GlobalData.getInstance().lobbyScene.jumpToSub(2);
            this.Close();
        }
        onbtnArrow() {
            if (this.nodeCont.btnSlot.btnArrow.selected) {
                this.nodeCont.btnSlot.btnArrow.imgArrow.skin = "2d/ui/common/icon_xiangshang.png";
            }
            else {
                this.nodeCont.btnSlot.btnArrow.imgArrow.skin = "2d/ui/common/icon_xiangxia.png";
            }
            this.nodePrv.visible = this.nodeCont.btnSlot.btnArrow.selected;
        }
        onbtnInstall() {
            if (Laya.Browser.onIOS || Laya.Browser.onMac) {
                PopupManager.Show(PREFAB_LOBBY.DOWN_APP, null);
            }
            else {
                let downUrl = "https://www.winfun.love/pixel/download/WinFun-1.apk";
                if (GlobalVariables.SOURCE_ID_ANDROID == 1100204) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-1.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1100205) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-2.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1100206) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-3.apk";
                }
                else if (GlobalVariables.SOURCE_ID_ANDROID == 1102002) {
                    downUrl = "https://www.winfun.love/pixel/download/WinFun-official.apk";
                }
                window.open(downUrl);
            }
        }
        onDestroy() {
        }
    }

    class LayerAffiliate extends Laya.Box {
        constructor() {
            super();
            this.tabMenu = null;
            this.tabStack = null;
            this.tableIndex = 0;
        }
        onAwake() {
            this.adapteScreen();
            this.initData();
            this.initUI();
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
        }
        onLoginSuccess() {
            this.setLoginState();
        }
        adapteScreen() {
        }
        initData() {
        }
        initUI() {
            this.tabMenu = window.findNodeByName(this, "tabMenu");
            this.tabStack = window.findNodeByName(this, "tabStack");
            Laya.loader.load([
                PREFAB_LOBBY.AFFILIATE_PANEL,
                PREFAB_LOBBY.AFFILIATE_FAQ,
                PREFAB_LOBBY.AFFILIATE_TUTORIAL
            ], Laya.Handler.create(this, function (res) {
                let prefab1 = Laya.loader.getRes(PREFAB_LOBBY.AFFILIATE_PANEL);
                let prefab2 = Laya.loader.getRes(PREFAB_LOBBY.AFFILIATE_FAQ);
                let prefab3 = Laya.loader.getRes(PREFAB_LOBBY.AFFILIATE_TUTORIAL);
                let pre1 = new Laya.Prefab();
                pre1.json = prefab1;
                this.tabStack.addItem(pre1.create());
                let pre2 = new Laya.Prefab();
                pre2.json = prefab2;
                this.tabStack.addItem(pre2.create());
                let pre3 = new Laya.Prefab();
                pre3.json = prefab3;
                this.tabStack.addItem(pre3.create());
                this.tabMenu.selectHandler = new Laya.Handler(this, this.onTabMenuChange);
                this.tabMenu.selectedIndex = this.tableIndex;
            }));
        }
        setLoginState() {
            let affPanel = this.tabStack.getChildAt(0);
            if (affPanel) {
                let script = affPanel.getComponent(AffiliatePanel);
                if (script["setLoginState"]) {
                    script["setLoginState"]();
                }
            }
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnCreate") {
            }
        }
        setTabMenuChange(index) {
            this.tabMenu.selectedIndex = index;
        }
        onTabMenuChange(index) {
            this.tabStack.selectedIndex = index;
        }
    }

    class LayerBonus extends Laya.Box {
        constructor() {
            super();
            this.unLoginView = null;
            this.loginedView = null;
            this.cxgImg = null;
            this.jackpotImg = null;
            this.qtImg = null;
            this.tcImg = null;
            this.lcImg = null;
            this.zpImg = null;
            this.sjImg = null;
            this.myImg = null;
            this.flImg = null;
            this.reachargeActInterval = null;
        }
        onAwake() {
            this.adapteScreen();
            this.initData();
            this.initUI();
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().on(LobbyDefine.VIP_INFO_NOTI, this, this.updateVipInfo);
            EventManager.getInstance().on(LobbyEvent.IM_LOGIN_NOTI, this, this.onLuckyNoti);
            EventManager.getInstance().on(LobbyEvent.ACT_AGGRG_EVENT, this, this.onActEvent);
            EventManager.getInstance().on(LobbyEvent.GET_AWARD_SUCCESS, this, this.onGetAwardSuccess);
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().off(LobbyDefine.VIP_INFO_NOTI, this, this.updateVipInfo);
            EventManager.getInstance().off(LobbyEvent.ACT_AGGRG_EVENT, this, this.onActEvent);
            EventManager.getInstance().off(LobbyEvent.GET_AWARD_SUCCESS, this, this.onGetAwardSuccess);
        }
        onLoginSuccess() {
            this.setLoginState();
        }
        onLuckyNoti(type, res) {
            this.setTurnTableData();
            this.setRechargeActData();
        }
        onActEvent(ack) {
            this.getCashPot(ack);
        }
        onGetAwardSuccess(data) {
            if (data && data.getNawardsource() == 6) {
                this.setSignData();
            }
        }
        adapteScreen() {
        }
        initData() {
        }
        initUI() {
            this.unLoginView = window.findNodeByName(this, "unLoginView");
            let btn1 = window.findNodeByName(this.unLoginView, "img1").getChildByName("btn");
            let btn2 = window.findNodeByName(this.unLoginView, "img2").getChildByName("btn");
            let btn3 = window.findNodeByName(this.unLoginView, "img3").getChildByName("btn");
            let btn4 = window.findNodeByName(this.unLoginView, "img4").getChildByName("btn");
            btn1.on(Laya.Event.CLICK, this, this.onBtnLogin);
            btn2.on(Laya.Event.CLICK, this, this.onBtnLogin);
            btn3.on(Laya.Event.CLICK, this, this.onBtnVipInfo);
            btn4.on(Laya.Event.CLICK, this, this.onBtnLogin);
            this.loginedView = window.findNodeByName(this, "loginedView");
            this.cxgImg = window.findNodeByName(this.loginedView, "cxgImg");
            this.jackpotImg = window.findNodeByName(this.loginedView, "jackpotImg");
            this.qtImg = window.findNodeByName(this.loginedView, "qtImg");
            this.tcImg = window.findNodeByName(this.loginedView, "tcImg");
            this.lcImg = window.findNodeByName(this.loginedView, "lcImg");
            this.zpImg = window.findNodeByName(this.loginedView, "zpImg");
            this.sjImg = window.findNodeByName(this.loginedView, "sjImg");
            this.myImg = window.findNodeByName(this.loginedView, "myImg");
            this.flImg = window.findNodeByName(this.loginedView, "flImg");
            window.InitialNode(this.cxgImg);
            window.InitialNode(this.jackpotImg);
            this.codeImg = window.findNodeByName(this.loginedView, "codeImg");
            window.InitialNode(this.codeImg);
            this.codeImg.codeBtn.clickHandler = Laya.Handler.create(this, this.onExchange, null, false);
            let viewArr = [this.cxgImg, this.jackpotImg, this.qtImg, this.tcImg,
                this.lcImg, this.zpImg, this.sjImg, this.myImg, this.flImg,];
            for (let i = 0; i < viewArr.length; i++) {
                let detailBtn = viewArr[i].getChildByName("detailBtn");
                if (detailBtn) {
                    window.addBtnListener(detailBtn, Laya.Handler.create(this, this.onBtnFunc, null, false));
                }
                let btn = viewArr[i].getChildByName("helpBtn");
                if (btn) {
                    window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnHelp, null, false));
                }
            }
            this.setLoginState();
        }
        setLoginState() {
            if (GlobalData.getInstance().myPid > 1000) {
                this.unLoginView.visible = false;
                this.loginedView.visible = true;
                this.setSignData();
                this.setRechargeActData();
                this.setTurnTableData();
                this.setVipData();
                this.setCashbackData();
                this.setCashPotData();
                this.setJackPotData();
            }
            else {
                this.unLoginView.visible = true;
                this.loginedView.visible = false;
            }
        }
        onBtnLogin() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
        }
        onBtnVip() {
            if (GlobalData.getInstance().myPid > 1000) {
                PopupManager.Show(PREFAB_LOBBY.VIP_WIN, null);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
        }
        onBtnVipInfo() {
            PopupManager.Show(PREFAB_LOBBY.VIP_INFO, null);
        }
        onBtnVipRate() {
            if (GlobalData.getInstance().myPid > 1000) {
                PopupManager.Show(PREFAB_LOBBY.VIP_RATE, null);
            }
            else {
                PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, null);
            }
        }
        onBtnHelp(__event) {
            let node = __event.target;
            let helpView = node.parent.getChildByName("helpView");
            helpView.visible = true;
            Laya.timer.once(2000, this, () => {
                helpView.visible = false;
            });
        }
        onBtnFunc(__event) {
            let node = __event.target.parent;
            if (node.name == "qtImg") {
                PopupManager.Show(PREFAB_LOBBY.SIGN, null);
            }
            else if (node.name == "lcImg") {
                PopupManager.Show(PREFAB_LOBBY.RECHARGE_ACT, null);
            }
            else if (node.name == "jackpotImg") {
                PopupManager.Show(PREFAB_LOBBY.JACKPOT_MAIN, null);
            }
            else if (node.name == "cxgImg") {
                PopupManager.Show(PREFAB_LOBBY.CASH_POT, null);
            }
            else if (node.name == "tcImg") {
                PopupManager.Show(PREFAB_LOBBY.NEW_GIFT, null);
            }
            else if (node.name == "zpImg") {
                PopupManager.Show(PREFAB_LOBBY.LUCKY_TURN_TABLE, null);
            }
        }
        onExchange() {
            let codeStr = this.codeImg.codeInput.text;
            if (!codeStr || codeStr == "") {
                TopTipsManager.getInstance().showTopTips(WARNING.REDEEM_NULL);
                return;
            }
            AwardService.getInstance().sendRedeemCode(codeStr);
        }
        updateVipInfo(p_data = null, p_ischange = true) {
            this.setVipData();
            this.setCashbackData();
        }
        onBtnVipSj() {
            let index = VipManager.getInstance().playerVipInfo.nVipLevel;
            VipManager.getInstance().getVipAward(index, (result) => {
                if (result) {
                    this.setVipData();
                }
                else {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
        onBtnVipMy() {
            let index = VipManager.getInstance().playerVipInfo.nVipLevel;
            VipManager.getInstance().getDailyAward(index, (result) => {
                if (result == 0) {
                    this.setVipData();
                }
                else if (result == -11004) {
                    let my2Lab = window.findNodeByName(this.myImg, "my2Lab");
                    let tmpStr = window.formatPlaceHolderString(WARNING.BET_NEED2, my2Lab.text);
                    TopTipsManager.getInstance().showTopTips(tmpStr);
                }
                else {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
        setSignData() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let ack = yield AggrgService.getInstance().info();
                    let aggInfo = ack.getInfosMap().get(GlobalVariables.AGG_ID);
                    let dayCnt = aggInfo.getDaycnt();
                    let dayCur = aggInfo.getDaycur();
                    let status = -1;
                    for (let i = 0; i < 7; i++) {
                        if (i < dayCnt) {
                            status = 0;
                        }
                        else if (i == dayCnt && i < dayCur) {
                            status = 1;
                            break;
                        }
                    }
                    let detailBtn = window.findNodeByName(this.qtImg, "detailBtn");
                    detailBtn.getChildByName("redPoint").visible = status == 1;
                }
                catch (error) {
                }
            });
        }
        setRechargeActData() {
            return __awaiter(this, void 0, void 0, function* () {
                this.lcImg.height = 0;
                let amountLab = window.findNodeByName(this.lcImg, "amountLab");
                let timeLab = window.findNodeByName(this.lcImg, "timeLab");
                try {
                    let ack = yield LuckyService.getInstance().lucky([GlobalVariables.TASK_4001]);
                    let task = ack.getTasksMap().get(GlobalVariables.TASK_4001);
                    const currentTimestamp = Math.floor(Date.now() / 1000);
                    if (currentTimestamp >= task.getStime() && currentTimestamp < task.getEtime()) {
                        this.lcImg.height = 567;
                        let awardList = task && task.getAwardsList();
                        if (!awardList) {
                            return;
                        }
                        amountLab.text = "R$ " + (task.getProcur() / 100);
                        this.setRechargeActCountdown(timeLab, task);
                        let flag = false;
                        for (let i = 0; i < 4; i++) {
                            let award = awardList[i];
                            if ((task.getState() & (1 << award.getAwardid())) > 0) {
                            }
                            else {
                                if (task.getProcur() >= award.getValue()) {
                                    flag = true;
                                    break;
                                }
                                else {
                                }
                            }
                        }
                        let detailBtn = window.findNodeByName(this.lcImg, "detailBtn");
                        detailBtn.getChildByName("redPoint").visible = flag;
                    }
                    else {
                        this.lcImg.removeSelf();
                    }
                }
                catch (error) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
        setRechargeActCountdown(labTime, task) {
            labTime.text = window.getTimeRemaining(task.getEtime());
            if (this.reachargeActInterval) {
                clearInterval(this.reachargeActInterval);
                this.reachargeActInterval = null;
            }
            this.reachargeActInterval = setInterval(() => {
                let remaingTime = window.getTimeRemaining(task.getEtime());
                labTime.text = remaingTime;
            }, 1000);
        }
        setTurnTableData() {
            return __awaiter(this, void 0, void 0, function* () {
                let zp1Lab = window.findNodeByName(this.zpImg, "zp1Lab");
                try {
                    let ack = yield LuckyService.getInstance().lucky([GlobalVariables.TASK_1001, GlobalVariables.TASK_10001]);
                    let lucky = ack.getLucky();
                    let times = lucky.getTimes() + lucky.getNexts();
                    zp1Lab.text = times.toString();
                    let detailBtn = window.findNodeByName(this.zpImg, "detailBtn");
                    detailBtn.getChildByName("redPoint").visible = lucky.getTimes() > 0;
                }
                catch (error) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
        setVipData() {
            let sj1Lab = window.findNodeByName(this.sjImg, "sj1Lab");
            let sj2Lab = window.findNodeByName(this.sjImg, "sj2Lab");
            let sj3Lab = window.findNodeByName(this.sjImg, "sj3Lab");
            let sj4Lab = window.findNodeByName(this.sjImg, "sj4Lab");
            let sjBtn = window.findNodeByName(this.sjImg, "sjBtn");
            let my1Lab = window.findNodeByName(this.myImg, "my1Lab");
            let my2Lab = window.findNodeByName(this.myImg, "my2Lab");
            let myBtn = window.findNodeByName(this.myImg, "myBtn");
            let index = VipManager.getInstance().playerVipInfo.nVipLevel;
            let playInfo = VipManager.getInstance().playerVipInfo;
            let vipData = VipManager.getInstance().getVipData(index);
            if (!vipData) {
                return;
            }
            let nextVipData = VipManager.getInstance().getVipData(index >= 16 ? index : (index + 1));
            sj1Lab.text = "VIP " + index;
            sj2Lab.text = "R$ " + (nextVipData.bet / 100);
            sj3Lab.text = "R$ " + (nextVipData.exp / 100);
            my1Lab.text = "R$ " + (vipData.need / 100);
            AwardService.getInstance().getAwardInfo(vipData.level_award, function (p_info) {
                let data = p_info.getArritemsList();
                if (data && data.length > 0) {
                    let item = data[0];
                    sj4Lab.text = "R$ " + (item.getNamount() / 100);
                }
            });
            AwardService.getInstance().getAwardInfo(vipData.daily_award, function (p_info) {
                let data = p_info.getArritemsList();
                if (data && data.length > 0) {
                    let item = data[0];
                    my2Lab.text = "R$ " + (item.getNamount() / 100);
                }
            });
            sjBtn.off(Laya.Event.CLICK, this, this.onBtnVip);
            sjBtn.off(Laya.Event.CLICK, this, this.onBtnVipSj);
            myBtn.off(Laya.Event.CLICK, this, this.onBtnVip);
            myBtn.off(Laya.Event.CLICK, this, this.onBtnVipMy);
            if (index < 1) {
                sjBtn.on(Laya.Event.CLICK, this, this.onBtnVip);
                myBtn.on(Laya.Event.CLICK, this, this.onBtnVip);
                return;
            }
            if (playInfo.mapVipAward.get(index)) {
                sjBtn.skin = "2d/ui/common/bg_sekuai_tiexiedi_0F0F0F.png";
                sjBtn.labelColors = "#B0F2FC";
                sjBtn.label = "Já foi recebido";
                sjBtn.getChildByName("redPoint").visible = false;
            }
            else {
                sjBtn.skin = "2d/ui/common/bg_sekuai_anniu_B0F2FC.png";
                sjBtn.labelColors = "#0F0F0F";
                sjBtn.label = "Receber";
                sjBtn.on(Laya.Event.CLICK, this, this.onBtnVipSj);
                sjBtn.getChildByName("redPoint").visible = true;
            }
            if (playInfo.mapBetAward.get(index)) {
                myBtn.skin = "2d/ui/common/bg_sekuai_tiexiedi_0F0F0F.png";
                myBtn.labelColors = "#B0F2FC";
                myBtn.label = "Já foi recebido";
                myBtn.getChildByName("redPoint").visible = false;
            }
            else {
                myBtn.skin = "2d/ui/common/bg_sekuai_anniu_B0F2FC.png";
                myBtn.labelColors = "#0F0F0F";
                myBtn.label = "Receber";
                myBtn.on(Laya.Event.CLICK, this, this.onBtnVipMy);
                myBtn.getChildByName("redPoint").visible = true;
            }
        }
        setJackPotData() {
            this.jackpotImg.nodeItem.getJackData();
        }
        setCashPotData() {
            AggrgService.getInstance().info(GlobalVariables.TASK_4003);
        }
        getCashPot(infoAck) {
            this.cxgImg.detailBtn.redPoint.visible = false;
            if (infoAck) {
                let infoMap = infoAck.getInfosMap();
                if (infoMap) {
                    let aggInfo = infoMap.get(GlobalVariables.TASK_4003);
                    if (aggInfo) {
                        let active1 = aggInfo.getActive();
                        let dayCur = aggInfo.getDaycur();
                        if (active1 > 0) {
                            this.cxgImg.lblCount.text = "R$ " + active1 / 100 + "";
                            this.cxgImg.detailBtn.redPoint.visible = true;
                        }
                        else {
                            this.cxgImg.lblCount.text = WARNING.TOM_GET;
                        }
                    }
                }
            }
        }
        setCashbackData() {
            return __awaiter(this, void 0, void 0, function* () {
                let fl1Lab = window.findNodeByName(this.flImg, "fl1Lab");
                let fl2Lab = window.findNodeByName(this.flImg, "fl2Lab");
                let flBtn = window.findNodeByName(this.flImg, "flBtn");
                let index = VipManager.getInstance().playerVipInfo.nVipLevel;
                if (index < 1) {
                    flBtn.on(Laya.Event.CLICK, this, this.onBtnVipRate);
                    return;
                }
                try {
                    flBtn.offAll();
                    let rebateInfoAck = yield RebateService.getInstance().rebateInfo();
                    console.log("RebateInfoAck   ", rebateInfoAck.toObject());
                    let renNum = rebateInfoAck.getRenum();
                    fl1Lab.text = rebateInfoAck.getRate() + "‰";
                    fl2Lab.text = "R$" + (renNum / 100);
                    if (renNum > 0) {
                        flBtn.skin = "2d/ui/common/bg_sekuai_anniu_B0F2FC.png";
                        flBtn.labelColors = "#0F0F0F";
                        flBtn.label = "Receber";
                        flBtn.on(Laya.Event.CLICK, this, this.onCashbackAward);
                        flBtn.getChildByName("redPoint").visible = true;
                    }
                    else {
                        flBtn.skin = "2d/ui/common/bg_sekuai_tiexiedi_0F0F0F.png";
                        flBtn.labelColors = "#B0F2FC";
                        flBtn.label = "Volte amanhã";
                        flBtn.on(Laya.Event.CLICK, this, this.onBtnVipRate);
                        flBtn.getChildByName("redPoint").visible = false;
                    }
                }
                catch (ex) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
        onCashbackAward() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let rebateAwardAck = yield RebateService.getInstance().rebateAward();
                    if (rebateAwardAck.getCret() == 0) {
                        this.setCashbackData();
                    }
                    else {
                        TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL + " " + rebateAwardAck.getCret());
                    }
                }
                catch (ex) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
    }

    class LayerGameSel extends Laya.Box {
        constructor() {
            super();
            this.m_curThemeTag = [];
            this.m_curSource = [];
            this.m_conH = 410;
        }
        onAwake() {
            this.adapteScreen();
            this.initData();
            this.initUI();
        }
        onDestroy() {
        }
        adapteScreen() {
        }
        initData() {
        }
        initUI() {
            this.root = window.findNodeByName(this, "root");
            this.root.vScrollBarSkin = "";
            this.nodeCont1 = window.findNodeByName(this, "content1");
            this.nodeCont = window.findNodeByName(this, "content");
            this.nodeTop = window.findNodeByName(this.nodeCont, "nodeTop");
            this.nodeGame = window.findNodeByName(this.nodeCont, "nodeGame");
            this.nodeSel = window.findNodeByName(this.nodeCont, "nodeSel");
            this.nodeTags = window.findNodeByName(this.nodeCont, "nodeTags");
            window.InitialNode(this.nodeTop);
            window.InitialNode(this.nodeGame);
            window.InitialNode(this.nodeSel);
            window.InitialNode(this.nodeTags);
            window.InitialNode(this.nodeCont1);
            this.nodeCont1.nodeTop.tabGames.selectHandler = new Laya.Handler(this, this.onSelTab);
            this.nodeCont1.nodeGame.listGame.vScrollBarSkin = "";
            this.nodeCont1.nodeGame.listGame.renderHandler = new Laya.Handler(this, this.updateGameItem);
            this.nodeGame.listGame.vScrollBarSkin = "";
            this.nodeGame.listGame.renderHandler = new Laya.Handler(this, this.updateGameItem);
            this.nodeSel.nodeTheme.listSel.vScrollBarSkin = "";
            this.nodeSel.nodeTheme.listSel.renderHandler = new Laya.Handler(this, this.updateThemeItem);
            this.nodeSel.nodePrv.listSel.vScrollBarSkin = "";
            this.nodeSel.nodePrv.listSel.renderHandler = new Laya.Handler(this, this.updatePrvItem);
            this.nodeTags.listTag.hScrollBarSkin = "";
            this.nodeTags.listTag.renderHandler = new Laya.Handler(this, this.updateTagItem);
            this.nodeSel.nodeTheme.listSel.scrollBar.on(Laya.Event.START, this, this.onStartScroll);
            this.nodeSel.nodePrv.listSel.scrollBar.on(Laya.Event.START, this, this.onStartScroll);
            let btnArr = [this.nodeSel.btnTheme, this.nodeSel.btnSource, this.nodeTags.btnRemove];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        setGameInfo(use, type, gameList, prv) {
            this.m_use = use;
            this.m_type = type;
            this.root.scrollTo(0, 0);
            if (use == 0) {
                this.root.vScrollBar.touchScrollEnable = true;
                this.nodeCont.visible = true;
                this.nodeCont1.visible = false;
                this.m_gameDatas = gameList;
                let listH = Math.ceil(gameList.length / 3) * 456;
                this.nodeGame.listGame.height = listH;
                this.nodeGame.listGame.dataSource = gameList;
                this.nodeCont.height = this.m_conH + listH;
                let title = "";
                let imgUrl = "2d/ui/hall/yl/icon_sy_Hot.png";
                if (this.m_type == 0) {
                    title = "Recomendados";
                }
                else if (this.m_type == 1) {
                    title = "Interno";
                    imgUrl = "2d/ui/hall/yl/icon_sy_casino.png";
                }
                else if (this.m_type == 2) {
                    title = "Slots";
                    imgUrl = "2d/ui/hall/yl/icon_sy_slots.png";
                }
                else if (this.m_type == 3) {
                    title = "Lazer";
                    imgUrl = "2d/ui/hall/yl/icon_sy_buyu.png";
                }
                else if (this.m_type == 4) {
                    title = "Ao vivo";
                    imgUrl = "2d/ui/hall/yl/icon_sy_Live.png";
                }
                else if (this.m_type == 5) {
                    title = "ESports";
                    imgUrl = "2d/ui/hall/yl/icon_sy_Durak.png";
                }
                let count = gameList.length;
                this.nodeTop.lblTitle.text = title;
                this.nodeTop.lblNum.text = count;
                this.nodeTop.imgIcon.skin = imgUrl;
                this.onbtnRemove();
                this.nodeSel.nodeTheme.listSel.dataSource = THEME_ARR;
                this.nodeSel.nodePrv.listSel.dataSource = GAME_SOURCE.slice(0);
                this.nodeSel.nodePrv.listSel.refresh();
                if (prv) {
                    let itemData = prv;
                    let itemCell = this.nodeSel.nodePrv.listSel.getCell(itemData.index);
                    let cellSource = this.nodeSel.nodePrv.listSel.getItem(itemData.index);
                    if (cellSource) {
                        cellSource.selected = true;
                    }
                    if (itemCell) {
                        window.InitialNode(itemCell);
                        itemCell.btnItem.selected = true;
                        itemCell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_xuanze.png";
                        itemCell.btnItem.skin = "2d/ui/common/btn_sy_xuanzhong_2A2D40.png";
                        itemCell.btnItem.lblTotal.color = "#ffffff";
                        itemCell.btnItem.imgSource.gray = false;
                    }
                    let tagIndex = this.m_curSource.indexOf(itemData);
                    if (tagIndex > -1) {
                        this.m_curSource.splice(tagIndex, 1);
                    }
                    this.m_curSource.push(prv);
                    this.refreshTagPrv();
                    this.dealTagsList();
                }
            }
            else if (use == 1) {
                this.root.vScrollBar.touchScrollEnable = false;
                this.nodeCont.visible = false;
                this.nodeCont1.visible = true;
                this.setTagSel();
            }
        }
        setTagSel() {
            this.nodeCont1.nodeTop.tabGames.selectedIndex = this.m_type;
            this.onSelTab(this.m_type);
        }
        onSelTab(__index) {
            if (__index == 0) {
                this.nodeCont1.nodeTop.tabGames.item0.imgIcon.skin = "2d/ui/nMenu/icon_shoucang_bai.png";
                this.nodeCont1.nodeTop.tabGames.item1.imgIcon.skin = "2d/ui/nMenu/icon_lishi.png";
            }
            else if (__index == 1) {
                this.nodeCont1.nodeTop.tabGames.item0.imgIcon.skin = "2d/ui/nMenu/icon_shoucang.png";
                this.nodeCont1.nodeTop.tabGames.item1.imgIcon.skin = "2d/ui/nMenu/icon_lishi_bai.png";
            }
            this.refreshLikeData(__index);
        }
        refreshLikeData(index) {
            let gameIDs = null;
            if (index == 0) {
                gameIDs = GameStorage.getGameLike();
            }
            else if (index == 1) {
                gameIDs = GameStorage.getGameRecent();
            }
            let gameArr = [];
            let gameList = GlobalData.getInstance().lobbyScene.m_subLayers[0].m_gameDatas;
            if (gameIDs && gameList) {
                gameList.forEach((v, k) => {
                    let gameDatas = v.getGamesList();
                    if (gameDatas) {
                        for (let i = 0; i < gameDatas.length; i++) {
                            let gameInfo = gameDatas[i];
                            if (gameIDs.indexOf(gameInfo.getGameid()) > -1) {
                                let res = gameArr.find((v, k) => {
                                    return v.getGameid() == gameInfo.getGameid();
                                });
                                if (!res) {
                                    gameArr[gameArr.length] = gameInfo;
                                }
                            }
                        }
                    }
                });
            }
            this.nodeCont1.nodeGame.listGame.dataSource = gameArr;
            this.nodeCont1.nodeGame.imgNull.visible = (gameArr.length == 0);
        }
        refreshTagPrv() {
            let gameArr = [];
            let gameList = this.m_gameDatas;
            for (let i = 0; i < gameList.length; i++) {
                let game = gameList[i];
                for (let j = 0; j < this.m_curThemeTag.length; j++) {
                    let tag = this.m_curThemeTag[j];
                    if (gameArr.indexOf(game) == -1) {
                        if (game.getTag() & tag) {
                            gameArr[gameArr.length] = game;
                        }
                    }
                }
                for (let j = 0; j < this.m_curSource.length; j++) {
                    let source = this.m_curSource[j];
                    let gameid = game.getGameid();
                    if (gameArr.indexOf(game) == -1) {
                        if (gameid >= source.range[0] && gameid <= source.range[1]) {
                            gameArr[gameArr.length] = game;
                        }
                        else if (source.range1) {
                            if (gameid >= source.range1[0] && gameid <= source.range1[1]) {
                                gameArr[gameArr.length] = game;
                            }
                        }
                    }
                }
            }
            if (this.m_curThemeTag.length == 0 && this.m_curSource.length == 0) {
                gameArr = gameList;
            }
            let listH = Math.ceil(gameArr.length / 3) * 456;
            this.nodeGame.listGame.height = listH;
            this.nodeGame.listGame.dataSource = gameArr;
            this.nodeCont.height = this.m_conH + listH;
        }
        dealTagsList() {
            let tagArr = [];
            for (let j = 0; j < this.m_curThemeTag.length; j++) {
                let tag = this.m_curThemeTag[j];
                tagArr[tagArr.length] = tag;
            }
            for (let j = 0; j < this.m_curSource.length; j++) {
                let source = this.m_curSource[j];
                tagArr[tagArr.length] = source;
            }
            if (tagArr.length == 0) {
                this.nodeTags.visible = false;
                this.nodeGame.top = 280;
            }
            else {
                this.nodeTags.visible = true;
                this.nodeGame.top = 390;
            }
            this.nodeTags.listTag.dataSource = tagArr;
        }
        updateGameItem(cell, index) {
            let itemData = cell.dataSource;
            window.InitialNode(cell);
            let item = itemData;
            let icon = item.getIcon();
            let gameid = item.getGameid();
            cell.skin = icon;
            cell.lblPer.visible = false;
            cell.on(Laya.Event.CLICK, this, this.onItemSelect, [item]);
        }
        onItemSelect(item) {
            PopupManager.Show(PREFAB_LOBBY.GAME_BRIEF, item);
        }
        updateThemeItem(cell, index) {
            let itemData = cell.dataSource;
            let tag = Math.pow(2, index);
            window.InitialNode(cell);
            let total = this.getThemeCount(index);
            cell.btnItem.lblTotal.text = total;
            cell.btnItem.lblName.text = itemData;
            cell.btnItem.clickHandler = Laya.Handler.create(this, () => {
                if (cell.btnItem.selected) {
                    cell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_xuanze.png";
                    cell.btnItem.skin = "2d/ui/common/btn_sy_xuanzhong_2A2D40.png";
                    cell.btnItem.lblName.color = "#ffffff";
                    cell.btnItem.lblTotal.color = "#ffffff";
                    this.m_curThemeTag.push(tag);
                    this.refreshTagPrv();
                }
                else {
                    cell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_weixuanze.png";
                    cell.btnItem.skin = "2d/ui/common/bg_sy_zuola_di.png";
                    cell.btnItem.lblName.color = "#989BB2";
                    cell.btnItem.lblTotal.color = "#989BB2";
                    let tagIndex = this.m_curThemeTag.indexOf(tag);
                    if (tagIndex > -1) {
                        this.m_curThemeTag.splice(tagIndex, 1);
                    }
                    this.refreshTagPrv();
                }
                this.dealTagsList();
            }, null, false);
        }
        updatePrvItem(cell, index) {
            let itemData = cell.dataSource;
            let total = this.getPrvCount(itemData);
            window.InitialNode(cell);
            cell.btnItem.lblTotal.text = total;
            cell.btnItem.imgSource.skin = itemData.img + ".png";
            cell.btnItem.imgSource.gray = !itemData.selected;
            if (itemData.selected) {
                cell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_xuanze.png";
                cell.btnItem.skin = "2d/ui/common/btn_sy_xuanzhong_2A2D40.png";
                cell.btnItem.lblTotal.color = "#ffffff";
            }
            else {
                cell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_weixuanze.png";
                cell.btnItem.skin = "2d/ui/common/bg_sy_zuola_di.png";
                cell.btnItem.lblTotal.color = "#989BB2";
            }
            cell.btnItem.clickHandler = Laya.Handler.create(this, () => {
                itemData.selected = cell.btnItem.selected;
                if (cell.btnItem.selected) {
                    cell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_xuanze.png";
                    cell.btnItem.skin = "2d/ui/common/btn_sy_xuanzhong_2A2D40.png";
                    cell.btnItem.lblTotal.color = "#ffffff";
                    cell.btnItem.imgSource.gray = false;
                    this.m_curSource.push(itemData);
                    this.refreshTagPrv();
                }
                else {
                    cell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_weixuanze.png";
                    cell.btnItem.skin = "2d/ui/common/bg_sy_zuola_di.png";
                    cell.btnItem.lblTotal.color = "#989BB2";
                    cell.btnItem.imgSource.gray = true;
                    let tagIndex = this.m_curSource.indexOf(itemData);
                    if (tagIndex > -1) {
                        this.m_curSource.splice(tagIndex, 1);
                    }
                    this.refreshTagPrv();
                }
                this.dealTagsList();
            }, null, false);
        }
        updateTagItem(cell, index) {
            let itemData = cell.dataSource;
            window.InitialNode(cell);
            if (itemData instanceof Object) {
                cell.imgIcon.visible = true;
                cell.lblName.visible = false;
                cell.imgIcon.skin = itemData.img + ".png";
            }
            else {
                cell.imgIcon.visible = false;
                cell.lblName.visible = true;
                cell.lblName.text = GAME_THEME[itemData];
            }
            cell.btnItem.clickHandler = Laya.Handler.create(this, () => {
                if (itemData instanceof Object) {
                    let itemCell = this.nodeSel.nodePrv.listSel.getCell(itemData.index);
                    let cellSource = this.nodeSel.nodePrv.listSel.getItem(itemData.index);
                    if (cellSource) {
                        cellSource.selected = false;
                    }
                    if (itemCell) {
                        itemCell.btnItem.selected = false;
                        itemCell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_weixuanze.png";
                        itemCell.btnItem.skin = "2d/ui/common/bg_sy_zuola_di.png";
                        itemCell.btnItem.lblTotal.color = "#989BB2";
                        itemCell.btnItem.imgSource.gray = true;
                    }
                    let tagIndex = this.m_curSource.indexOf(itemData);
                    if (tagIndex > -1) {
                        this.m_curSource.splice(tagIndex, 1);
                    }
                }
                else {
                    let itemCell = this.nodeSel.nodeTheme.listSel.getCell(Math.log2(itemData));
                    if (itemCell) {
                        itemCell.btnItem.selected = false;
                        itemCell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_weixuanze.png";
                        itemCell.btnItem.skin = "2d/ui/common/bg_sy_zuola_di.png";
                        itemCell.btnItem.lblName.color = "#989BB2";
                        itemCell.btnItem.lblTotal.color = "#989BB2";
                    }
                    let tagIndex = this.m_curThemeTag.indexOf(itemData);
                    if (tagIndex > -1) {
                        this.m_curThemeTag.splice(tagIndex, 1);
                    }
                }
                this.dealTagsList();
                this.refreshTagPrv();
            }, null, false);
        }
        onSelGameTab(__index) {
            GameAudio.getInstance().playClick();
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnTheme") {
                this.onBtnTheme();
            }
            else if (node.name == "btnSource") {
                this.onbtnSource();
            }
            else if (node.name == "btnRemove") {
                this.onbtnRemove();
            }
        }
        onBtnTheme() {
            if (this.nodeSel.btnTheme.selected) {
                this.nodeSel.nodeTheme.visible = true;
                this.nodeSel.nodePrv.visible = false;
                this.nodeSel.btnSource.selected = false;
                this.nodeSel.btnTheme.imgArrow.skin = "2d/ui/common/icon_xiangshang.png";
            }
            else {
                this.nodeSel.nodeTheme.visible = false;
                this.nodeSel.btnTheme.imgArrow.skin = "2d/ui/common/icon_xiangxia.png";
            }
        }
        onbtnSource() {
            if (this.nodeSel.btnSource.selected) {
                this.nodeSel.nodeTheme.visible = false;
                this.nodeSel.nodePrv.visible = true;
                this.nodeSel.btnTheme.selected = false;
                this.nodeSel.btnSource.imgArrow.skin = "2d/ui/common/icon_xiangshang.png";
            }
            else {
                this.nodeSel.nodePrv.visible = false;
                this.nodeSel.btnSource.imgArrow.skin = "2d/ui/common/icon_xiangxia.png";
            }
        }
        onbtnRemove() {
            this.m_curSource = [];
            this.m_curThemeTag = [];
            let cellArr1 = this.nodeSel.nodeTheme.listSel.cells;
            for (let i = 0; i < cellArr1.length; i++) {
                let itemCell = cellArr1[i];
                if (itemCell && itemCell.btnItem) {
                    itemCell.btnItem.selected = false;
                    itemCell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_weixuanze.png";
                    itemCell.btnItem.skin = "2d/ui/common/bg_sy_zuola_di.png";
                    itemCell.btnItem.lblName.color = "#989BB2";
                    itemCell.btnItem.lblTotal.color = "#989BB2";
                }
            }
            let cellArr2 = this.nodeSel.nodePrv.listSel.cells;
            if (this.nodeSel.nodePrv.listSel.dataSource) {
                let dataLen = this.nodeSel.nodePrv.listSel.dataSource.length;
                for (let i = 0; i < dataLen; i++) {
                    let cellSource = this.nodeSel.nodePrv.listSel.dataSource[i];
                    if (cellSource) {
                        cellSource.selected = false;
                    }
                }
            }
            for (let i = 0; i < cellArr2.length; i++) {
                let itemCell = cellArr2[i];
                if (itemCell && itemCell.btnItem) {
                    itemCell.btnItem.selected = false;
                    itemCell.btnItem.imgSel.skin = "2d/ui/common/btn_shouye_weixuanze.png";
                    itemCell.btnItem.skin = "2d/ui/common/bg_sy_zuola_di.png";
                    itemCell.btnItem.lblTotal.color = "#989BB2";
                    itemCell.btnItem.imgSource.gray = true;
                }
            }
            this.dealTagsList();
            this.refreshTagPrv();
        }
        getThemeCount(index) {
            let total = 0;
            let tag = Math.pow(2, index);
            let gameList = this.m_gameDatas;
            for (let i = 0; i < gameList.length; i++) {
                let game = gameList[i];
                if (game.getTag() & tag) {
                    total++;
                }
            }
            return total;
        }
        getPrvCount(data) {
            let total = 0;
            let gameList = this.m_gameDatas;
            for (let i = 0; i < gameList.length; i++) {
                let game = gameList[i];
                let gameid = game.getGameid();
                let source = data;
                if (gameid >= source.range[0] && gameid <= source.range[1]) {
                    total++;
                }
                else if (source.range1) {
                    if (gameid >= source.range1[0] && gameid <= source.range1[1]) {
                        total++;
                    }
                }
            }
            return total;
        }
        onStartScroll() {
            this.root.vScrollBar.stopScroll();
        }
    }

    class LayerProfile extends Laya.Box {
        constructor() {
            super();
            this.unLoginView = null;
            this.loginedView = null;
        }
        onAwake() {
            this.adapteScreen();
            this.initData();
            this.initUI();
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().on(LobbyDefine.LOADED_USERINFO, this, this.onLoadedUserinfo);
            EventManager.getInstance().on(LobbyDefine.VIP_INFO_NOTI, this, this.updateVipInfo);
            EventManager.getInstance().on(LobbyEvent.UPDATE_PLAYER_INFO, this, this.setPlayerInfo);
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.LOGIN_SUCCESS, this, this.onLoginSuccess);
            EventManager.getInstance().off(LobbyDefine.LOADED_USERINFO, this, this.onLoadedUserinfo);
            EventManager.getInstance().off(LobbyDefine.VIP_INFO_NOTI, this, this.updateVipInfo);
            EventManager.getInstance().off(LobbyEvent.UPDATE_PLAYER_INFO, this, this.setPlayerInfo);
        }
        onLoginSuccess() {
            this.setLoginState();
        }
        onLoadedUserinfo() {
            this.setPlayerInfo(DataPlayer.getInstance().userInfo);
        }
        adapteScreen() {
        }
        initData() {
        }
        initUI() {
            this.unLoginView = window.findNodeByName(this, "unLoginView");
            let loginBtn = window.findNodeByName(this.unLoginView, "loginBtn");
            let registBtn = window.findNodeByName(this.unLoginView, "registBtn");
            let fanliBtn_unLogin = window.findNodeByName(this.unLoginView, "fanliBtn");
            let tuigBtnBtn_unLogin = window.findNodeByName(this.unLoginView, "tuigBtn");
            let tuiguangBox_unLogin = window.findNodeByName(this.unLoginView, "tuiguangBox");
            let kefuBox_unLogin = window.findNodeByName(this.unLoginView, "kefuBox");
            let jiangjinBox_unLogin = window.findNodeByName(this.unLoginView, "jiangjinBox");
            loginBtn.on(Laya.Event.CLICK, this, this.onBtnLogin);
            registBtn.on(Laya.Event.CLICK, this, this.onBtnRegist);
            fanliBtn_unLogin.on(Laya.Event.CLICK, this, this.onBtnLogin);
            tuigBtnBtn_unLogin.on(Laya.Event.CLICK, this, this.onBtnAffiliate);
            tuiguangBox_unLogin.on(Laya.Event.CLICK, this, this.onBtnAffiliate);
            kefuBox_unLogin.on(Laya.Event.CLICK, this, this.onBtnLogin);
            jiangjinBox_unLogin.on(Laya.Event.CLICK, this, this.onBtnBonus);
            this.loginedView = window.findNodeByName(this, "loginedView");
            let logOutBtn = window.findNodeByName(this.loginedView, "logoutBtn");
            let arrawBox = window.findNodeByName(this.loginedView, "arrawBox");
            let copyIdBtn = window.findNodeByName(this.loginedView, "copyBtn");
            let fanliBtn = window.findNodeByName(this.loginedView, "fanliBtn");
            let tuigBtnBtn = window.findNodeByName(this.loginedView, "tuigBtn");
            let tuiguangBox = window.findNodeByName(this.loginedView, "tuiguangBox");
            let jiangjinBox = window.findNodeByName(this.loginedView, "jiangjinBox");
            let kefuBox = window.findNodeByName(this.loginedView, "kefuBox");
            let shezhiBox = window.findNodeByName(this.loginedView, "shezhiBox");
            let languageBox = window.findNodeByName(this.loginedView, "languageBox");
            arrawBox.on(Laya.Event.CLICK, this, this.onBtnProfile);
            copyIdBtn.on(Laya.Event.CLICK, this, this.onBtnCopyId);
            fanliBtn.on(Laya.Event.CLICK, this, this.onBtnCashback);
            tuigBtnBtn.on(Laya.Event.CLICK, this, this.onBtnAffiliate);
            tuiguangBox.on(Laya.Event.CLICK, this, this.onBtnAffiliate);
            jiangjinBox.on(Laya.Event.CLICK, this, this.onBtnBonus);
            kefuBox.on(Laya.Event.CLICK, this, this.onBtnServer);
            shezhiBox.on(Laya.Event.CLICK, this, this.onBtnSettings);
            languageBox.on(Laya.Event.CLICK, this, this.onBtnLanguage);
            logOutBtn.on(Laya.Event.CLICK, this, this.onBtnlogOutBtn);
            let chongzhiBtn = window.findNodeByName(this.loginedView, "chongzhiBtn");
            let tixianBtn = window.findNodeByName(this.loginedView, "tixianBtn");
            let tixianjiBtn = window.findNodeByName(this.loginedView, "tixianjiliBtn");
            let touzhujiliBtn = window.findNodeByName(this.loginedView, "touzhujiliBtn");
            chongzhiBtn.on(Laya.Event.CLICK, this, this.onBtnShop);
            tixianBtn.on(Laya.Event.CLICK, this, this.onBtnWithdraw);
            tixianjiBtn.on(Laya.Event.CLICK, this, this.onBtnWithdrawRecord);
            touzhujiliBtn.on(Laya.Event.CLICK, this, this.onBtnBetRecord);
            this.setLoginState();
        }
        setLoginState() {
            if (GlobalData.getInstance().myPid > 1000) {
                this.unLoginView.visible = false;
                this.loginedView.visible = true;
                this.setPlayerInfo(DataPlayer.getInstance().userInfo);
                this.setVipData();
            }
            else {
                this.unLoginView.visible = true;
                this.loginedView.visible = false;
            }
        }
        updateVipInfo(p_data = null, p_ischange = true) {
            this.setVipData();
        }
        setPlayerInfo(data) {
            let infoView = window.findNodeByName(this.loginedView, "infoView");
            let headImg = window.findNodeByName(infoView, "headImg");
            let nameLab = window.findNodeByName(infoView, "nameLab");
            let idLab = window.findNodeByName(infoView, "idLab");
            window.circleSprite(headImg);
            headImg.skin = data.strAvatar;
            nameLab.text = window.formatString(window.GetRealName(data.nickname), 15);
            idLab.text = "ID: " + GlobalData.getInstance().myPid;
            let totalCashLab = window.findNodeByName(infoView, "totalCashLab");
            totalCashLab.text = window.formatNum(data.gold);
            ;
        }
        setVipData() {
            let vipBox = window.findNodeByName(this.loginedView, "vipBox");
            vipBox.on(Laya.Event.CLICK, this, this.onBtnVip);
            let progressImg = window.findNodeByName(vipBox, "cashBox").getChildByName("progressImg");
            let progressText = window.findNodeByName(vipBox, "cashBox").getChildByName("progressText");
            let bet_progressImg = window.findNodeByName(vipBox, "betBox").getChildByName("progressImg");
            let bet_progressText = window.findNodeByName(vipBox, "betBox").getChildByName("progressText");
            let index = VipManager.getInstance().playerVipInfo.nVipLevel;
            let levelIcon = window.findNodeByName(vipBox, "levelIcon");
            levelIcon.skin = "2d/ui/BR_vip/icon_vip_dengji_" + index + ".png";
            let vipData = VipManager.getInstance().getVipData(index);
            if (!vipData) {
                return;
            }
            let nextVipData;
            if (index < 0) {
                index = 0;
                nextVipData = VipManager.getInstance().getVipData(index);
            }
            else {
                nextVipData = VipManager.getInstance().getVipData(index + 1);
            }
            if (index >= 16) {
                nextVipData = VipManager.getInstance().getVipData(index);
            }
            progressImg.width = Math.min(VipManager.getInstance().playerVipInfo.nVipExp / nextVipData.exp * 450, 450);
            progressText.text = "R$ " + (nextVipData.exp - VipManager.getInstance().playerVipInfo.nVipExp) / 100 + " depósito para VIP " + nextVipData.level;
            bet_progressImg.width = Math.min(VipManager.getInstance().playerVipInfo.nVipBet / nextVipData.bet * 450, 450);
            bet_progressText.text = "R$ " + (nextVipData.bet - VipManager.getInstance().playerVipInfo.nVipBet) / 100 + " depósito para VIP " + nextVipData.level;
        }
        onBtnLogin() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 0);
        }
        onBtnRegist() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
        }
        onBtnProfile() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.PLAYER_INFO, null);
        }
        onBtnCopyId() {
            GameAudio.getInstance().playClick();
            DeviceData.getInstance().setClipboard(GlobalData.getInstance().myPid + "");
            TopTipsManager.getInstance().showTopTips(WARNING.COPY_TO_CLIPBOARD);
        }
        onBtnVip() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.VIP_WIN, null);
        }
        onBtnBonus() {
            GameAudio.getInstance().playClick();
            GlobalData.getInstance().lobbyScene.jumpToSub(1);
        }
        onBtnCashback() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.VIP_RATE, null);
        }
        onBtnAffiliate() {
            GameAudio.getInstance().playClick();
            GlobalData.getInstance().lobbyScene.jumpToSub(2);
        }
        onBtnShop() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.SHOP, null);
        }
        onBtnWithdraw() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.WITHDRAW_BANK, null);
        }
        onBtnWithdrawRecord() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.WITHDRAW_RECORD, null);
        }
        onBtnBetRecord() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.BET_RECORD, null);
        }
        onBtnServer() {
            GameAudio.getInstance().playClick();
            window.gotoService();
        }
        onBtnSettings() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.HALL_SET, null);
        }
        onBtnLanguage() {
        }
        onBtnlogOutBtn() {
            GameAudio.getInstance().playClick();
            GlobalData.getInstance().lobbyScene.exitToLogin();
            GlobalData.getInstance().lobbyScene.clearPhone();
            GlobalData.getInstance().loginScene.refreshScoket();
            GlobalData.getInstance().loginScene.judgeLoginDays();
        }
    }

    class NodeGameItem extends Laya.Box {
        constructor() {
            super();
            this.m_type = 0;
            this.m_gameDatas = [];
        }
        onAwake() {
            this.initData();
            this.initUI();
        }
        onDestroy() {
            Laya.timer.clearAll(this);
        }
        initData() {
        }
        initUI() {
            this.nodeTop = window.findNodeByName(this, "nodeTop");
            this.nodeTop.on(Laya.Event.CLICK, this, this.onNodeTop);
            window.InitialNode(this.nodeTop);
            this.m_listGame = window.findNodeByName(this, "listGame");
            this.m_listGame.hScrollBarSkin = "";
            this.m_listGame.renderHandler = new Laya.Handler(this, this.updateItem);
        }
        stopScroll() {
            this.m_listGame.scrollBar.stopScroll();
        }
        setLeftSizeChange(type) {
            let cells = this.m_listGame.cells;
            let c_w = 198;
            let c_h = 264;
            let space = 17;
            if (type == 1) {
                c_w = 226;
                c_h = 301;
                space = 20;
            }
            for (let i = 0; i < cells.length; i++) {
                let cell = cells[i];
                if (cell) {
                    cell.width = c_w;
                    cell.height = c_h;
                }
            }
            this.m_listGame.height = c_h;
            this.m_listGame.spaceX = space;
            this.m_listGame.refresh();
        }
        setGameInfo(__type, __gameArr) {
            this.m_type = __type;
            if (__gameArr) {
                this.m_gameDatas = __gameArr;
                this.m_listGame.dataSource = __gameArr;
            }
            let title = "";
            let imgUrl = "2d/ui/hall/yl/icon_sy_Hot.png";
            if (this.m_type == 0) {
                title = "Recomendados";
            }
            else if (this.m_type == 1) {
                title = "Interno";
                imgUrl = "2d/ui/hall/yl/icon_sy_casino.png";
            }
            else if (this.m_type == 2) {
                title = "Slots";
                imgUrl = "2d/ui/hall/yl/icon_sy_slots.png";
            }
            else if (this.m_type == 3) {
                title = "Lazer";
                imgUrl = "2d/ui/hall/yl/icon_sy_buyu.png";
            }
            else if (this.m_type == 4) {
                title = "Ao vivo";
                imgUrl = "2d/ui/hall/yl/icon_sy_Live.png";
            }
            else if (this.m_type == 5) {
                title = "ESports";
                imgUrl = "2d/ui/hall/yl/icon_sy_Durak.png";
            }
            let count = __gameArr.length;
            this.nodeTop.lblTitle.text = title;
            this.nodeTop.lblNum.text = "Mais " + count;
            this.nodeTop.imgIcon.skin = imgUrl;
        }
        updateItem(cell, index) {
            let itemData = cell.dataSource;
            window.InitialNode(cell);
            let item = itemData;
            let icon = item.getIcon();
            let gameid = item.getGameid();
            cell.skin = icon;
            cell.lblPer.visible = false;
            cell.on(Laya.Event.CLICK, this, this.onItemSelect, [item]);
        }
        onItemSelect(item) {
            PopupManager.Show(PREFAB_LOBBY.GAME_BRIEF, item);
        }
        onNodeTop() {
            GlobalData.getInstance().lobbyScene.showGameSelLayer(0, this.m_type, this.m_gameDatas);
        }
    }

    class VipWin extends Laya.Box {
        constructor() {
            super();
            this.m_tipsChange = [];
        }
        onEnable() {
        }
        onDisable() {
        }
        init() {
            this.inited = true;
            this.initUI();
            this.initEvent();
            this._Show();
        }
        initUI() {
            this.m_root = this.getChildByName("root");
            this.m_maskbg = this.getChildByName("maskbg");
            this.m_closeBtn = window.findNodeByName(this.m_root, "closeBtn");
            let topViewContent = window.findNodeByName(this.m_root, "topView").getChildByName("content");
            this.m_nowVipLevel = topViewContent.getChildByName("nowVipLevel");
            this.m_curLevelLab = topViewContent.getChildByName("curLevelLab");
            this.m_desLab = topViewContent.getChildByName("desLab");
            this.m_progressImg = topViewContent.getChildByName("cashBox").getChildByName("progressImg");
            this.m_progressText = topViewContent.getChildByName("cashBox").getChildByName("progressText");
            this.m_bet_progressImg = topViewContent.getChildByName("betBox").getChildByName("progressImg");
            this.m_bet_progressText = topViewContent.getChildByName("betBox").getChildByName("progressText");
            let bottomView = window.findNodeByName(this.m_root, "bottomView");
            this.m_vipPrivilegeTips = window.findNodeByName(bottomView, "vipPrivilegeTips");
            this.m_centerView = window.findNodeByName(this.m_root, "centerView");
            this.m_levelView = window.findNodeByName(this.m_root, "levelView");
            this.m_monthView = window.findNodeByName(this.m_root, "monthView");
            this.m_flView = window.findNodeByName(this.m_root, "flView");
            this.m_txcsView = window.findNodeByName(this.m_root, "txcsView");
            this.m_txjbView = window.findNodeByName(this.m_root, "txjbView");
            this.flValLab = window.findNodeByName(this.m_flView, "valLab");
            this.txTimeLab = window.findNodeByName(this.m_txcsView, "timesLab");
            this.txValLab = window.findNodeByName(this.m_txjbView, "valLab");
            this.sjAwardLab = window.findNodeByName(this.m_levelView, "sjAwardLab");
            this.mAwardLab = window.findNodeByName(this.m_monthView, "mAwardLab");
            this.checkVerify();
        }
        Show(parameter) {
            this.m_parameter = parameter;
            if (!this.inited) {
                this.init();
            }
            else {
                this._Show();
            }
        }
        _Show() {
            this.updateVipInfo();
            this.visible = true;
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1024);
        }
        checkVerify() {
        }
        changeVip0State() {
        }
        updateVipData() {
            this.m_vipPrivilegeTips.text = "VIP" + this.m_index;
            if (this.m_isChangePage) {
                this.m_nextVipData = VipManager.getInstance().getVipData(this.m_index);
            }
            else {
                this.m_nextVipData = this.m_vipData;
            }
            this.changeVip0State();
            let self = this;
            AwardService.getInstance().getAwardInfo(this.m_nextVipData.level_award, function (p_info) {
                let data = p_info.getArritemsList();
                if (data && data.length > 0) {
                    let item = data[0];
                    self.sjAwardLab.text = "R$ " + (item.getNamount() / 100);
                }
                else {
                    self.sjAwardLab.text = "R$ 0";
                }
            });
            AwardService.getInstance().getAwardInfo(this.m_nextVipData.daily_award, function (p_info) {
                let data = p_info.getArritemsList();
                if (data && data.length > 0) {
                    let item = data[0];
                    self.mAwardLab.text = "R$ " + (item.getNamount() / 100);
                }
                else {
                    self.mAwardLab.text = "R$ 0";
                }
            });
            this.flValLab.text = (this.m_nextVipData.rate / 10) + "%";
            this.txTimeLab.text = this.m_nextVipData.day_award + "%";
            this.txValLab.text = "R$ " + window.formatNum(this.m_nextVipData.withdraw_amount / 100);
            this.setBtnType();
            for (let i = 0; i < this.m_centerView.numChildren; i++) {
                let qbImg = this.m_centerView.getChildAt(i).getChildByName("qbImg");
                let djLab = this.m_centerView.getChildAt(i).getChildByName("djLab");
                if (i == this.m_index) {
                    qbImg.visible = true;
                    djLab.color = "#000000";
                }
                else {
                    qbImg.visible = false;
                    djLab.color = "#989BB2";
                }
                this.m_centerView.getChildAt(i).on(Laya.Event.CLICK, this, this.onBtnVipChange, [i]);
            }
            if (this.m_index == 0) {
                this.m_levelView.alpha = 0.5;
                this.m_monthView.alpha = 0.5;
                this.m_flView.alpha = 0.5;
                this.m_txcsView.alpha = 0.5;
                this.m_txjbView.alpha = 0.5;
            }
            else {
                this.m_levelView.alpha = 1;
                this.m_monthView.alpha = 1;
                this.m_flView.alpha = 1;
                this.m_txcsView.alpha = 1;
                this.m_txjbView.alpha = 1;
            }
        }
        initEvent() {
            this.m_closeBtn.on(Laya.Event.CLICK, this, this.onCloseHandler);
            EventManager.getInstance().on(LobbyDefine.VIP_INFO_NOTI, this, this.updateVipInfo);
            this.m_desLab.on(Laya.Event.CLICK, this, this.onCloseVipDetail);
            for (let i = 0; i < this.m_centerView.numChildren; i++) {
                this.m_centerView.getChildAt(i).on(Laya.Event.CLICK, this, this.onBtnVipChange, [i]);
            }
        }
        onBtnVipChange(level) {
            this.m_index = level;
            this.m_isChangePage = true;
            this.updateVipData();
        }
        onTopUpBtnHandler() {
            UploadManager.getInstance().pageAction("VIP页面", "去充值", "点击跳转商城");
            GlobalData.getInstance().lobbyScene.showShop(SIDE_ITEM.DIAMOND);
        }
        onLastBtnHandler() {
            UploadManager.getInstance().pageAction("VIP页面", "上一级按钮", "点击");
            this.m_index--;
            if (this.m_index <= 0) {
            }
            this.m_isChangePage = true;
            this.updateVipData();
        }
        onNextBtnHandler() {
            UploadManager.getInstance().pageAction("VIP页面", "下一级按钮", "点击");
            this.m_index++;
            if (this.m_index >= 16) {
            }
            this.m_isChangePage = true;
            this.updateVipData();
        }
        onGetDailyBtnHandler() {
        }
        onGetBtnHandler() {
        }
        setBtnType() {
        }
        updateVipInfo(p_data = null, p_ischange = true) {
            if (p_ischange) {
                this.m_index = VipManager.getInstance().playerVipInfo.nVipLevel;
                if (this.m_index < 0) {
                    this.m_index = 0;
                    this.m_vipData = VipManager.getInstance().getVipData(this.m_index);
                    this.m_nextVipData = VipManager.getInstance().getVipData(this.m_index);
                }
                else {
                    this.m_nextVipData = VipManager.getInstance().getVipData(this.m_index + 1);
                }
                if (this.m_index >= 16) {
                    this.m_vipData = VipManager.getInstance().getVipData(this.m_index);
                    this.m_nextVipData = VipManager.getInstance().getVipData(this.m_index);
                }
            }
            else {
                let l_index = VipManager.getInstance().playerVipInfo.nVipLevel;
                if (l_index < 0) {
                    l_index = 0;
                    this.m_nextVipData = VipManager.getInstance().getVipData(l_index);
                }
                else {
                    this.m_nextVipData = VipManager.getInstance().getVipData(l_index + 1);
                }
                if (l_index >= 16) {
                    this.m_nextVipData = VipManager.getInstance().getVipData(l_index);
                }
            }
            this.m_isChangePage = false;
            this.m_vipData = VipManager.getInstance().getVipData(this.m_index);
            let l_cost = (this.m_nextVipData.exp - VipManager.getInstance().playerVipInfo.nVipExp) / 10;
            let level = VipManager.getInstance().playerVipInfo.nVipLevel;
            this.m_nowVipLevel.skin = "2d/ui/BR_vip/icon_vip_dengji_" + level + ".png";
            this.m_curLevelLab.text = "VIP " + level;
            this.m_progressImg.width = Math.min(VipManager.getInstance().playerVipInfo.nVipExp / this.m_nextVipData.exp * 580, 580);
            this.m_progressText.text = "R$ " + ((this.m_nextVipData.exp - VipManager.getInstance().playerVipInfo.nVipExp) / 100) + " depósito para VIP " + this.m_nextVipData.level;
            this.m_bet_progressImg.width = Math.min(VipManager.getInstance().playerVipInfo.nVipBet / this.m_nextVipData.bet * 580, 580);
            this.m_bet_progressText.text = "R$ " + ((this.m_nextVipData.bet - VipManager.getInstance().playerVipInfo.nVipBet) / 100) + " depósito para VIP " + this.m_nextVipData.level;
            if (p_ischange) {
                this.updateVipData();
            }
        }
        onCloseHandler() {
            UploadManager.getInstance().pageAction("VIP页面", "关闭按钮", "点击");
            this.visible = false;
            PopupManager.Hide(PREFAB_LOBBY.VIP_WIN);
        }
        onCloseVipDetail() {
            PopupManager.Show(PREFAB_LOBBY.VIP_DES, null);
        }
        onDestroy() {
            EventManager.getInstance().off(LobbyDefine.VIP_INFO_NOTI, this, this.updateVipInfo);
        }
    }

    class VipDes extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.vipList = null;
        }
        onEnable() {
            let rootBox = this.owner;
            rootBox.scaleX = 0;
            rootBox.scaleY = 0;
            Laya.Tween.to(rootBox, { scaleX: 1, scaleY: 1 }, 300, Laya.Ease.backOut, null, 0);
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose);
            this.vipList.vScrollBarSkin = "";
            this.vipList.renderHandler = new Laya.Handler(this, this.updateVipItem);
            this.vipList.array = [];
            this.requestInfo();
        }
        onDisable() {
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            Laya.Tween.to(this.owner, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                this.owner.visible = false;
                PopupManager.Hide(PREFAB_LOBBY.VIP_DES);
            }), 0);
        }
        requestInfo() {
            return __awaiter(this, void 0, void 0, function* () {
                GlobalData.getInstance().loadingAni.Show("");
                try {
                    let vipList = VipManager.getInstance().getVipList();
                    let data = vipList.slice(1);
                    this.awardData = [];
                    for (let i = 0; i < vipList.length; i++) {
                        let self = this;
                        let awardId = vipList[i].level_award;
                        AwardService.getInstance().getAwardInfo(awardId, function (p_info) {
                            let data = p_info.getArritemsList();
                            if (data && data.length > 0) {
                                let item = data[0];
                                item.setNitemid(awardId);
                                self.awardData.push(item);
                                self.vipList.refresh();
                            }
                        });
                    }
                    this.vipList.array = data;
                    this.vipList.dataSource = data;
                    this.vipList.refresh();
                }
                catch (error) {
                    CC.Loge("ExchangeService::history  error = ", error);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        updateVipItem(cell, index) {
            let data = this.vipList.dataSource;
            let item = data[index];
            let levelImg = cell.getChildByName("levelImg");
            let levelLab = cell.getChildByName("levelLab");
            let awardLab = cell.getChildByName("awardLab");
            let rechargeLab = cell.getChildByName("rechargeLab");
            let betLab = cell.getChildByName("betLab");
            levelImg.skin = "2d/ui/BR_vip/vip" + item.level + ".png";
            levelLab.text = "VIP " + item.level;
            let awardItem = this.awardData.find((award, index) => award.getNitemid() == item.level_award);
            if (awardItem) {
                awardLab.text = "R$ " + window.formatNum(awardItem.getNamount() / 100);
            }
            rechargeLab.text = "R$ " + window.formatNum(item.exp / 100);
            betLab.text = "R$ " + window.formatNum(item.bet / 100);
            if (index % 2 != 0) {
                cell.skin = "";
            }
        }
    }

    class VipInfo extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.btnLogin = null;
        }
        onEnable() {
            let rootBox = this.owner.getChildAt(0);
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
            this.btnLogin.on(Laya.Event.MOUSE_DOWN, this, this.onBtnLogin);
        }
        onDisable() {
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner.getChildAt(0);
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                this.owner.visible = false;
                PopupManager.Hide(PREFAB_LOBBY.VIP_INFO);
            }), 0);
        }
        onBtnLogin() {
            GameAudio.getInstance().playClick();
            PopupManager.Show(PREFAB_LOBBY.HALL_SIGN, 1);
        }
    }

    class VipRate extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.btnDetail = null;
            this.curLevelImg = null;
            this.curLevelLab = null;
            this.levelBox = null;
        }
        onEnable() {
            let rootBox = this.owner.getChildAt(0);
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
            this.btnDetail.on(Laya.Event.MOUSE_DOWN, this, this.onBtnDetail);
            this.initData();
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1025);
        }
        onDisable() {
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner.getChildAt(0);
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                this.owner.visible = false;
                PopupManager.Hide(PREFAB_LOBBY.VIP_RATE);
            }), 0);
        }
        onBtnDetail() {
            PopupManager.Show(PREFAB_LOBBY.VIP_WIN, null);
        }
        initData() {
            let curLevel = VipManager.getInstance().playerVipInfo.nVipLevel;
            let vipList = VipManager.getInstance().getVipList();
            let data = vipList.slice(1);
            this.curLevelImg.skin = "2d/ui/BR_vip/vip" + curLevel + ".png";
            if (curLevel > 0) {
                this.curLevelLab.text = data[curLevel].rate + "‰";
            }
            else {
                this.curLevelLab.text = "0%";
            }
            let length = this.levelBox.numChildren;
            for (let i = 0; i < length; i++) {
                let item = data[i];
                let itemNode = this.levelBox.getChildAt(i);
                let levelImg = itemNode.getChildByName("levelImg");
                let levelLab = itemNode.getChildByName("levelLab");
                let rateLab = itemNode.getChildByName("rateLab");
                levelImg.skin = "2d/ui/BR_vip/vip" + item.level + ".png";
                levelLab.text = "VIP " + item.level;
                rateLab.text = item.rate + "‰";
                if (i == curLevel - 1) {
                    levelLab.color = "#68D567";
                    rateLab.color = "#68D567";
                }
                else {
                    levelLab.color = "#989BB2";
                    rateLab.color = "#989BB2";
                }
            }
        }
    }

    class BetRecord extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.recordList = null;
            this.emptyView = null;
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.WITHDRAW_HISTORY_NOTI, this, this.onWithdrawNoti);
            let rootBox = this.owner;
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
            this.recordList.vScrollBarSkin = "";
            this.recordList.renderHandler = new Laya.Handler(this, this.updateUserItem);
            this.recordList.array = [];
            this.requestInfo();
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.WITHDRAW_HISTORY_NOTI, this, this.onWithdrawNoti);
        }
        onWithdrawNoti() {
            this.requestInfo();
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner;
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                PopupManager.Hide(PREFAB_LOBBY.BET_RECORD);
            }), 0);
        }
        requestInfo() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let ack = yield ThirdGameService.getInstance().valid();
                    let data = ack.getStandsMap().toArray();
                    this.recordList.dataSource = data;
                    this.recordList.refresh();
                    if (null == data || data.length == 0) {
                        this.emptyView.visible = true;
                    }
                    else {
                        this.emptyView.visible = false;
                    }
                }
                catch (error) {
                    CC.Loge("ThirdGameService::valid  error = ", error);
                }
            });
        }
        updateUserItem(cell, index) {
            let data = this.recordList.dataSource;
            let item = data[index];
            let nameLab = cell.getChildByName("nameLab");
            let cashLab = cell.getChildByName("cashLab");
            let gameBtn = cell.getChildByName("gameBtn");
            nameLab.text = item[0] + "";
            cashLab.text = "R$ " + (item[1] / 100);
            if (index % 2) {
                cell.bgColor = "#171D2D";
            }
            else {
                cell.bgColor = "#0A1020";
            }
            gameBtn.offAll();
            gameBtn.on(Laya.Event.CLICK, this, this.onItemClick, [item]);
        }
        onItemClick(item) {
            let gameDatas = GlobalData.getInstance().lobbyScene.m_subLayers[0].m_gameDatas;
            if (gameDatas) {
                let gameList = gameDatas.get(5);
                if (gameList) {
                    let gameArr = gameList.getGamesList();
                    if (gameArr[0]) {
                        PopupManager.Show(PREFAB_LOBBY.GAME_BRIEF, gameArr[0]);
                        this.onBtnClose();
                    }
                }
            }
        }
    }

    class HallSet extends Laya.Box {
        Init() {
            this.visible = false;
            HallSet.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            this.nodeInfo = window.findNodeByName(this, "nodeBody");
            let btnServer = window.findNodeByName(this.root, "goldBox");
            window.InitialNode(this.nodeInfo);
            let btnArr = [this.nodeInfo.imgPwd, btnServer];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show() {
            if (!this.inited) {
                this.Init();
            }
            this.visible = true;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            this.root.x = Laya.stage.width;
            Laya.Tween.to(this.root, { x: 0 }, 200, Laya.Ease.circOut);
            this.initData();
        }
        initData() {
            this.nodeInfo.imgPhone.lblPhone.text = GlobalData.getInstance().phone;
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.HALL_SET);
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "goldBox") {
                this.onServer();
            }
            else if (node.name == "imgPwd") {
                this.onPwd();
            }
        }
        onServer() {
            window.gotoService();
        }
        onPwd() {
            this.Close();
            PopupManager.Show(PREFAB_LOBBY.UPDATE_PWD, null);
        }
        onDestroy() {
        }
    }

    class UpdateAvatar extends Laya.Box {
        constructor() {
            super(...arguments);
            this.selectIndex = -1;
            this.isFirstModify = false;
            this.callback = null;
        }
        Init() {
            this.visible = false;
            UpdateAvatar.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            this.avatarImg = window.findNodeByName(this, "avatarImg");
            this.avatarList = window.findNodeByName(this, "avatarList");
            this.nodeInfo = window.findNodeByName(this, "nodeName");
            window.InitialNode(this.nodeInfo);
            this.inputNickName = this.nodeInfo.inputView.nameInput;
            let btnArr = [this.nodeInfo.btnDel, this.nodeInfo.btnSign];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show() {
            if (!this.inited) {
                this.Init();
            }
            this.visible = true;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            this.root.x = Laya.stage.width;
            Laya.Tween.to(this.root, { x: 0 }, 200, Laya.Ease.circOut);
            this.initData();
            this.initNickname();
        }
        setCallback(callback) {
            this.callback = callback;
        }
        initData() {
            let data = GlobalVariables.AVATAR_LIST;
            window.circleSprite(this.avatarImg);
            let avatar = DataPlayer.getInstance().userInfo.strAvatar;
            this.selectIndex = data.findIndex((v, k) => {
                return v == avatar;
            });
            this.avatarImg.skin = avatar;
            this.avatarList.vScrollBarSkin = "";
            this.avatarList.repeatX = 5;
            this.avatarList.renderHandler = new Laya.Handler(this, this.updateAvatarItem);
            this.avatarList.selectHandler = new Laya.Handler(this, this.onItemSelect);
            this.avatarList.array = data;
        }
        initNickname() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let ack = yield OutTaskService.getInstance().taskInfo(GlobalVariables.TASK_3003);
                    let taskList = ack.getVectasksList();
                    let taskItem = taskList[0];
                    this.isFirstModify = taskItem.getFinish() <= 0;
                    this.nodeInfo.labFree.visible = this.isFirstModify;
                    this.nodeInfo.desBox.visible = !this.isFirstModify;
                }
                catch (error) {
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
            });
        }
        onItemSelect(index) {
            this.selectIndex = index;
            let item = GlobalVariables.AVATAR_LIST[index];
            this.avatarImg.skin = item;
        }
        updateAvatarItem(cell, index) {
            let item = cell.dataSource;
            let selectImage = cell.getChildByName("selectImage");
            let avatarImage = cell.getChildByName("avatarImage");
            window.circleSprite(avatarImage);
            selectImage.visible = this.selectIndex == index;
            avatarImage.skin = item;
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.UPDATE_AVATAR);
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnDel") {
                this.onBtnDel();
            }
            else if (node.name == "btnSign") {
                this.onBtnChange();
            }
        }
        onBtnChange() {
            let item = GlobalVariables.AVATAR_LIST[this.selectIndex];
            DataPlayer.getInstance().updateUserAvatar(item, (suc) => {
                this.callback && this.callback(item);
                DataPlayer.getInstance().userInfo.strAvatar = item;
                EventManager.getInstance().emit(LobbyDefine.UPDATE_PLAYER_INFO, [DataPlayer.getInstance().userInfo]);
            });
            if (!this.inputNickName.text || this.inputNickName.text == "") {
                this.Close();
                return;
            }
            if (this.isFirstModify) {
                this.updateNickname();
            }
            else {
                let msg = window.formatPlaceHolderString(WARNING.NICKNAME_MODIFY_CASH, "R$ 2");
                let exitHandler = Laya.Handler.create(this, (yes) => {
                    if (!yes) {
                        return;
                    }
                    this.updateNickname();
                });
                PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [msg, MSG_TYPE.YES_NO, exitHandler], this);
            }
        }
        onBtnDel() {
            this.inputNickName.text = "";
        }
        updateNickname() {
            return __awaiter(this, void 0, void 0, function* () {
                GlobalData.getInstance().loadingAni.Show("");
                try {
                    let upUserInfoAck = yield OutTaskService.getInstance().upUserInfo(this.inputNickName.text);
                    let ret = upUserInfoAck.getCret();
                    if (ret == 0) {
                        let msg = "pid: " + GlobalData.getInstance().myPid + ", consume: " + (this.isFirstModify ? 0 : 2000);
                        GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1007, msg);
                        DataPlayer.getInstance().userInfo.nickname = this.inputNickName.text;
                        EventManager.getInstance().emit(LobbyDefine.UPDATE_PLAYER_INFO, [DataPlayer.getInstance().userInfo]);
                        this.Close();
                    }
                    else if (ret == -1) {
                        TopTipsManager.getInstance().showTopTips(WARNING.NOT_ENOUGH);
                    }
                    else if (ret == -20002) {
                        TopTipsManager.getInstance().showTopTips(WARNING.NICKNAME_REPET);
                    }
                    else if (ret == -20007) {
                        TopTipsManager.getInstance().showTopTips(WARNING.NICKNAME_ILLEGAL);
                    }
                    else {
                        TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL + ret);
                    }
                }
                catch (error) {
                    CC.Loge("更新昵称失败 ", error);
                    TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        onDestroy() {
        }
    }

    class UpdatePwd extends Laya.Box {
        Init() {
            this.visible = false;
            UpdatePwd.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            this.nodeInfo = window.findNodeByName(this, "nodeBody");
            window.InitialNode(this.nodeInfo);
            let btnArr = [this.nodeInfo.btnSubmit, this.nodeInfo.imgOld.btnHide1, this.nodeInfo.imgNew.btnHide2,
                this.nodeInfo.imgSure.btnHide3,];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show() {
            if (!this.inited) {
                this.Init();
            }
            this.visible = true;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            this.root.x = Laya.stage.width;
            Laya.Tween.to(this.root, { x: 0 }, 200, Laya.Ease.circOut);
            this.initData();
        }
        initData() {
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.UPDATE_PWD);
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "btnHide1") {
                this.onbtnHide1();
            }
            else if (node.name == "btnHide2") {
                this.onbtnHide2();
            }
            else if (node.name == "btnHide3") {
                this.onbtnHide3();
            }
            else if (node.name == "btnSubmit") {
                this.onbtnSubmit();
            }
        }
        onbtnHide1() {
            if (this.nodeInfo.imgOld.btnHide1.selected) {
                this.nodeInfo.imgOld.pwdInput.type = "password";
            }
            else {
                this.nodeInfo.imgOld.pwdInput.type = "text";
            }
            this.nodeInfo.imgOld.pwdInput.focus = (true);
        }
        onbtnHide2() {
            if (this.nodeInfo.imgNew.btnHide2.selected) {
                this.nodeInfo.imgNew.pwdInput.type = "password";
            }
            else {
                this.nodeInfo.imgNew.pwdInput.type = "text";
            }
            this.nodeInfo.imgNew.pwdInput.focus = (true);
        }
        onbtnHide3() {
            if (this.nodeInfo.imgSure.btnHide3.selected) {
                this.nodeInfo.imgSure.pwdInput.type = "password";
            }
            else {
                this.nodeInfo.imgSure.pwdInput.type = "text";
            }
            this.nodeInfo.imgSure.pwdInput.focus = (true);
        }
        onbtnSubmit() {
            let oldPwd = this.nodeInfo.imgOld.pwdInput.text;
            let newPwd = this.nodeInfo.imgNew.pwdInput.text;
            let surePwd = this.nodeInfo.imgSure.pwdInput.text;
            if (!newPwd || !oldPwd || !surePwd || newPwd == "" || surePwd == "") {
                TopTipsManager.getInstance().showTopTips(WARNING.UPDATE_NULL_KEY);
                return;
            }
            if (newPwd != surePwd) {
                TopTipsManager.getInstance().showTopTips(WARNING.UPDATE_DIF_KEY);
                return;
            }
            GlobalData.getInstance().loadingAni.Show("");
            LoginSocket.getInstance().changePwd(oldPwd, newPwd, (res) => {
                GlobalData.getInstance().loadingAni.Close();
                let code = "";
                if (res) {
                    code = res.getNret();
                }
                if (res && res.getNret() == 0) {
                    TopTipsManager.getInstance().showTopTips(WARNING.UPDATE_KEY_SUCC);
                    this.Close();
                }
                else if (res.getNret() == -40004) {
                    TopTipsManager.getInstance().showTopTips(WARNING.UPDATE_BAD_OLD_KEY);
                }
                else {
                    TopTipsManager.getInstance().showTopTips(WARNING.UPDATE_KEY_FAIL + ": " + code);
                }
            });
        }
        onDestroy() {
        }
    }

    class UserInfo extends Laya.Box {
        Init() {
            this.visible = false;
            UserInfo.instance = this;
            this.inited = true;
            this.root = this.getChildByName("root");
            this.closeBtn = this.root.getChildByName("navView").getChildByName("btnClose");
            this.closeBtn.on(Laya.Event.MOUSE_DOWN, this, this.Close);
            this.nodeInfo = window.findNodeByName(this.root, "infoView");
            window.InitialNode(this.nodeInfo);
            this.nodeSign = window.findNodeByName(this.root, "nodeSign");
            window.InitialNode(this.nodeSign);
            this.nodeLike = window.findNodeByName(this.root, "nodeLike");
            window.InitialNode(this.nodeLike);
            this.nodeLike.listGame.vScrollBarSkin = "";
            this.nodeLike.listGame.renderHandler = new Laya.Handler(this, this.updateGameItem);
            let btnArr = [this.nodeInfo.copyBtn, this.nodeInfo.arrawBox];
            for (let i = 0; i < btnArr.length; i++) {
                let btn = btnArr[i];
                window.addBtnListener(btn, Laya.Handler.create(this, this.onBtnClick, null, false));
            }
        }
        Show() {
            if (!this.inited) {
                this.Init();
            }
            this.visible = true;
            let maskBg = this.getChildByName("maskbg");
            maskBg.alpha = 0;
            Laya.Tween.to(maskBg, { alpha: 1 }, 300, null, null, 0);
            this.root.x = Laya.stage.width;
            Laya.Tween.to(this.root, { x: 0 }, 200, Laya.Ease.circOut);
            this.setPlayerInfo();
            this.refreshLikeData();
        }
        setPlayerInfo() {
            let data = DataPlayer.getInstance().userInfo;
            if (data) {
                let headImg = this.nodeInfo.headImg;
                let nameLab = this.nodeInfo.nameLab;
                let idLab = this.nodeInfo.idLab;
                window.circleSprite(headImg);
                headImg.skin = data.strAvatar;
                nameLab.text = window.formatString(window.GetRealName(data.nickname), 15);
                idLab.text = "ID: " + GlobalData.getInstance().myPid;
                let index = VipManager.getInstance().playerVipInfo.nVipLevel;
                this.nodeInfo.imgVip.skin = "2d/ui/BR_vip/icon_vip_dengji_" + index + ".png";
                this.nodeSign.lblBet.text = "R$ " + (VipManager.getInstance().playerVipInfo.nVipBet / 100);
                GlobalData.getInstance().loginScene.loginService.unidQueryReq(-1 * GlobalData.getInstance().myPid, (res) => {
                    if (res) {
                        let regTime = res.getNregtime();
                        let strData = moment(regTime * 1000).format("YYYY-MM-DD");
                        this.nodeSign.lblTime.text = strData;
                    }
                });
            }
        }
        refreshLikeData() {
            let gameIDs = GameStorage.getGameLike();
            let gameArr = [];
            let gameList = GlobalData.getInstance().lobbyScene.m_subLayers[0].m_gameDatas;
            if (gameIDs && gameList) {
                gameList.forEach((v, k) => {
                    let gameDatas = v.getGamesList();
                    if (gameDatas) {
                        for (let i = 0; i < gameDatas.length; i++) {
                            let gameInfo = gameDatas[i];
                            if (gameIDs.indexOf(gameInfo.getGameid()) > -1) {
                                let res = gameArr.find((v, k) => {
                                    return v.getGameid() == gameInfo.getGameid();
                                });
                                if (!res) {
                                    gameArr[gameArr.length] = gameInfo;
                                }
                            }
                        }
                    }
                });
                this.nodeLike.imgNull.visible = false;
            }
            else {
                this.nodeLike.imgNull.visible = true;
            }
            this.nodeLike.listGame.dataSource = gameArr;
        }
        updateGameItem(cell, index) {
            let itemData = cell.dataSource;
            window.InitialNode(cell);
            let item = itemData;
            let icon = item.getIcon();
            let gameid = item.getGameid();
            cell.skin = icon;
            cell.lblPer.visible = false;
            cell.on(Laya.Event.CLICK, this, this.onItemSelect, [item]);
        }
        onItemSelect(item) {
            PopupManager.Show(PREFAB_LOBBY.GAME_BRIEF, item);
        }
        Close() {
            GameAudio.getInstance().playCloseWin();
            let maskBg = this.getChildByName("maskbg");
            Laya.Tween.to(maskBg, { alpha: 0 }, 200, null, null, 0);
            this.visible = false;
            PopupManager.Destory(PREFAB_LOBBY.PLAYER_INFO);
        }
        onBtnClick(__event) {
            let node = __event.target;
            if (node.name == "copyBtn") {
                this.onBtnCopyId();
            }
            else if (node.name == "arrawBox") {
                this.onBtnProfile();
            }
            else if (node.name == "btnCancel") {
                this.Close();
            }
        }
        onBtnCopyId() {
            DeviceData.getInstance().setClipboard(GlobalData.getInstance().myPid + "");
            TopTipsManager.getInstance().showTopTips(WARNING.COPY_TO_CLIPBOARD);
        }
        onBtnProfile() {
            this.Close();
            PopupManager.Show(PREFAB_LOBBY.UPDATE_AVATAR, null);
        }
        onDestroy() {
        }
    }

    class BankUpdate extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.btnBind = null;
            this.bankType = null;
            this.bankName = null;
            this.bankNum = null;
            this.bankCpf = null;
            this.btnBankType = null;
            this.vnTypeList = ['Banco do Brasil', 'Banco Bradesco', 'Banco Safra',
                'Banco Santander Brasil', 'Banco Votorantim', 'Banco Caixa Economica Federal', 'Banco Itau'];
        }
        setInfoAndCallback(info, callback) {
            this.info = info;
            this.callback = callback;
            if (!this.info.getBank()) {
                this.info.setBank(this.vnTypeList[0]);
            }
            this.bankName.text = info.getName();
            this.bankNum.text = info.getCard();
            let extra = info.getExtras();
            this.bankCpf.text = (null != extra ? extra.getCpf() : "");
            this.initPayBtnState();
        }
        onEnable() {
            let rootBox = this.owner;
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.CLICK, this, this.onBtnClose);
            this.btnBind.on(Laya.Event.CLICK, this, this.onBtnBankBind);
            this.btnBankType.parent.on(Laya.Event.CLICK, this, this.onBtnBankType);
            let bankListView = this.bankChangeView.getChildByName("contentView").getChildByName("bankListView");
            bankListView.getChildByName("btnVCB").on(Laya.Event.MOUSE_DOWN, this, this.onBtnAtmWay, [this.vnTypeList[0]]);
            bankListView.getChildByName("btnVTB").on(Laya.Event.MOUSE_DOWN, this, this.onBtnAtmWay, [this.vnTypeList[1]]);
            bankListView.getChildByName("btnTCB").on(Laya.Event.MOUSE_DOWN, this, this.onBtnAtmWay, [this.vnTypeList[2]]);
            bankListView.getChildByName("btnBIDV").on(Laya.Event.MOUSE_DOWN, this, this.onBtnAtmWay, [this.vnTypeList[3]]);
            bankListView.getChildByName("btnMB").on(Laya.Event.MOUSE_DOWN, this, this.onBtnAtmWay, [this.vnTypeList[4]]);
            bankListView.getChildByName("btnBCF").on(Laya.Event.MOUSE_DOWN, this, this.onBtnAtmWay, [this.vnTypeList[5]]);
            bankListView.getChildByName("btnBI").on(Laya.Event.MOUSE_DOWN, this, this.onBtnAtmWay, [this.vnTypeList[6]]);
        }
        onDisable() {
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner;
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                Laya.stage.removeChild(this.owner);
            }), 0);
        }
        onBtnBankType() {
            this.bankChangeView.visible = true;
        }
        onBtnBankBind() {
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.bankName.text) {
                    TopTipsManager.getInstance().showTopTips(WARNING.BANK_NAME_NOT_EMPTY);
                    return;
                }
                else if (!this.bankNum.text) {
                    TopTipsManager.getInstance().showTopTips(WARNING.BANK_CARD_NOT_EMPTY);
                    return;
                }
                else if (!this.info.getBank()) {
                    TopTipsManager.getInstance().showTopTips(WARNING.BANK_TYPE_NOT_EMPTY);
                    return;
                }
                else if (!this.bankCpf.text) {
                    TopTipsManager.getInstance().showTopTips(WARNING.BANK_CPF);
                    return;
                }
                GlobalData.getInstance().loadingAni.Show("");
                try {
                    this.info.setName(this.bankName.text);
                    this.info.setCard(this.bankNum.text);
                    let extras = this.info.getExtras();
                    if (!extras) {
                        extras = new Exchange_pb_15();
                        this.info.setExtras(extras);
                    }
                    extras.setCpf(this.bankCpf.text);
                    let modifyAck = yield ExchangeService.getInstance().modify(this.info);
                    if (modifyAck.getCret() == 0) {
                        this.callback(modifyAck.getInfo());
                        this.onBtnClose();
                        GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1027);
                    }
                    else if (modifyAck.getCret() == Common_pb_1.E_EXCHANGE_RENAME) {
                        TopTipsManager.getInstance().showTopTips(WARNING.BANK_NAME_REPECT);
                    }
                    else if (modifyAck.getCret() == Common_pb_1.E_EXCHANGE_UNMOTIFY) {
                        TopTipsManager.getInstance().showTopTips(WARNING.BANK_MODIFY_LIMIT);
                    }
                    else {
                        TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                    }
                }
                catch (error) {
                    CC.Loge("ExchangeService:: modify ", error);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        onBtnBankClose() {
            this.bankChangeView.visible = false;
        }
        onBtnAtmWay(atmCode) {
            this.onBtnBankClose();
            this.info.setBank(atmCode);
            this.initPayBtnState();
        }
        initPayBtnState() {
            if (this.info.getBank()) {
                this.bankImage.skin = BankUpdate.BANK_IMAAG_MAP[this.info.getBank()];
                this.bankType.text = this.info.getBank();
            }
        }
    }
    BankUpdate.BANK_IMAAG_MAP = {
        'Banco do Brasil': "2d/ui/BR_tixian/sp_yinhang_Banco_do_Brasil.png",
        'Banco Bradesco': "2d/ui/BR_tixian/sp_yinhang_Banco_Bradesco.png",
        'Banco Safra': "2d/ui/BR_tixian/sp_yinhang_Banco_Safra.png",
        'Banco Santander Brasil': "2d/ui/BR_tixian/sp_yinhang_Banco_Santander_Brasil.png",
        'Banco Votorantim': "2d/ui/BR_tixian/sp_yinhang_Banco_Votorantim.png",
        'Banco Caixa Economica Federal': "2d/ui/BR_tixian/sp_yinhang_Banco_Caixa_Economica_Federal.png",
        'Banco Itau': "2d/ui/BR_tixian/sp_yinhang_Banco_Itau.png"
    };

    class WithdrawBank extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.bankView = null;
            this.bankType = null;
            this.bankNum = null;
            this.btnBind = null;
            this.btnTaskAward = null;
            this.inputCash = null;
            this.btnSubmit = null;
            this.curGoldLab = null;
            this.desView = null;
            this.des1View = null;
        }
        static isCanFirstWithdraw() {
            return __awaiter(this, void 0, void 0, function* () {
                let userInfo = DataPlayer.getInstance().userInfo;
                let infoAck = yield ExchangeService.getInstance().info();
                let info = infoAck.getInfo();
                let canNum = 0;
                if (info.getFinish() == 0) {
                    canNum = info.getMnum() > 0 ? info.getMnum() : userInfo.gold;
                }
                else if (info.getFinish() == 1) {
                    let avaGold = Math.min((info.getMnum() - info.getAmount() - info.getCnum()), userInfo.gold);
                    canNum = avaGold > 0 ? avaGold : 0;
                }
                return [info.getFirst() > 0 && canNum >= 10000, (info.getCtimes() <= 0)];
            });
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.CURRENCY_CHANGE_NOTI, this, this.onCurrencyChange);
            let rootBox = this.owner;
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
            this.bankView.on(Laya.Event.CLICK, this, this.onBtnBankBind);
            this.btnBind.on(Laya.Event.CLICK, this, this.onBtnBankBind);
            this.btnSubmit.on(Laya.Event.CLICK, this, this.onBtnSubmit);
            this.btnTaskAward.on(Laya.Event.CLICK, this, this.onBtnTaskAward);
            this.desView.visible = false;
            this.requestInfo();
            GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1026);
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.CURRENCY_CHANGE_NOTI, this, this.onCurrencyChange);
        }
        onCurrencyChange(data) {
            if (data.getNtype() === Currency_pb_10.GAMEMONEY || data.getNtype() == Currency_pb_10.ORB || data.getNtype() === Currency_pb_10.GOLDBEAN) {
                this.setInfoData();
            }
        }
        requestInfo() {
            return __awaiter(this, void 0, void 0, function* () {
                GlobalData.getInstance().loadingAni.Show("");
                try {
                    let infoAck = yield ExchangeService.getInstance().info();
                    let info = infoAck.getInfo();
                    this.info = info;
                    this.setInfoData();
                    if (!info.getBank() && !GameStorage.getIsOpenBindBank()) {
                        GameStorage.saveIsOpenBindBank(true);
                        let exitHandler = Laya.Handler.create(this, (yes) => __awaiter(this, void 0, void 0, function* () {
                            if (yes) {
                                this.onBtnBankBind();
                            }
                        }));
                        PopupManager.Show(PREFAB_LOBBY.MESSAGE_BOX, [WARNING.NEED_BIND_BANK, MSG_TYPE.YES_NO, exitHandler], Laya.stage);
                    }
                }
                catch (error) {
                    CC.Loge("ExchangeService:: info ", error);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner;
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                PopupManager.Hide(PREFAB_LOBBY.WITHDRAW_BANK);
            }), 0);
        }
        onBtnTaskAward() {
            return __awaiter(this, void 0, void 0, function* () {
                let level = VipManager.getInstance().playerVipInfo.nVipLevel;
                if (level > 0) {
                    this.requestAward(10000);
                }
                else {
                    TopTipsManager.getInstance().showTopTips(WARNING.WITHDRAW_NEED_VIP1);
                }
            });
        }
        onBtnBankBind() {
            Laya.loader.load("prefab/withdraw/BankUpdate.json", Laya.Handler.create(this, function (pref) {
                let pre = new Laya.Prefab();
                pre.json = pref;
                let node = pre.create();
                Laya.stage.addChild(node);
                node.getComponent(BankUpdate).setInfoAndCallback(this.info, (info) => {
                    this.info.setName(info.getName());
                    this.info.setCard(info.getCard());
                    this.info.setBank(info.getBank());
                    this.setInfoData();
                });
            }));
        }
        onBtnCashModify(val) {
            let inputCash = this.inputCash.text;
            if (!inputCash) {
                inputCash = "0";
            }
            let newCash = Number(inputCash) + Number(val);
            if (newCash < 0) {
                newCash = 0;
            }
            this.inputCash.text = newCash + "";
        }
        onBtnSubmit() {
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.info.getBank()) {
                    TopTipsManager.getInstance().showTopTips(WARNING.BANK_TYPE_NOT_EMPTY);
                    return;
                }
                let userInfo = DataPlayer.getInstance().userInfo;
                let inputNum = Number(this.inputCash.text || "0");
                let canNum = Number(this.curGoldLab.text || "0");
                if (inputNum < 1100 || inputNum > canNum) {
                    let tmpStr = window.formatPlaceHolderString(WARNING.WITHDRAW_NEED_RIGHT, "1100");
                    TopTipsManager.getInstance().showTopTips(tmpStr);
                    return;
                }
                else if (inputNum > canNum) {
                }
                if (this.desView.visible) {
                    let needLab = this.desView.getChildByName("labNeed");
                    let tmpStr = window.formatPlaceHolderString(WARNING.BET_NEED, needLab.text);
                    TopTipsManager.getInstance().showTopTips(tmpStr);
                    return;
                }
                this.requestAward(inputNum);
            });
        }
        requestAward(num) {
            return __awaiter(this, void 0, void 0, function* () {
                if (!this.info.getBank()) {
                    TopTipsManager.getInstance().showTopTips(WARNING.BANK_TYPE_NOT_EMPTY);
                    return;
                }
                GlobalData.getInstance().loadingAni.Show("");
                try {
                    GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1028);
                    let modifyAck = yield ExchangeService.getInstance().award(num);
                    if (modifyAck.getCret() == 0) {
                        EventManager.getInstance().emit(LobbyEvent.WITHDRAW_HISTORY_NOTI);
                        TopTipsManager.getInstance().showTopTips(WARNING.WITHDRAW_SUCCESS);
                        this.requestInfo();
                        GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1029);
                    }
                    else if (modifyAck.getCret() == Common_pb_1.E_EXCHANGE_LIMIT) {
                        TopTipsManager.getInstance().showTopTips(WARNING.WITHDRAW_NEED_VIP1);
                    }
                    else if (modifyAck.getCret() == Common_pb_1.E_EXCHANGE_PAY) {
                        TopTipsManager.getInstance().showTopTips(WARNING.WITHDRAW_FAIL);
                    }
                    else if (modifyAck.getCret() == Common_pb_1.E_EXCHANGE_LESS) {
                        TopTipsManager.getInstance().showTopTips(WARNING.WITHDRAW_NOT_ENOUGH);
                    }
                    else if (modifyAck.getCret() == Common_pb_1.E_EXCHANGE_BETLESS) {
                        TopTipsManager.getInstance().showTopTips(WARNING.BET_NOT_ENOUGH);
                    }
                    else {
                        TopTipsManager.getInstance().showTopTips(WARNING.REQUEST_FAIL);
                    }
                }
                catch (error) {
                    CC.Loge("ExchangeService:: award ", error);
                }
                finally {
                    GlobalData.getInstance().loadingAni.Close();
                }
            });
        }
        setInfoData() {
            if (!this.info) {
                return;
            }
            if (this.info.getBank()) {
                this.bankImage.skin = BankUpdate.BANK_IMAAG_MAP[this.info.getBank()];
                this.bankType.text = this.info.getBank();
            }
            this.bankNum.text = this.hideSensitiveData(this.info.getCard());
            this.setWithdrawState();
        }
        hideSensitiveData(str) {
            if (!str || str.length < 8) {
                return str;
            }
            const length = str.length;
            const firstFour = str.substring(0, 4);
            const lastFour = str.substring(length - 4, length);
            const asterisks = "*".repeat(length - 8);
            return `${firstFour}${asterisks}${lastFour}`;
        }
        setWithdrawState() {
            return __awaiter(this, void 0, void 0, function* () {
                let userInfo = DataPlayer.getInstance().userInfo;
                let infoAck = yield ExchangeService.getInstance().info();
                let info = infoAck.getInfo();
                if (info.getFinish() == 0) {
                    let avaGold = (info.getMnum() > 0 ? info.getMnum() : userInfo.gold) / 100;
                    this.curGoldLab.text = avaGold + "";
                }
                else if (info.getFinish() == 1) {
                    let avaGold = Math.min((info.getMnum() - info.getAmount() - info.getCnum()), userInfo.gold) / 100;
                    this.curGoldLab.text = (avaGold > 0 ? avaGold : 0) + "";
                }
                let betVal = info.getBetall() - info.getBetcur();
                if (betVal <= 0) {
                    this.desView.visible = false;
                    this.des1View.visible = true;
                    let desLab = this.des1View.getChildByName("labDes");
                    desLab.text = WARNING.WALLET_UPGRADE_VIP;
                }
                else {
                    this.desView.visible = true;
                    this.des1View.visible = false;
                    let needLab = this.desView.getChildByName("labNeed");
                    needLab.text = window.formatNum(betVal / 100);
                }
            });
        }
    }

    class WtihdrawRecord extends Laya.Script {
        constructor() {
            super();
            this.btnClose = null;
            this.recordList = null;
            this.emptyView = null;
        }
        onEnable() {
            EventManager.getInstance().on(LobbyEvent.WITHDRAW_HISTORY_NOTI, this, this.onWithdrawNoti);
            let rootBox = this.owner;
            rootBox.left = 1080;
            Laya.Tween.to(rootBox, { left: 0 }, 200, Laya.Ease.linearIn, null, 0);
            this.btnClose.on(Laya.Event.MOUSE_DOWN, this, this.onBtnClose);
            this.recordList.vScrollBarSkin = "";
            this.recordList.renderHandler = new Laya.Handler(this, this.updateUserItem);
            this.recordList.array = [];
            this.requestInfo();
        }
        onDisable() {
            EventManager.getInstance().off(LobbyEvent.WITHDRAW_HISTORY_NOTI, this, this.onWithdrawNoti);
        }
        onWithdrawNoti() {
            this.requestInfo();
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            let rootBox = this.owner;
            Laya.Tween.to(rootBox, { left: 1080 }, 200, Laya.Ease.linearOut, Laya.Handler.create(this, () => {
                PopupManager.Hide(PREFAB_LOBBY.WITHDRAW_RECORD);
            }), 0);
        }
        requestInfo() {
            return __awaiter(this, void 0, void 0, function* () {
                try {
                    let historyAck = yield ExchangeService.getInstance().history(0, 50, Exchange_pb_14.NONE);
                    let data = historyAck.getRecordsList();
                    this.recordList.array = data;
                    this.recordList.dataSource = data;
                    this.recordList.refresh();
                    if (null == data || data.length == 0) {
                        this.emptyView.visible = true;
                    }
                    else {
                        this.emptyView.visible = false;
                    }
                }
                catch (error) {
                    CC.Loge("ExchangeService::history  error = ", error);
                }
            });
        }
        updateUserItem(cell, index) {
            let data = this.recordList.dataSource;
            let item = data[index];
            let cashLab = cell.getChildByName("cashLab");
            let availableLab = cell.getChildByName("availableLab");
            let timeLab = cell.getChildByName("timeLab");
            let stateLab = cell.getChildByName("stateLab");
            cashLab.text = item.getNum() + "";
            availableLab.text = (item.getReal() - item.getNum()) + "";
            timeLab.text = GlobalFunc.formatDate(item.getTime());
            let status = item.getStatus();
            if (status == Exchange_pb_14.SUCCESS) {
                stateLab.text = "Sucesso";
                stateLab.color = "#68D567";
            }
            else if (status == Exchange_pb_14.WAIT || status == Exchange_pb_14.VERIFY) {
                stateLab.text = "Em revisão";
                stateLab.color = "#6355FF";
            }
            else {
                stateLab.text = "Fracasso";
                stateLab.color = "#ED1F42";
            }
            if (index % 2 != 0) {
                cell.skin = "";
            }
        }
    }

    class WithdrawSuccess extends Laya.Script {
        constructor() {
            super();
            this.imgMask = null;
        }
        onEnable() {
            let rootBox = this.owner;
            rootBox.scaleX = 0;
            rootBox.scaleY = 0;
            Laya.Tween.to(rootBox, { scaleX: 1, scaleY: 1 }, 300, Laya.Ease.backOut, null, 0);
            this.imgMask.on(Laya.Event.CLICK, this, this.onBtnClose);
        }
        onDisable() {
        }
        onBtnClose() {
            GameAudio.getInstance().playCloseWin();
            Laya.Tween.to(this.owner, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.backIn, Laya.Handler.create(this, () => {
                this.owner.visible = false;
                PopupManager.Hide(PREFAB_LOBBY.WITHDRAW_SUCCESS);
            }), 0);
        }
    }

    class GameConfig {
        constructor() { }
        static init() {
            var reg = Laya.ClassUtils.regClass;
            reg("ModuleLobby/LobbyScene.ts", LobbyScene);
            reg("ModuleLobby/LobbyPopup/MainLayers/LayerMain.ts", LayerMain);
            reg("ModuleLobby/LobbyPopup/BoardShow.ts", BoardShow);
            reg("ModuleBase/Framework/PageView.ts", PageView);
            reg("ModuleLobby/LobbyPopup/MainLayers/NodeGameType.ts", NodeGameType);
            reg("ModuleLobby/LobbyPopup/JackPot/JackPotItem.ts", JackPotItem);
            reg("ModuleLobby/LobbyPopup/MainLayers/NodeMenu.ts", NodeMenu);
            reg("ModuleLobby/LoginScene.ts", LoginScene);
            reg("ModuleBase/BasePopup/CommonLoading.ts", CommonLoading);
            reg("ModuleLobby/LobbyPopup/LuckyTurnTable.ts", TurnTable);
            reg("ModuleBase/BasePopup/TopTipDlg.ts", TopTipDlg);
            reg("ModuleLobby/LobbyPopup/Bulletin.ts", Bulletin);
            reg("ModuleLobby/LobbyPopup/CashPot.ts", CashPot);
            reg("ModuleLobby/LobbyPopup/DownloadApp.ts", DownloadApp);
            reg("ModuleLobby/LobbyPopup/FindPwd.ts", FindPwd);
            reg("ModuleLobby/LobbyPopup/GameBrief.ts", GameBrief);
            reg("ModuleLobby/LobbyPopup/HallSignIn.ts", HallSignIn);
            reg("ModuleLobby/LobbyPopup/JackPot/JackPotMain.ts", JackPotMain);
            reg("ModuleLobby/LobbyPopup/Mail.ts", Mail);
            reg("ModuleLobby/LobbyPopup/NewGift.ts", NewGift);
            reg("ModuleLobby/LobbyPopup/ReceiveSuccess.ts", ReceiveSuccess);
            reg("ModuleLobby/LobbyPopup/RechargeAct.ts", RechargeAct);
            reg("ModuleLobby/LobbyPopup/SerialGift.ts", SerialGift);
            reg("ModuleLobby/LobbyPopup/Shop.ts", Shop);
            reg("ModuleLobby/LobbyPopup/Sign.ts", Sign);
            reg("ModuleLobby/LobbyPopup/WeekGift.ts", WeekGift);
            reg("ModuleLobby/LobbyPopup/Affiliate/AffiliateCashback.ts", AffiliateCashback);
            reg("ModuleLobby/LobbyPopup/Affiliate/AffiliateCommission.ts", AffiliateCommission);
            reg("ModuleLobby/LobbyPopup/Affiliate/AffiliateDetail.ts", AffiliateDetail);
            reg("ModuleLobby/LobbyPopup/Affiliate/AffiliateFaq.ts", AffiliateFaq);
            reg("ModuleLobby/LobbyPopup/Affiliate/AffiliatePanel.ts", AffiliatePanel);
            reg("ModuleLobby/LobbyPopup/Affiliate/AffiliateRule.ts", AffiliateRule);
            reg("ModuleLobby/LobbyPopup/Affiliate/AffiliateTutorial.ts", AffiliateTutorial);
            reg("ModuleLobby/LobbyPopup/MainLayers/HallMenu.ts", HallMenu);
            reg("ModuleLobby/LobbyPopup/MainLayers/LayerAffiliate.ts", LayerAffiliate);
            reg("ModuleLobby/LobbyPopup/MainLayers/LayerBonus.ts", LayerBonus);
            reg("ModuleLobby/LobbyPopup/MainLayers/LayerGameSel.ts", LayerGameSel);
            reg("ModuleLobby/LobbyPopup/MainLayers/LayerProfile.ts", LayerProfile);
            reg("ModuleLobby/LobbyPopup/MainLayers/NodeGameItem.ts", NodeGameItem);
            reg("ModuleLobby/LobbyPopup/Vip/VipWin.ts", VipWin);
            reg("ModuleLobby/LobbyPopup/Vip/VipDes.ts", VipDes);
            reg("ModuleLobby/LobbyPopup/Vip/VipInfo.ts", VipInfo);
            reg("ModuleLobby/LobbyPopup/Vip/VipRate.ts", VipRate);
            reg("ModuleLobby/LobbyPopup/MessageBox.ts", MessageBox);
            reg("ModuleLobby/LobbyPopup/User/BetRecord.ts", BetRecord);
            reg("ModuleLobby/LobbyPopup/User/HallSet.ts", HallSet);
            reg("ModuleLobby/LobbyPopup/User/UpdateAvatar.ts", UpdateAvatar);
            reg("ModuleLobby/LobbyPopup/User/UpdatePwd.ts", UpdatePwd);
            reg("ModuleLobby/LobbyPopup/User/UserInfo.ts", UserInfo);
            reg("ModuleLobby/LobbyPopup/Withdraw/BankUpdate.ts", BankUpdate);
            reg("ModuleLobby/LobbyPopup/Withdraw/WithdrawBank.ts", WithdrawBank);
            reg("ModuleLobby/LobbyPopup/Withdraw/WtihdrawRecord.ts", WtihdrawRecord);
            reg("ModuleLobby/LobbyPopup/Withdraw/WithdrawSuccess.ts", WithdrawSuccess);
        }
    }
    GameConfig.width = 1920;
    GameConfig.height = 1080;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "horizontal";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "views/login.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    GameConfig.init();

    class GameEffect {
        constructor() {
            this.clickIndex = 0;
            this.m_aniName = ['dong', 'fa', 'zhong'];
        }
        static InitClickEffect() {
            if (GameEffect.instance == null) {
                GameEffect.instance = new GameEffect();
            }
            if (GameEffect.instance != null) {
                GameEffect.instance.onLoadClickEffect();
            }
        }
        onLoadClickEffect() {
            this.m_spine = new Laya.Skeleton();
            this.m_spine.load("spine/Click.sk", Laya.Handler.create(this, this.onClickSourceLoadOK));
        }
        onClickSourceLoadOK() {
            this.m_spine.zOrder = 10000;
            this.m_spine.x = -20000;
            Laya.stage.addChild(this.m_spine);
            this._longPressTime = 0;
            Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
            Laya.stage.on(Laya.Event.FOCUS, this, this.methodHandler);
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onLongPressUp);
        }
        onMouseDown() {
            if (this.clickIndex >= 3) {
                this.clickIndex = 0;
            }
            Laya.timer.loop(1000, this, this.setLongPressTime);
            this.m_spine.play(this.m_aniName[this.clickIndex], false);
            this.m_spine.x = Laya.MouseManager.instance.mouseX / Laya.stage.clientScaleX;
            this.m_spine.y = Laya.MouseManager.instance.mouseY / Laya.stage.clientScaleY;
            this.clickIndex++;
        }
        onLongPressUp() {
            Laya.timer.clear(this, this.setLongPressTime);
            this._longPressTime = 0;
        }
        setLongPressTime() {
            this._longPressTime++;
            if (this._longPressTime >= 1) {
                Laya.timer.clear(this, this.setLongPressTime);
                this._longPressTime = 0;
            }
        }
        methodHandler() {
            GameAudio.getInstance().resumeMusic();
        }
    }

    class UpdateVersion extends Singleton {
        constructor() {
            super(...arguments);
            this._forceUpdate = false;
            this._updateContent = null;
            this._updateURL = null;
            this._version = "1.0.0";
            this.isWhiteList = false;
        }
        get forceUpdate() {
            return this._forceUpdate;
        }
        set forceUpdate(force) {
            this._forceUpdate = force;
        }
        get updateContent() {
            return this._updateContent;
        }
        set updateContent(content) {
            this._updateContent = content;
        }
        get updateURL() {
            return this._updateURL;
        }
        set updateURL(url) {
            this._updateURL = url;
        }
        get version() {
            return this._version;
        }
        set version(ver) {
            this._version = ver;
        }
        GetNewVersion(callback) {
            if (this.isWhiteList) {
                if (DeviceData.getInstance().isAndroid) {
                    GameHttpRequest.get(GlobalVariables.ANDROID_VERSION_URL_TEST, callback);
                }
                else if (DeviceData.getInstance().isIOS) {
                    GameHttpRequest.get(GlobalVariables.IOS_VERSION_URL_TEST, callback);
                }
                else {
                    callback(null);
                }
            }
            else {
                if (DeviceData.getInstance().isAndroid) {
                    GameHttpRequest.get(GlobalVariables.ANDROID_VERSION_URL, callback);
                }
                else if (DeviceData.getInstance().isIOS) {
                    GameHttpRequest.get(GlobalVariables.IOS_VERSION_URL, callback);
                }
                else {
                    callback(null);
                }
            }
        }
        VersionTips(callback) {
            if (DeviceData.getInstance().isAndroid) {
                GameHttpRequest.get(GlobalVariables.ANDROID_VERSION_TIP, callback);
            }
            else if (DeviceData.getInstance().isIOS) {
                GameHttpRequest.get(GlobalVariables.IOS_VERSION_TIP, callback);
            }
            else {
                callback(null);
            }
        }
        getAPPVersion() {
            if (DeviceData.getInstance().isNative) {
                DeviceData.getInstance().tsBridge.callWithBack((mVersion) => {
                    this.version = mVersion;
                    this.GetNewVersion((res, err) => {
                        if (err) {
                            CC.Log('获取APP版本失败');
                        }
                        else {
                            CC.Log('获取APP版本信息成功: ', res);
                            let resJson = JSON.parse(res);
                            if (resJson) {
                                this.version = resJson.version;
                                let versionResult = GlobalFunc.versionCompare(resJson.version, mVersion);
                                let isNewVersion = versionResult > 0;
                                let isForce = GlobalFunc.versionCompare(resJson.force, mVersion) > 0;
                                this.forceUpdate = isNewVersion && isForce;
                                let localVersion = GameStorage.getSourceVersion();
                                let sourceResult = GlobalFunc.versionCompare(resJson.version, localVersion);
                                if (sourceResult >= 0 && !isForce) {
                                    GameStorage.setSourceVersion(resJson.version);
                                }
                                this.updateURL = resJson.download;
                                this.VersionTips((res, err) => {
                                    if (err) {
                                        CC.Log('获取版本内容失败');
                                    }
                                    else {
                                        CC.Log("获取版本内容成功：", res);
                                        this.updateContent = res;
                                    }
                                });
                            }
                        }
                    });
                }, 'appVersion');
            }
        }
    }

    class GameJavaBrigde {
        static loginChannel(type, callback) {
            if (window["tienLen777"]) {
                let callbackId = "loginChannelCallBack";
                GameJavaBrigde.cbArr[callbackId] = callback;
                let params = {
                    type: type,
                    callback: callbackId
                };
                let jsonStr = JSON.stringify(params);
                window["tienLen777"].loginChannel(jsonStr);
            }
        }
        static sendAFLogEvent(param, callback) {
            if (window["tienLen777"]) {
                let callbackId = "sendAFLogEventCallBack";
                GameJavaBrigde.cbArr[callbackId] = callback;
                let params = {
                    param: param,
                    callback: callbackId
                };
                let jsonStr = JSON.stringify(params);
                window["tienLen777"].sendAFLogEvent(jsonStr);
            }
        }
    }
    GameJavaBrigde.cbArr = {};

    var CDType$1;
    (function (CDType) {
        CDType[CDType["SS"] = 0] = "SS";
        CDType[CDType["MM"] = 1] = "MM";
        CDType[CDType["HH"] = 2] = "HH";
        CDType[CDType["Day"] = 3] = "Day";
    })(CDType$1 || (CDType$1 = {}));
    class GlobalFuncs {
        static initCommon() {
            window.GameService = function (type) {
                GlobalVariables.SERVICE_TYPE = type;
                switch (type) {
                    case SERVER_TYPE.TEST:
                        GlobalVariables.SERVER_URL = 'https://sslenvoy.slots777.group:18080';
                        break;
                    case SERVER_TYPE.TEST_IN:
                        GlobalVariables.SERVER_URL = 'http://180.168.172.154:8000';
                        GlobalVariables.LOG_KEY = 'dfdfdfd23';
                        break;
                    case SERVER_TYPE.PRE_RELEASE:
                        GlobalVariables.SERVER_URL = 'http://pre-release.008.net:16102';
                        GlobalVariables.LOG_KEY = 'dfdfdfd23';
                        break;
                    case SERVER_TYPE.RELEASE:
                    default:
                        GlobalVariables.SERVER_URL = 'https://envoyservice-cdn.slots777.love';
                        GlobalVariables.LOG_KEY = 'wZzMAr8IGmE3qkob3B1gNoIgCKJOJYlP';
                        GlobalVariables.IOS_VERSION_URL = 'http://www.slots777.love/layaBrazil/update/ios/version.json';
                        GlobalVariables.IOS_VERSION_URL_TEST = 'http://www.slots777.love/layaBrazil/update/ios/version_test.json';
                        GlobalVariables.IOS_VERSION_TIP = 'http://www.slots777.love/layaBrazil/update/ios/update_record.txt';
                        GlobalVariables.ANDROID_VERSION_URL = 'http://www.slots777.love/layaBrazil/update/android/version.json';
                        GlobalVariables.ANDROID_VERSION_URL_TEST = 'http://www.slots777.love/layaBrazil/update/android/version_test.json';
                        GlobalVariables.ANDROID_VERSION_TIP = 'http://www.slots777.love/layaBrazil/update/android/update_record.txt';
                        GlobalVariables.NEW_SERVICE_URL = "https://customerservice-cdn.slots777.love/chatIndex?kefu_id=kefu2";
                        GlobalVariables.ACT_AWARD_URL = "http://admin.tienlen777.com/#/login?lang=vi";
                        break;
                }
            },
                window.setServerByLang = function (type) {
                    if (GlobalVariables.SERVICE_TYPE == SERVER_TYPE.RELEASE) {
                        switch (type) {
                            case LANG_T.RU:
                                GlobalVariables.SERVER_URL = 'http://envoy.slots777.group:8080';
                                GlobalVariables.NEW_SERVICE_URL = 'http://customer.slots777.group:31081/chatIndex?kefu_id=kefu2';
                                GlobalVariables.SHOP_IMAGE_URL = 'http://www.slots777.group/shop/';
                                GlobalVariables.ACT_AWARD_URL = "http://admin.slots777.group/#/login?lang=ru";
                                break;
                            case LANG_T.IND:
                            case LANG_T.EN:
                                GlobalVariables.SERVER_URL = 'http://envoyservice.777slotinr.shop:8080';
                                GlobalVariables.NEW_SERVICE_URL = 'http://customerservice.slots777.love:8081/chatIndex?kefu_id=kefu2';
                                GlobalVariables.SHOP_IMAGE_URL = 'http://www.777slotinr.shop:80/shop/';
                                GlobalVariables.ACT_AWARD_URL = "http://admin.777slotinr.shop/#/login?lang=en";
                                break;
                            default:
                                GlobalVariables.SERVER_URL = 'https://envoyservice-cdn.slots777.love';
                                GlobalVariables.NEW_SERVICE_URL = 'https://customerservice-cdn.slots777.love/chatIndex?kefu_id=kefu2';
                                GlobalVariables.SHOP_IMAGE_URL = 'http://outyn.tienlen777.com/shop/';
                                GlobalVariables.ACT_AWARD_URL = "http://admin.tienlen777.com/#/login?lang=vi";
                                break;
                        }
                    }
                },
                window.findNodeByName = function (__node, __name) {
                    let res = __node.getChildByName(__name);
                    if (res) {
                        return res;
                    }
                    let num = __node.numChildren;
                    if (num > 0) {
                        for (let i = 0; i < num; i++) {
                            let child = __node.getChildAt(i);
                            let res1 = window.findNodeByName(child, __name);
                            if (res1) {
                                return res1;
                            }
                        }
                    }
                },
                window.InitialNode = function (__node) {
                    let num = __node.numChildren;
                    if (num > 0) {
                        for (let i = 0; i < num; i++) {
                            let child = __node.getChildAt(i);
                            __node[child.name] = child;
                            window.InitialNode(child);
                        }
                    }
                },
                window.addBtnListener = function (__node, __handler, __noSound) {
                    __node.on(Laya.Event.CLICK, __handler.caller, function (__event) {
                        if (!__noSound) {
                            GameAudio.getInstance().playClick();
                        }
                        __handler.runWith(__event);
                    }.bind(__handler.caller));
                },
                window.S2CPos = function (cChair) {
                    let total = window.G_PokerMgr ? window.G_PokerMgr.m_plyNum : 4;
                    let resPos = (cChair + total - DataMatch.getInstance().getMyChair()) % total;
                    if (total == 3) {
                        if (resPos == 2) {
                            resPos = 3;
                        }
                    }
                    else if (total == 2) {
                        if (resPos == 1) {
                            resPos = 2;
                        }
                    }
                    return resPos;
                },
                window.GetMyIP = function (callback) {
                    let params = {
                        Source: GlobalVariables.SOURCE_ID_ANDROID,
                        Channel: "tienlengp2",
                        Version: "1.0.0"
                    };
                    GameHttpRequest.post(GlobalVariables.IP_SOURCE_URL, params, (res, err) => {
                        if (err) {
                            callback(null, err);
                            return;
                        }
                        CC.Log("GetMyIp res = ", res);
                        let p_json = JSON.parse(res);
                        let result = {};
                        let bVerify = 0;
                        let ret = p_json["CRet"];
                        let white = 3;
                        if (ret == 2) {
                            white = 1;
                        }
                        else {
                            let isVPN = DeviceData.getInstance().checkVPN();
                            if (isVPN == "1") {
                                ret = -1;
                            }
                        }
                        let p_info = p_json["Info"];
                        let country = p_info["Country"];
                        result["ip"] = p_info["IP"];
                        result["white_list"] = white;
                        result["country"] = country;
                        let bVN = false;
                        if (ret == 1) {
                            if (country === ("BR")) {
                                bVN = true;
                            }
                        }
                        if (bVN) {
                        }
                        else if (ret == 2) {
                        }
                        else {
                            bVerify = 1;
                        }
                        result["verify"] = bVerify;
                        result = JSON.stringify(result);
                        callback(result, err);
                    });
                },
                window.GetRealName = function (_name) {
                    let name = _name;
                    let find = name.indexOf(";V$#");
                    if (find != -1) {
                        name = name.substr(0, find);
                    }
                    return name;
                },
                window.formatString = function (__str, __length) {
                    __str = __str || "";
                    let resStr = __str;
                    var realLength = 0, len = __str.length, charCode = -1;
                    for (var i = 0; i < len; i++) {
                        charCode = __str.charCodeAt(i);
                        if (charCode >= 0 && charCode <= 128) {
                            realLength += 1;
                        }
                        else if (charCode >= 0x0102 && charCode <= 0x1ef9) {
                            realLength += 3;
                        }
                        else {
                            realLength += 2;
                        }
                    }
                    if (realLength > __length) {
                        let index = 0, numTmp = 0;
                        let byteCount = 1;
                        for (let i = 0; i < realLength; i += byteCount) {
                            if (numTmp >= __length) {
                                break;
                            }
                            let curByte = __str.charCodeAt(index);
                            byteCount = 1;
                            numTmp = numTmp + 1;
                            if (curByte >= 0 && curByte <= 128) {
                                byteCount = 1;
                            }
                            else if (curByte >= 0x0102 && curByte <= 0x1ef9) {
                                byteCount = 3;
                            }
                            else {
                                byteCount = 2;
                                numTmp = numTmp + 1;
                            }
                            index++;
                        }
                        resStr = __str.substring(0, index) + "..";
                    }
                    return resStr;
                },
                window.formatDate = function (strDate, strFormat = 'yyyy-MM-DD HH:mm:ss') {
                    if (!strDate)
                        return;
                    let result = moment(strDate * 1000).format(strFormat);
                    return result;
                },
                window.getNow = function () {
                    return Math.floor((Date.now() - GlobalData.getInstance().serverTimeDelta) / 1000);
                },
                window.isOutSevenDays = function (time) {
                    let now = Date.parse(new Date().toString());
                    let delta = moment.duration(now - time * 1000, 'ms'), years = delta.years(), months = delta.months(), days = delta.days();
                    if (years <= 0 && months <= 0 && days < 7) {
                        return false;
                    }
                    else {
                        return true;
                    }
                },
                window.loadTimeAlias = function (dateNum) {
                    if (!dateNum)
                        return;
                    let targetYear = moment(dateNum * 1000).year();
                    let targetMonth = moment(dateNum * 1000).month();
                    let targetDay = moment(dateNum * 1000).date();
                    let targetHour = moment(dateNum * 1000).hour();
                    let targetMinute = moment(dateNum * 1000).minute();
                    const date = new Date();
                    const year = date.getFullYear();
                    const month = date.getMonth();
                    const day = date.getDate();
                    let l_monthDay = new Date(year, month + 1, 0).getDate();
                    if (moment().year() - targetYear > 0) {
                        if (moment().year() - targetYear > 1) {
                            return WARNING.TIME_AGO + ' ' + (moment().year() - targetYear) + ' ' + WARNING.TIME_YEAR;
                        }
                        else if (month + 12 - targetMonth > 1) {
                            return WARNING.TIME_AGO + ' ' + (month + 12 - targetMonth) + ' ' + WARNING.TIME_MON;
                        }
                        else {
                            return WARNING.TIME_AGO + ' ' + (day + l_monthDay - targetDay) + ' ' + WARNING.TIME_DAY;
                        }
                    }
                    else if (moment().month() - targetMonth > 0) {
                        if (l_monthDay - targetDay > 28) {
                            return WARNING.TIME_AGO + ' ' + (moment().month() - targetMonth) + ' ' + WARNING.TIME_MON;
                        }
                        else {
                            return WARNING.TIME_AGO + ' ' + (day + l_monthDay - targetDay) + ' ' + WARNING.TIME_DAY;
                        }
                    }
                    else if (moment().date() - targetDay > 0) {
                        return WARNING.TIME_AGO + ' ' + (moment().date() - targetDay) + ' ' + WARNING.TIME_DAY;
                    }
                    else if (moment().hour() - targetHour > 0) {
                        return WARNING.TIME_AGO + ' ' + (moment().hour() - targetHour) + ' ' + WARNING.TIME_HOUR;
                    }
                    else if (moment().minute() - targetMinute > 0) {
                        return WARNING.TIME_AGO + ' ' + (moment().minute() - targetMinute) + ' ' + WARNING.TIME_MIN;
                    }
                    else {
                        return ' ' + WARNING.TIME_JUST;
                    }
                },
                window.countDown = function (endDate, cdType = CDType$1.SS) {
                    let now = this.getNowMilli();
                    let delta = moment.duration(endDate * 1000 - now, 'ms'), days = Math.floor((endDate * 1000 - now) / (24 * 3600 * 1000)), hours = delta.hours(), mins = delta.minutes(), ss = delta.seconds();
                    if (days <= 0 && hours <= 0 && mins <= 0 && ss <= 0) {
                        return '00:00:00';
                    }
                    else {
                        let hourTime = this.prefixInt(hours, 2) + ':' + this.prefixInt(mins, 2) + ':' + this.prefixInt(ss, 2);
                        switch (cdType) {
                            case CDType$1.MM:
                                hourTime = this.prefixInt(hours, 2) + ':' + this.prefixInt(mins, 2);
                                break;
                            case CDType$1.HH:
                                hourTime = days > 0 ? this.prefixInt(hours, 2) : hourTime;
                                break;
                            case CDType$1.Day:
                                hourTime = days > 0 ? '' : hourTime;
                                break;
                        }
                        let dayTime = days + WARNING.TIME_DAY + hourTime;
                        let result = days > 0 ? dayTime : hourTime;
                        return result;
                    }
                },
                window.prefixInt = function (num, n) {
                    return (Array(n).join('0') + num).slice(-n);
                },
                window.getChildByRoute = function (node, route) {
                    let names = route.split(".");
                    let child;
                    child = node;
                    for (let i = 0; i < names.length; i++) {
                        const name = names[i];
                        child = child.getChildByName(name);
                        if (child == null) {
                            return child;
                        }
                    }
                    return child;
                },
                window.shuffle = function (array) {
                    let currentIndex = array.length, randomIndex;
                    while (currentIndex != 0) {
                        randomIndex = Math.floor(Math.random() * currentIndex);
                        currentIndex--;
                        [array[currentIndex], array[randomIndex]] = [
                            array[randomIndex], array[currentIndex]
                        ];
                    }
                    return array;
                },
                window.randomInt = function (max) {
                    return Math.floor(Math.random() * max);
                },
                window.randomArea = function (min, max) {
                    return Math.floor(Math.random() * (max - min) + min);
                },
                window.formatNum = function (__num) {
                    __num = __num || 0;
                    let tmpNum = Math.abs(__num);
                    let resStr = Math.abs(__num);
                    if (tmpNum < 10000) {
                        resStr = tmpNum;
                    }
                    else if (tmpNum < 1000000) {
                        tmpNum = tmpNum / 1000;
                        resStr = Math.floor(tmpNum * 100) / 100 + "K";
                    }
                    else if (tmpNum < 1000000000) {
                        tmpNum = tmpNum / 1000000;
                        resStr = Math.floor(tmpNum * 100) / 100 + "M";
                    }
                    else {
                        tmpNum = tmpNum / 1000000000;
                        resStr = Math.floor(tmpNum * 100) / 100 + "B";
                    }
                    if (__num < 0) {
                        resStr = "-" + resStr;
                    }
                    return resStr;
                },
                window.getDotFirstNum = function (num, digit = 2) {
                    if (Number(num) === Math.floor(num))
                        return Math.floor(num);
                    let res = [], addNum = 0;
                    num += '';
                    let [zs, xs] = num.split('.');
                    for (let i = 0; i < xs.length; i++) {
                        const ele = xs[i];
                        if (res.length < digit) {
                            if (ele != 0) {
                                for (let k = i; k < i + (digit - 1); k++) {
                                    if (res.length < digit) {
                                        res[k] = xs[k];
                                    }
                                }
                            }
                            else {
                                res[i] = xs[i];
                            }
                            ;
                        }
                    }
                    return Number(Number(zs) + addNum + '.' + res.join(''));
                },
                window.numToSplitStr = function (number) {
                    var strNumber = number.toString();
                    var integerPart = strNumber.split('.')[0];
                    let dots = strNumber.split('.')[1];
                    var result = '';
                    var length = integerPart.length;
                    for (var i = 0; i < length; i++) {
                        result = integerPart[length - 1 - i] + result;
                        if ((i + 1) % 3 === 0 && i !== length - 1) {
                            result = ',' + result;
                        }
                    }
                    if (dots) {
                        result += "." + dots;
                    }
                    return result;
                },
                window.captureShareImg = function (target = Laya.stage) {
                    var _texture = target.drawToTexture(target.width, target.height, target.x, target.y);
                    var sp2 = new Laya.Sprite();
                    let tempHeight = target.height >= 745 ? 745 : target.height;
                    let tempWidth = tempHeight * _texture.sourceWidth / _texture.sourceHeight;
                    sp2.size(tempWidth, tempHeight);
                    sp2.graphics.drawTexture(_texture, 0, 0, tempWidth, tempHeight);
                    return sp2;
                },
                window.versionCompare = function (newStr, oldStr) {
                    var nStr1 = newStr.replace(/(^\s+)|(\s+$)/gi, "");
                    var nStr2 = oldStr.replace(/(^\s+)|(\s+$)/gi, "");
                    if (!nStr1 || !nStr2) {
                        return true;
                    }
                    var arr1 = nStr1.split('.');
                    var arr2 = nStr2.split('.');
                    var minL = Math.min(arr1.length, arr2.length);
                    var index = 0;
                    var diff = 0;
                    while (index < minL) {
                        diff = parseInt(arr1[index]) - parseInt(arr2[index]);
                        if (diff != 0) {
                            break;
                        }
                        index++;
                    }
                    diff = (diff != 0) ? diff : (arr1.length - arr2.length);
                    return diff;
                },
                window.circleSprite = function (sprite) {
                    let radius = sprite.width / 2;
                    let cMask = new Laya.Sprite();
                    cMask.graphics.drawCircle(0, 0, radius, "#ff0000");
                    cMask.pos(radius, radius);
                    sprite.mask = cMask;
                },
                window.openH5UrlNormal = function (url, bgColor) {
                    try {
                        let document = Laya.Browser.window.document;
                        document.getElementById("h5Div1").style.display = "block";
                        document.getElementById("h5Div1").style.backgroundColor = bgColor;
                        var myIframe = document.getElementById("myIframe1");
                        myIframe.src = url;
                    }
                    catch (error) {
                        CC.Loge("openH5Url失败: ", error);
                    }
                },
                window.openH5Url = function (url, bgColor, backDeg = 0, h5HideCallback) {
                    try {
                        let canBgm = GameStorage.getCanBgm();
                        GameAudio.getInstance().setBgm(false);
                        Laya.Browser.window.h5HideCallback = () => {
                            GameAudio.getInstance().setBgm(canBgm);
                            h5HideCallback && h5HideCallback();
                            Laya.Browser.window.h5HideCallback = null;
                        };
                        let document = Laya.Browser.window.document;
                        document.getElementById("ctrlDiv").style.display = "flex";
                        document.getElementById("h5Div").style.display = "block";
                        document.getElementById("h5Div").style.backgroundColor = bgColor;
                        var myIframe = document.getElementById("myIframe");
                        myIframe.src = url;
                    }
                    catch (error) {
                        CC.Loge("openH5Url失败: ", error);
                    }
                },
                window.formatPlaceHolderString = function (format, ...args) {
                    return format.replace(/{(\d+)}/g, (match, index) => {
                        return typeof args[index] !== 'undefined' ? args[index] : match;
                    });
                },
                window.getTimeRemaining = function (targetTimestamp) {
                    const now = Math.floor(Date.now() / 1000);
                    const timeDiff = targetTimestamp - now;
                    if (timeDiff <= 0) {
                        return '00:00:00';
                    }
                    const hours = Math.floor(timeDiff / 3600);
                    const minutes = Math.floor((timeDiff % 3600) / 60);
                    const seconds = timeDiff % 60;
                    const formattedTime = (hours < 10 ? '0' : '') + hours + ':' +
                        (minutes < 10 ? '0' : '') + minutes + ':' +
                        (seconds < 10 ? '0' : '') + seconds;
                    return formattedTime;
                },
                window.getPrvNameByGameID = function (gameid) {
                    for (let i = 0; i < GAME_SOURCE.length; i++) {
                        let game = GAME_SOURCE[i];
                        if (gameid >= game.range[0] && gameid <= game.range[1]) {
                            return game.name;
                        }
                        else if (game.range1) {
                            if (gameid >= game.range1[0] && gameid <= game.range1[1]) {
                                return game.name;
                            }
                        }
                    }
                    return gameid;
                },
                window.gotoService = function () {
                    GlobalData.getInstance().lobbySocket.sendMarkLogGet(MARK_LOG.LOG_1021);
                    let url = GlobalVariables.NEW_SERVICE_URL + "&lang=" + Utils.getLangStr() + "&pid=" + GlobalData.getInstance().myPid + "&ticket=" + GlobalData.getInstance().myTicket;
                    let params = {
                        "orientation": 2,
                        "h5Url": url,
                        "adjustInput": true
                    };
                    DeviceData.getInstance().showWebViewNorm(params, null, 0);
                },
                window.showLeftMenu = function () {
                    GlobalData.getInstance().lobbyScene.onbtnMenu(1);
                },
                window.showShop = function () {
                    GlobalData.getInstance().lobbyScene.showShop(1);
                },
                window.closeMenu = function () {
                    GlobalData.getInstance().lobbyScene.closeMenu();
                },
                window.isLikeGame = function (gameid) {
                    gameid = gameid || window.curGameID;
                    return GameStorage.isLike(gameid);
                },
                window.removeGameLike = function (gameid) {
                    gameid = gameid || window.curGameID;
                    GameStorage.removeGameLike(gameid);
                },
                window.setGameLike = function (gameid) {
                    gameid = gameid || window.curGameID;
                    GameStorage.setGameLike(gameid);
                },
                window["handleMsgFromNative"] = function (msg) {
                    CC.Log("handleMsgFromNative ======> " + msg);
                    if (msg) {
                        let msgObj = JSON.parse(msg);
                        if (msgObj) {
                            CC.Log("handleMsgFromNative  11111======> " + msgObj);
                            if (msgObj.callback) {
                                let callFunc = GameJavaBrigde.cbArr[msgObj.callback];
                                if (callFunc && (callFunc instanceof Function)) {
                                    let tmpParam = msgObj.params;
                                    if (msgObj.params instanceof Object) {
                                        tmpParam = JSON.stringify(msgObj.params);
                                    }
                                    callFunc(tmpParam);
                                    callFunc = null;
                                }
                            }
                        }
                    }
                };
            window["onNativeResume"] = function () {
                EventManager.getInstance().emit(LobbyEvent.APP_RESUME);
            };
        }
    }

    class Main {
        constructor() {
            Laya.init(GameConfig.width, GameConfig.height, Laya["WebGL"]);
            Laya.SoundManager.autoStopMusic = true;
            Laya["Physics"] && Laya["Physics"].enable();
            Laya["DebugPanel"] && Laya["DebugPanel"].enable();
            let ccc = Number((Laya.Browser.width / Laya.Browser.height).toFixed(2));
            if (Laya.Browser.width < Laya.Browser.height) {
                ccc = Number((Laya.Browser.height / Laya.Browser.width).toFixed(2));
            }
            if (window["conchConfig"]) {
                window["conchConfig"].setDebugLevel(-1);
            }
            Laya.stage.scaleMode = "fixedwidth";
            Laya.stage.screenMode = GameConfig.screenMode;
            Laya.stage.alignV = GameConfig.alignV;
            Laya.stage.alignH = GameConfig.alignH;
            Laya.URL.exportSceneToJson = GameConfig.exportSceneToJson;
            if (GameConfig.debug || Laya.Utils.getQueryString("debug") == "true")
                Laya.enableDebugPanel();
            if (GameConfig.physicsDebug && Laya["PhysicsDebugDraw"])
                Laya["PhysicsDebugDraw"].enable();
            if (GameConfig.stat)
                Laya.Stat.show();
            Laya.alertGlobalError(GlobalVariables.ALERT_GLOBAL_ERROR);
            Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
            CC.DEBUG(true);
        }
        onVersionLoaded() {
            Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
        }
        onConfigLoaded() {
            GlobalVariables.getSourceID();
            GlobalVariables.calcFixSize();
            GlobalFuncs.initCommon();
            DeviceData.getInstance().loadTSBridge();
            window.GameService(SERVER_TYPE.RELEASE);
            DeviceData.getInstance().getMyIP((res, err) => {
                if (err) {
                    CC.Log('获取本机IP失败');
                }
                else {
                    CC.Log('获取本机IP: ', res);
                    let resJson = JSON.parse(res);
                    resJson.ip && (GlobalVariables.G_MY_IP = resJson.ip);
                    if (resJson["white_list"] == 1) {
                        UpdateVersion.getInstance().isWhiteList = true;
                    }
                    else {
                        UpdateVersion.getInstance().isWhiteList = false;
                    }
                    GlobalVariables.IS_VERIFY = resJson.verify;
                    if (resJson["country"] == "US") {
                        GlobalVariables.IS_VERIFY = true;
                    }
                    else if (resJson["country"] == "CN") {
                        return;
                    }
                    LangManager.setLangByCountry(resJson["country"], resJson["sysLang"]);
                    window.setServerByLang(GlobalVariables.DEF_LANG);
                }
                DeviceData.getInstance().initDevice();
                UpdateVersion.getInstance().getAPPVersion();
                LangManager.checkResByLang();
                GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
                if (!GlobalVariables.ALERT_GLOBAL_ERROR) {
                    var erralert = 0;
                    Laya.Browser.window.onerror = function (msg, url, line, column, detail) {
                        if (erralert++ < 5 && detail)
                            UploadManager.getInstance().uploadError(msg + "\n" + detail.stack, "错误");
                    };
                }
            });
            GameEffect.InitClickEffect();
        }
    }
    new Main();

}());
//# sourceMappingURL=bundle.js.map
